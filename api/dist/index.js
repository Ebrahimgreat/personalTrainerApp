var __create = Object.create;
var __getProtoOf = Object.getPrototypeOf;
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __moduleCache = /* @__PURE__ */ new WeakMap;
var __toCommonJS = (from) => {
  var entry = __moduleCache.get(from), desc;
  if (entry)
    return entry;
  entry = __defProp({}, "__esModule", { value: true });
  if (from && typeof from === "object" || typeof from === "function")
    __getOwnPropNames(from).map((key) => !__hasOwnProp.call(entry, key) && __defProp(entry, key, {
      get: () => from[key],
      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
    }));
  __moduleCache.set(from, entry);
  return entry;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};
var __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x + '" is not supported');
});

// node:path
var exports_path = {};
__export(exports_path, {
  win32: () => y,
  toNamespacedPath: () => U2,
  sep: () => I,
  resolve: () => B,
  relative: () => Q,
  posix: () => g,
  parse: () => $,
  normalize: () => G2,
  join: () => K,
  isAbsolute: () => H,
  format: () => Z,
  extname: () => Y,
  dirname: () => V,
  delimiter: () => O2,
  default: () => q,
  basename: () => X
});
var L, h, D, T2, _, E2, R = (s, e) => () => (e || s((e = { exports: {} }).exports, e), e.exports), N = (s, e, r, t) => {
  if (e && typeof e == "object" || typeof e == "function")
    for (let i of T2(e))
      !E2.call(s, i) && i !== r && h(s, i, { get: () => e[i], enumerable: !(t = D(e, i)) || t.enumerable });
  return s;
}, j = (s, e, r) => (r = s != null ? L(_(s)) : {}, N(e || !s || !s.__esModule ? h(r, "default", { value: s, enumerable: true }) : r, s)), k, x2, u, J, P = function(s) {
  return s;
}, S2 = function() {
  throw new Error("Not implemented");
}, g, y, q, B, G2, H, K, Q, U2, V, X, Y, Z, $, I, O2;
var init_path = __esm(() => {
  L = Object.create;
  h = Object.defineProperty;
  D = Object.getOwnPropertyDescriptor;
  T2 = Object.getOwnPropertyNames;
  _ = Object.getPrototypeOf;
  E2 = Object.prototype.hasOwnProperty;
  k = R((W, w) => {
    function v2(s) {
      if (typeof s != "string")
        throw new TypeError("Path must be a string. Received " + JSON.stringify(s));
    }
    function C(s, e) {
      for (var r = "", t = 0, i = -1, a2 = 0, n, l = 0;l <= s.length; ++l) {
        if (l < s.length)
          n = s.charCodeAt(l);
        else {
          if (n === 47)
            break;
          n = 47;
        }
        if (n === 47) {
          if (!(i === l - 1 || a2 === 1))
            if (i !== l - 1 && a2 === 2) {
              if (r.length < 2 || t !== 2 || r.charCodeAt(r.length - 1) !== 46 || r.charCodeAt(r.length - 2) !== 46) {
                if (r.length > 2) {
                  var f = r.lastIndexOf("/");
                  if (f !== r.length - 1) {
                    f === -1 ? (r = "", t = 0) : (r = r.slice(0, f), t = r.length - 1 - r.lastIndexOf("/")), i = l, a2 = 0;
                    continue;
                  }
                } else if (r.length === 2 || r.length === 1) {
                  r = "", t = 0, i = l, a2 = 0;
                  continue;
                }
              }
              e && (r.length > 0 ? r += "/.." : r = "..", t = 2);
            } else
              r.length > 0 ? r += "/" + s.slice(i + 1, l) : r = s.slice(i + 1, l), t = l - i - 1;
          i = l, a2 = 0;
        } else
          n === 46 && a2 !== -1 ? ++a2 : a2 = -1;
      }
      return r;
    }
    function F(s, e) {
      var r = e.dir || e.root, t = e.base || (e.name || "") + (e.ext || "");
      return r ? r === e.root ? r + t : r + s + t : t;
    }
    var m2 = { resolve: function() {
      for (var e = "", r = false, t, i = arguments.length - 1;i >= -1 && !r; i--) {
        var a2;
        i >= 0 ? a2 = arguments[i] : (t === undefined && (t = process.cwd()), a2 = t), v2(a2), a2.length !== 0 && (e = a2 + "/" + e, r = a2.charCodeAt(0) === 47);
      }
      return e = C(e, !r), r ? e.length > 0 ? "/" + e : "/" : e.length > 0 ? e : ".";
    }, normalize: function(e) {
      if (v2(e), e.length === 0)
        return ".";
      var r = e.charCodeAt(0) === 47, t = e.charCodeAt(e.length - 1) === 47;
      return e = C(e, !r), e.length === 0 && !r && (e = "."), e.length > 0 && t && (e += "/"), r ? "/" + e : e;
    }, isAbsolute: function(e) {
      return v2(e), e.length > 0 && e.charCodeAt(0) === 47;
    }, join: function() {
      if (arguments.length === 0)
        return ".";
      for (var e, r = 0;r < arguments.length; ++r) {
        var t = arguments[r];
        v2(t), t.length > 0 && (e === undefined ? e = t : e += "/" + t);
      }
      return e === undefined ? "." : m2.normalize(e);
    }, relative: function(e, r) {
      if (v2(e), v2(r), e === r || (e = m2.resolve(e), r = m2.resolve(r), e === r))
        return "";
      for (var t = 1;t < e.length && e.charCodeAt(t) === 47; ++t)
        ;
      for (var i = e.length, a2 = i - t, n = 1;n < r.length && r.charCodeAt(n) === 47; ++n)
        ;
      for (var l = r.length, f = l - n, c = a2 < f ? a2 : f, d2 = -1, o = 0;o <= c; ++o) {
        if (o === c) {
          if (f > c) {
            if (r.charCodeAt(n + o) === 47)
              return r.slice(n + o + 1);
            if (o === 0)
              return r.slice(n + o);
          } else
            a2 > c && (e.charCodeAt(t + o) === 47 ? d2 = o : o === 0 && (d2 = 0));
          break;
        }
        var A = e.charCodeAt(t + o), z = r.charCodeAt(n + o);
        if (A !== z)
          break;
        A === 47 && (d2 = o);
      }
      var b2 = "";
      for (o = t + d2 + 1;o <= i; ++o)
        (o === i || e.charCodeAt(o) === 47) && (b2.length === 0 ? b2 += ".." : b2 += "/..");
      return b2.length > 0 ? b2 + r.slice(n + d2) : (n += d2, r.charCodeAt(n) === 47 && ++n, r.slice(n));
    }, _makeLong: function(e) {
      return e;
    }, dirname: function(e) {
      if (v2(e), e.length === 0)
        return ".";
      for (var r = e.charCodeAt(0), t = r === 47, i = -1, a2 = true, n = e.length - 1;n >= 1; --n)
        if (r = e.charCodeAt(n), r === 47) {
          if (!a2) {
            i = n;
            break;
          }
        } else
          a2 = false;
      return i === -1 ? t ? "/" : "." : t && i === 1 ? "//" : e.slice(0, i);
    }, basename: function(e, r) {
      if (r !== undefined && typeof r != "string")
        throw new TypeError('"ext" argument must be a string');
      v2(e);
      var t = 0, i = -1, a2 = true, n;
      if (r !== undefined && r.length > 0 && r.length <= e.length) {
        if (r.length === e.length && r === e)
          return "";
        var l = r.length - 1, f = -1;
        for (n = e.length - 1;n >= 0; --n) {
          var c = e.charCodeAt(n);
          if (c === 47) {
            if (!a2) {
              t = n + 1;
              break;
            }
          } else
            f === -1 && (a2 = false, f = n + 1), l >= 0 && (c === r.charCodeAt(l) ? --l === -1 && (i = n) : (l = -1, i = f));
        }
        return t === i ? i = f : i === -1 && (i = e.length), e.slice(t, i);
      } else {
        for (n = e.length - 1;n >= 0; --n)
          if (e.charCodeAt(n) === 47) {
            if (!a2) {
              t = n + 1;
              break;
            }
          } else
            i === -1 && (a2 = false, i = n + 1);
        return i === -1 ? "" : e.slice(t, i);
      }
    }, extname: function(e) {
      v2(e);
      for (var r = -1, t = 0, i = -1, a2 = true, n = 0, l = e.length - 1;l >= 0; --l) {
        var f = e.charCodeAt(l);
        if (f === 47) {
          if (!a2) {
            t = l + 1;
            break;
          }
          continue;
        }
        i === -1 && (a2 = false, i = l + 1), f === 46 ? r === -1 ? r = l : n !== 1 && (n = 1) : r !== -1 && (n = -1);
      }
      return r === -1 || i === -1 || n === 0 || n === 1 && r === i - 1 && r === t + 1 ? "" : e.slice(r, i);
    }, format: function(e) {
      if (e === null || typeof e != "object")
        throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof e);
      return F("/", e);
    }, parse: function(e) {
      v2(e);
      var r = { root: "", dir: "", base: "", ext: "", name: "" };
      if (e.length === 0)
        return r;
      var t = e.charCodeAt(0), i = t === 47, a2;
      i ? (r.root = "/", a2 = 1) : a2 = 0;
      for (var n = -1, l = 0, f = -1, c = true, d2 = e.length - 1, o = 0;d2 >= a2; --d2) {
        if (t = e.charCodeAt(d2), t === 47) {
          if (!c) {
            l = d2 + 1;
            break;
          }
          continue;
        }
        f === -1 && (c = false, f = d2 + 1), t === 46 ? n === -1 ? n = d2 : o !== 1 && (o = 1) : n !== -1 && (o = -1);
      }
      return n === -1 || f === -1 || o === 0 || o === 1 && n === f - 1 && n === l + 1 ? f !== -1 && (l === 0 && i ? r.base = r.name = e.slice(1, f) : r.base = r.name = e.slice(l, f)) : (l === 0 && i ? (r.name = e.slice(1, n), r.base = e.slice(1, f)) : (r.name = e.slice(l, n), r.base = e.slice(l, f)), r.ext = e.slice(n, f)), l > 0 ? r.dir = e.slice(0, l - 1) : i && (r.dir = "/"), r;
    }, sep: "/", delimiter: ":", win32: null, posix: null };
    m2.posix = m2;
    w.exports = m2;
  });
  x2 = j(k());
  u = x2;
  J = x2;
  u.parse ??= S2;
  J.parse ??= S2;
  g = { resolve: u.resolve.bind(u), normalize: u.normalize.bind(u), isAbsolute: u.isAbsolute.bind(u), join: u.join.bind(u), relative: u.relative.bind(u), toNamespacedPath: P, dirname: u.dirname.bind(u), basename: u.basename.bind(u), extname: u.extname.bind(u), format: u.format.bind(u), parse: u.parse.bind(u), sep: "/", delimiter: ":", win32: undefined, posix: undefined, _makeLong: P };
  y = { sep: "\\", delimiter: ";", win32: undefined, ...g, posix: g };
  g.win32 = y.win32 = y;
  g.posix = g;
  q = g;
  ({ resolve: B, normalize: G2, isAbsolute: H, join: K, relative: Q, toNamespacedPath: U2, dirname: V, basename: X, extname: Y, format: Z, parse: $, sep: I, delimiter: O2 } = g);
});

// node:os
var exports_os = {};
__export(exports_os, {
  uptime: () => A,
  type: () => V2,
  totalmem: () => N2,
  tmpdir: () => U3,
  release: () => x3,
  platform: () => O3,
  networkInterfaces: () => j2,
  loadavg: () => y2,
  hostname: () => k2,
  homedir: () => _2,
  getNetworkInterfaces: () => B2,
  freemem: () => I2,
  endianness: () => L2,
  default: () => E3,
  cpus: () => b2,
  arch: () => M,
  EOL: () => X2
});
var c, a2, m2, s, p2, d2, l = (r, n) => () => (n || r((n = { exports: {} }).exports, n), n.exports), h2 = (r, n, t, i) => {
  if (n && typeof n == "object" || typeof n == "function")
    for (let o of s(n))
      !d2.call(r, o) && o !== t && a2(r, o, { get: () => n[o], enumerable: !(i = m2(n, o)) || i.enumerable });
  return r;
}, g2 = (r, n, t) => (t = r != null ? c(p2(r)) : {}, h2(n || !r || !r.__esModule ? a2(t, "default", { value: r, enumerable: true }) : t, r)), f, u2, E3, L2, k2, y2, A, I2, N2, b2, V2, x3, M, O3, U3, X2, _2, j2, B2;
var init_os = __esm(() => {
  c = Object.create;
  a2 = Object.defineProperty;
  m2 = Object.getOwnPropertyDescriptor;
  s = Object.getOwnPropertyNames;
  p2 = Object.getPrototypeOf;
  d2 = Object.prototype.hasOwnProperty;
  f = l((e) => {
    e.endianness = function() {
      return "LE";
    };
    e.hostname = function() {
      return typeof location < "u" ? location.hostname : "";
    };
    e.loadavg = function() {
      return [];
    };
    e.uptime = function() {
      return 0;
    };
    e.freemem = function() {
      return Number.MAX_VALUE;
    };
    e.totalmem = function() {
      return Number.MAX_VALUE;
    };
    e.cpus = function() {
      return [];
    };
    e.type = function() {
      return "Browser";
    };
    e.release = function() {
      return typeof navigator < "u" ? navigator.appVersion : "";
    };
    e.networkInterfaces = e.getNetworkInterfaces = function() {
      return {};
    };
    e.arch = function() {
      return "javascript";
    };
    e.platform = function() {
      return "browser";
    };
    e.tmpdir = e.tmpDir = function() {
      return "/tmp";
    };
    e.EOL = `
`;
    e.homedir = function() {
      return "/";
    };
  });
  u2 = g2(f());
  E3 = u2.default;
  ({ endianness: L2, hostname: k2, loadavg: y2, uptime: A, freemem: I2, totalmem: N2, cpus: b2, type: V2, release: x3, arch: M, platform: O3, tmpdir: U3, EOL: X2, homedir: _2, networkInterfaces: j2, getNetworkInterfaces: B2 } = u2.default);
});

// node:crypto
var exports_crypto = {};
__export(exports_crypto, {
  webcrypto: () => uw,
  timingSafeEqual: () => _0,
  randomUUID: () => sw,
  getRandomValues: () => ow,
  getCurves: () => hw,
  default: () => zq,
  DEFAULT_ENCODING: () => Fq
});
function hw() {
  return Uq;
}
var lw, Ya, dw, cw, pw, vw, A0 = (t, e) => () => (t && (e = t(t = 0)), e), T3 = (t, e) => () => (e || t((e = { exports: {} }).exports, e), e.exports), Xa = (t, e) => {
  for (var r in e)
    Ya(t, r, { get: e[r], enumerable: true });
}, Ga = (t, e, r, o) => {
  if (e && typeof e == "object" || typeof e == "function")
    for (let f2 of cw(e))
      !vw.call(t, f2) && f2 !== r && Ya(t, f2, { get: () => e[f2], enumerable: !(o = dw(e, f2)) || o.enumerable });
  return t;
}, lt2 = (t, e, r) => (Ga(t, e, "default"), r && Ga(r, e, "default")), rn = (t, e, r) => (r = t != null ? lw(pw(t)) : {}, Ga(e || !t || !t.__esModule ? Ya(r, "default", { value: t, enumerable: true }) : r, t)), ur = (t) => Ga(Ya({}, "__esModule", { value: true }), t), Td, kd, Ut, Te, on, Ie2, ki, H0, $f, lc, j0, sn, Z0, $0, X0, hn, lo2, Jf, co, Qf, po, Lc, Dc, eh, ch, Yc, tp, ip, vh, Eo2, Ro, pn, yp, _p, mh, Ap, gh, Dp, To, Tt, Gr, Lo, Xt3, pa2, Ah, pr, V_, Oi, Fi2, Ui, q1, yn, Zo, $o, W1, Yo, Oh, ba2, Xh, kv, Qr, nu, au, as2, Xv, du, sb, vu2, vf, M7, hb, yi2, bf, mb, bu2, yu, wu, _b, Mu, _u, Su, Eu, Cb, qu, Iu, ar, ps, Tu, Vb, Yb, Xb, em, tm, yf, nm, om, hm, lm, cm, Du, Cu, Ou, ys2, Aa2, _m, Hu2, Ku, Ba, km, Pm, Ss, Fm, Km, ji, Gu, Vm, $m, Es2, el, al, Qm, ig, ag, sl, lg, ll, kn3, dl, vl2, Ln2, Ns, Ig, kg, gl, ql, Vg, Jg, e2, Hs, Ws2, f2, ri, Ll, or2, Oa, c2, b22, y22, Dl, Cr, Tf, Pl, T22, Ol, P2, Hl, W2, K2, Y2, J2, Qs2, ty, e0, oy, hy, dy, by, wy, _y, Ry, a0, ed, s0, h0, Kf, l0, d0, id, Fy, ad, sd, Gy, ld, Qy, t3, n3, dd, h3, l3, d3, p3, Ha, vd, y3, x32, q3, T32, L3, Md, _d, y0, Sd, H3, V3, $3, nw, Bd, fr2, Oq, Fq = "buffer", ow = (t) => crypto.getRandomValues(t), sw = () => crypto.randomUUID(), Uq, _0, uw, zq;
var init_crypto = __esm(() => {
  lw = Object.create;
  Ya = Object.defineProperty;
  dw = Object.getOwnPropertyDescriptor;
  cw = Object.getOwnPropertyNames;
  pw = Object.getPrototypeOf;
  vw = Object.prototype.hasOwnProperty;
  Td = T3((Ja) => {
    Ja.byteLength = mw;
    Ja.toByteArray = yw;
    Ja.fromByteArray = _w;
    var jr = [], lr2 = [], bw = typeof Uint8Array < "u" ? Uint8Array : Array, R0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (nn = 0, qd = R0.length;nn < qd; ++nn)
      jr[nn] = R0[nn], lr2[R0.charCodeAt(nn)] = nn;
    var nn, qd;
    lr2[45] = 62;
    lr2[95] = 63;
    function Id(t) {
      var e = t.length;
      if (e % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var r = t.indexOf("=");
      r === -1 && (r = e);
      var o = r === e ? 0 : 4 - r % 4;
      return [r, o];
    }
    function mw(t) {
      var e = Id(t), r = e[0], o = e[1];
      return (r + o) * 3 / 4 - o;
    }
    function gw(t, e, r) {
      return (e + r) * 3 / 4 - r;
    }
    function yw(t) {
      var e, r = Id(t), o = r[0], f2 = r[1], p3 = new bw(gw(t, o, f2)), m3 = 0, y3 = f2 > 0 ? o - 4 : o, M2;
      for (M2 = 0;M2 < y3; M2 += 4)
        e = lr2[t.charCodeAt(M2)] << 18 | lr2[t.charCodeAt(M2 + 1)] << 12 | lr2[t.charCodeAt(M2 + 2)] << 6 | lr2[t.charCodeAt(M2 + 3)], p3[m3++] = e >> 16 & 255, p3[m3++] = e >> 8 & 255, p3[m3++] = e & 255;
      return f2 === 2 && (e = lr2[t.charCodeAt(M2)] << 2 | lr2[t.charCodeAt(M2 + 1)] >> 4, p3[m3++] = e & 255), f2 === 1 && (e = lr2[t.charCodeAt(M2)] << 10 | lr2[t.charCodeAt(M2 + 1)] << 4 | lr2[t.charCodeAt(M2 + 2)] >> 2, p3[m3++] = e >> 8 & 255, p3[m3++] = e & 255), p3;
    }
    function ww(t) {
      return jr[t >> 18 & 63] + jr[t >> 12 & 63] + jr[t >> 6 & 63] + jr[t & 63];
    }
    function Mw(t, e, r) {
      for (var o, f2 = [], p3 = e;p3 < r; p3 += 3)
        o = (t[p3] << 16 & 16711680) + (t[p3 + 1] << 8 & 65280) + (t[p3 + 2] & 255), f2.push(ww(o));
      return f2.join("");
    }
    function _w(t) {
      for (var e, r = t.length, o = r % 3, f2 = [], p3 = 16383, m3 = 0, y3 = r - o;m3 < y3; m3 += p3)
        f2.push(Mw(t, m3, m3 + p3 > y3 ? y3 : m3 + p3));
      return o === 1 ? (e = t[r - 1], f2.push(jr[e >> 2] + jr[e << 4 & 63] + "==")) : o === 2 && (e = (t[r - 2] << 8) + t[r - 1], f2.push(jr[e >> 10] + jr[e >> 4 & 63] + jr[e << 2 & 63] + "=")), f2.join("");
    }
  });
  kd = T3((B0) => {
    B0.read = function(t, e, r, o, f2) {
      var p3, m3, y3 = f2 * 8 - o - 1, M2 = (1 << y3) - 1, x4 = M2 >> 1, S3 = -7, E4 = r ? f2 - 1 : 0, B3 = r ? -1 : 1, q2 = t[e + E4];
      for (E4 += B3, p3 = q2 & (1 << -S3) - 1, q2 >>= -S3, S3 += y3;S3 > 0; p3 = p3 * 256 + t[e + E4], E4 += B3, S3 -= 8)
        ;
      for (m3 = p3 & (1 << -S3) - 1, p3 >>= -S3, S3 += o;S3 > 0; m3 = m3 * 256 + t[e + E4], E4 += B3, S3 -= 8)
        ;
      if (p3 === 0)
        p3 = 1 - x4;
      else {
        if (p3 === M2)
          return m3 ? NaN : (q2 ? -1 : 1) * (1 / 0);
        m3 = m3 + Math.pow(2, o), p3 = p3 - x4;
      }
      return (q2 ? -1 : 1) * m3 * Math.pow(2, p3 - o);
    };
    B0.write = function(t, e, r, o, f2, p3) {
      var m3, y3, M2, x4 = p3 * 8 - f2 - 1, S3 = (1 << x4) - 1, E4 = S3 >> 1, B3 = f2 === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, q2 = o ? 0 : p3 - 1, L3 = o ? 1 : -1, ge2 = e < 0 || e === 0 && 1 / e < 0 ? 1 : 0;
      for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (y3 = isNaN(e) ? 1 : 0, m3 = S3) : (m3 = Math.floor(Math.log(e) / Math.LN2), e * (M2 = Math.pow(2, -m3)) < 1 && (m3--, M2 *= 2), m3 + E4 >= 1 ? e += B3 / M2 : e += B3 * Math.pow(2, 1 - E4), e * M2 >= 2 && (m3++, M2 /= 2), m3 + E4 >= S3 ? (y3 = 0, m3 = S3) : m3 + E4 >= 1 ? (y3 = (e * M2 - 1) * Math.pow(2, f2), m3 = m3 + E4) : (y3 = e * Math.pow(2, E4 - 1) * Math.pow(2, f2), m3 = 0));f2 >= 8; t[r + q2] = y3 & 255, q2 += L3, y3 /= 256, f2 -= 8)
        ;
      for (m3 = m3 << f2 | y3, x4 += f2;x4 > 0; t[r + q2] = m3 & 255, q2 += L3, m3 /= 256, x4 -= 8)
        ;
      t[r + q2 - L3] |= ge2 * 128;
    };
  });
  Ut = T3((Xn) => {
    var q0 = Td(), Gn = kd(), Ld = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    Xn.Buffer = me;
    Xn.SlowBuffer = Bw;
    Xn.INSPECT_MAX_BYTES = 50;
    var Qa = 2147483647;
    Xn.kMaxLength = Qa;
    me.TYPED_ARRAY_SUPPORT = xw();
    !me.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function xw() {
      try {
        let t = new Uint8Array(1), e = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(e, Uint8Array.prototype), Object.setPrototypeOf(t, e), t.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(me.prototype, "parent", { enumerable: true, get: function() {
      if (!!me.isBuffer(this))
        return this.buffer;
    } });
    Object.defineProperty(me.prototype, "offset", { enumerable: true, get: function() {
      if (!!me.isBuffer(this))
        return this.byteOffset;
    } });
    function li(t) {
      if (t > Qa)
        throw new RangeError('The value "' + t + '" is invalid for option "size"');
      let e = new Uint8Array(t);
      return Object.setPrototypeOf(e, me.prototype), e;
    }
    function me(t, e, r) {
      if (typeof t == "number") {
        if (typeof e == "string")
          throw new TypeError('The "string" argument must be of type string. Received type number');
        return L0(t);
      }
      return Cd(t, e, r);
    }
    me.poolSize = 8192;
    function Cd(t, e, r) {
      if (typeof t == "string")
        return Ew(t, e);
      if (ArrayBuffer.isView(t))
        return Aw(t);
      if (t == null)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
      if (Zr(t, ArrayBuffer) || t && Zr(t.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Zr(t, SharedArrayBuffer) || t && Zr(t.buffer, SharedArrayBuffer)))
        return T0(t, e, r);
      if (typeof t == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      let o = t.valueOf && t.valueOf();
      if (o != null && o !== t)
        return me.from(o, e, r);
      let f2 = Rw(t);
      if (f2)
        return f2;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof t[Symbol.toPrimitive] == "function")
        return me.from(t[Symbol.toPrimitive]("string"), e, r);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
    }
    me.from = function(t, e, r) {
      return Cd(t, e, r);
    };
    Object.setPrototypeOf(me.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(me, Uint8Array);
    function Od(t) {
      if (typeof t != "number")
        throw new TypeError('"size" argument must be of type number');
      if (t < 0)
        throw new RangeError('The value "' + t + '" is invalid for option "size"');
    }
    function Sw(t, e, r) {
      return Od(t), t <= 0 ? li(t) : e !== undefined ? typeof r == "string" ? li(t).fill(e, r) : li(t).fill(e) : li(t);
    }
    me.alloc = function(t, e, r) {
      return Sw(t, e, r);
    };
    function L0(t) {
      return Od(t), li(t < 0 ? 0 : N0(t) | 0);
    }
    me.allocUnsafe = function(t) {
      return L0(t);
    };
    me.allocUnsafeSlow = function(t) {
      return L0(t);
    };
    function Ew(t, e) {
      if ((typeof e != "string" || e === "") && (e = "utf8"), !me.isEncoding(e))
        throw new TypeError("Unknown encoding: " + e);
      let r = Fd(t, e) | 0, o = li(r), f2 = o.write(t, e);
      return f2 !== r && (o = o.slice(0, f2)), o;
    }
    function I0(t) {
      let e = t.length < 0 ? 0 : N0(t.length) | 0, r = li(e);
      for (let o = 0;o < e; o += 1)
        r[o] = t[o] & 255;
      return r;
    }
    function Aw(t) {
      if (Zr(t, Uint8Array)) {
        let e = new Uint8Array(t);
        return T0(e.buffer, e.byteOffset, e.byteLength);
      }
      return I0(t);
    }
    function T0(t, e, r) {
      if (e < 0 || t.byteLength < e)
        throw new RangeError('"offset" is outside of buffer bounds');
      if (t.byteLength < e + (r || 0))
        throw new RangeError('"length" is outside of buffer bounds');
      let o;
      return e === undefined && r === undefined ? o = new Uint8Array(t) : r === undefined ? o = new Uint8Array(t, e) : o = new Uint8Array(t, e, r), Object.setPrototypeOf(o, me.prototype), o;
    }
    function Rw(t) {
      if (me.isBuffer(t)) {
        let e = N0(t.length) | 0, r = li(e);
        return r.length === 0 || t.copy(r, 0, 0, e), r;
      }
      if (t.length !== undefined)
        return typeof t.length != "number" || P0(t.length) ? li(0) : I0(t);
      if (t.type === "Buffer" && Array.isArray(t.data))
        return I0(t.data);
    }
    function N0(t) {
      if (t >= Qa)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + Qa.toString(16) + " bytes");
      return t | 0;
    }
    function Bw(t) {
      return +t != t && (t = 0), me.alloc(+t);
    }
    me.isBuffer = function(e) {
      return e != null && e._isBuffer === true && e !== me.prototype;
    };
    me.compare = function(e, r) {
      if (Zr(e, Uint8Array) && (e = me.from(e, e.offset, e.byteLength)), Zr(r, Uint8Array) && (r = me.from(r, r.offset, r.byteLength)), !me.isBuffer(e) || !me.isBuffer(r))
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (e === r)
        return 0;
      let o = e.length, f2 = r.length;
      for (let p3 = 0, m3 = Math.min(o, f2);p3 < m3; ++p3)
        if (e[p3] !== r[p3]) {
          o = e[p3], f2 = r[p3];
          break;
        }
      return o < f2 ? -1 : f2 < o ? 1 : 0;
    };
    me.isEncoding = function(e) {
      switch (String(e).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    me.concat = function(e, r) {
      if (!Array.isArray(e))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (e.length === 0)
        return me.alloc(0);
      let o;
      if (r === undefined)
        for (r = 0, o = 0;o < e.length; ++o)
          r += e[o].length;
      let f2 = me.allocUnsafe(r), p3 = 0;
      for (o = 0;o < e.length; ++o) {
        let m3 = e[o];
        if (Zr(m3, Uint8Array))
          p3 + m3.length > f2.length ? (me.isBuffer(m3) || (m3 = me.from(m3)), m3.copy(f2, p3)) : Uint8Array.prototype.set.call(f2, m3, p3);
        else if (me.isBuffer(m3))
          m3.copy(f2, p3);
        else
          throw new TypeError('"list" argument must be an Array of Buffers');
        p3 += m3.length;
      }
      return f2;
    };
    function Fd(t, e) {
      if (me.isBuffer(t))
        return t.length;
      if (ArrayBuffer.isView(t) || Zr(t, ArrayBuffer))
        return t.byteLength;
      if (typeof t != "string")
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t);
      let r = t.length, o = arguments.length > 2 && arguments[2] === true;
      if (!o && r === 0)
        return 0;
      let f2 = false;
      for (;; )
        switch (e) {
          case "ascii":
          case "latin1":
          case "binary":
            return r;
          case "utf8":
          case "utf-8":
            return k0(t).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return r * 2;
          case "hex":
            return r >>> 1;
          case "base64":
            return $d(t).length;
          default:
            if (f2)
              return o ? -1 : k0(t).length;
            e = ("" + e).toLowerCase(), f2 = true;
        }
    }
    me.byteLength = Fd;
    function qw(t, e, r) {
      let o = false;
      if ((e === undefined || e < 0) && (e = 0), e > this.length || ((r === undefined || r > this.length) && (r = this.length), r <= 0) || (r >>>= 0, e >>>= 0, r <= e))
        return "";
      for (t || (t = "utf8");; )
        switch (t) {
          case "hex":
            return Fw(this, e, r);
          case "utf8":
          case "utf-8":
            return zd(this, e, r);
          case "ascii":
            return Cw(this, e, r);
          case "latin1":
          case "binary":
            return Ow(this, e, r);
          case "base64":
            return Dw(this, e, r);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Uw(this, e, r);
          default:
            if (o)
              throw new TypeError("Unknown encoding: " + t);
            t = (t + "").toLowerCase(), o = true;
        }
    }
    me.prototype._isBuffer = true;
    function fn(t, e, r) {
      let o = t[e];
      t[e] = t[r], t[r] = o;
    }
    me.prototype.swap16 = function() {
      let e = this.length;
      if (e % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let r = 0;r < e; r += 2)
        fn(this, r, r + 1);
      return this;
    };
    me.prototype.swap32 = function() {
      let e = this.length;
      if (e % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let r = 0;r < e; r += 4)
        fn(this, r, r + 3), fn(this, r + 1, r + 2);
      return this;
    };
    me.prototype.swap64 = function() {
      let e = this.length;
      if (e % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let r = 0;r < e; r += 8)
        fn(this, r, r + 7), fn(this, r + 1, r + 6), fn(this, r + 2, r + 5), fn(this, r + 3, r + 4);
      return this;
    };
    me.prototype.toString = function() {
      let e = this.length;
      return e === 0 ? "" : arguments.length === 0 ? zd(this, 0, e) : qw.apply(this, arguments);
    };
    me.prototype.toLocaleString = me.prototype.toString;
    me.prototype.equals = function(e) {
      if (!me.isBuffer(e))
        throw new TypeError("Argument must be a Buffer");
      return this === e ? true : me.compare(this, e) === 0;
    };
    me.prototype.inspect = function() {
      let e = "", r = Xn.INSPECT_MAX_BYTES;
      return e = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (e += " ... "), "<Buffer " + e + ">";
    };
    Ld && (me.prototype[Ld] = me.prototype.inspect);
    me.prototype.compare = function(e, r, o, f2, p3) {
      if (Zr(e, Uint8Array) && (e = me.from(e, e.offset, e.byteLength)), !me.isBuffer(e))
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
      if (r === undefined && (r = 0), o === undefined && (o = e ? e.length : 0), f2 === undefined && (f2 = 0), p3 === undefined && (p3 = this.length), r < 0 || o > e.length || f2 < 0 || p3 > this.length)
        throw new RangeError("out of range index");
      if (f2 >= p3 && r >= o)
        return 0;
      if (f2 >= p3)
        return -1;
      if (r >= o)
        return 1;
      if (r >>>= 0, o >>>= 0, f2 >>>= 0, p3 >>>= 0, this === e)
        return 0;
      let m3 = p3 - f2, y3 = o - r, M2 = Math.min(m3, y3), x4 = this.slice(f2, p3), S3 = e.slice(r, o);
      for (let E4 = 0;E4 < M2; ++E4)
        if (x4[E4] !== S3[E4]) {
          m3 = x4[E4], y3 = S3[E4];
          break;
        }
      return m3 < y3 ? -1 : y3 < m3 ? 1 : 0;
    };
    function Ud(t, e, r, o, f2) {
      if (t.length === 0)
        return -1;
      if (typeof r == "string" ? (o = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, P0(r) && (r = f2 ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {
        if (f2)
          return -1;
        r = t.length - 1;
      } else if (r < 0)
        if (f2)
          r = 0;
        else
          return -1;
      if (typeof e == "string" && (e = me.from(e, o)), me.isBuffer(e))
        return e.length === 0 ? -1 : Nd(t, e, r, o, f2);
      if (typeof e == "number")
        return e = e & 255, typeof Uint8Array.prototype.indexOf == "function" ? f2 ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : Nd(t, [e], r, o, f2);
      throw new TypeError("val must be string, number or Buffer");
    }
    function Nd(t, e, r, o, f2) {
      let p3 = 1, m3 = t.length, y3 = e.length;
      if (o !== undefined && (o = String(o).toLowerCase(), o === "ucs2" || o === "ucs-2" || o === "utf16le" || o === "utf-16le")) {
        if (t.length < 2 || e.length < 2)
          return -1;
        p3 = 2, m3 /= 2, y3 /= 2, r /= 2;
      }
      function M2(S3, E4) {
        return p3 === 1 ? S3[E4] : S3.readUInt16BE(E4 * p3);
      }
      let x4;
      if (f2) {
        let S3 = -1;
        for (x4 = r;x4 < m3; x4++)
          if (M2(t, x4) === M2(e, S3 === -1 ? 0 : x4 - S3)) {
            if (S3 === -1 && (S3 = x4), x4 - S3 + 1 === y3)
              return S3 * p3;
          } else
            S3 !== -1 && (x4 -= x4 - S3), S3 = -1;
      } else
        for (r + y3 > m3 && (r = m3 - y3), x4 = r;x4 >= 0; x4--) {
          let S3 = true;
          for (let E4 = 0;E4 < y3; E4++)
            if (M2(t, x4 + E4) !== M2(e, E4)) {
              S3 = false;
              break;
            }
          if (S3)
            return x4;
        }
      return -1;
    }
    me.prototype.includes = function(e, r, o) {
      return this.indexOf(e, r, o) !== -1;
    };
    me.prototype.indexOf = function(e, r, o) {
      return Ud(this, e, r, o, true);
    };
    me.prototype.lastIndexOf = function(e, r, o) {
      return Ud(this, e, r, o, false);
    };
    function Iw(t, e, r, o) {
      r = Number(r) || 0;
      let f2 = t.length - r;
      o ? (o = Number(o), o > f2 && (o = f2)) : o = f2;
      let p3 = e.length;
      o > p3 / 2 && (o = p3 / 2);
      let m3;
      for (m3 = 0;m3 < o; ++m3) {
        let y3 = parseInt(e.substr(m3 * 2, 2), 16);
        if (P0(y3))
          return m3;
        t[r + m3] = y3;
      }
      return m3;
    }
    function Tw(t, e, r, o) {
      return eo2(k0(e, t.length - r), t, r, o);
    }
    function kw(t, e, r, o) {
      return eo2(Kw(e), t, r, o);
    }
    function Lw(t, e, r, o) {
      return eo2($d(e), t, r, o);
    }
    function Nw(t, e, r, o) {
      return eo2(jw(e, t.length - r), t, r, o);
    }
    me.prototype.write = function(e, r, o, f2) {
      if (r === undefined)
        f2 = "utf8", o = this.length, r = 0;
      else if (o === undefined && typeof r == "string")
        f2 = r, o = this.length, r = 0;
      else if (isFinite(r))
        r = r >>> 0, isFinite(o) ? (o = o >>> 0, f2 === undefined && (f2 = "utf8")) : (f2 = o, o = undefined);
      else
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      let p3 = this.length - r;
      if ((o === undefined || o > p3) && (o = p3), e.length > 0 && (o < 0 || r < 0) || r > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      f2 || (f2 = "utf8");
      let m3 = false;
      for (;; )
        switch (f2) {
          case "hex":
            return Iw(this, e, r, o);
          case "utf8":
          case "utf-8":
            return Tw(this, e, r, o);
          case "ascii":
          case "latin1":
          case "binary":
            return kw(this, e, r, o);
          case "base64":
            return Lw(this, e, r, o);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Nw(this, e, r, o);
          default:
            if (m3)
              throw new TypeError("Unknown encoding: " + f2);
            f2 = ("" + f2).toLowerCase(), m3 = true;
        }
    };
    me.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function Dw(t, e, r) {
      return e === 0 && r === t.length ? q0.fromByteArray(t) : q0.fromByteArray(t.slice(e, r));
    }
    function zd(t, e, r) {
      r = Math.min(t.length, r);
      let o = [], f2 = e;
      for (;f2 < r; ) {
        let p3 = t[f2], m3 = null, y3 = p3 > 239 ? 4 : p3 > 223 ? 3 : p3 > 191 ? 2 : 1;
        if (f2 + y3 <= r) {
          let M2, x4, S3, E4;
          switch (y3) {
            case 1:
              p3 < 128 && (m3 = p3);
              break;
            case 2:
              M2 = t[f2 + 1], (M2 & 192) === 128 && (E4 = (p3 & 31) << 6 | M2 & 63, E4 > 127 && (m3 = E4));
              break;
            case 3:
              M2 = t[f2 + 1], x4 = t[f2 + 2], (M2 & 192) === 128 && (x4 & 192) === 128 && (E4 = (p3 & 15) << 12 | (M2 & 63) << 6 | x4 & 63, E4 > 2047 && (E4 < 55296 || E4 > 57343) && (m3 = E4));
              break;
            case 4:
              M2 = t[f2 + 1], x4 = t[f2 + 2], S3 = t[f2 + 3], (M2 & 192) === 128 && (x4 & 192) === 128 && (S3 & 192) === 128 && (E4 = (p3 & 15) << 18 | (M2 & 63) << 12 | (x4 & 63) << 6 | S3 & 63, E4 > 65535 && E4 < 1114112 && (m3 = E4));
          }
        }
        m3 === null ? (m3 = 65533, y3 = 1) : m3 > 65535 && (m3 -= 65536, o.push(m3 >>> 10 & 1023 | 55296), m3 = 56320 | m3 & 1023), o.push(m3), f2 += y3;
      }
      return Pw(o);
    }
    var Dd = 4096;
    function Pw(t) {
      let e = t.length;
      if (e <= Dd)
        return String.fromCharCode.apply(String, t);
      let r = "", o = 0;
      for (;o < e; )
        r += String.fromCharCode.apply(String, t.slice(o, o += Dd));
      return r;
    }
    function Cw(t, e, r) {
      let o = "";
      r = Math.min(t.length, r);
      for (let f2 = e;f2 < r; ++f2)
        o += String.fromCharCode(t[f2] & 127);
      return o;
    }
    function Ow(t, e, r) {
      let o = "";
      r = Math.min(t.length, r);
      for (let f2 = e;f2 < r; ++f2)
        o += String.fromCharCode(t[f2]);
      return o;
    }
    function Fw(t, e, r) {
      let o = t.length;
      (!e || e < 0) && (e = 0), (!r || r < 0 || r > o) && (r = o);
      let f2 = "";
      for (let p3 = e;p3 < r; ++p3)
        f2 += Zw[t[p3]];
      return f2;
    }
    function Uw(t, e, r) {
      let o = t.slice(e, r), f2 = "";
      for (let p3 = 0;p3 < o.length - 1; p3 += 2)
        f2 += String.fromCharCode(o[p3] + o[p3 + 1] * 256);
      return f2;
    }
    me.prototype.slice = function(e, r) {
      let o = this.length;
      e = ~~e, r = r === undefined ? o : ~~r, e < 0 ? (e += o, e < 0 && (e = 0)) : e > o && (e = o), r < 0 ? (r += o, r < 0 && (r = 0)) : r > o && (r = o), r < e && (r = e);
      let f2 = this.subarray(e, r);
      return Object.setPrototypeOf(f2, me.prototype), f2;
    };
    function Dt(t, e, r) {
      if (t % 1 !== 0 || t < 0)
        throw new RangeError("offset is not uint");
      if (t + e > r)
        throw new RangeError("Trying to access beyond buffer length");
    }
    me.prototype.readUintLE = me.prototype.readUIntLE = function(e, r, o) {
      e = e >>> 0, r = r >>> 0, o || Dt(e, r, this.length);
      let f2 = this[e], p3 = 1, m3 = 0;
      for (;++m3 < r && (p3 *= 256); )
        f2 += this[e + m3] * p3;
      return f2;
    };
    me.prototype.readUintBE = me.prototype.readUIntBE = function(e, r, o) {
      e = e >>> 0, r = r >>> 0, o || Dt(e, r, this.length);
      let f2 = this[e + --r], p3 = 1;
      for (;r > 0 && (p3 *= 256); )
        f2 += this[e + --r] * p3;
      return f2;
    };
    me.prototype.readUint8 = me.prototype.readUInt8 = function(e, r) {
      return e = e >>> 0, r || Dt(e, 1, this.length), this[e];
    };
    me.prototype.readUint16LE = me.prototype.readUInt16LE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 2, this.length), this[e] | this[e + 1] << 8;
    };
    me.prototype.readUint16BE = me.prototype.readUInt16BE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 2, this.length), this[e] << 8 | this[e + 1];
    };
    me.prototype.readUint32LE = me.prototype.readUInt32LE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216;
    };
    me.prototype.readUint32BE = me.prototype.readUInt32BE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 4, this.length), this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
    };
    me.prototype.readBigUInt64LE = Ti2(function(e) {
      e = e >>> 0, Yn(e, "offset");
      let r = this[e], o = this[e + 7];
      (r === undefined || o === undefined) && Vf(e, this.length - 8);
      let f2 = r + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + this[++e] * 2 ** 24, p3 = this[++e] + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + o * 2 ** 24;
      return BigInt(f2) + (BigInt(p3) << BigInt(32));
    });
    me.prototype.readBigUInt64BE = Ti2(function(e) {
      e = e >>> 0, Yn(e, "offset");
      let r = this[e], o = this[e + 7];
      (r === undefined || o === undefined) && Vf(e, this.length - 8);
      let f2 = r * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + this[++e], p3 = this[++e] * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + o;
      return (BigInt(f2) << BigInt(32)) + BigInt(p3);
    });
    me.prototype.readIntLE = function(e, r, o) {
      e = e >>> 0, r = r >>> 0, o || Dt(e, r, this.length);
      let f2 = this[e], p3 = 1, m3 = 0;
      for (;++m3 < r && (p3 *= 256); )
        f2 += this[e + m3] * p3;
      return p3 *= 128, f2 >= p3 && (f2 -= Math.pow(2, 8 * r)), f2;
    };
    me.prototype.readIntBE = function(e, r, o) {
      e = e >>> 0, r = r >>> 0, o || Dt(e, r, this.length);
      let f2 = r, p3 = 1, m3 = this[e + --f2];
      for (;f2 > 0 && (p3 *= 256); )
        m3 += this[e + --f2] * p3;
      return p3 *= 128, m3 >= p3 && (m3 -= Math.pow(2, 8 * r)), m3;
    };
    me.prototype.readInt8 = function(e, r) {
      return e = e >>> 0, r || Dt(e, 1, this.length), this[e] & 128 ? (255 - this[e] + 1) * -1 : this[e];
    };
    me.prototype.readInt16LE = function(e, r) {
      e = e >>> 0, r || Dt(e, 2, this.length);
      let o = this[e] | this[e + 1] << 8;
      return o & 32768 ? o | 4294901760 : o;
    };
    me.prototype.readInt16BE = function(e, r) {
      e = e >>> 0, r || Dt(e, 2, this.length);
      let o = this[e + 1] | this[e] << 8;
      return o & 32768 ? o | 4294901760 : o;
    };
    me.prototype.readInt32LE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
    };
    me.prototype.readInt32BE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
    };
    me.prototype.readBigInt64LE = Ti2(function(e) {
      e = e >>> 0, Yn(e, "offset");
      let r = this[e], o = this[e + 7];
      (r === undefined || o === undefined) && Vf(e, this.length - 8);
      let f2 = this[e + 4] + this[e + 5] * 2 ** 8 + this[e + 6] * 2 ** 16 + (o << 24);
      return (BigInt(f2) << BigInt(32)) + BigInt(r + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + this[++e] * 2 ** 24);
    });
    me.prototype.readBigInt64BE = Ti2(function(e) {
      e = e >>> 0, Yn(e, "offset");
      let r = this[e], o = this[e + 7];
      (r === undefined || o === undefined) && Vf(e, this.length - 8);
      let f2 = (r << 24) + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + this[++e];
      return (BigInt(f2) << BigInt(32)) + BigInt(this[++e] * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + o);
    });
    me.prototype.readFloatLE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 4, this.length), Gn.read(this, e, true, 23, 4);
    };
    me.prototype.readFloatBE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 4, this.length), Gn.read(this, e, false, 23, 4);
    };
    me.prototype.readDoubleLE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 8, this.length), Gn.read(this, e, true, 52, 8);
    };
    me.prototype.readDoubleBE = function(e, r) {
      return e = e >>> 0, r || Dt(e, 8, this.length), Gn.read(this, e, false, 52, 8);
    };
    function Qt(t, e, r, o, f2, p3) {
      if (!me.isBuffer(t))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (e > f2 || e < p3)
        throw new RangeError('"value" argument is out of bounds');
      if (r + o > t.length)
        throw new RangeError("Index out of range");
    }
    me.prototype.writeUintLE = me.prototype.writeUIntLE = function(e, r, o, f2) {
      if (e = +e, r = r >>> 0, o = o >>> 0, !f2) {
        let y3 = Math.pow(2, 8 * o) - 1;
        Qt(this, e, r, o, y3, 0);
      }
      let p3 = 1, m3 = 0;
      for (this[r] = e & 255;++m3 < o && (p3 *= 256); )
        this[r + m3] = e / p3 & 255;
      return r + o;
    };
    me.prototype.writeUintBE = me.prototype.writeUIntBE = function(e, r, o, f2) {
      if (e = +e, r = r >>> 0, o = o >>> 0, !f2) {
        let y3 = Math.pow(2, 8 * o) - 1;
        Qt(this, e, r, o, y3, 0);
      }
      let p3 = o - 1, m3 = 1;
      for (this[r + p3] = e & 255;--p3 >= 0 && (m3 *= 256); )
        this[r + p3] = e / m3 & 255;
      return r + o;
    };
    me.prototype.writeUint8 = me.prototype.writeUInt8 = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 1, 255, 0), this[r] = e & 255, r + 1;
    };
    me.prototype.writeUint16LE = me.prototype.writeUInt16LE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 2, 65535, 0), this[r] = e & 255, this[r + 1] = e >>> 8, r + 2;
    };
    me.prototype.writeUint16BE = me.prototype.writeUInt16BE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 2, 65535, 0), this[r] = e >>> 8, this[r + 1] = e & 255, r + 2;
    };
    me.prototype.writeUint32LE = me.prototype.writeUInt32LE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 4, 4294967295, 0), this[r + 3] = e >>> 24, this[r + 2] = e >>> 16, this[r + 1] = e >>> 8, this[r] = e & 255, r + 4;
    };
    me.prototype.writeUint32BE = me.prototype.writeUInt32BE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 4, 4294967295, 0), this[r] = e >>> 24, this[r + 1] = e >>> 16, this[r + 2] = e >>> 8, this[r + 3] = e & 255, r + 4;
    };
    function Hd(t, e, r, o, f2) {
      Vd(e, o, f2, t, r, 7);
      let p3 = Number(e & BigInt(4294967295));
      t[r++] = p3, p3 = p3 >> 8, t[r++] = p3, p3 = p3 >> 8, t[r++] = p3, p3 = p3 >> 8, t[r++] = p3;
      let m3 = Number(e >> BigInt(32) & BigInt(4294967295));
      return t[r++] = m3, m3 = m3 >> 8, t[r++] = m3, m3 = m3 >> 8, t[r++] = m3, m3 = m3 >> 8, t[r++] = m3, r;
    }
    function Wd(t, e, r, o, f2) {
      Vd(e, o, f2, t, r, 7);
      let p3 = Number(e & BigInt(4294967295));
      t[r + 7] = p3, p3 = p3 >> 8, t[r + 6] = p3, p3 = p3 >> 8, t[r + 5] = p3, p3 = p3 >> 8, t[r + 4] = p3;
      let m3 = Number(e >> BigInt(32) & BigInt(4294967295));
      return t[r + 3] = m3, m3 = m3 >> 8, t[r + 2] = m3, m3 = m3 >> 8, t[r + 1] = m3, m3 = m3 >> 8, t[r] = m3, r + 8;
    }
    me.prototype.writeBigUInt64LE = Ti2(function(e, r = 0) {
      return Hd(this, e, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    me.prototype.writeBigUInt64BE = Ti2(function(e, r = 0) {
      return Wd(this, e, r, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    me.prototype.writeIntLE = function(e, r, o, f2) {
      if (e = +e, r = r >>> 0, !f2) {
        let M2 = Math.pow(2, 8 * o - 1);
        Qt(this, e, r, o, M2 - 1, -M2);
      }
      let p3 = 0, m3 = 1, y3 = 0;
      for (this[r] = e & 255;++p3 < o && (m3 *= 256); )
        e < 0 && y3 === 0 && this[r + p3 - 1] !== 0 && (y3 = 1), this[r + p3] = (e / m3 >> 0) - y3 & 255;
      return r + o;
    };
    me.prototype.writeIntBE = function(e, r, o, f2) {
      if (e = +e, r = r >>> 0, !f2) {
        let M2 = Math.pow(2, 8 * o - 1);
        Qt(this, e, r, o, M2 - 1, -M2);
      }
      let p3 = o - 1, m3 = 1, y3 = 0;
      for (this[r + p3] = e & 255;--p3 >= 0 && (m3 *= 256); )
        e < 0 && y3 === 0 && this[r + p3 + 1] !== 0 && (y3 = 1), this[r + p3] = (e / m3 >> 0) - y3 & 255;
      return r + o;
    };
    me.prototype.writeInt8 = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[r] = e & 255, r + 1;
    };
    me.prototype.writeInt16LE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 2, 32767, -32768), this[r] = e & 255, this[r + 1] = e >>> 8, r + 2;
    };
    me.prototype.writeInt16BE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 2, 32767, -32768), this[r] = e >>> 8, this[r + 1] = e & 255, r + 2;
    };
    me.prototype.writeInt32LE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 4, 2147483647, -2147483648), this[r] = e & 255, this[r + 1] = e >>> 8, this[r + 2] = e >>> 16, this[r + 3] = e >>> 24, r + 4;
    };
    me.prototype.writeInt32BE = function(e, r, o) {
      return e = +e, r = r >>> 0, o || Qt(this, e, r, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[r] = e >>> 24, this[r + 1] = e >>> 16, this[r + 2] = e >>> 8, this[r + 3] = e & 255, r + 4;
    };
    me.prototype.writeBigInt64LE = Ti2(function(e, r = 0) {
      return Hd(this, e, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    me.prototype.writeBigInt64BE = Ti2(function(e, r = 0) {
      return Wd(this, e, r, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function Kd(t, e, r, o, f2, p3) {
      if (r + o > t.length)
        throw new RangeError("Index out of range");
      if (r < 0)
        throw new RangeError("Index out of range");
    }
    function jd(t, e, r, o, f2) {
      return e = +e, r = r >>> 0, f2 || Kd(t, e, r, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), Gn.write(t, e, r, o, 23, 4), r + 4;
    }
    me.prototype.writeFloatLE = function(e, r, o) {
      return jd(this, e, r, true, o);
    };
    me.prototype.writeFloatBE = function(e, r, o) {
      return jd(this, e, r, false, o);
    };
    function Zd(t, e, r, o, f2) {
      return e = +e, r = r >>> 0, f2 || Kd(t, e, rn.write(t, e, r, o, 52, 8), r + 8;
    }
    me.prototype.writeDoubleLE = function(e, r, o) {
      return Zd(this, e, r, true, o);
    };
    me.prototype.writeDoubleBE = function(e, r, o) {
      return Zd(this, e, r, false, o);
    };
    me.prototype.copy = function(e, r, o, f2) {
      if (!me.isBuffer(e))
        throw new TypeError("argument should be a Buffer");
      if (o || (o = 0), !f2 && f2 !== 0 && (f2 = this.length), r >= e.length && (r = e.length), r || (r = 0), f2 > 0 && f2 < o && (f2 = o), f2 === o || e.length === 0 || this.length === 0)
        return 0;
      if (r < 0)
        throw new RangeError("targetStart out of bounds");
      if (o < 0 || o >= this.length)
        throw new RangeError("Index out of range");
      if (f2 < 0)
        throw new RangeError("sourceEnd out of bounds");
      f2 > this.length && (f2 = this.length), e.length - r < f2 - o && (f2 = e.length - r + o);
      let p3 = f2 - o;
      return this === e && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(r, o, f2) : Uint8Array.prototype.set.call(e, this.subarray(o, f2), r), p3;
    };
    me.prototype.fill = function(e, r, o, f2) {
      if (typeof e == "string") {
        if (typeof r == "string" ? (f2 = r, r = 0, o = this.length) : typeof o == "string" && (f2 = o, o = this.length), f2 !== undefined && typeof f2 != "string")
          throw new TypeError("encoding must be a string");
        if (typeof f2 == "string" && !me.isEncoding(f2))
          throw new TypeError("Unknown encoding: " + f2);
        if (e.length === 1) {
          let m3 = e.charCodeAt(0);
          (f2 === "utf8" && m3 < 128 || f2 === "latin1") && (e = m3);
        }
      } else
        typeof e == "number" ? e = e & 255 : typeof e == "boolean" && (e = Number(e));
      if (r < 0 || this.length < r || this.length < o)
        throw new RangeError("Out of range index");
      if (o <= r)
        return this;
      r = r >>> 0, o = o === undefined ? this.length : o >>> 0, e || (e = 0);
      let p3;
      if (typeof e == "number")
        for (p3 = r;p3 < o; ++p3)
          this[p3] = e;
      else {
        let m3 = me.isBuffer(e) ? e : me.from(e, f2), y3 = m3.length;
        if (y3 === 0)
          throw new TypeError('The value "' + e + '" is invalid for argument "value"');
        for (p3 = 0;p3 < o - r; ++p3)
          this[p3 + r] = m3[p3 % y3];
      }
      return this;
    };
    var $n = {};
    function D0(t, e, r) {
      $n[t] = class extends r {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: e.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${t}]`, this.stack, delete this.name;
        }
        get code() {
          return t;
        }
        set code(f2) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: f2, writable: true });
        }
        toString() {
          return `${this.name} [${t}]: ${this.message}`;
        }
      };
    }
    D0("ERR_BUFFER_OUT_OF_BOUNDS", function(t) {
      return t ? `${t} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError);
    D0("ERR_INVALID_ARG_TYPE", function(t, e) {
      return `The "${t}" argument must be of type number. Received type ${typeof e}`;
    }, TypeError);
    D0("ERR_OUT_OF_RANGE", function(t, e, r) {
      let o = `The value of "${t}" is out of range.`, f2 = r;
      return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? f2 = Pd(String(r)) : typeof r == "bigint" && (f2 = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (f2 = Pd(f2)), f2 += "n"), o += ` It must be ${e}. Received ${f2}`, o;
    }, RangeError);
    function Pd(t) {
      let e = "", r = t.length, o = t[0] === "-" ? 1 : 0;
      for (;r >= o + 4; r -= 3)
        e = `_${t.slice(r - 3, r)}${e}`;
      return `${t.slice(0, r)}${e}`;
    }
    function zw(t, e, r) {
      Yn(e, "offset"), (t[e] === undefined || t[e + r] === undefined) && Vf(e, t.length - (r + 1));
    }
    function Vd(t, e, r, o, f2, p3) {
      if (t > r || t < e) {
        let m3 = typeof e == "bigint" ? "n" : "", y3;
        throw p3 > 3 ? e === 0 || e === BigInt(0) ? y3 = `>= 0${m3} and < 2${m3} ** ${(p3 + 1) * 8}${m3}` : y3 = `>= -(2${m3} ** ${(p3 + 1) * 8 - 1}${m3}) and < 2 ** ${(p3 + 1) * 8 - 1}${m3}` : y3 = `>= ${e}${m3} and <= ${r}${m3}`, new $n.ERR_OUT_OF_RANGE("value", y3, t);
      }
      zw(o, f2, p3);
    }
    function Yn(t, e) {
      if (typeof t != "number")
        throw new $n.ERR_INVALID_ARG_TYPE(e, "number", t);
    }
    function Vf(t, e, r) {
      throw Math.floor(t) !== t ? (Yn(t, r), new $n.ERR_OUT_OF_RANGE(r || "offset", "an integer", t)) : e < 0 ? new $n.ERR_BUFFER_OUT_OF_BOUNDS : new $n.ERR_OUT_OF_RANGE(r || "offset", `>= ${r ? 1 : 0} and <= ${e}`, t);
    }
    var Hw = /[^+/0-9A-Za-z-_]/g;
    function Ww(t) {
      if (t = t.split("=")[0], t = t.trim().replace(Hw, ""), t.length < 2)
        return "";
      for (;t.length % 4 !== 0; )
        t = t + "=";
      return t;
    }
    function k0(t, e) {
      e = e || 1 / 0;
      let r, o = t.length, f2 = null, p3 = [];
      for (let m3 = 0;m3 < o; ++m3) {
        if (r = t.charCodeAt(m3), r > 55295 && r < 57344) {
          if (!f2) {
            if (r > 56319) {
              (e -= 3) > -1 && p3.push(239, 191, 189);
              continue;
            } else if (m3 + 1 === o) {
              (e -= 3) > -1 && p3.push(239, 191, 189);
              continue;
            }
            f2 = r;
            continue;
          }
          if (r < 56320) {
            (e -= 3) > -1 && p3.push(239, 191, 189), f2 = r;
            continue;
          }
          r = (f2 - 55296 << 10 | r - 56320) + 65536;
        } else
          f2 && (e -= 3) > -1 && p3.push(239, 191, 189);
        if (f2 = null, r < 128) {
          if ((e -= 1) < 0)
            break;
          p3.push(r);
        } else if (r < 2048) {
          if ((e -= 2) < 0)
            break;
          p3.push(r >> 6 | 192, r & 63 | 128);
        } else if (r < 65536) {
          if ((e -= 3) < 0)
            break;
          p3.push(r >> 12 | 224, r >> 6 & 63 | 128, r & 63 | 128);
        } else if (r < 1114112) {
          if ((e -= 4) < 0)
            break;
          p3.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, r & 63 | 128);
        } else
          throw new Error("Invalid code point");
      }
      return p3;
    }
    function Kw(t) {
      let e = [];
      for (let r = 0;r < t.length; ++r)
        e.push(t.charCodeAt(r) & 255);
      return e;
    }
    function jw(t, e) {
      let r, o, f2, p3 = [];
      for (let m3 = 0;m3 < t.length && !((e -= 2) < 0); ++m3)
        r = t.charCodeAt(m3), o = r >> 8, f2 = r % 256, p3.push(f2), p3.push(o);
      return p3;
    }
    function $d(t) {
      return q0.toByteArray(Ww(t));
    }
    function eo2(t, e, r, o) {
      let f2;
      for (f2 = 0;f2 < o && !(f2 + r >= e.length || f2 >= t.length); ++f2)
        e[f2 + r] = t[f2];
      return f2;
    }
    function Zr(t, e) {
      return t instanceof e || t != null && t.constructor != null && t.constructor.name != null && t.constructor.name === e.name;
    }
    function P0(t) {
      return t !== t;
    }
    var Zw = function() {
      let t = "0123456789abcdef", e = new Array(256);
      for (let r = 0;r < 16; ++r) {
        let o = r * 16;
        for (let f2 = 0;f2 < 16; ++f2)
          e[o + f2] = t[r] + t[f2];
      }
      return e;
    }();
    function Ti2(t) {
      return typeof BigInt > "u" ? Vw : t;
    }
    function Vw() {
      throw new Error("BigInt not supported");
    }
  });
  Te = T3((C0, Yd) => {
    var to = Ut(), Vr = to.Buffer;
    function Gd(t, e) {
      for (var r in t)
        e[r] = t[r];
    }
    Vr.from && Vr.alloc && Vr.allocUnsafe && Vr.allocUnsafeSlow ? Yd.exports = to : (Gd(to, C0), C0.Buffer = an);
    function an(t, e, r) {
      return Vr(t, e, r);
    }
    an.prototype = Object.create(Vr.prototype);
    Gd(Vr, an);
    an.from = function(t, e, r) {
      if (typeof t == "number")
        throw new TypeError("Argument must not be a number");
      return Vr(t, e, r);
    };
    an.alloc = function(t, e, r) {
      if (typeof t != "number")
        throw new TypeError("Argument must be a number");
      var o = Vr(t);
      return e !== undefined ? typeof r == "string" ? o.fill(e, r) : o.fill(e) : o.fill(0), o;
    };
    an.allocUnsafe = function(t) {
      if (typeof t != "number")
        throw new TypeError("Argument must be a number");
      return Vr(t);
    };
    an.allocUnsafeSlow = function(t) {
      if (typeof t != "number")
        throw new TypeError("Argument must be a number");
      return to.SlowBuffer(t);
    };
  });
  on = T3((Vq, F0) => {
    var O0 = 65536, $w = 4294967295;
    function Gw() {
      throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
    }
    var Yw = Te().Buffer, ro = global.crypto || global.msCrypto;
    ro && ro.getRandomValues ? F0.exports = Xw : F0.exports = Gw;
    function Xw(t, e) {
      if (t > $w)
        throw new RangeError("requested too many random bytes");
      var r = Yw.allocUnsafe(t);
      if (t > 0)
        if (t > O0)
          for (var o = 0;o < t; o += O0)
            ro.getRandomValues(r.slice(o, o + O0));
        else
          ro.getRandomValues(r);
      return typeof e == "function" ? process.nextTick(function() {
        e(null, r);
      }) : r;
    }
  });
  Ie2 = T3(($q, U0) => {
    typeof Object.create == "function" ? U0.exports = function(e, r) {
      r && (e.super_ = r, e.prototype = Object.create(r.prototype, { constructor: { value: e, enumerable: false, writable: true, configurable: true } }));
    } : U0.exports = function(e, r) {
      if (r) {
        e.super_ = r;
        var o = function() {};
        o.prototype = r.prototype, e.prototype = new o, e.prototype.constructor = e;
      }
    };
  });
  ki = T3((Gq, z0) => {
    var Jn = typeof Reflect == "object" ? Reflect : null, Xd = Jn && typeof Jn.apply == "function" ? Jn.apply : function(e, r, o) {
      return Function.prototype.apply.call(e, r, o);
    }, io2;
    Jn && typeof Jn.ownKeys == "function" ? io2 = Jn.ownKeys : Object.getOwnPropertySymbols ? io2 = function(e) {
      return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
    } : io2 = function(e) {
      return Object.getOwnPropertyNames(e);
    };
    function Jw(t) {
      console && console.warn && console.warn(t);
    }
    var Qd = Number.isNaN || function(e) {
      return e !== e;
    };
    function Fe2() {
      Fe2.init.call(this);
    }
    z0.exports = Fe2;
    z0.exports.once = r6;
    Fe2.EventEmitter = Fe2;
    Fe2.prototype._events = undefined;
    Fe2.prototype._eventsCount = 0;
    Fe2.prototype._maxListeners = undefined;
    var Jd = 10;
    function no(t) {
      if (typeof t != "function")
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t);
    }
    Object.defineProperty(Fe2, "defaultMaxListeners", { enumerable: true, get: function() {
      return Jd;
    }, set: function(t) {
      if (typeof t != "number" || t < 0 || Qd(t))
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
      Jd = t;
    } });
    Fe2.init = function() {
      (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
    };
    Fe2.prototype.setMaxListeners = function(e) {
      if (typeof e != "number" || e < 0 || Qd(e))
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
      return this._maxListeners = e, this;
    };
    function ec(t) {
      return t._maxListeners === undefined ? Fe2.defaultMaxListeners : t._maxListeners;
    }
    Fe2.prototype.getMaxListeners = function() {
      return ec(this);
    };
    Fe2.prototype.emit = function(e) {
      for (var r = [], o = 1;o < arguments.length; o++)
        r.push(arguments[o]);
      var f2 = e === "error", p3 = this._events;
      if (p3 !== undefined)
        f2 = f2 && p3.error === undefined;
      else if (!f2)
        return false;
      if (f2) {
        var m3;
        if (r.length > 0 && (m3 = r[0]), m3 instanceof Error)
          throw m3;
        var y3 = new Error("Unhandled error." + (m3 ? " (" + m3.message + ")" : ""));
        throw y3.context = m3, y3;
      }
      var M2 = p3[e];
      if (M2 === undefined)
        return false;
      if (typeof M2 == "function")
        Xd(M2, this, r);
      else
        for (var x4 = M2.length, S3 = fc(M2, x4), o = 0;o < x4; ++o)
          Xd(S3[o], this, r);
      return true;
    };
    function tc(t, e, r, o) {
      var f2, p3, m3;
      if (no(r), p3 = t._events, p3 === undefined ? (p3 = t._events = Object.create(null), t._eventsCount = 0) : (p3.newListener !== undefined && (t.emit("newListener", e, r.listener ? r.listener : r), p3 = t._events), m3 = p3[e]), m3 === undefined)
        m3 = p3[e] = r, ++t._eventsCount;
      else if (typeof m3 == "function" ? m3 = p3[e] = o ? [r, m3] : [m3, r] : o ? m3.unshift(r) : m3.push(r), f2 = ec(t), f2 > 0 && m3.length > f2 && !m3.warned) {
        m3.warned = true;
        var y3 = new Error("Possible EventEmitter memory leak detected. " + m3.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        y3.name = "MaxListenersExceededWarning", y3.emitter = t, y3.type = e, y3.count = m3.length, Jw(y3);
      }
      return t;
    }
    Fe2.prototype.addListener = function(e, r) {
      return tc(this, e, r, false);
    };
    Fe2.prototype.on = Fe2.prototype.addListener;
    Fe2.prototype.prependListener = function(e, r) {
      return tc(this, e, r, true);
    };
    function Qw() {
      if (!this.fired)
        return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
    }
    function rc(t, e, r) {
      var o = { fired: false, wrapFn: undefined, target: t, type: e, listener: r }, f2 = Qw.bind(o);
      return f2.listener = r, o.wrapFn = f2, f2;
    }
    Fe2.prototype.once = function(e, r) {
      return no(r), this.on(e, rc(this, e, r)), this;
    };
    Fe2.prototype.prependOnceListener = function(e, r) {
      return no(r), this.prependListener(e, rc(this, e, r)), this;
    };
    Fe2.prototype.removeListener = function(e, r) {
      var o, f2, p3, m3, y3;
      if (no(r), f2 = this._events, f2 === undefined)
        return this;
      if (o = f2[e], o === undefined)
        return this;
      if (o === r || o.listener === r)
        --this._eventsCount === 0 ? this._events = Object.create(null) : (delete f2[e], f2.removeListener && this.emit("removeListener", e, o.listener || r));
      else if (typeof o != "function") {
        for (p3 = -1, m3 = o.length - 1;m3 >= 0; m3--)
          if (o[m3] === r || o[m3].listener === r) {
            y3 = o[m3].listener, p3 = m3;
            break;
          }
        if (p3 < 0)
          return this;
        p3 === 0 ? o.shift() : e6(o, p3), o.length === 1 && (f2[e] = o[0]), f2.removeListener !== undefined && this.emit("removeListener", e, y3 || r);
      }
      return this;
    };
    Fe2.prototype.off = Fe2.prototype.removeListener;
    Fe2.prototype.removeAllListeners = function(e) {
      var r, o, f2;
      if (o = this._events, o === undefined)
        return this;
      if (o.removeListener === undefined)
        return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : o[e] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete o[e]), this;
      if (arguments.length === 0) {
        var p3 = Object.keys(o), m3;
        for (f2 = 0;f2 < p3.length; ++f2)
          m3 = p3[f2], m3 !== "removeListener" && this.removeAllListeners(m3);
        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
      }
      if (r = o[e], typeof r == "function")
        this.removeListener(e, r);
      else if (r !== undefined)
        for (f2 = r.length - 1;f2 >= 0; f2--)
          this.removeListener(e, r[f2]);
      return this;
    };
    function ic(t, e, r) {
      var o = t._events;
      if (o === undefined)
        return [];
      var f2 = o[e];
      return f2 === undefined ? [] : typeof f2 == "function" ? r ? [f2.listener || f2] : [f2] : r ? t6(f2) : fc(f2, f2.length);
    }
    Fe2.prototype.listeners = function(e) {
      return ic(this, e, true);
    };
    Fe2.prototype.rawListeners = function(e) {
      return ic(this, e, false);
    };
    Fe2.listenerCount = function(t, e) {
      return typeof t.listenerCount == "function" ? t.listenerCount(e) : nc.call(t, e);
    };
    Fe2.prototype.listenerCount = nc;
    function nc(t) {
      var e = this._events;
      if (e !== undefined) {
        var r = e[t];
        if (typeof r == "function")
          return 1;
        if (r !== undefined)
          return r.length;
      }
      return 0;
    }
    Fe2.prototype.eventNames = function() {
      return this._eventsCount > 0 ? io2(this._events) : [];
    };
    function fc(t, e) {
      for (var r = new Array(e), o = 0;o < e; ++o)
        r[o] = t[o];
      return r;
    }
    function e6(t, e) {
      for (;e + 1 < t.length; e++)
        t[e] = t[e + 1];
      t.pop();
    }
    function t6(t) {
      for (var e = new Array(t.length), r = 0;r < e.length; ++r)
        e[r] = t[r].listener || t[r];
      return e;
    }
    function r6(t, e) {
      return new Promise(function(r, o) {
        function f2(m3) {
          t.removeListener(e, p3), o(m3);
        }
        function p3() {
          typeof t.removeListener == "function" && t.removeListener("error", f2), r([].slice.call(arguments));
        }
        ac(t, e, p3, { once: true }), e !== "error" && i6(t, f2, { once: true });
      });
    }
    function i6(t, e, r) {
      typeof t.on == "function" && ac(t, "error", e, r);
    }
    function ac(t, e, r, o) {
      if (typeof t.on == "function")
        o.once ? t.once(e, r) : t.on(e, r);
      else if (typeof t.addEventListener == "function")
        t.addEventListener(e, function f(p3) {
          o.once && t.removeEventListener(e, f), r(p3);
        });
      else
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t);
    }
  });
  H0 = T3((Yq, oc) => {
    oc.exports = ki().EventEmitter;
  });
  $f = T3(() => {});
  lc = T3((Qq, uc) => {
    function sc(t, e) {
      var r = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(t);
        e && (o = o.filter(function(f2) {
          return Object.getOwnPropertyDescriptor(t, f2).enumerable;
        })), r.push.apply(r, o);
      }
      return r;
    }
    function n6(t) {
      for (var e = 1;e < arguments.length; e++) {
        var r = arguments[e] != null ? arguments[e] : {};
        e % 2 ? sc(Object(r), true).forEach(function(o) {
          f6(t, o, r[o]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : sc(Object(r)).forEach(function(o) {
          Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(r, o));
        });
      }
      return t;
    }
    function f6(t, e, r) {
      return e in t ? Object.defineProperty(t, e, { value: r, enumerable: true, configurable: true, writable: true }) : t[e] = r, t;
    }
    function a6(t, e) {
      if (!(t instanceof e))
        throw new TypeError("Cannot call a class as a function");
    }
    function hc(t, e) {
      for (var r = 0;r < e.length; r++) {
        var o = e[r];
        o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(t, o.key, o);
      }
    }
    function o6(t, e, r) {
      return e && hc(t.prototype, e), r && hc(t, r), t;
    }
    var s6 = Ut(), fo = s6.Buffer, h6 = $f(), W0 = h6.inspect, u6 = W0 && W0.custom || "inspect";
    function l6(t, e, r) {
      fo.prototype.copy.call(t, e, r);
    }
    uc.exports = function() {
      function t() {
        a6(this, t), this.head = null, this.tail = null, this.length = 0;
      }
      return o6(t, [{ key: "push", value: function(r) {
        var o = { data: r, next: null };
        this.length > 0 ? this.tail.next = o : this.head = o, this.tail = o, ++this.length;
      } }, { key: "unshift", value: function(r) {
        var o = { data: r, next: this.head };
        this.length === 0 && (this.tail = o), this.head = o, ++this.length;
      } }, { key: "shift", value: function() {
        if (this.length !== 0) {
          var r = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r;
        }
      } }, { key: "clear", value: function() {
        this.head = this.tail = null, this.length = 0;
      } }, { key: "join", value: function(r) {
        if (this.length === 0)
          return "";
        for (var o = this.head, f2 = "" + o.data;o = o.next; )
          f2 += r + o.data;
        return f2;
      } }, { key: "concat", value: function(r) {
        if (this.length === 0)
          return fo.alloc(0);
        for (var o = fo.allocUnsafe(r >>> 0), f2 = this.head, p3 = 0;f2; )
          l6(f2.data, o, p3), p3 += f2.data.length, f2 = f2.next;
        return o;
      } }, { key: "consume", value: function(r, o) {
        var f2;
        return r < this.head.data.length ? (f2 = this.head.data.slice(0, r), this.head.data = this.head.data.slice(r)) : r === this.head.data.length ? f2 = this.shift() : f2 = o ? this._getString(r) : this._getBuffer(r), f2;
      } }, { key: "first", value: function() {
        return this.head.data;
      } }, { key: "_getString", value: function(r) {
        var o = this.head, f2 = 1, p3 = o.data;
        for (r -= p3.length;o = o.next; ) {
          var m3 = o.data, y3 = r > m3.length ? m3.length : r;
          if (y3 === m3.length ? p3 += m3 : p3 += m3.slice(0, r), r -= y3, r === 0) {
            y3 === m3.length ? (++f2, o.next ? this.head = o.next : this.head = this.tail = null) : (this.head = o, o.data = m3.slice(y3));
            break;
          }
          ++f2;
        }
        return this.length -= f2, p3;
      } }, { key: "_getBuffer", value: function(r) {
        var o = fo.allocUnsafe(r), f2 = this.head, p3 = 1;
        for (f2.data.copy(o), r -= f2.data.length;f2 = f2.next; ) {
          var m3 = f2.data, y3 = r > m3.length ? m3.length : r;
          if (m3.copy(o, o.length - r, 0, y3), r -= y3, r === 0) {
            y3 === m3.length ? (++p3, f2.next ? this.head = f2.next : this.head = this.tail = null) : (this.head = f2, f2.data = m3.slice(y3));
            break;
          }
          ++p3;
        }
        return this.length -= p3, o;
      } }, { key: u6, value: function(r, o) {
        return W0(this, n6({}, o, { depth: 0, customInspect: false }));
      } }]), t;
    }();
  });
  j0 = T3((eI, cc2) => {
    function d6(t, e) {
      var r = this, o = this._readableState && this._readableState.destroyed, f2 = this._writableState && this._writableState.destroyed;
      return o || f2 ? (e ? e(t) : t && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(K0, this, t)) : process.nextTick(K0, this, t)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t || null, function(p3) {
        !e && p3 ? r._writableState ? r._writableState.errorEmitted ? process.nextTick(ao2, r) : (r._writableState.errorEmitted = true, process.nextTick(dc, r, p3)) : process.nextTick(dc, r, p3) : e ? (process.nextTick(ao2, r), e(p3)) : process.nextTick(ao2, r);
      }), this);
    }
    function dc(t, e) {
      K0(t, e), ao2(t);
    }
    function ao2(t) {
      t._writableState && !t._writableState.emitClose || t._readableState && !t._readableState.emitClose || t.emit("close");
    }
    function c6() {
      this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
    }
    function K0(t, e) {
      t.emit("error", e);
    }
    function p6(t, e) {
      var { _readableState: r, _writableState: o } = t;
      r && r.autoDestroy || o && o.autoDestroy ? t.destroy(e) : t.emit("error", e);
    }
    cc2.exports = { destroy: d6, undestroy: c6, errorOrDestroy: p6 };
  });
  sn = T3((tI, bc) => {
    function v6(t, e) {
      t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e;
    }
    var vc = {};
    function dr3(t, e, r) {
      r || (r = Error);
      function o(p3, m3, y3) {
        return typeof e == "string" ? e : e(p3, m3, y3);
      }
      var f2 = function(p3) {
        v6(m3, p3);
        function m3(y3, M2, x4) {
          return p3.call(this, o(y3, M2, x4)) || this;
        }
        return m3;
      }(r);
      f2.prototype.name = r.name, f2.prototype.code = t, vc[t] = f2;
    }
    function pc(t, e) {
      if (Array.isArray(t)) {
        var r = t.length;
        return t = t.map(function(o) {
          return String(o);
        }), r > 2 ? "one of ".concat(e, " ").concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1] : r === 2 ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
      } else
        return "of ".concat(e, " ").concat(String(t));
    }
    function b6(t, e, r) {
      return t.substr(!r || r < 0 ? 0 : +r, e.length) === e;
    }
    function m6(t, e, r) {
      return (r === undefined || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e;
    }
    function g6(t, e, r) {
      return typeof r != "number" && (r = 0), r + e.length > t.length ? false : t.indexOf(e, r) !== -1;
    }
    dr3("ERR_INVALID_OPT_VALUE", function(t, e) {
      return 'The value "' + e + '" is invalid for option "' + t + '"';
    }, TypeError);
    dr3("ERR_INVALID_ARG_TYPE", function(t, e, r) {
      var o;
      typeof e == "string" && b6(e, "not ") ? (o = "must not be", e = e.replace(/^not /, "")) : o = "must be";
      var f2;
      if (m6(t, " argument"))
        f2 = "The ".concat(t, " ").concat(o, " ").concat(pc(e, "type"));
      else {
        var p3 = g6(t, ".") ? "property" : "argument";
        f2 = 'The "'.concat(t, '" ').concat(p3, " ").concat(o, " ").concat(pc(e, "type"));
      }
      return f2 += ". Received type ".concat(typeof r), f2;
    }, TypeError);
    dr3("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    dr3("ERR_METHOD_NOT_IMPLEMENTED", function(t) {
      return "The " + t + " method is not implemented";
    });
    dr3("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    dr3("ERR_STREAM_DESTROYED", function(t) {
      return "Cannot call " + t + " after a stream was destroyed";
    });
    dr3("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    dr3("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    dr3("ERR_STREAM_WRITE_AFTER_END", "write after end");
    dr3("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    dr3("ERR_UNKNOWN_ENCODING", function(t) {
      return "Unknown encoding: " + t;
    }, TypeError);
    dr3("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    bc.exports.codes = vc;
  });
  Z0 = T3((rI, mc) => {
    var y6 = sn().codes.ERR_INVALID_OPT_VALUE;
    function w6(t, e, r) {
      return t.highWaterMark != null ? t.highWaterMark : e ? t[r] : null;
    }
    function M6(t, e, r, o) {
      var f2 = w6(e, o, r);
      if (f2 != null) {
        if (!(isFinite(f2) && Math.floor(f2) === f2) || f2 < 0) {
          var p3 = o ? r : "highWaterMark";
          throw new y6(p3, f2);
        }
        return Math.floor(f2);
      }
      return t.objectMode ? 16 : 16 * 1024;
    }
    mc.exports = { getHighWaterMark: M6 };
  });
  $0 = T3((iI, gc) => {
    gc.exports = _6;
    function _6(t, e) {
      if (V0("noDeprecation"))
        return t;
      var r = false;
      function o() {
        if (!r) {
          if (V0("throwDeprecation"))
            throw new Error(e);
          V0("traceDeprecation") ? console.trace(e) : console.warn(e), r = true;
        }
        return t.apply(this, arguments);
      }
      return o;
    }
    function V0(t) {
      try {
        if (!global.localStorage)
          return false;
      } catch {
        return false;
      }
      var e = global.localStorage[t];
      return e == null ? false : String(e).toLowerCase() === "true";
    }
  });
  X0 = T3((nI, Sc) => {
    Sc.exports = st;
    function wc(t) {
      var e = this;
      this.next = null, this.entry = null, this.finish = function() {
        G6(e, t);
      };
    }
    var Qn2;
    st.WritableState = Yf;
    var x6 = { deprecate: $0() }, Mc = H0(), so2 = Ut().Buffer, S6 = global.Uint8Array || function() {};
    function E6(t) {
      return so2.from(t);
    }
    function A6(t) {
      return so2.isBuffer(t) || t instanceof S6;
    }
    var Y0 = j0(), R6 = Z0(), B6 = R6.getHighWaterMark, Li = sn().codes, q6 = Li.ERR_INVALID_ARG_TYPE, I6 = Li.ERR_METHOD_NOT_IMPLEMENTED, T6 = Li.ERR_MULTIPLE_CALLBACK, k6 = Li.ERR_STREAM_CANNOT_PIPE, L6 = Li.ERR_STREAM_DESTROYED, N6 = Li.ERR_STREAM_NULL_VALUES, D6 = Li.ERR_STREAM_WRITE_AFTER_END, P6 = Li.ERR_UNKNOWN_ENCODING, ef = Y0.errorOrDestroy;
    Ie2()(st, Mc);
    function C6() {}
    function Yf(t, e, r) {
      Qn2 = Qn2 || hn(), t = t || {}, typeof r != "boolean" && (r = e instanceof Qn2), this.objectMode = !!t.objectMode, r && (this.objectMode = this.objectMode || !!t.writableObjectMode), this.highWaterMark = B6(this, t, "writableHighWaterMark", r), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      var o = t.decodeStrings === false;
      this.decodeStrings = !o, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(f2) {
        K6(e, f2);
      }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = t.emitClose !== false, this.autoDestroy = !!t.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new wc(this);
    }
    Yf.prototype.getBuffer = function() {
      for (var e = this.bufferedRequest, r = [];e; )
        r.push(e), e = e.next;
      return r;
    };
    (function() {
      try {
        Object.defineProperty(Yf.prototype, "buffer", { get: x6.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
      } catch {}
    })();
    var oo2;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (oo2 = Function.prototype[Symbol.hasInstance], Object.defineProperty(st, Symbol.hasInstance, { value: function(e) {
      return oo2.call(this, e) ? true : this !== st ? false : e && e._writableState instanceof Yf;
    } })) : oo2 = function(e) {
      return e instanceof this;
    };
    function st(t) {
      Qn2 = Qn2 || hn();
      var e = this instanceof Qn2;
      if (!e && !oo2.call(st, this))
        return new st(t);
      this._writableState = new Yf(t, this, e), this.writable = true, t && (typeof t.write == "function" && (this._write = t.write), typeof t.writev == "function" && (this._writev = t.writev), typeof t.destroy == "function" && (this._destroy = t.destroy), typeof t.final == "function" && (this._final = t.final)), Mc.call(this);
    }
    st.prototype.pipe = function() {
      ef(this, new k6);
    };
    function O6(t, e) {
      var r = new D6;
      ef(t, r), process.nextTick(e, r);
    }
    function F6(t, e, r, o) {
      var f2;
      return r === null ? f2 = new N6 : typeof r != "string" && !e.objectMode && (f2 = new q6("chunk", ["string", "Buffer"], r)), f2 ? (ef(t, f2), process.nextTick(o, f2), false) : true;
    }
    st.prototype.write = function(t, e, r) {
      var o = this._writableState, f2 = false, p3 = !o.objectMode && A6(t);
      return p3 && !so2.isBuffer(t) && (t = E6(t)), typeof e == "function" && (r = e, e = null), p3 ? e = "buffer" : e || (e = o.defaultEncoding), typeof r != "function" && (r = C6), o.ending ? O6(this, r) : (p3 || F6(this, o, t, r)) && (o.pendingcb++, f2 = z6(this, o, p3, t, e, r)), f2;
    };
    st.prototype.cork = function() {
      this._writableState.corked++;
    };
    st.prototype.uncork = function() {
      var t = this._writableState;
      t.corked && (t.corked--, !t.writing && !t.corked && !t.bufferProcessing && t.bufferedRequest && _c(this, t));
    };
    st.prototype.setDefaultEncoding = function(e) {
      if (typeof e == "string" && (e = e.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e + "").toLowerCase()) > -1))
        throw new P6(e);
      return this._writableState.defaultEncoding = e, this;
    };
    Object.defineProperty(st.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    function U6(t, e, r) {
      return !t.objectMode && t.decodeStrings !== false && typeof e == "string" && (e = so2.from(e, r)), e;
    }
    Object.defineProperty(st.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    function z6(t, e, r, o, f2, p3) {
      if (!r) {
        var m3 = U6(e, o, f2);
        o !== m3 && (r = true, f2 = "buffer", o = m3);
      }
      var y3 = e.objectMode ? 1 : o.length;
      e.length += y3;
      var M2 = e.length < e.highWaterMark;
      if (M2 || (e.needDrain = true), e.writing || e.corked) {
        var x4 = e.lastBufferedRequest;
        e.lastBufferedRequest = { chunk: o, encoding: f2, isBuf: r, callback: p3, next: null }, x4 ? x4.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;
      } else
        G0(t, e, false, y3, o, f2, p3);
      return M2;
    }
    function G0(t, e, r, o, f2, p3, m3) {
      e.writelen = o, e.writecb = m3, e.writing = true, e.sync = true, e.destroyed ? e.onwrite(new L6("write")) : r ? t._writev(f2, e.onwrite) : t._write(f2, p3, e.onwrite), e.sync = false;
    }
    function H6(t, e, r, o, f2) {
      --e.pendingcb, r ? (process.nextTick(f2, o), process.nextTick(Gf, t, e), t._writableState.errorEmitted = true, ef(t, o)) : (f2(o), t._writableState.errorEmitted = true, ef(t, o), Gf(t, e));
    }
    function W6(t) {
      t.writing = false, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
    }
    function K6(t, e) {
      var r = t._writableState, o = r.sync, f2 = r.writecb;
      if (typeof f2 != "function")
        throw new T6;
      if (W6(r), e)
        H6(t, r, o, e, f2);
      else {
        var p3 = xc(r) || t.destroyed;
        !p3 && !r.corked && !r.bufferProcessing && r.bufferedRequest && _c(t, r), o ? process.nextTick(yc, t, r, p3, f2) : yc(t, r, p3, f2);
      }
    }
    function yc(t, e, r, o) {
      r || j6(t, e), e.pendingcb--, o(), Gf(t, e);
    }
    function j6(t, e) {
      e.length === 0 && e.needDrain && (e.needDrain = false, t.emit("drain"));
    }
    function _c(t, e) {
      e.bufferProcessing = true;
      var r = e.bufferedRequest;
      if (t._writev && r && r.next) {
        var o = e.bufferedRequestCount, f2 = new Array(o), p3 = e.corkedRequestsFree;
        p3.entry = r;
        for (var m3 = 0, y3 = true;r; )
          f2[m3] = r, r.isBuf || (y3 = false), r = r.next, m3 += 1;
        f2.allBuffers = y3, G0(t, e, true, e.length, f2, "", p3.finish), e.pendingcb++, e.lastBufferedRequest = null, p3.next ? (e.corkedRequestsFree = p3.next, p3.next = null) : e.corkedRequestsFree = new wc(e), e.bufferedRequestCount = 0;
      } else {
        for (;r; ) {
          var { chunk: M2, encoding: x4, callback: S3 } = r, E4 = e.objectMode ? 1 : M2.length;
          if (G0(t, e, false, E4, M2, x4, S3), r = r.next, e.bufferedRequestCount--, e.writing)
            break;
        }
        r === null && (e.lastBufferedRequest = null);
      }
      e.bufferedRequest = r, e.bufferProcessing = false;
    }
    st.prototype._write = function(t, e, r) {
      r(new I6("_write()"));
    };
    st.prototype._writev = null;
    st.prototype.end = function(t, e, r) {
      var o = this._writableState;
      return typeof t == "function" ? (r = t, t = null, e = null) : typeof e == "function" && (r = e, e = null), t != null && this.write(t, e), o.corked && (o.corked = 1, this.uncork()), o.ending || $6(this, o, r), this;
    };
    Object.defineProperty(st.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function xc(t) {
      return t.ending && t.length === 0 && t.bufferedRequest === null && !t.finished && !t.writing;
    }
    function Z6(t, e) {
      t._final(function(r) {
        e.pendingcb--, r && ef(t, r), e.prefinished = true, t.emit("prefinish"), Gf(t, e);
      });
    }
    function V6(t, e) {
      !e.prefinished && !e.finalCalled && (typeof t._final == "function" && !e.destroyed ? (e.pendingcb++, e.finalCalled = true, process.nextTick(Z6, t, e)) : (e.prefinished = true, t.emit("prefinish")));
    }
    function Gf(t, e) {
      var r = xc(e);
      if (r && (V6(t, e), e.pendingcb === 0 && (e.finished = true, t.emit("finish"), e.autoDestroy))) {
        var o = t._readableState;
        (!o || o.autoDestroy && o.endEmitted) && t.destroy();
      }
      return r;
    }
    function $6(t, e, r) {
      e.ending = true, Gf(t, e), r && (e.finished ? process.nextTick(r) : t.once("finish", r)), e.ended = true, t.writable = false;
    }
    function G6(t, e, r) {
      var o = t.entry;
      for (t.entry = null;o; ) {
        var f2 = o.callback;
        e.pendingcb--, f2(r), o = o.next;
      }
      e.corkedRequestsFree.next = t;
    }
    Object.defineProperty(st.prototype, "destroyed", { enumerable: false, get: function() {
      return this._writableState === undefined ? false : this._writableState.destroyed;
    }, set: function(e) {
      !this._writableState || (this._writableState.destroyed = e);
    } });
    st.prototype.destroy = Y0.destroy;
    st.prototype._undestroy = Y0.undestroy;
    st.prototype._destroy = function(t, e) {
      e(t);
    };
  });
  hn = T3((fI, Ac) => {
    var Y6 = Object.keys || function(t) {
      var e = [];
      for (var r in t)
        e.push(r);
      return e;
    };
    Ac.exports = $r;
    var Ec = eh(), Q0 = X0();
    Ie2()($r, Ec);
    for (J0 = Y6(Q0.prototype), ho = 0;ho < J0.length; ho++)
      uo = J0[ho], $r.prototype[uo] || ($r.prototype[uo] = Q0.prototype[uo]);
    var J0, uo, ho;
    function $r(t) {
      if (!(this instanceof $r))
        return new $r(t);
      Ec.call(this, t), Q0.call(this, t), this.allowHalfOpen = true, t && (t.readable === false && (this.readable = false), t.writable === false && (this.writable = false), t.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", X6)));
    }
    Object.defineProperty($r.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    Object.defineProperty($r.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    Object.defineProperty($r.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function X6() {
      this._writableState.ended || process.nextTick(J6, this);
    }
    function J6(t) {
      t.end();
    }
    Object.defineProperty($r.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set: function(e) {
      this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = e, this._writableState.destroyed = e);
    } });
  });
  lo2 = T3((Bc) => {
    var rh = Te().Buffer, Rc = rh.isEncoding || function(t) {
      switch (t = "" + t, t && t.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return true;
        default:
          return false;
      }
    };
    function Q6(t) {
      if (!t)
        return "utf8";
      for (var e;; )
        switch (t) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return t;
          default:
            if (e)
              return;
            t = ("" + t).toLowerCase(), e = true;
        }
    }
    function eM(t) {
      var e = Q6(t);
      if (typeof e != "string" && (rh.isEncoding === Rc || !Rc(t)))
        throw new Error("Unknown encoding: " + t);
      return e || t;
    }
    Bc.StringDecoder = Xf;
    function Xf(t) {
      this.encoding = eM(t);
      var e;
      switch (this.encoding) {
        case "utf16le":
          this.text = aM, this.end = oM, e = 4;
          break;
        case "utf8":
          this.fillLast = iM, e = 4;
          break;
        case "base64":
          this.text = sM, this.end = hM, e = 3;
          break;
        default:
          this.write = uM, this.end = lM;
          return;
      }
      this.lastNeed = 0, this.lastTotal = 0, this.lastChar = rh.allocUnsafe(e);
    }
    Xf.prototype.write = function(t) {
      if (t.length === 0)
        return "";
      var e, r;
      if (this.lastNeed) {
        if (e = this.fillLast(t), e === undefined)
          return "";
        r = this.lastNeed, this.lastNeed = 0;
      } else
        r = 0;
      return r < t.length ? e ? e + this.text(t, r) : this.text(t, r) : e || "";
    };
    Xf.prototype.end = fM;
    Xf.prototype.text = nM;
    Xf.prototype.fillLast = function(t) {
      if (this.lastNeed <= t.length)
        return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length;
    };
    function th(t) {
      return t <= 127 ? 0 : t >> 5 === 6 ? 2 : t >> 4 === 14 ? 3 : t >> 3 === 30 ? 4 : t >> 6 === 2 ? -1 : -2;
    }
    function tM(t, e, r) {
      var o = e.length - 1;
      if (o < r)
        return 0;
      var f2 = th(e[o]);
      return f2 >= 0 ? (f2 > 0 && (t.lastNeed = f2 - 1), f2) : --o < r || f2 === -2 ? 0 : (f2 = th(e[o]), f2 >= 0 ? (f2 > 0 && (t.lastNeed = f2 - 2), f2) : --o < r || f2 === -2 ? 0 : (f2 = th(e[o]), f2 >= 0 ? (f2 > 0 && (f2 === 2 ? f2 = 0 : t.lastNeed = f2 - 3), f2) : 0));
    }
    function rM(t, e, r) {
      if ((e[0] & 192) !== 128)
        return t.lastNeed = 0, "�";
      if (t.lastNeed > 1 && e.length > 1) {
        if ((e[1] & 192) !== 128)
          return t.lastNeed = 1, "�";
        if (t.lastNeed > 2 && e.length > 2 && (e[2] & 192) !== 128)
          return t.lastNeed = 2, "�";
      }
    }
    function iM(t) {
      var e = this.lastTotal - this.lastNeed, r = rM(this, t, e);
      if (r !== undefined)
        return r;
      if (this.lastNeed <= t.length)
        return t.copy(this.lastChar, e, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      t.copy(this.lastChar, e, 0, t.length), this.lastNeed -= t.length;
    }
    function nM(t, e) {
      var r = tM(this, t, e);
      if (!this.lastNeed)
        return t.toString("utf8", e);
      this.lastTotal = r;
      var o = t.length - (r - this.lastNeed);
      return t.copy(this.lastChar, 0, o), t.toString("utf8", e, o);
    }
    function fM(t) {
      var e = t && t.length ? this.write(t) : "";
      return this.lastNeed ? e + "�" : e;
    }
    function aM(t, e) {
      if ((t.length - e) % 2 === 0) {
        var r = t.toString("utf16le", e);
        if (r) {
          var o = r.charCodeAt(r.length - 1);
          if (o >= 55296 && o <= 56319)
            return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], r.slice(0, -1);
        }
        return r;
      }
      return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1);
    }
    function oM(t) {
      var e = t && t.length ? this.write(t) : "";
      if (this.lastNeed) {
        var r = this.lastTotal - this.lastNeed;
        return e + this.lastChar.toString("utf16le", 0, r);
      }
      return e;
    }
    function sM(t, e) {
      var r = (t.length - e) % 3;
      return r === 0 ? t.toString("base64", e) : (this.lastNeed = 3 - r, this.lastTotal = 3, r === 1 ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - r));
    }
    function hM(t) {
      var e = t && t.length ? this.write(t) : "";
      return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e;
    }
    function uM(t) {
      return t.toString(this.encoding);
    }
    function lM(t) {
      return t && t.length ? this.write(t) : "";
    }
  });
  Jf = {};
  Xa(Jf, { StringDecoder: () => co.StringDecoder, default: () => co.StringDecoder });
  Qf = A0(() => {
    co = rn(lo2());
  });
  po = T3((oI, Tc) => {
    var qc = sn().codes.ERR_STREAM_PREMATURE_CLOSE;
    function dM(t) {
      var e = false;
      return function() {
        if (!e) {
          e = true;
          for (var r = arguments.length, o = new Array(r), f2 = 0;f2 < r; f2++)
            o[f2] = arguments[f2];
          t.apply(this, o);
        }
      };
    }
    function cM() {}
    function pM(t) {
      return t.setHeader && typeof t.abort == "function";
    }
    function Ic(t, e, r) {
      if (typeof e == "function")
        return Ic(t, null, e);
      e || (e = {}), r = dM(r || cM);
      var o = e.readable || e.readable !== false && t.readable, f2 = e.writable || e.writable !== false && t.writable, p3 = function() {
        t.writable || y3();
      }, m3 = t._writableState && t._writableState.finished, y3 = function() {
        f2 = false, m3 = true, o || r.call(t);
      }, M2 = t._readableState && t._readableState.endEmitted, x4 = function() {
        o = false, M2 = true, f2 || r.call(t);
      }, S3 = function(L3) {
        r.call(t, L3);
      }, E4 = function() {
        var L3;
        if (o && !M2)
          return (!t._readableState || !t._readableState.ended) && (L3 = new qc), r.call(t, L3);
        if (f2 && !m3)
          return (!t._writableState || !t._writableState.ended) && (L3 = new qc), r.call(t, L3);
      }, B3 = function() {
        t.req.on("finish", y3);
      };
      return pM(t) ? (t.on("complete", y3), t.on("abort", E4), t.req ? B3() : t.on("request", B3)) : f2 && !t._writableState && (t.on("end", p3), t.on("close", p3)), t.on("end", x4), t.on("finish", y3), e.error !== false && t.on("error", S3), t.on("close", E4), function() {
        t.removeListener("complete", y3), t.removeListener("abort", E4), t.removeListener("request", B3), t.req && t.req.removeListener("finish", y3), t.removeListener("end", p3), t.removeListener("close", p3), t.removeListener("finish", y3), t.removeListener("end", x4), t.removeListener("error", S3), t.removeListener("close", E4);
      };
    }
    Tc.exports = Ic;
  });
  Lc = T3((sI, kc) => {
    var vo;
    function Ni(t, e, r) {
      return e in t ? Object.defineProperty(t, e, { value: r, enumerable: true, configurable: true, writable: true }) : t[e] = r, t;
    }
    var vM = po(), Di = Symbol("lastResolve"), un = Symbol("lastReject"), ea = Symbol("error"), bo2 = Symbol("ended"), ln2 = Symbol("lastPromise"), ih = Symbol("handlePromise"), dn = Symbol("stream");
    function Pi(t, e) {
      return { value: t, done: e };
    }
    function bM(t) {
      var e = t[Di];
      if (e !== null) {
        var r = t[dn].read();
        r !== null && (t[ln2] = null, t[Di] = null, t[un] = null, e(Pi(r, false)));
      }
    }
    function mM(t) {
      process.nextTick(bM, t);
    }
    function gM(t, e) {
      return function(r, o) {
        t.then(function() {
          if (e[bo2]) {
            r(Pi(undefined, true));
            return;
          }
          e[ih](r, o);
        }, o);
      };
    }
    var yM = Object.getPrototypeOf(function() {}), wM = Object.setPrototypeOf((vo = { get stream() {
      return this[dn];
    }, next: function() {
      var e = this, r = this[ea];
      if (r !== null)
        return Promise.reject(r);
      if (this[bo2])
        return Promise.resolve(Pi(undefined, true));
      if (this[dn].destroyed)
        return new Promise(function(m3, y3) {
          process.nextTick(function() {
            e[ea] ? y3(e[ea]) : m3(Pi(undefined, true));
          });
        });
      var o = this[ln2], f2;
      if (o)
        f2 = new Promise(gM(o, this));
      else {
        var p3 = this[dn].read();
        if (p3 !== null)
          return Promise.resolve(Pi(p3, false));
        f2 = new Promise(this[ih]);
      }
      return this[ln2] = f2, f2;
    } }, Ni(vo, Symbol.asyncIterator, function() {
      return this;
    }), Ni(vo, "return", function() {
      var e = this;
      return new Promise(function(r, o) {
        e[dn].destroy(null, function(f2) {
          if (f2) {
            o(f2);
            return;
          }
          r(Pi(undefined, true));
        });
      });
    }), vo), yM), MM = function(e) {
      var r, o = Object.create(wM, (r = {}, Ni(r, dn, { value: e, writable: true }), Ni(r, Di, { value: null, writable: true }), Ni(r, un, { value: null, writable: true }), Ni(r, ea, { value: null, writable: true }), Ni(r, bo2, { value: e._readableState.endEmitted, writable: true }), Ni(r, ih, { value: function(p3, m3) {
        var y3 = o[dn].read();
        y3 ? (o[ln2] = null, o[Di] = null, o[un] = null, p3(Pi(y3, false))) : (o[Di] = p3, o[un] = m3);
      }, writable: true }), r));
      return o[ln2] = null, vM(e, function(f2) {
        if (f2 && f2.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var p3 = o[un];
          p3 !== null && (o[ln2] = null, o[Di] = null, o[un] = null, p3(f2)), o[ea] = f2;
          return;
        }
        var m3 = o[Di];
        m3 !== null && (o[ln2] = null, o[Di] = null, o[un] = null, m3(Pi(undefined, true))), o[bo2] = true;
      }), e.on("readable", mM.bind(null, o)), o;
    };
    kc.exports = MM;
  });
  Dc = T3((hI, Nc) => {
    Nc.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  });
  eh = T3((lI, jc) => {
    jc.exports = Ce2;
    var tf;
    Ce2.ReadableState = Fc;
    var uI = ki().EventEmitter, Oc = function(e, r) {
      return e.listeners(r).length;
    }, ra = H0(), mo = Ut().Buffer, _M = global.Uint8Array || function() {};
    function xM(t) {
      return mo.from(t);
    }
    function SM(t) {
      return mo.isBuffer(t) || t instanceof _M;
    }
    var nh = $f(), Ne;
    nh && nh.debuglog ? Ne = nh.debuglog("stream") : Ne = function() {};
    var EM = lc(), lh = j0(), AM = Z0(), RM = AM.getHighWaterMark, go2 = sn().codes, BM = go2.ERR_INVALID_ARG_TYPE, qM = go2.ERR_STREAM_PUSH_AFTER_EOF, IM = go2.ERR_METHOD_NOT_IMPLEMENTED, TM = go2.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, rf, fh, ah;
    Ie2()(Ce2, ra);
    var ta = lh.errorOrDestroy, oh = ["error", "close", "destroy", "pause", "resume"];
    function kM(t, e, r) {
      if (typeof t.prependListener == "function")
        return t.prependListener(e, r);
      !t._events || !t._events[e] ? t.on(e, r) : Array.isArray(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [r, t._events[e]];
    }
    function Fc(t, e, r) {
      tf = tf || hn(), t = t || {}, typeof r != "boolean" && (r = e instanceof tf), this.objectMode = !!t.objectMode, r && (this.objectMode = this.objectMode || !!t.readableObjectMode), this.highWaterMark = RM(this, t, "readableHighWaterMark", r), this.buffer = new EM, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = t.emitClose !== false, this.autoDestroy = !!t.autoDestroy, this.destroyed = false, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t.encoding && (rf || (rf = (Qf(), ur(Jf)).StringDecoder), this.decoder = new rf(t.encoding), this.encoding = t.encoding);
    }
    function Ce2(t) {
      if (tf = tf || hn(), !(this instanceof Ce2))
        return new Ce2(t);
      var e = this instanceof tf;
      this._readableState = new Fc(t, this, e), this.readable = true, t && (typeof t.read == "function" && (this._read = t.read), typeof t.destroy == "function" && (this._destroy = t.destroy)), ra.call(this);
    }
    Object.defineProperty(Ce2.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined ? false : this._readableState.destroyed;
    }, set: function(e) {
      !this._readableState || (this._readableState.destroyed = e);
    } });
    Ce2.prototype.destroy = lh.destroy;
    Ce2.prototype._undestroy = lh.undestroy;
    Ce2.prototype._destroy = function(t, e) {
      e(t);
    };
    Ce2.prototype.push = function(t, e) {
      var r = this._readableState, o;
      return r.objectMode ? o = true : typeof t == "string" && (e = e || r.defaultEncoding, e !== r.encoding && (t = mo.from(t, e), e = ""), o = true), Uc(this, t, e, false, o);
    };
    Ce2.prototype.unshift = function(t) {
      return Uc(this, t, null, true, false);
    };
    function Uc(t, e, r, o, f2) {
      Ne("readableAddChunk", e);
      var p3 = t._readableState;
      if (e === null)
        p3.reading = false, DM(t, p3);
      else {
        var m3;
        if (f2 || (m3 = LM(p3, e)), m3)
          ta(t, m3);
        else if (p3.objectMode || e && e.length > 0)
          if (typeof e != "string" && !p3.objectMode && Object.getPrototypeOf(e) !== mo.prototype && (e = xM(e)), o)
            p3.endEmitted ? ta(t, new TM) : sh(t, p3, e, true);
          else if (p3.ended)
            ta(t, new qM);
          else {
            if (p3.destroyed)
              return false;
            p3.reading = false, p3.decoder && !r ? (e = p3.decoder.write(e), p3.objectMode || e.length !== 0 ? sh(t, p3, e, false) : uh(t, p3)) : sh(t, p3, e, false);
          }
        else
          o || (p3.reading = false, uh(t, p3));
      }
      return !p3.ended && (p3.length < p3.highWaterMark || p3.length === 0);
    }
    function sh(t, e, r, o) {
      e.flowing && e.length === 0 && !e.sync ? (e.awaitDrain = 0, t.emit("data", r)) : (e.length += e.objectMode ? 1 : r.length, o ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && yo2(t)), uh(t, e);
    }
    function LM(t, e) {
      var r;
      return !SM(e) && typeof e != "string" && e !== undefined && !t.objectMode && (r = new BM("chunk", ["string", "Buffer", "Uint8Array"], e)), r;
    }
    Ce2.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Ce2.prototype.setEncoding = function(t) {
      rf || (rf = (Qf(), ur(Jf)).StringDecoder);
      var e = new rf(t);
      this._readableState.decoder = e, this._readableState.encoding = this._readableState.decoder.encoding;
      for (var r = this._readableState.buffer.head, o = "";r !== null; )
        o += e.write(r.data), r = r.next;
      return this._readableState.buffer.clear(), o !== "" && this._readableState.buffer.push(o), this._readableState.length = o.length, this;
    };
    var Pc = 1073741824;
    function NM(t) {
      return t >= Pc ? t = Pc : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
    }
    function Cc(t, e) {
      return t <= 0 || e.length === 0 && e.ended ? 0 : e.objectMode ? 1 : t !== t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = NM(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = true, 0));
    }
    Ce2.prototype.read = function(t) {
      Ne("read", t), t = parseInt(t, 10);
      var e = this._readableState, r = t;
      if (t !== 0 && (e.emittedReadable = false), t === 0 && e.needReadable && ((e.highWaterMark !== 0 ? e.length >= e.highWaterMark : e.length > 0) || e.ended))
        return Ne("read: emitReadable", e.length, e.ended), e.length === 0 && e.ended ? hh(this) : yo2(this), null;
      if (t = Cc(t, e), t === 0 && e.ended)
        return e.length === 0 && hh(this), null;
      var o = e.needReadable;
      Ne("need readable", o), (e.length === 0 || e.length - t < e.highWaterMark) && (o = true, Ne("length less than watermark", o)), e.ended || e.reading ? (o = false, Ne("reading or ended", o)) : o && (Ne("do read"), e.reading = true, e.sync = true, e.length === 0 && (e.needReadable = true), this._read(e.highWaterMark), e.sync = false, e.reading || (t = Cc(r, e)));
      var f2;
      return t > 0 ? f2 = Wc(t, e) : f2 = null, f2 === null ? (e.needReadable = e.length <= e.highWaterMark, t = 0) : (e.length -= t, e.awaitDrain = 0), e.length === 0 && (e.ended || (e.needReadable = true), r !== t && e.ended && hh(this)), f2 !== null && this.emit("data", f2), f2;
    };
    function DM(t, e) {
      if (Ne("onEofChunk"), !e.ended) {
        if (e.decoder) {
          var r = e.decoder.end();
          r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
        }
        e.ended = true, e.sync ? yo2(t) : (e.needReadable = false, e.emittedReadable || (e.emittedReadable = true, zc(t)));
      }
    }
    function yo2(t) {
      var e = t._readableState;
      Ne("emitReadable", e.needReadable, e.emittedReadable), e.needReadable = false, e.emittedReadable || (Ne("emitReadable", e.flowing), e.emittedReadable = true, process.nextTick(zc, t));
    }
    function zc(t) {
      var e = t._readableState;
      Ne("emitReadable_", e.destroyed, e.length, e.ended), !e.destroyed && (e.length || e.ended) && (t.emit("readable"), e.emittedReadable = false), e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark, dh(t);
    }
    function uh(t, e) {
      e.readingMore || (e.readingMore = true, process.nextTick(PM, t, e));
    }
    function PM(t, e) {
      for (;!e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && e.length === 0); ) {
        var r = e.length;
        if (Ne("maybeReadMore read 0"), t.read(0), r === e.length)
          break;
      }
      e.readingMore = false;
    }
    Ce2.prototype._read = function(t) {
      ta(this, new IM("_read()"));
    };
    Ce2.prototype.pipe = function(t, e) {
      var r = this, o = this._readableState;
      switch (o.pipesCount) {
        case 0:
          o.pipes = t;
          break;
        case 1:
          o.pipes = [o.pipes, t];
          break;
        default:
          o.pipes.push(t);
          break;
      }
      o.pipesCount += 1, Ne("pipe count=%d opts=%j", o.pipesCount, e);
      var f2 = (!e || e.end !== false) && t !== process.stdout && t !== process.stderr, p3 = f2 ? y3 : ge2;
      o.endEmitted ? process.nextTick(p3) : r.once("end", p3), t.on("unpipe", m3);
      function m3(_e, N3) {
        Ne("onunpipe"), _e === r && N3 && N3.hasUnpiped === false && (N3.hasUnpiped = true, S3());
      }
      function y3() {
        Ne("onend"), t.end();
      }
      var M2 = CM(r);
      t.on("drain", M2);
      var x4 = false;
      function S3() {
        Ne("cleanup"), t.removeListener("close", q2), t.removeListener("finish", L3), t.removeListener("drain", M2), t.removeListener("error", B3), t.removeListener("unpipe", m3), r.removeListener("end", y3), r.removeListener("end", ge2), r.removeListener("data", E4), x4 = true, o.awaitDrain && (!t._writableState || t._writableState.needDrain) && M2();
      }
      r.on("data", E4);
      function E4(_e) {
        Ne("ondata");
        var N3 = t.write(_e);
        Ne("dest.write", N3), N3 === false && ((o.pipesCount === 1 && o.pipes === t || o.pipesCount > 1 && Kc(o.pipes, t) !== -1) && !x4 && (Ne("false write response, pause", o.awaitDrain), o.awaitDrain++), r.pause());
      }
      function B3(_e) {
        Ne("onerror", _e), ge2(), t.removeListener("error", B3), Oc(t, "error") === 0 && ta(t, _e);
      }
      kM(t, "error", B3);
      function q2() {
        t.removeListener("finish", L3), ge2();
      }
      t.once("close", q2);
      function L3() {
        Ne("onfinish"), t.removeListener("close", q2), ge2();
      }
      t.once("finish", L3);
      function ge2() {
        Ne("unpipe"), r.unpipe(t);
      }
      return t.emit("pipe", r), o.flowing || (Ne("pipe resume"), r.resume()), t;
    };
    function CM(t) {
      return function() {
        var r = t._readableState;
        Ne("pipeOnDrain", r.awaitDrain), r.awaitDrain && r.awaitDrain--, r.awaitDrain === 0 && Oc(t, "data") && (r.flowing = true, dh(t));
      };
    }
    Ce2.prototype.unpipe = function(t) {
      var e = this._readableState, r = { hasUnpiped: false };
      if (e.pipesCount === 0)
        return this;
      if (e.pipesCount === 1)
        return t && t !== e.pipes ? this : (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = false, t && t.emit("unpipe", this, r), this);
      if (!t) {
        var { pipes: o, pipesCount: f2 } = e;
        e.pipes = null, e.pipesCount = 0, e.flowing = false;
        for (var p3 = 0;p3 < f2; p3++)
          o[p3].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      var m3 = Kc(e.pipes, t);
      return m3 === -1 ? this : (e.pipes.splice(m3, 1), e.pipesCount -= 1, e.pipesCount === 1 && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r), this);
    };
    Ce2.prototype.on = function(t, e) {
      var r = ra.prototype.on.call(this, t, e), o = this._readableState;
      return t === "data" ? (o.readableListening = this.listenerCount("readable") > 0, o.flowing !== false && this.resume()) : t === "readable" && !o.endEmitted && !o.readableListening && (o.readableListening = o.needReadable = true, o.flowing = false, o.emittedReadable = false, Ne("on readable", o.length, o.reading), o.length ? yo2(this) : o.reading || process.nextTick(OM, this)), r;
    };
    Ce2.prototype.addListener = Ce2.prototype.on;
    Ce2.prototype.removeListener = function(t, e) {
      var r = ra.prototype.removeListener.call(this, t, e);
      return t === "readable" && process.nextTick(Hc, this), r;
    };
    Ce2.prototype.removeAllListeners = function(t) {
      var e = ra.prototype.removeAllListeners.apply(this, arguments);
      return (t === "readable" || t === undefined) && process.nextTick(Hc, this), e;
    };
    function Hc(t) {
      var e = t._readableState;
      e.readableListening = t.listenerCount("readable") > 0, e.resumeScheduled && !e.paused ? e.flowing = true : t.listenerCount("data") > 0 && t.resume();
    }
    function OM(t) {
      Ne("readable nexttick read 0"), t.read(0);
    }
    Ce2.prototype.resume = function() {
      var t = this._readableState;
      return t.flowing || (Ne("resume"), t.flowing = !t.readableListening, FM(this, t)), t.paused = false, this;
    };
    function FM(t, e) {
      e.resumeScheduled || (e.resumeScheduled = true, process.nextTick(UM, t, e));
    }
    function UM(t, e) {
      Ne("resume", e.reading), e.reading || t.read(0), e.resumeScheduled = false, t.emit("resume"), dh(t), e.flowing && !e.reading && t.read(0);
    }
    Ce2.prototype.pause = function() {
      return Ne("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (Ne("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
    };
    function dh(t) {
      var e = t._readableState;
      for (Ne("flow", e.flowing);e.flowing && t.read() !== null; )
        ;
    }
    Ce2.prototype.wrap = function(t) {
      var e = this, r = this._readableState, o = false;
      t.on("end", function() {
        if (Ne("wrapped end"), r.decoder && !r.ended) {
          var m3 = r.decoder.end();
          m3 && m3.length && e.push(m3);
        }
        e.push(null);
      }), t.on("data", function(m3) {
        if (Ne("wrapped data"), r.decoder && (m3 = r.decoder.write(m3)), !(r.objectMode && m3 == null) && !(!r.objectMode && (!m3 || !m3.length))) {
          var y3 = e.push(m3);
          y3 || (o = true, t.pause());
        }
      });
      for (var f2 in t)
        this[f2] === undefined && typeof t[f2] == "function" && (this[f2] = function(y3) {
          return function() {
            return t[y3].apply(t, arguments);
          };
        }(f2));
      for (var p3 = 0;p3 < oh.length; p3++)
        t.on(oh[p3], this.emit.bind(this, oh[p3]));
      return this._read = function(m3) {
        Ne("wrapped _read", m3), o && (o = false, t.resume());
      }, this;
    };
    typeof Symbol == "function" && (Ce2.prototype[Symbol.asyncIterator] = function() {
      return fh === undefined && (fh = Lc()), fh(this);
    });
    Object.defineProperty(Ce2.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } });
    Object.defineProperty(Ce2.prototype, "readableBuffer", { enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } });
    Object.defineProperty(Ce2.prototype, "readableFlowing", { enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(e) {
      this._readableState && (this._readableState.flowing = e);
    } });
    Ce2._fromList = Wc;
    Object.defineProperty(Ce2.prototype, "readableLength", { enumerable: false, get: function() {
      return this._readableState.length;
    } });
    function Wc(t, e) {
      if (e.length === 0)
        return null;
      var r;
      return e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (e.decoder ? r = e.buffer.join("") : e.buffer.length === 1 ? r = e.buffer.first() : r = e.buffer.concat(e.length), e.buffer.clear()) : r = e.buffer.consume(t, e.decoder), r;
    }
    function hh(t) {
      var e = t._readableState;
      Ne("endReadable", e.endEmitted), e.endEmitted || (e.ended = true, process.nextTick(zM, e, t));
    }
    function zM(t, e) {
      if (Ne("endReadableNT", t.endEmitted, t.length), !t.endEmitted && t.length === 0 && (t.endEmitted = true, e.readable = false, e.emit("end"), t.autoDestroy)) {
        var r = e._writableState;
        (!r || r.autoDestroy && r.finished) && e.destroy();
      }
    }
    typeof Symbol == "function" && (Ce2.from = function(t, e) {
      return ah === undefined && (ah = Dc()), ah(Ce2, t, e);
    });
    function Kc(t, e) {
      for (var r = 0, o = t.length;r < o; r++)
        if (t[r] === e)
          return r;
      return -1;
    }
  });
  ch = T3((dI, Vc) => {
    Vc.exports = di;
    var wo2 = sn().codes, HM = wo2.ERR_METHOD_NOT_IMPLEMENTED, WM = wo2.ERR_MULTIPLE_CALLBACK, KM = wo2.ERR_TRANSFORM_ALREADY_TRANSFORMING, jM = wo2.ERR_TRANSFORM_WITH_LENGTH_0, Mo = hn();
    Ie2()(di, Mo);
    function ZM(t, e) {
      var r = this._transformState;
      r.transforming = false;
      var o = r.writecb;
      if (o === null)
        return this.emit("error", new WM);
      r.writechunk = null, r.writecb = null, e != null && this.push(e), o(t);
      var f2 = this._readableState;
      f2.reading = false, (f2.needReadable || f2.length < f2.highWaterMark) && this._read(f2.highWaterMark);
    }
    function di(t) {
      if (!(this instanceof di))
        return new di(t);
      Mo.call(this, t), this._transformState = { afterTransform: ZM.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t && (typeof t.transform == "function" && (this._transform = t.transform), typeof t.flush == "function" && (this._flush = t.flush)), this.on("prefinish", VM);
    }
    function VM() {
      var t = this;
      typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(e, r) {
        Zc(t, e, r);
      }) : Zc(this, null, null);
    }
    di.prototype.push = function(t, e) {
      return this._transformState.needTransform = false, Mo.prototype.push.call(this, t, e);
    };
    di.prototype._transform = function(t, e, r) {
      r(new HM("_transform()"));
    };
    di.prototype._write = function(t, e, r) {
      var o = this._transformState;
      if (o.writecb = r, o.writechunk = t, o.writeencoding = e, !o.transforming) {
        var f2 = this._readableState;
        (o.needTransform || f2.needReadable || f2.length < f2.highWaterMark) && this._read(f2.highWaterMark);
      }
    };
    di.prototype._read = function(t) {
      var e = this._transformState;
      e.writechunk !== null && !e.transforming ? (e.transforming = true, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = true;
    };
    di.prototype._destroy = function(t, e) {
      Mo.prototype._destroy.call(this, t, function(r) {
        e(r);
      });
    };
    function Zc(t, e, r) {
      if (e)
        return t.emit("error", e);
      if (r != null && t.push(r), t._writableState.length)
        throw new jM;
      if (t._transformState.transforming)
        throw new KM;
      return t.push(null);
    }
  });
  Yc = T3((cI, Gc) => {
    Gc.exports = ia;
    var $c2 = ch();
    Ie2()(ia, $c2);
    function ia(t) {
      if (!(this instanceof ia))
        return new ia(t);
      $c2.call(this, t);
    }
    ia.prototype._transform = function(t, e, r) {
      r(null, t);
    };
  });
  tp = T3((pI, ep) => {
    var ph;
    function $M(t) {
      var e = false;
      return function() {
        e || (e = true, t.apply(undefined, arguments));
      };
    }
    var Qc = sn().codes, GM = Qc.ERR_MISSING_ARGS, YM = Qc.ERR_STREAM_DESTROYED;
    function Xc(t) {
      if (t)
        throw t;
    }
    function XM(t) {
      return t.setHeader && typeof t.abort == "function";
    }
    function JM(t, e, r, o) {
      o = $M(o);
      var f2 = false;
      t.on("close", function() {
        f2 = true;
      }), ph === undefined && (ph = po()), ph(t, { readable: e, writable: r }, function(m3) {
        if (m3)
          return o(m3);
        f2 = true, o();
      });
      var p3 = false;
      return function(m3) {
        if (!f2 && !p3) {
          if (p3 = true, XM(t))
            return t.abort();
          if (typeof t.destroy == "function")
            return t.destroy();
          o(m3 || new YM("pipe"));
        }
      };
    }
    function Jc(t) {
      t();
    }
    function QM(t, e) {
      return t.pipe(e);
    }
    function e4(t) {
      return !t.length || typeof t[t.length - 1] != "function" ? Xc : t.pop();
    }
    function t4() {
      for (var t = arguments.length, e = new Array(t), r = 0;r < t; r++)
        e[r] = arguments[r];
      var o = e4(e);
      if (Array.isArray(e[0]) && (e = e[0]), e.length < 2)
        throw new GM("streams");
      var f2, p3 = e.map(function(m3, y3) {
        var M2 = y3 < e.length - 1, x4 = y3 > 0;
        return JM(m3, M2, x4, function(S3) {
          f2 || (f2 = S3), S3 && p3.forEach(Jc), !M2 && (p3.forEach(Jc), o(f2));
        });
      });
      return e.reduce(QM);
    }
    ep.exports = t4;
  });
  ip = T3((cr, rp) => {
    cr = rp.exports = eh();
    cr.Stream = cr;
    cr.Readable = cr;
    cr.Writable = X0();
    cr.Duplex = hn();
    cr.Transform = ch();
    cr.PassThrough = Yc();
    cr.finished = po();
    cr.pipeline = tp();
  });
  vh = T3((vI, fp) => {
    var _o2 = Te().Buffer, np = ip().Transform, r4 = Ie2();
    function i4(t, e) {
      if (!_o2.isBuffer(t) && typeof t != "string")
        throw new TypeError(e + " must be a string or a buffer");
    }
    function Ci(t) {
      np.call(this), this._block = _o2.allocUnsafe(t), this._blockSize = t, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = false;
    }
    r4(Ci, np);
    Ci.prototype._transform = function(t, e, r) {
      var o = null;
      try {
        this.update(t, e);
      } catch (f2) {
        o = f2;
      }
      r(o);
    };
    Ci.prototype._flush = function(t) {
      var e = null;
      try {
        this.push(this.digest());
      } catch (r) {
        e = r;
      }
      t(e);
    };
    Ci.prototype.update = function(t, e) {
      if (i4(t, "Data"), this._finalized)
        throw new Error("Digest already called");
      _o2.isBuffer(t) || (t = _o2.from(t, e));
      for (var r = this._block, o = 0;this._blockOffset + t.length - o >= this._blockSize; ) {
        for (var f2 = this._blockOffset;f2 < this._blockSize; )
          r[f2++] = t[o++];
        this._update(), this._blockOffset = 0;
      }
      for (;o < t.length; )
        r[this._blockOffset++] = t[o++];
      for (var p3 = 0, m3 = t.length * 8;m3 > 0; ++p3)
        this._length[p3] += m3, m3 = this._length[p3] / 4294967296 | 0, m3 > 0 && (this._length[p3] -= 4294967296 * m3);
      return this;
    };
    Ci.prototype._update = function() {
      throw new Error("_update is not implemented");
    };
    Ci.prototype.digest = function(t) {
      if (this._finalized)
        throw new Error("Digest already called");
      this._finalized = true;
      var e = this._digest();
      t !== undefined && (e = e.toString(t)), this._block.fill(0), this._blockOffset = 0;
      for (var r = 0;r < 4; ++r)
        this._length[r] = 0;
      return e;
    };
    Ci.prototype._digest = function() {
      throw new Error("_digest is not implemented");
    };
    fp.exports = Ci;
  });
  Eo2 = T3((bI, op) => {
    var n4 = Ie2(), ap = vh(), f4 = Te().Buffer, a4 = new Array(16);
    function xo() {
      ap.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
    }
    n4(xo, ap);
    xo.prototype._update = function() {
      for (var t = a4, e = 0;e < 16; ++e)
        t[e] = this._block.readInt32LE(e * 4);
      var r = this._a, o = this._b, f2 = this._c, p3 = this._d;
      r = jt(r, o, f2, p3, t[0], 3614090360, 7), p3 = jt(p3, r, o, f2, t[1], 3905402710, 12), f2 = jt(f2, p3, r, o, t[2], 606105819, 17), o = jt(o, f2, p3, r, t[3], 3250441966, 22), r = jt(r, o, f2, p3, t[4], 4118548399, 7), p3 = jt(p3, r, o, f2, t[5], 1200080426, 12), f2 = jt(f2, p3, r, o, t[6], 2821735955, 17), o = jt(o, f2, p3, r, t[7], 4249261313, 22), r = jt(r, o, f2, p3, t[8], 1770035416, 7), p3 = jt(p3, r, o, f2, t[9], 2336552879, 12), f2 = jt(f2, p3, r, o, t[10], 4294925233, 17), o = jt(o, f2, p3, r, t[11], 2304563134, 22), r = jt(r, o, f2, p3, t[12], 1804603682, 7), p3 = jt(p3, r, o, f2, t[13], 4254626195, 12), f2 = jt(f2, p3, r, o, t[14], 2792965006, 17), o = jt(o, f2, p3, r, t[15], 1236535329, 22), r = Zt2(r, o, f2, p3, t[1], 4129170786, 5), p3 = Zt2(p3, r, o, f2, t[6], 3225465664, 9), f2 = Zt2(f2, p3, r, o, t[11], 643717713, 14), o = Zt2(o, f2, p3, r, t[0], 3921069994, 20), r = Zt2(r, o, f2, p3, t[5], 3593408605, 5), p3 = Zt2(p3, r, o, f2, t[10], 38016083, 9), f2 = Zt2(f2, p3, r, o, t[15], 3634488961, 14), o = Zt2(o, f2, p3, r, t[4], 3889429448, 20), r = Zt2(r, o, f2, p3, t[9], 568446438, 5), p3 = Zt2(p3, r, o, f2, t[14], 3275163606, 9), f2 = Zt2(f2, p3, r, o, t[3], 4107603335, 14), o = Zt2(o, f2, p3, r, t[8], 1163531501, 20), r = Zt2(r, o, f2, p3, t[13], 2850285829, 5), p3 = Zt2(p3, r, o, f2, t[2], 4243563512, 9), f2 = Zt2(f2, p3, r, o, t[7], 1735328473, 14), o = Zt2(o, f2, p3, r, t[12], 2368359562, 20), r = Vt(r, o, f2, p3, t[5], 4294588738, 4), p3 = Vt(p3, r, o, f2, t[8], 2272392833, 11), f2 = Vt(f2, p3, r, o, t[11], 1839030562, 16), o = Vt(o, f2, p3, r, t[14], 4259657740, 23), r = Vt(r, o, f2, p3, t[1], 2763975236, 4), p3 = Vt(p3, r, o, f2, t[4], 1272893353, 11), f2 = Vt(f2, p3, r, o, t[7], 4139469664, 16), o = Vt(o, f2, p3, r, t[10], 3200236656, 23), r = Vt(r, o, f2, p3, t[13], 681279174, 4), p3 = Vt(p3, r, o, f2, t[0], 3936430074, 11), f2 = Vt(f2, p3, r, o, t[3], 3572445317, 16), o = Vt(o, f2, p3, r, t[6], 76029189, 23), r = Vt(r, o, f2, p3, t[9], 3654602809, 4), p3 = Vt(p3, r, o, f2, t[12], 3873151461, 11), f2 = Vt(f2, p3, r, o, t[15], 530742520, 16), o = Vt(o, f2, p3, r, t[2], 3299628645, 23), r = $t(r, o, f2, p3, t[0], 4096336452, 6), p3 = $t(p3, r, o, f2, t[7], 1126891415, 10), f2 = $t(f2, p3, r, o, t[14], 2878612391, 15), o = $t(o, f2, p3, r, t[5], 4237533241, 21), r = $t(r, o, f2, p3, t[12], 1700485571, 6), p3 = $t(p3, r, o, f2, t[3], 2399980690, 10), f2 = $t(f2, p3, r, o, t[10], 4293915773, 15), o = $t(o, f2, p3, r, t[1], 2240044497, 21), r = $t(r, o, f2, p3, t[8], 1873313359, 6), p3 = $t(p3, r, o, f2, t[15], 4264355552, 10), f2 = $t(f2, p3, r, o, t[6], 2734768916, 15), o = $t(o, f2, p3, r, t[13], 1309151649, 21), r = $t(r, o, f2, p3, t[4], 4149444226, 6), p3 = $t(p3, r, o, f2, t[11], 3174756917, 10), f2 = $t(f2, p3, r, o, t[2], 718787259, 15), o = $t(o, f2, p3, r, t[9], 3951481745, 21), this._a = this._a + r | 0, this._b = this._b + o | 0, this._c = this._c + f2 | 0, this._d = this._d + p3 | 0;
    };
    xo.prototype._digest = function() {
      this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
      var t = f4.allocUnsafe(16);
      return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t;
    };
    function So2(t, e) {
      return t << e | t >>> 32 - e;
    }
    function jt(t, e, r, o, f2, p3, m3) {
      return So2(t + (e & r | ~e & o) + f2 + p3 | 0, m3) + e | 0;
    }
    function Zt2(t, e, r, o, f2, p3, m3) {
      return So2(t + (e & o | r & ~o) + f2 + p3 | 0, m3) + e | 0;
    }
    function Vt(t, e, r, o, f2, p3, m3) {
      return So2(t + (e ^ r ^ o) + f2 + p3 | 0, m3) + e | 0;
    }
    function $t(t, e, r, o, f2, p3, m3) {
      return So2(t + (r ^ (e | ~o)) + f2 + p3 | 0, m3) + e | 0;
    }
    op.exports = xo;
  });
  Ro = T3((mI, pp) => {
    var bh = Ut().Buffer, o4 = Ie2(), cp = vh(), s4 = new Array(16), na = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], fa = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], aa = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], oa = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], sa = [0, 1518500249, 1859775393, 2400959708, 2840853838], ha2 = [1352829926, 1548603684, 1836072691, 2053994217, 0];
    function Ao2() {
      cp.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
    }
    o4(Ao2, cp);
    Ao2.prototype._update = function() {
      for (var t = s4, e = 0;e < 16; ++e)
        t[e] = this._block.readInt32LE(e * 4);
      for (var r = this._a | 0, o = this._b | 0, f2 = this._c | 0, p3 = this._d | 0, m3 = this._e | 0, y3 = this._a | 0, M2 = this._b | 0, x4 = this._c | 0, S3 = this._d | 0, E4 = this._e | 0, B3 = 0;B3 < 80; B3 += 1) {
        var q2, L3;
        B3 < 16 ? (q2 = sp(r, o, f2, p3, m3, t[na[B3]], sa[0], aa[B3]), L3 = dp(y3, M2, x4, S3, E4, t[fa[B3]], ha2[0], oa[B3])) : B3 < 32 ? (q2 = hp(r, o, f2, p3, m3, t[na[B3]], sa[1], aa[B3]), L3 = lp(y3, M2, x4, S3, E4, t[fa[B3]], ha2[1], oa[B3])) : B3 < 48 ? (q2 = up(r, o, f2, p3, m3, t[na[B3]], sa[2], aa[B3]), L3 = up(y3, M2, x4, S3, E4, t[fa[B3]], ha2[2], oa[B3])) : B3 < 64 ? (q2 = lp(r, o, f2, p3, m3, t[na[B3]], sa[3], aa[B3]), L3 = hp(y3, M2, x4, S3, E4, t[fa[B3]], ha2[3], oa[B3])) : (q2 = dp(r, o, f2, p3, m3, t[na[B3]], sa[4], aa[B3]), L3 = sp(y3, M2, x4, S3, E4, t[fa[B3]], ha2[4], oa[B3])), r = m3, m3 = p3, p3 = cn(f2, 10), f2 = o, o = q2, y3 = E4, E4 = S3, S3 = cn(x4, 10), x4 = M2, M2 = L3;
      }
      var ge2 = this._b + f2 + S3 | 0;
      this._b = this._c + p3 + E4 | 0, this._c = this._d + m3 + y3 | 0, this._d = this._e + r + M2 | 0, this._e = this._a + o + x4 | 0, this._a = ge2;
    };
    Ao2.prototype._digest = function() {
      this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
      var t = bh.alloc ? bh.alloc(20) : new bh(20);
      return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t.writeInt32LE(this._e, 16), t;
    };
    function cn(t, e) {
      return t << e | t >>> 32 - e;
    }
    function sp(t, e, r, o, f2, p3, m3, y3) {
      return cn(t + (e ^ r ^ o) + p3 + m3 | 0, y3) + f2 | 0;
    }
    function hp(t, e, r, o, f2, p3, m3, y3) {
      return cn(t + (e & r | ~e & o) + p3 + m3 | 0, y3) + f2 | 0;
    }
    function up(t, e, r, o, f2, p3, m3, y3) {
      return cn(t + ((e | ~r) ^ o) + p3 + m3 | 0, y3) + f2 | 0;
    }
    function lp(t, e, r, o, f2, p3, m3, y3) {
      return cn(t + (e & o | r & ~o) + p3 + m3 | 0, y3) + f2 | 0;
    }
    function dp(t, e, r, o, f2, p3, m3, y3) {
      return cn(t + (e ^ (r | ~o)) + p3 + m3 | 0, y3) + f2 | 0;
    }
    pp.exports = Ao2;
  });
  pn = T3((gI, bp) => {
    var vp = Te().Buffer;
    function Bo(t, e) {
      this._block = vp.alloc(t), this._finalSize = e, this._blockSize = t, this._len = 0;
    }
    Bo.prototype.update = function(t, e) {
      typeof t == "string" && (e = e || "utf8", t = vp.from(t, e));
      for (var r = this._block, o = this._blockSize, f2 = t.length, p3 = this._len, m3 = 0;m3 < f2; ) {
        for (var y3 = p3 % o, M2 = Math.min(f2 - m3, o - y3), x4 = 0;x4 < M2; x4++)
          r[y3 + x4] = t[m3 + x4];
        p3 += M2, m3 += M2, p3 % o === 0 && this._update(r);
      }
      return this._len += f2, this;
    };
    Bo.prototype.digest = function(t) {
      var e = this._len % this._blockSize;
      this._block[e] = 128, this._block.fill(0, e + 1), e >= this._finalSize && (this._update(this._block), this._block.fill(0));
      var r = this._len * 8;
      if (r <= 4294967295)
        this._block.writeUInt32BE(r, this._blockSize - 4);
      else {
        var o = (r & 4294967295) >>> 0, f2 = (r - o) / 4294967296;
        this._block.writeUInt32BE(f2, this._blockSize - 8), this._block.writeUInt32BE(o, this._blockSize - 4);
      }
      this._update(this._block);
      var p3 = this._hash();
      return t ? p3.toString(t) : p3;
    };
    Bo.prototype._update = function() {
      throw new Error("_update must be implemented by subclass");
    };
    bp.exports = Bo;
  });
  yp = T3((yI, gp) => {
    var h4 = Ie2(), mp = pn(), u4 = Te().Buffer, l4 = [1518500249, 1859775393, -1894007588, -899497514], d4 = new Array(80);
    function ua() {
      this.init(), this._w = d4, mp.call(this, 64, 56);
    }
    h4(ua, mp);
    ua.prototype.init = function() {
      return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
    };
    function c4(t) {
      return t << 5 | t >>> 27;
    }
    function p4(t) {
      return t << 30 | t >>> 2;
    }
    function v4(t, e, r, o) {
      return t === 0 ? e & r | ~e & o : t === 2 ? e & r | e & o | r & o : e ^ r ^ o;
    }
    ua.prototype._update = function(t) {
      for (var e = this._w, r = this._a | 0, o = this._b | 0, f2 = this._c | 0, p3 = this._d | 0, m3 = this._e | 0, y3 = 0;y3 < 16; ++y3)
        e[y3] = t.readInt32BE(y3 * 4);
      for (;y3 < 80; ++y3)
        e[y3] = e[y3 - 3] ^ e[y3 - 8] ^ e[y3 - 14] ^ e[y3 - 16];
      for (var M2 = 0;M2 < 80; ++M2) {
        var x4 = ~~(M2 / 20), S3 = c4(r) + v4(x4, o, f2, p3) + m3 + e[M2] + l4[x4] | 0;
        m3 = p3, p3 = f2, f2 = p4(o), o = r, r = S3;
      }
      this._a = r + this._a | 0, this._b = o + this._b | 0, this._c = f2 + this._c | 0, this._d = p3 + this._d | 0, this._e = m3 + this._e | 0;
    };
    ua.prototype._hash = function() {
      var t = u4.allocUnsafe(20);
      return t.writeInt32BE(this._a | 0, 0), t.writeInt32BE(this._b | 0, 4), t.writeInt32BE(this._c | 0, 8), t.writeInt32BE(this._d | 0, 12), t.writeInt32BE(this._e | 0, 16), t;
    };
    gp.exports = ua;
  });
  _p = T3((wI, Mp) => {
    var b4 = Ie2(), wp = pn(), m4 = Te().Buffer, g4 = [1518500249, 1859775393, -1894007588, -899497514], y4 = new Array(80);
    function la() {
      this.init(), this._w = y4, wp.call(this, 64, 56);
    }
    b4(la, wp);
    la.prototype.init = function() {
      return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
    };
    function w4(t) {
      return t << 1 | t >>> 31;
    }
    function M4(t) {
      return t << 5 | t >>> 27;
    }
    function _4(t) {
      return t << 30 | t >>> 2;
    }
    function x4(t, e, r, o) {
      return t === 0 ? e & r | ~e & o : t === 2 ? e & r | e & o | r & o : e ^ r ^ o;
    }
    la.prototype._update = function(t) {
      for (var e = this._w, r = this._a | 0, o = this._b | 0, f2 = this._c | 0, p3 = this._d | 0, m3 = this._e | 0, y3 = 0;y3 < 16; ++y3)
        e[y3] = t.readInt32BE(y3 * 4);
      for (;y3 < 80; ++y3)
        e[y3] = w4(e[y3 - 3] ^ e[y3 - 8] ^ e[y3 - 14] ^ e[y3 - 16]);
      for (var M2 = 0;M2 < 80; ++M2) {
        var x5 = ~~(M2 / 20), S3 = M4(r) + x4(x5, o, f2, p3) + m3 + e[M2] + g4[x5] | 0;
        m3 = p3, p3 = f2, f2 = _4(o), o = r, r = S3;
      }
      this._a = r + this._a | 0, this._b = o + this._b | 0, this._c = f2 + this._c | 0, this._d = p3 + this._d | 0, this._e = m3 + this._e | 0;
    };
    la.prototype._hash = function() {
      var t = m4.allocUnsafe(20);
      return t.writeInt32BE(this._a | 0, 0), t.writeInt32BE(this._b | 0, 4), t.writeInt32BE(this._c | 0, 8), t.writeInt32BE(this._d | 0, 12), t.writeInt32BE(this._e | 0, 16), t;
    };
    Mp.exports = la;
  });
  mh = T3((MI, Sp) => {
    var S4 = Ie2(), xp = pn(), E4 = Te().Buffer, A4 = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], R4 = new Array(64);
    function da2() {
      this.init(), this._w = R4, xp.call(this, 64, 56);
    }
    S4(da2, xp);
    da2.prototype.init = function() {
      return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
    };
    function B4(t, e, r) {
      return r ^ t & (e ^ r);
    }
    function q4(t, e, r) {
      return t & e | r & (t | e);
    }
    function I4(t) {
      return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10);
    }
    function T4(t) {
      return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7);
    }
    function k4(t) {
      return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3;
    }
    function L4(t) {
      return (t >>> 17 | t << 15) ^ (t >>> 19 | t << 13) ^ t >>> 10;
    }
    da2.prototype._update = function(t) {
      for (var e = this._w, r = this._a | 0, o = this._b | 0, f2 = this._c | 0, p3 = this._d | 0, m3 = this._e | 0, y3 = this._f | 0, M2 = this._g | 0, x4 = this._h | 0, S3 = 0;S3 < 16; ++S3)
        e[S3] = t.readInt32BE(S3 * 4);
      for (;S3 < 64; ++S3)
        e[S3] = L4(e[S3 - 2]) + e[S3 - 7] + k4(e[S3 - 15]) + e[S3 - 16] | 0;
      for (var E5 = 0;E5 < 64; ++E5) {
        var B3 = x4 + T4(m3) + B4(m3, y3, M2) + A4[E5] + e[E5] | 0, q2 = I4(r) + q4(r, o, f2) | 0;
        x4 = M2, M2 = y3, y3 = m3, m3 = p3 + B3 | 0, p3 = f2, f2 = o, o = r, r = B3 + q2 | 0;
      }
      this._a = r + this._a | 0, this._b = o + this._b | 0, this._c = f2 + this._c | 0, this._d = p3 + this._d | 0, this._e = m3 + this._e | 0, this._f = y3 + this._f | 0, this._g = M2 + this._g | 0, this._h = x4 + this._h | 0;
    };
    da2.prototype._hash = function() {
      var t = E4.allocUnsafe(32);
      return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t.writeInt32BE(this._h, 28), t;
    };
    Sp.exports = da2;
  });
  Ap = T3((_I, Ep) => {
    var N4 = Ie2(), D4 = mh(), P4 = pn(), C4 = Te().Buffer, O4 = new Array(64);
    function qo() {
      this.init(), this._w = O4, P4.call(this, 64, 56);
    }
    N4(qo, D4);
    qo.prototype.init = function() {
      return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
    };
    qo.prototype._hash = function() {
      var t = C4.allocUnsafe(28);
      return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t;
    };
    Ep.exports = qo;
  });
  gh = T3((xI, Lp) => {
    var F4 = Ie2(), kp = pn(), U4 = Te().Buffer, Rp = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], z4 = new Array(160);
    function ca() {
      this.init(), this._w = z4, kp.call(this, 128, 112);
    }
    F4(ca, kp);
    ca.prototype.init = function() {
      return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
    };
    function Bp(t, e, r) {
      return r ^ t & (e ^ r);
    }
    function qp(t, e, r) {
      return t & e | r & (t | e);
    }
    function Ip(t, e) {
      return (t >>> 28 | e << 4) ^ (e >>> 2 | t << 30) ^ (e >>> 7 | t << 25);
    }
    function Tp(t, e) {
      return (t >>> 14 | e << 18) ^ (t >>> 18 | e << 14) ^ (e >>> 9 | t << 23);
    }
    function H4(t, e) {
      return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ t >>> 7;
    }
    function W4(t, e) {
      return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ (t >>> 7 | e << 25);
    }
    function K4(t, e) {
      return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ t >>> 6;
    }
    function j4(t, e) {
      return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ (t >>> 6 | e << 26);
    }
    function Pt(t, e) {
      return t >>> 0 < e >>> 0 ? 1 : 0;
    }
    ca.prototype._update = function(t) {
      for (var e = this._w, r = this._ah | 0, o = this._bh | 0, f2 = this._ch | 0, p3 = this._dh | 0, m3 = this._eh | 0, y3 = this._fh | 0, M2 = this._gh | 0, x4 = this._hh | 0, S3 = this._al | 0, E4 = this._bl | 0, B3 = this._cl | 0, q2 = this._dl | 0, L3 = this._el | 0, ge2 = this._fl | 0, _e = this._gl | 0, N3 = this._hl | 0, we = 0;we < 32; we += 2)
        e[we] = t.readInt32BE(we * 4), e[we + 1] = t.readInt32BE(we * 4 + 4);
      for (;we < 160; we += 2) {
        var ye = e[we - 30], xe = e[we - 15 * 2 + 1], Re = H4(ye, xe), Ee = W4(xe, ye);
        ye = e[we - 2 * 2], xe = e[we - 2 * 2 + 1];
        var Ae = K4(ye, xe), P2 = j4(xe, ye), Se2 = e[we - 7 * 2], v2 = e[we - 7 * 2 + 1], i = e[we - 16 * 2], a3 = e[we - 16 * 2 + 1], h3 = Ee + v2 | 0, s2 = Re + Se2 + Pt(h3, Ee) | 0;
        h3 = h3 + P2 | 0, s2 = s2 + Ae + Pt(h3, P2) | 0, h3 = h3 + a3 | 0, s2 = s2 + i + Pt(h3, a3) | 0, e[we] = s2, e[we + 1] = h3;
      }
      for (var u3 = 0;u3 < 160; u3 += 2) {
        s2 = e[u3], h3 = e[u3 + 1];
        var c2 = qp(r, o, f2), b3 = qp(S3, E4, B3), l2 = Ip(r, S3), n = Ip(S3, r), d3 = Tp(m3, L3), w = Tp(L3, m3), g3 = Rp[u3], _3 = Rp[u3 + 1], A2 = Bp(m3, y3, M2), R2 = Bp(L3, ge2, _e), I3 = N3 + w | 0, Me = x4 + d3 + Pt(I3, N3) | 0;
        I3 = I3 + R2 | 0, Me = Me + A2 + Pt(I3, R2) | 0, I3 = I3 + _3 | 0, Me = Me + g3 + Pt(I3, _3) | 0, I3 = I3 + h3 | 0, Me = Me + s2 + Pt(I3, h3) | 0;
        var k3 = n + b3 | 0, D2 = l2 + c2 + Pt(k3, n) | 0;
        x4 = M2, N3 = _e, M2 = y3, _e = ge2, y3 = m3, ge2 = L3, L3 = q2 + I3 | 0, m3 = p3 + Me + Pt(L3, q2) | 0, p3 = f2, q2 = B3, f2 = o, B3 = E4, o = r, E4 = S3, S3 = I3 + k3 | 0, r = Me + D2 + Pt(S3, I3) | 0;
      }
      this._al = this._al + S3 | 0, this._bl = this._bl + E4 | 0, this._cl = this._cl + B3 | 0, this._dl = this._dl + q2 | 0, this._el = this._el + L3 | 0, this._fl = this._fl + ge2 | 0, this._gl = this._gl + _e | 0, this._hl = this._hl + N3 | 0, this._ah = this._ah + r + Pt(this._al, S3) | 0, this._bh = this._bh + o + Pt(this._bl, E4) | 0, this._ch = this._ch + f2 + Pt(this._cl, B3) | 0, this._dh = this._dh + p3 + Pt(this._dl, q2) | 0, this._eh = this._eh + m3 + Pt(this._el, L3) | 0, this._fh = this._fh + y3 + Pt(this._fl, ge2) | 0, this._gh = this._gh + M2 + Pt(this._gl, _e) | 0, this._hh = this._hh + x4 + Pt(this._hl, N3) | 0;
    };
    ca.prototype._hash = function() {
      var t = U4.allocUnsafe(64);
      function e(r, o, f2) {
        t.writeInt32BE(r, f2), t.writeInt32BE(o, f2 + 4);
      }
      return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), e(this._gh, this._gl, 48), e(this._hh, this._hl, 56), t;
    };
    Lp.exports = ca;
  });
  Dp = T3((SI, Np) => {
    var Z4 = Ie2(), V4 = gh(), $4 = pn(), G4 = Te().Buffer, Y4 = new Array(160);
    function Io2() {
      this.init(), this._w = Y4, $4.call(this, 128, 112);
    }
    Z4(Io2, V4);
    Io2.prototype.init = function() {
      return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
    };
    Io2.prototype._hash = function() {
      var t = G4.allocUnsafe(48);
      function e(r, o, f2) {
        t.writeInt32BE(r, f2), t.writeInt32BE(o, f2 + 4);
      }
      return e(this._ah, this._al, 0), e(this._bh, this._bl, 8), e(this._ch, this._cl, 16), e(this._dh, this._dl, 24), e(this._eh, this._el, 32), e(this._fh, this._fl, 40), t;
    };
    Np.exports = Io2;
  });
  To = T3((ci, Pp) => {
    var ci = Pp.exports = function(e) {
      e = e.toLowerCase();
      var r = ci[e];
      if (!r)
        throw new Error(e + " is not supported (we accept pull requests)");
      return new r;
    };
    ci.sha = yp();
    ci.sha1 = _p();
    ci.sha224 = Ap();
    ci.sha256 = mh();
    ci.sha384 = Dp();
    ci.sha512 = gh();
  });
  Tt = T3((EI, Cp) => {
    Cp.exports = { ArrayIsArray(t) {
      return Array.isArray(t);
    }, ArrayPrototypeIncludes(t, e) {
      return t.includes(e);
    }, ArrayPrototypeIndexOf(t, e) {
      return t.indexOf(e);
    }, ArrayPrototypeJoin(t, e) {
      return t.join(e);
    }, ArrayPrototypeMap(t, e) {
      return t.map(e);
    }, ArrayPrototypePop(t, e) {
      return t.pop(e);
    }, ArrayPrototypePush(t, e) {
      return t.push(e);
    }, ArrayPrototypeSlice(t, e, r) {
      return t.slice(e, r);
    }, Error, FunctionPrototypeCall(t, e, ...r) {
      return t.call(e, ...r);
    }, FunctionPrototypeSymbolHasInstance(t, e) {
      return Function.prototype[Symbol.hasInstance].call(t, e);
    }, MathFloor: Math.floor, Number, NumberIsInteger: Number.isInteger, NumberIsNaN: Number.isNaN, NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER, NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER, NumberParseInt: Number.parseInt, ObjectDefineProperties(t, e) {
      return Object.defineProperties(t, e);
    }, ObjectDefineProperty(t, e, r) {
      return Object.defineProperty(t, e, r);
    }, ObjectGetOwnPropertyDescriptor(t, e) {
      return Object.getOwnPropertyDescriptor(t, e);
    }, ObjectKeys(t) {
      return Object.keys(t);
    }, ObjectSetPrototypeOf(t, e) {
      return Object.setPrototypeOf(t, e);
    }, Promise, PromisePrototypeCatch(t, e) {
      return t.catch(e);
    }, PromisePrototypeThen(t, e, r) {
      return t.then(e, r);
    }, PromiseReject(t) {
      return Promise.reject(t);
    }, ReflectApply: Reflect.apply, RegExpPrototypeTest(t, e) {
      return t.test(e);
    }, SafeSet: Set, String, StringPrototypeSlice(t, e, r) {
      return t.slice(e, r);
    }, StringPrototypeToLowerCase(t) {
      return t.toLowerCase();
    }, StringPrototypeToUpperCase(t) {
      return t.toUpperCase();
    }, StringPrototypeTrim(t) {
      return t.trim();
    }, Symbol, SymbolAsyncIterator: Symbol.asyncIterator, SymbolHasInstance: Symbol.hasInstance, SymbolIterator: Symbol.iterator, TypedArrayPrototypeSet(t, e, r) {
      return t.set(e, r);
    }, Uint8Array };
  });
  Gr = T3((AI, wh) => {
    var X4 = Ut(), J4 = Object.getPrototypeOf(async function() {}).constructor, Op = globalThis.Blob || X4.Blob, Q4 = typeof Op < "u" ? function(e) {
      return e instanceof Op;
    } : function(e) {
      return false;
    }, yh = class extends Error {
      constructor(e) {
        if (!Array.isArray(e))
          throw new TypeError(`Expected input to be an Array, got ${typeof e}`);
        let r = "";
        for (let o = 0;o < e.length; o++)
          r += `    ${e[o].stack}
`;
        super(r), this.name = "AggregateError", this.errors = e;
      }
    };
    wh.exports = { AggregateError: yh, kEmptyObject: Object.freeze({}), once(t) {
      let e = false;
      return function(...r) {
        e || (e = true, t.apply(this, r));
      };
    }, createDeferredPromise: function() {
      let t, e;
      return { promise: new Promise((o, f2) => {
        t = o, e = f2;
      }), resolve: t, reject: e };
    }, promisify(t) {
      return new Promise((e, r) => {
        t((o, ...f2) => o ? r(o) : e(...f2));
      });
    }, debuglog() {
      return function() {};
    }, format(t, ...e) {
      return t.replace(/%([sdifj])/g, function(...[r, o]) {
        let f2 = e.shift();
        return o === "f" ? f2.toFixed(6) : o === "j" ? JSON.stringify(f2) : o === "s" && typeof f2 == "object" ? `${f2.constructor !== Object ? f2.constructor.name : ""} {}`.trim() : f2.toString();
      });
    }, inspect(t) {
      switch (typeof t) {
        case "string":
          if (t.includes("'"))
            if (t.includes('"')) {
              if (!t.includes("`") && !t.includes("${"))
                return `\`${t}\``;
            } else
              return `"${t}"`;
          return `'${t}'`;
        case "number":
          return isNaN(t) ? "NaN" : Object.is(t, -0) ? String(t) : t;
        case "bigint":
          return `${String(t)}n`;
        case "boolean":
        case "undefined":
          return String(t);
        case "object":
          return "{}";
      }
    }, types: { isAsyncFunction(t) {
      return t instanceof J4;
    }, isArrayBufferView(t) {
      return ArrayBuffer.isView(t);
    } }, isBlob: Q4 };
    wh.exports.promisify.custom = Symbol.for("nodejs.util.promisify.custom");
  });
  Lo = T3((RI, ko) => {
    var { AbortController: Fp, AbortSignal: e_ } = typeof self < "u" ? self : typeof window < "u" ? window : undefined;
    ko.exports = Fp;
    ko.exports.AbortSignal = e_;
    ko.exports.default = Fp;
  });
  Xt3 = T3((BI, Hp) => {
    var { format: t_, inspect: No, AggregateError: r_ } = Gr(), i_ = globalThis.AggregateError || r_, n_ = Symbol("kIsNodeError"), f_ = ["string", "function", "number", "object", "Function", "Object", "boolean", "bigint", "symbol"], a_ = /^([A-Z][a-z0-9]*)+$/, o_ = "__node_internal_", Do = {};
    function vn2(t, e) {
      if (!t)
        throw new Do.ERR_INTERNAL_ASSERTION(e);
    }
    function Up(t) {
      let e = "", r = t.length, o = t[0] === "-" ? 1 : 0;
      for (;r >= o + 4; r -= 3)
        e = `_${t.slice(r - 3, r)}${e}`;
      return `${t.slice(0, r)}${e}`;
    }
    function s_(t, e, r) {
      if (typeof e == "function")
        return vn2(e.length <= r.length, `Code: ${t}; The provided arguments length (${r.length}) does not match the required ones (${e.length}).`), e(...r);
      let o = (e.match(/%[dfijoOs]/g) || []).length;
      return vn2(o === r.length, `Code: ${t}; The provided arguments length (${r.length}) does not match the required ones (${o}).`), r.length === 0 ? e : t_(e, ...r);
    }
    function zt(t, e, r) {
      r || (r = Error);

      class o extends r {
        constructor(...p3) {
          super(s_(t, e, p3));
        }
        toString() {
          return `${this.name} [${t}]: ${this.message}`;
        }
      }
      Object.defineProperties(o.prototype, { name: { value: r.name, writable: true, enumerable: false, configurable: true }, toString: { value() {
        return `${this.name} [${t}]: ${this.message}`;
      }, writable: true, enumerable: false, configurable: true } }), o.prototype.code = t, o.prototype[n_] = true, Do[t] = o;
    }
    function zp(t) {
      let e = o_ + t.name;
      return Object.defineProperty(t, "name", { value: e }), t;
    }
    function h_(t, e) {
      if (t && e && t !== e) {
        if (Array.isArray(e.errors))
          return e.errors.push(t), e;
        let r = new i_([e, t], e.message);
        return r.code = e.code, r;
      }
      return t || e;
    }
    var Mh = class extends Error {
      constructor(e = "The operation was aborted", r = undefined) {
        if (r !== undefined && typeof r != "object")
          throw new Do.ERR_INVALID_ARG_TYPE("options", "Object", r);
        super(e, r), this.code = "ABORT_ERR", this.name = "AbortError";
      }
    };
    zt("ERR_ASSERTION", "%s", Error);
    zt("ERR_INVALID_ARG_TYPE", (t, e, r) => {
      vn2(typeof t == "string", "'name' must be a string"), Array.isArray(e) || (e = [e]);
      let o = "The ";
      t.endsWith(" argument") ? o += `${t} ` : o += `"${t}" ${t.includes(".") ? "property" : "argument"} `, o += "must be ";
      let f2 = [], p3 = [], m3 = [];
      for (let M2 of e)
        vn2(typeof M2 == "string", "All expected entries have to be of type string"), f_.includes(M2) ? f2.push(M2.toLowerCase()) : a_.test(M2) ? p3.push(M2) : (vn2(M2 !== "object", 'The value "object" should be written as "Object"'), m3.push(M2));
      if (p3.length > 0) {
        let M2 = f2.indexOf("object");
        M2 !== -1 && (f2.splice(f2, M2, 1), p3.push("Object"));
      }
      if (f2.length > 0) {
        switch (f2.length) {
          case 1:
            o += `of type ${f2[0]}`;
            break;
          case 2:
            o += `one of type ${f2[0]} or ${f2[1]}`;
            break;
          default: {
            let M2 = f2.pop();
            o += `one of type ${f2.join(", ")}, or ${M2}`;
          }
        }
        (p3.length > 0 || m3.length > 0) && (o += " or ");
      }
      if (p3.length > 0) {
        switch (p3.length) {
          case 1:
            o += `an instance of ${p3[0]}`;
            break;
          case 2:
            o += `an instance of ${p3[0]} or ${p3[1]}`;
            break;
          default: {
            let M2 = p3.pop();
            o += `an instance of ${p3.join(", ")}, or ${M2}`;
          }
        }
        m3.length > 0 && (o += " or ");
      }
      switch (m3.length) {
        case 0:
          break;
        case 1:
          m3[0].toLowerCase() !== m3[0] && (o += "an "), o += `${m3[0]}`;
          break;
        case 2:
          o += `one of ${m3[0]} or ${m3[1]}`;
          break;
        default: {
          let M2 = m3.pop();
          o += `one of ${m3.join(", ")}, or ${M2}`;
        }
      }
      if (r == null)
        o += `. Received ${r}`;
      else if (typeof r == "function" && r.name)
        o += `. Received function ${r.name}`;
      else if (typeof r == "object") {
        var y3;
        (y3 = r.constructor) !== null && y3 !== undefined && y3.name ? o += `. Received an instance of ${r.constructor.name}` : o += `. Received ${No(r, { depth: -1 })}`;
      } else {
        let M2 = No(r, { colors: false });
        M2.length > 25 && (M2 = `${M2.slice(0, 25)}...`), o += `. Received type ${typeof r} (${M2})`;
      }
      return o;
    }, TypeError);
    zt("ERR_INVALID_ARG_VALUE", (t, e, r = "is invalid") => {
      let o = No(e);
      return o.length > 128 && (o = o.slice(0, 128) + "..."), `The ${t.includes(".") ? "property" : "argument"} '${t}' ${r}. Received ${o}`;
    }, TypeError);
    zt("ERR_INVALID_RETURN_VALUE", (t, e, r) => {
      var o;
      let f2 = r != null && (o = r.constructor) !== null && o !== undefined && o.name ? `instance of ${r.constructor.name}` : `type ${typeof r}`;
      return `Expected ${t} to be returned from the "${e}" function but got ${f2}.`;
    }, TypeError);
    zt("ERR_MISSING_ARGS", (...t) => {
      vn2(t.length > 0, "At least one arg needs to be specified");
      let e, r = t.length;
      switch (t = (Array.isArray(t) ? t : [t]).map((o) => `"${o}"`).join(" or "), r) {
        case 1:
          e += `The ${t[0]} argument`;
          break;
        case 2:
          e += `The ${t[0]} and ${t[1]} arguments`;
          break;
        default:
          {
            let o = t.pop();
            e += `The ${t.join(", ")}, and ${o} arguments`;
          }
          break;
      }
      return `${e} must be specified`;
    }, TypeError);
    zt("ERR_OUT_OF_RANGE", (t, e, r) => {
      vn2(e, 'Missing "range" argument');
      let o;
      return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? o = Up(String(r)) : typeof r == "bigint" ? (o = String(r), (r > 2n ** 32n || r < -(2n ** 32n)) && (o = Up(o)), o += "n") : o = No(r), `The value of "${t}" is out of range. It must be ${e}. Received ${o}`;
    }, RangeError);
    zt("ERR_MULTIPLE_CALLBACK", "Callback called multiple times", Error);
    zt("ERR_METHOD_NOT_IMPLEMENTED", "The %s method is not implemented", Error);
    zt("ERR_STREAM_ALREADY_FINISHED", "Cannot call %s after a stream was finished", Error);
    zt("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable", Error);
    zt("ERR_STREAM_DESTROYED", "Cannot call %s after a stream was destroyed", Error);
    zt("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    zt("ERR_STREAM_PREMATURE_CLOSE", "Premature close", Error);
    zt("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF", Error);
    zt("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event", Error);
    zt("ERR_STREAM_WRITE_AFTER_END", "write after end", Error);
    zt("ERR_UNKNOWN_ENCODING", "Unknown encoding: %s", TypeError);
    Hp.exports = { AbortError: Mh, aggregateTwoErrors: zp(h_), hideStackFrames: zp, codes: Do };
  });
  pa2 = T3((qI, Yp) => {
    var { ArrayIsArray: jp, ArrayPrototypeIncludes: Zp, ArrayPrototypeJoin: Vp, ArrayPrototypeMap: u_, NumberIsInteger: xh, NumberIsNaN: l_, NumberMAX_SAFE_INTEGER: d_, NumberMIN_SAFE_INTEGER: c_, NumberParseInt: p_, ObjectPrototypeHasOwnProperty: v_, RegExpPrototypeExec: b_, String: m_, StringPrototypeToUpperCase: g_, StringPrototypeTrim: y_ } = Tt(), { hideStackFrames: Ir, codes: { ERR_SOCKET_BAD_PORT: w_, ERR_INVALID_ARG_TYPE: er, ERR_INVALID_ARG_VALUE: Po, ERR_OUT_OF_RANGE: bn, ERR_UNKNOWN_SIGNAL: Wp } } = Xt3(), { normalizeEncoding: M_ } = Gr(), { isAsyncFunction: __, isArrayBufferView: x_ } = Gr().types, Kp = {};
    function S_(t) {
      return t === (t | 0);
    }
    function E_(t) {
      return t === t >>> 0;
    }
    var A_ = /^[0-7]+$/, R_ = "must be a 32-bit unsigned integer or an octal string";
    function B_(t, e, r) {
      if (typeof t > "u" && (t = r), typeof t == "string") {
        if (b_(A_, t) === null)
          throw new Po(e, t, R_);
        t = p_(t, 8);
      }
      return $p(t, e), t;
    }
    var q_ = Ir((t, e, r = c_, o = d_) => {
      if (typeof t != "number")
        throw new er(e, "number", t);
      if (!xh(t))
        throw new bn(e, "an integer", t);
      if (t < r || t > o)
        throw new bn(e, `>= ${r} && <= ${o}`, t);
    }), I_ = Ir((t, e, r = -2147483648, o = 2147483647) => {
      if (typeof t != "number")
        throw new er(e, "number", t);
      if (!xh(t))
        throw new bn(e, "an integer", t);
      if (t < r || t > o)
        throw new bn(e, `>= ${r} && <= ${o}`, t);
    }), $p = Ir((t, e, r = false) => {
      if (typeof t != "number")
        throw new er(e, "number", t);
      if (!xh(t))
        throw new bn(e, "an integer", t);
      let o = r ? 1 : 0, f2 = 4294967295;
      if (t < o || t > f2)
        throw new bn(e, `>= ${o} && <= ${f2}`, t);
    });
    function Gp(t, e) {
      if (typeof t != "string")
        throw new er(e, "string", t);
    }
    function T_(t, e, r = undefined, o) {
      if (typeof t != "number")
        throw new er(e, "number", t);
      if (r != null && t < r || o != null && t > o || (r != null || o != null) && l_(t))
        throw new bn(e, `${r != null ? `>= ${r}` : ""}${r != null && o != null ? " && " : ""}${o != null ? `<= ${o}` : ""}`, t);
    }
    var k_ = Ir((t, e, r) => {
      if (!Zp(r, t)) {
        let o = Vp(u_(r, (p3) => typeof p3 == "string" ? `'${p3}'` : m_(p3)), ", "), f2 = "must be one of: " + o;
        throw new Po(e, t, f2);
      }
    });
    function L_(t, e) {
      if (typeof t != "boolean")
        throw new er(e, "boolean", t);
    }
    function _h(t, e, r) {
      return t == null || !v_(t, e) ? r : t[e];
    }
    var N_ = Ir((t, e, r = null) => {
      let o = _h(r, "allowArray", false), f2 = _h(r, "allowFunction", false);
      if (!_h(r, "nullable", false) && t === null || !o && jp(t) || typeof t != "object" && (!f2 || typeof t != "function"))
        throw new er(e, "Object", t);
    }), D_ = Ir((t, e, r = 0) => {
      if (!jp(t))
        throw new er(e, "Array", t);
      if (t.length < r) {
        let o = `must be longer than ${r}`;
        throw new Po(e, t, o);
      }
    });
    function P_(t, e = "signal") {
      if (Gp(t, e), Kp[t] === undefined)
        throw Kp[g_(t)] !== undefined ? new Wp(t + " (signals must use all capital letters)") : new Wp(t);
    }
    var C_ = Ir((t, e = "buffer") => {
      if (!x_(t))
        throw new er(e, ["Buffer", "TypedArray", "DataView"], t);
    });
    function O_(t, e) {
      let r = M_(e), o = t.length;
      if (r === "hex" && o % 2 !== 0)
        throw new Po("encoding", e, `is invalid for data of length ${o}`);
    }
    function F_(t, e = "Port", r = true) {
      if (typeof t != "number" && typeof t != "string" || typeof t == "string" && y_(t).length === 0 || +t !== +t >>> 0 || t > 65535 || t === 0 && !r)
        throw new w_(e, t, r);
      return t | 0;
    }
    var U_ = Ir((t, e) => {
      if (t !== undefined && (t === null || typeof t != "object" || !("aborted" in t)))
        throw new er(e, "AbortSignal", t);
    }), z_ = Ir((t, e) => {
      if (typeof t != "function")
        throw new er(e, "Function", t);
    }), H_ = Ir((t, e) => {
      if (typeof t != "function" || __(t))
        throw new er(e, "Function", t);
    }), W_ = Ir((t, e) => {
      if (t !== undefined)
        throw new er(e, "undefined", t);
    });
    function K_(t, e, r) {
      if (!Zp(r, t))
        throw new er(e, `('${Vp(r, "|")}')`, t);
    }
    Yp.exports = { isInt32: S_, isUint32: E_, parseFileMode: B_, validateArray: D_, validateBoolean: L_, validateBuffer: C_, validateEncoding: O_, validateFunction: z_, validateInt32: I_, validateInteger: q_, validateNumber: T_, validateObject: N_, validateOneOf: k_, validatePlainFunction: H_, validatePort: F_, validateSignalName: P_, validateString: Gp, validateUint32: $p, validateUndefined: W_, validateUnion: K_, validateAbortSignal: U_ };
  });
  Ah = T3((II, e1) => {
    var dt = e1.exports = {}, Yr, Xr;
    function Sh() {
      throw new Error("setTimeout has not been defined");
    }
    function Eh() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        typeof setTimeout == "function" ? Yr = setTimeout : Yr = Sh;
      } catch {
        Yr = Sh;
      }
      try {
        typeof clearTimeout == "function" ? Xr = clearTimeout : Xr = Eh;
      } catch {
        Xr = Eh;
      }
    })();
    function Xp(t) {
      if (Yr === setTimeout)
        return setTimeout(t, 0);
      if ((Yr === Sh || !Yr) && setTimeout)
        return Yr = setTimeout, setTimeout(t, 0);
      try {
        return Yr(t, 0);
      } catch {
        try {
          return Yr.call(null, t, 0);
        } catch {
          return Yr.call(this, t, 0);
        }
      }
    }
    function j_(t) {
      if (Xr === clearTimeout)
        return clearTimeout(t);
      if ((Xr === Eh || !Xr) && clearTimeout)
        return Xr = clearTimeout, clearTimeout(t);
      try {
        return Xr(t);
      } catch {
        try {
          return Xr.call(null, t);
        } catch {
          return Xr.call(this, t);
        }
      }
    }
    var pi = [], nf = false, mn, Co2 = -1;
    function Z_() {
      !nf || !mn || (nf = false, mn.length ? pi = mn.concat(pi) : Co2 = -1, pi.length && Jp());
    }
    function Jp() {
      if (!nf) {
        var t = Xp(Z_);
        nf = true;
        for (var e = pi.length;e; ) {
          for (mn = pi, pi = [];++Co2 < e; )
            mn && mn[Co2].run();
          Co2 = -1, e = pi.length;
        }
        mn = null, nf = false, j_(t);
      }
    }
    dt.nextTick = function(t) {
      var e = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var r = 1;r < arguments.length; r++)
          e[r - 1] = arguments[r];
      pi.push(new Qp(t, e)), pi.length === 1 && !nf && Xp(Jp);
    };
    function Qp(t, e) {
      this.fun = t, this.array = e;
    }
    Qp.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    dt.title = "browser";
    dt.browser = true;
    dt.env = {};
    dt.argv = [];
    dt.version = "";
    dt.versions = {};
    function vi2() {}
    dt.on = vi2;
    dt.addListener = vi2;
    dt.once = vi2;
    dt.off = vi2;
    dt.removeListener = vi2;
    dt.removeAllListeners = vi2;
    dt.emit = vi2;
    dt.prependListener = vi2;
    dt.prependOnceListener = vi2;
    dt.listeners = function(t) {
      return [];
    };
    dt.binding = function(t) {
      throw new Error("process.binding is not supported");
    };
    dt.cwd = function() {
      return "/";
    };
    dt.chdir = function(t) {
      throw new Error("process.chdir is not supported");
    };
    dt.umask = function() {
      return 0;
    };
  });
  pr = {};
  Xa(pr, { default: () => V_ });
  Oi = A0(() => {
    lt2(pr, rn(Ah()));
    V_ = rn(Ah());
  });
  Fi2 = T3((kI, d1) => {
    var { Symbol: Oo, SymbolAsyncIterator: t1, SymbolIterator: r1 } = Tt(), i1 = Oo("kDestroyed"), n1 = Oo("kIsErrored"), Rh = Oo("kIsReadable"), f1 = Oo("kIsDisturbed");
    function Fo(t, e = false) {
      var r;
      return !!(t && typeof t.pipe == "function" && typeof t.on == "function" && (!e || typeof t.pause == "function" && typeof t.resume == "function") && (!t._writableState || ((r = t._readableState) === null || r === undefined ? undefined : r.readable) !== false) && (!t._writableState || t._readableState));
    }
    function Uo(t) {
      var e;
      return !!(t && typeof t.write == "function" && typeof t.on == "function" && (!t._readableState || ((e = t._writableState) === null || e === undefined ? undefined : e.writable) !== false));
    }
    function $_(t) {
      return !!(t && typeof t.pipe == "function" && t._readableState && typeof t.on == "function" && typeof t.write == "function");
    }
    function gn(t) {
      return t && (t._readableState || t._writableState || typeof t.write == "function" && typeof t.on == "function" || typeof t.pipe == "function" && typeof t.on == "function");
    }
    function G_(t, e) {
      return t == null ? false : e === true ? typeof t[t1] == "function" : e === false ? typeof t[r1] == "function" : typeof t[t1] == "function" || typeof t[r1] == "function";
    }
    function zo(t) {
      if (!gn(t))
        return null;
      let { _writableState: e, _readableState: r } = t, o = e || r;
      return !!(t.destroyed || t[i1] || o != null && o.destroyed);
    }
    function a1(t) {
      if (!Uo(t))
        return null;
      if (t.writableEnded === true)
        return true;
      let e = t._writableState;
      return e != null && e.errored ? false : typeof e?.ended != "boolean" ? null : e.ended;
    }
    function Y_(t, e) {
      if (!Uo(t))
        return null;
      if (t.writableFinished === true)
        return true;
      let r = t._writableState;
      return r != null && r.errored ? false : typeof r?.finished != "boolean" ? null : !!(r.finished || e === false && r.ended === true && r.length === 0);
    }
    function X_(t) {
      if (!Fo(t))
        return null;
      if (t.readableEnded === true)
        return true;
      let e = t._readableState;
      return !e || e.errored ? false : typeof e?.ended != "boolean" ? null : e.ended;
    }
    function o1(t, e) {
      if (!Fo(t))
        return null;
      let r = t._readableState;
      return r != null && r.errored ? false : typeof r?.endEmitted != "boolean" ? null : !!(r.endEmitted || e === false && r.ended === true && r.length === 0);
    }
    function s1(t) {
      return t && t[Rh] != null ? t[Rh] : typeof t?.readable != "boolean" ? null : zo(t) ? false : Fo(t) && t.readable && !o1(t);
    }
    function h1(t) {
      return typeof t?.writable != "boolean" ? null : zo(t) ? false : Uo(t) && t.writable && !a1(t);
    }
    function J_(t, e) {
      return gn(t) ? zo(t) ? true : !(e?.readable !== false && s1(t) || e?.writable !== false && h1(t)) : null;
    }
    function Q_(t) {
      var e, r;
      return gn(t) ? t.writableErrored ? t.writableErrored : (e = (r = t._writableState) === null || r === undefined ? undefined : r.errored) !== null && e !== undefined ? e : null : null;
    }
    function e8(t) {
      var e, r;
      return gn(t) ? t.readableErrored ? t.readableErrored : (e = (r = t._readableState) === null || r === undefined ? undefined : r.errored) !== null && e !== undefined ? e : null : null;
    }
    function t8(t) {
      if (!gn(t))
        return null;
      if (typeof t.closed == "boolean")
        return t.closed;
      let { _writableState: e, _readableState: r } = t;
      return typeof e?.closed == "boolean" || typeof r?.closed == "boolean" ? e?.closed || r?.closed : typeof t._closed == "boolean" && u1(t) ? t._closed : null;
    }
    function u1(t) {
      return typeof t._closed == "boolean" && typeof t._defaultKeepAlive == "boolean" && typeof t._removedConnection == "boolean" && typeof t._removedContLen == "boolean";
    }
    function l1(t) {
      return typeof t._sent100 == "boolean" && u1(t);
    }
    function r8(t) {
      var e;
      return typeof t._consuming == "boolean" && typeof t._dumped == "boolean" && ((e = t.req) === null || e === undefined ? undefined : e.upgradeOrConnect) === undefined;
    }
    function i8(t) {
      if (!gn(t))
        return null;
      let { _writableState: e, _readableState: r } = t, o = e || r;
      return !o && l1(t) || !!(o && o.autoDestroy && o.emitClose && o.closed === false);
    }
    function n8(t) {
      var e;
      return !!(t && ((e = t[f1]) !== null && e !== undefined ? e : t.readableDidRead || t.readableAborted));
    }
    function f8(t) {
      var e, r, o, f2, p3, m3, y3, M2, x4, S3;
      return !!(t && ((e = (r = (o = (f2 = (p3 = (m3 = t[n1]) !== null && m3 !== undefined ? m3 : t.readableErrored) !== null && p3 !== undefined ? p3 : t.writableErrored) !== null && f2 !== undefined ? f2 : (y3 = t._readableState) === null || y3 === undefined ? undefined : y3.errorEmitted) !== null && o !== undefined ? o : (M2 = t._writableState) === null || M2 === undefined ? undefined : M2.errorEmitted) !== null && r !== undefined ? r : (x4 = t._readableState) === null || x4 === undefined ? undefined : x4.errored) !== null && e !== undefined ? e : (S3 = t._writableState) === null || S3 === undefined ? undefined : S3.errored));
    }
    d1.exports = { kDestroyed: i1, isDisturbed: n8, kIsDisturbed: f1, isErrored: f8, kIsErrored: n1, isReadable: s1, kIsReadable: Rh, isClosed: t8, isDestroyed: zo, isDuplexNodeStream: $_, isFinished: J_, isIterable: G_, isReadableNodeStream: Fo, isReadableEnded: X_, isReadableFinished: o1, isReadableErrored: e8, isNodeStream: gn, isWritable: h1, isWritableNodeStream: Uo, isWritableEnded: a1, isWritableFinished: Y_, isWritableErrored: Q_, isServerRequest: r8, isServerResponse: l1, willEmitClose: i8 };
  });
  Ui = T3((LI, qh) => {
    var ff = (Oi(), ur(pr)), { AbortError: a8, codes: o8 } = Xt3(), { ERR_INVALID_ARG_TYPE: s8, ERR_STREAM_PREMATURE_CLOSE: c1 } = o8, { kEmptyObject: p1, once: v1 } = Gr(), { validateAbortSignal: h8, validateFunction: u8, validateObject: l8 } = pa2(), { Promise: d8 } = Tt(), { isClosed: c8, isReadable: b1, isReadableNodeStream: Bh, isReadableFinished: m1, isReadableErrored: p8, isWritable: g1, isWritableNodeStream: y1, isWritableFinished: w1, isWritableErrored: v8, isNodeStream: b8, willEmitClose: m8 } = Fi2();
    function g8(t) {
      return t.setHeader && typeof t.abort == "function";
    }
    var y8 = () => {};
    function M1(t, e, r) {
      var o, f2;
      arguments.length === 2 ? (r = e, e = p1) : e == null ? e = p1 : l8(e, "options"), u8(r, "callback"), h8(e.signal, "options.signal"), r = v1(r);
      let p3 = (o = e.readable) !== null && o !== undefined ? o : Bh(t), m3 = (f2 = e.writable) !== null && f2 !== undefined ? f2 : y1(t);
      if (!b8(t))
        throw new s8("stream", "Stream", t);
      let { _writableState: y3, _readableState: M2 } = t, x4 = () => {
        t.writable || B3();
      }, S3 = m8(t) && Bh(t) === p3 && y1(t) === m3, E4 = w1(t, false), B3 = () => {
        E4 = true, t.destroyed && (S3 = false), !(S3 && (!t.readable || p3)) && (!p3 || q2) && r.call(t);
      }, q2 = m1(t, false), L3 = () => {
        q2 = true, t.destroyed && (S3 = false), !(S3 && (!t.writable || m3)) && (!m3 || E4) && r.call(t);
      }, ge2 = (xe) => {
        r.call(t, xe);
      }, _e = c8(t), N3 = () => {
        _e = true;
        let xe = v8(t) || p8(t);
        if (xe && typeof xe != "boolean")
          return r.call(t, xe);
        if (p3 && !q2 && Bh(t, true) && !m1(t, false))
          return r.call(t, new c1);
        if (m3 && !E4 && !w1(t, false))
          return r.call(t, new c1);
        r.call(t);
      }, we = () => {
        t.req.on("finish", B3);
      };
      g8(t) ? (t.on("complete", B3), S3 || t.on("abort", N3), t.req ? we() : t.on("request", we)) : m3 && !y3 && (t.on("end", x4), t.on("close", x4)), !S3 && typeof t.aborted == "boolean" && t.on("aborted", N3), t.on("end", L3), t.on("finish", B3), e.error !== false && t.on("error", ge2), t.on("close", N3), _e ? ff.nextTick(N3) : y3 != null && y3.errorEmitted || M2 != null && M2.errorEmitted ? S3 || ff.nextTick(N3) : (!p3 && (!S3 || b1(t)) && (E4 || g1(t) === false) || !m3 && (!S3 || g1(t)) && (q2 || b1(t) === false) || M2 && t.req && t.aborted) && ff.nextTick(N3);
      let ye = () => {
        r = y8, t.removeListener("aborted", N3), t.removeListener("complete", B3), t.removeListener("abort", N3), t.removeListener("request", we), t.req && t.req.removeListener("finish", B3), t.removeListener("end", x4), t.removeListener("close", x4), t.removeListener("finish", B3), t.removeListener("end", L3), t.removeListener("error", ge2), t.removeListener("close", N3);
      };
      if (e.signal && !_e) {
        let xe = () => {
          let Re = r;
          ye(), Re.call(t, new a8(undefined, { cause: e.signal.reason }));
        };
        if (e.signal.aborted)
          ff.nextTick(xe);
        else {
          let Re = r;
          r = v1((...Ee) => {
            e.signal.removeEventListener("abort", xe), Re.apply(t, Ee);
          }), e.signal.addEventListener("abort", xe);
        }
      }
      return ye;
    }
    function w8(t, e) {
      return new d8((r, o) => {
        M1(t, e, (f2) => {
          f2 ? o(f2) : r();
        });
      });
    }
    qh.exports = M1;
    qh.exports.finished = w8;
  });
  q1 = T3((NI, kh) => {
    var E1 = globalThis.AbortController || Lo().AbortController, { codes: { ERR_INVALID_ARG_TYPE: va2, ERR_MISSING_ARGS: M8, ERR_OUT_OF_RANGE: _8 }, AbortError: Jr } = Xt3(), { validateAbortSignal: af, validateInteger: x8, validateObject: of } = pa2(), S8 = Tt().Symbol("kWeak"), { finished: E8 } = Ui(), { ArrayPrototypePush: A8, MathFloor: R8, Number: B8, NumberIsNaN: q8, Promise: _1, PromiseReject: x1, PromisePrototypeThen: I8, Symbol: A1 } = Tt(), Ho = A1("kEmpty"), S1 = A1("kEof");
    function Wo(t, e) {
      if (typeof t != "function")
        throw new va2("fn", ["Function", "AsyncFunction"], t);
      e != null && of(e, "options"), e?.signal != null && af(e.signal, "options.signal");
      let r = 1;
      return e?.concurrency != null && (r = R8(e.concurrency)), x8(r, "concurrency", 1), async function* () {
        var f2, p3;
        let m3 = new E1, y3 = this, M2 = [], x4 = m3.signal, S3 = { signal: x4 }, E4 = () => m3.abort();
        e != null && (f2 = e.signal) !== null && f2 !== undefined && f2.aborted && E4(), e == null || (p3 = e.signal) === null || p3 === undefined || p3.addEventListener("abort", E4);
        let B3, q2, L3 = false;
        function ge2() {
          L3 = true;
        }
        async function _e() {
          try {
            for await (let ye of y3) {
              var N3;
              if (L3)
                return;
              if (x4.aborted)
                throw new Jr;
              try {
                ye = t(ye, S3);
              } catch (xe) {
                ye = x1(xe);
              }
              ye !== Ho && (typeof ((N3 = ye) === null || N3 === undefined ? undefined : N3.catch) == "function" && ye.catch(ge2), M2.push(ye), B3 && (B3(), B3 = null), !L3 && M2.length && M2.length >= r && await new _1((xe) => {
                q2 = xe;
              }));
            }
            M2.push(S1);
          } catch (ye) {
            let xe = x1(ye);
            I8(xe, undefined, ge2), M2.push(xe);
          } finally {
            var we;
            L3 = true, B3 && (B3(), B3 = null), e == null || (we = e.signal) === null || we === undefined || we.removeEventListener("abort", E4);
          }
        }
        _e();
        try {
          for (;; ) {
            for (;M2.length > 0; ) {
              let N3 = await M2[0];
              if (N3 === S1)
                return;
              if (x4.aborted)
                throw new Jr;
              N3 !== Ho && (yield N3), M2.shift(), q2 && (q2(), q2 = null);
            }
            await new _1((N3) => {
              B3 = N3;
            });
          }
        } finally {
          m3.abort(), L3 = true, q2 && (q2(), q2 = null);
        }
      }.call(this);
    }
    function T8(t = undefined) {
      return t != null && of(t, "options"), t?.signal != null && af(t.signal, "options.signal"), async function* () {
        let r = 0;
        for await (let f2 of this) {
          var o;
          if (t != null && (o = t.signal) !== null && o !== undefined && o.aborted)
            throw new Jr({ cause: t.signal.reason });
          yield [r++, f2];
        }
      }.call(this);
    }
    async function R1(t, e = undefined) {
      for await (let r of Th.call(this, t, e))
        return true;
      return false;
    }
    async function k8(t, e = undefined) {
      if (typeof t != "function")
        throw new va2("fn", ["Function", "AsyncFunction"], t);
      return !await R1.call(this, async (...r) => !await t(...r), e);
    }
    async function L8(t, e) {
      for await (let r of Th.call(this, t, e))
        return r;
    }
    async function N8(t, e) {
      if (typeof t != "function")
        throw new va2("fn", ["Function", "AsyncFunction"], t);
      async function r(o, f2) {
        return await t(o, f2), Ho;
      }
      for await (let o of Wo.call(this, r, e))
        ;
    }
    function Th(t, e) {
      if (typeof t != "function")
        throw new va2("fn", ["Function", "AsyncFunction"], t);
      async function r(o, f2) {
        return await t(o, f2) ? o : Ho;
      }
      return Wo.call(this, r, e);
    }
    var Ih = class extends M8 {
      constructor() {
        super("reduce"), this.message = "Reduce of an empty stream requires an initial value";
      }
    };
    async function D8(t, e, r) {
      var o;
      if (typeof t != "function")
        throw new va2("reducer", ["Function", "AsyncFunction"], t);
      r != null && of(r, "options"), r?.signal != null && af(r.signal, "options.signal");
      let f2 = arguments.length > 1;
      if (r != null && (o = r.signal) !== null && o !== undefined && o.aborted) {
        let x4 = new Jr(undefined, { cause: r.signal.reason });
        throw this.once("error", () => {}), await E8(this.destroy(x4)), x4;
      }
      let p3 = new E1, m3 = p3.signal;
      if (r != null && r.signal) {
        let x4 = { once: true, [S8]: this };
        r.signal.addEventListener("abort", () => p3.abort(), x4);
      }
      let y3 = false;
      try {
        for await (let x4 of this) {
          var M2;
          if (y3 = true, r != null && (M2 = r.signal) !== null && M2 !== undefined && M2.aborted)
            throw new Jr;
          f2 ? e = await t(e, x4, { signal: m3 }) : (e = x4, f2 = true);
        }
        if (!y3 && !f2)
          throw new Ih;
      } finally {
        p3.abort();
      }
      return e;
    }
    async function P8(t) {
      t != null && of(t, "options"), t?.signal != null && af(t.signal, "options.signal");
      let e = [];
      for await (let o of this) {
        var r;
        if (t != null && (r = t.signal) !== null && r !== undefined && r.aborted)
          throw new Jr(undefined, { cause: t.signal.reason });
        A8(e, o);
      }
      return e;
    }
    function C8(t, e) {
      let r = Wo.call(this, t, e);
      return async function* () {
        for await (let f2 of r)
          yield* f2;
      }.call(this);
    }
    function B1(t) {
      if (t = B8(t), q8(t))
        return 0;
      if (t < 0)
        throw new _8("number", ">= 0", t);
      return t;
    }
    function O8(t, e = undefined) {
      return e != null && of(e, "options"), e?.signal != null && af(e.signal, "options.signal"), t = B1(t), async function* () {
        var o;
        if (e != null && (o = e.signal) !== null && o !== undefined && o.aborted)
          throw new Jr;
        for await (let p3 of this) {
          var f2;
          if (e != null && (f2 = e.signal) !== null && f2 !== undefined && f2.aborted)
            throw new Jr;
          t-- <= 0 && (yield p3);
        }
      }.call(this);
    }
    function F8(t, e = undefined) {
      return e != null && of(e, "options"), e?.signal != null && af(e.signal, "options.signal"), t = B1(t), async function* () {
        var o;
        if (e != null && (o = e.signal) !== null && o !== undefined && o.aborted)
          throw new Jr;
        for await (let p3 of this) {
          var f2;
          if (e != null && (f2 = e.signal) !== null && f2 !== undefined && f2.aborted)
            throw new Jr;
          if (t-- > 0)
            yield p3;
          else
            return;
        }
      }.call(this);
    }
    kh.exports.streamReturningOperators = { asIndexedPairs: T8, drop: O8, filter: Th, flatMap: C8, map: Wo, take: F8 };
    kh.exports.promiseReturningOperators = { every: k8, forEach: N8, reduce: D8, toArray: P8, some: R1, find: L8 };
  });
  yn = T3((DI, C1) => {
    var zi = (Oi(), ur(pr)), { aggregateTwoErrors: U8, codes: { ERR_MULTIPLE_CALLBACK: z8 }, AbortError: H8 } = Xt3(), { Symbol: k1 } = Tt(), { kDestroyed: W8, isDestroyed: K8, isFinished: j8, isServerRequest: Z8 } = Fi2(), L1 = k1("kDestroy"), Lh = k1("kConstruct");
    function N1(t, e, r) {
      t && (t.stack, e && !e.errored && (e.errored = t), r && !r.errored && (r.errored = t));
    }
    function V8(t, e) {
      let r = this._readableState, o = this._writableState, f2 = o || r;
      return o && o.destroyed || r && r.destroyed ? (typeof e == "function" && e(), this) : (N1(t, o, r), o && (o.destroyed = true), r && (r.destroyed = true), f2.constructed ? I1(this, t, e) : this.once(L1, function(p3) {
        I1(this, U8(p3, t), e);
      }), this);
    }
    function I1(t, e, r) {
      let o = false;
      function f2(p3) {
        if (o)
          return;
        o = true;
        let { _readableState: m3, _writableState: y3 } = t;
        N1(p3, y3, m3), y3 && (y3.closed = true), m3 && (m3.closed = true), typeof r == "function" && r(p3), p3 ? zi.nextTick($8, t, p3) : zi.nextTick(D1, t);
      }
      try {
        t._destroy(e || null, f2);
      } catch (p3) {
        f2(p3);
      }
    }
    function $8(t, e) {
      Nh(t, e), D1(t);
    }
    function D1(t) {
      let { _readableState: e, _writableState: r } = t;
      r && (r.closeEmitted = true), e && (e.closeEmitted = true), (r && r.emitClose || e && e.emitClose) && t.emit("close");
    }
    function Nh(t, e) {
      let { _readableState: r, _writableState: o } = t;
      o && o.errorEmitted || r && r.errorEmitted || (o && (o.errorEmitted = true), r && (r.errorEmitted = true), t.emit("error", e));
    }
    function G8() {
      let t = this._readableState, e = this._writableState;
      t && (t.constructed = true, t.closed = false, t.closeEmitted = false, t.destroyed = false, t.errored = null, t.errorEmitted = false, t.reading = false, t.ended = t.readable === false, t.endEmitted = t.readable === false), e && (e.constructed = true, e.destroyed = false, e.closed = false, e.closeEmitted = false, e.errored = null, e.errorEmitted = false, e.finalCalled = false, e.prefinished = false, e.ended = e.writable === false, e.ending = e.writable === false, e.finished = e.writable === false);
    }
    function Dh(t, e, r) {
      let { _readableState: o, _writableState: f2 } = t;
      if (f2 && f2.destroyed || o && o.destroyed)
        return this;
      o && o.autoDestroy || f2 && f2.autoDestroy ? t.destroy(e) : e && (e.stack, f2 && !f2.errored && (f2.errored = e), o && !o.errored && (o.errored = e), r ? zi.nextTick(Nh, t, e) : Nh(t, e));
    }
    function Y8(t, e) {
      if (typeof t._construct != "function")
        return;
      let { _readableState: r, _writableState: o } = t;
      r && (r.constructed = false), o && (o.constructed = false), t.once(Lh, e), !(t.listenerCount(Lh) > 1) && zi.nextTick(X8, t);
    }
    function X8(t) {
      let e = false;
      function r(o) {
        if (e) {
          Dh(t, o ?? new z8);
          return;
        }
        e = true;
        let { _readableState: f2, _writableState: p3 } = t, m3 = p3 || f2;
        f2 && (f2.constructed = true), p3 && (p3.constructed = true), m3.destroyed ? t.emit(L1, o) : o ? Dh(t, o, true) : zi.nextTick(J8, t);
      }
      try {
        t._construct(r);
      } catch (o) {
        r(o);
      }
    }
    function J8(t) {
      t.emit(Lh);
    }
    function T1(t) {
      return t && t.setHeader && typeof t.abort == "function";
    }
    function P1(t) {
      t.emit("close");
    }
    function Q8(t, e) {
      t.emit("error", e), zi.nextTick(P1, t);
    }
    function e5(t, e) {
      !t || K8(t) || (!e && !j8(t) && (e = new H8), Z8(t) ? (t.socket = null, t.destroy(e)) : T1(t) ? t.abort() : T1(t.req) ? t.req.abort() : typeof t.destroy == "function" ? t.destroy(e) : typeof t.close == "function" ? t.close() : e ? zi.nextTick(Q8, t, e) : zi.nextTick(P1, t), t.destroyed || (t[W8] = true));
    }
    C1.exports = { construct: Y8, destroyer: e5, destroy: V8, undestroy: G8, errorOrDestroy: Dh };
  });
  Zo = T3((PI, F1) => {
    var { ArrayIsArray: t5, ObjectSetPrototypeOf: O1 } = Tt(), { EventEmitter: Ko } = ki();
    function jo(t) {
      Ko.call(this, t);
    }
    O1(jo.prototype, Ko.prototype);
    O1(jo, Ko);
    jo.prototype.pipe = function(t, e) {
      let r = this;
      function o(S3) {
        t.writable && t.write(S3) === false && r.pause && r.pause();
      }
      r.on("data", o);
      function f2() {
        r.readable && r.resume && r.resume();
      }
      t.on("drain", f2), !t._isStdio && (!e || e.end !== false) && (r.on("end", m3), r.on("close", y3));
      let p3 = false;
      function m3() {
        p3 || (p3 = true, t.end());
      }
      function y3() {
        p3 || (p3 = true, typeof t.destroy == "function" && t.destroy());
      }
      function M2(S3) {
        x4(), Ko.listenerCount(this, "error") === 0 && this.emit("error", S3);
      }
      Ph(r, "error", M2), Ph(t, "error", M2);
      function x4() {
        r.removeListener("data", o), t.removeListener("drain", f2), r.removeListener("end", m3), r.removeListener("close", y3), r.removeListener("error", M2), t.removeListener("error", M2), r.removeListener("end", x4), r.removeListener("close", x4), t.removeListener("close", x4);
      }
      return r.on("end", x4), r.on("close", x4), t.on("close", x4), t.emit("pipe", r), t;
    };
    function Ph(t, e, r) {
      if (typeof t.prependListener == "function")
        return t.prependListener(e, r);
      !t._events || !t._events[e] ? t.on(e, r) : t5(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [r, t._events[e]];
    }
    F1.exports = { Stream: jo, prependListener: Ph };
  });
  $o = T3((CI, Vo) => {
    var { AbortError: r5, codes: i5 } = Xt3(), n5 = Ui(), { ERR_INVALID_ARG_TYPE: U1 } = i5, f5 = (t, e) => {
      if (typeof t != "object" || !("aborted" in t))
        throw new U1(e, "AbortSignal", t);
    };
    function a5(t) {
      return !!(t && typeof t.pipe == "function");
    }
    Vo.exports.addAbortSignal = function(e, r) {
      if (f5(e, "signal"), !a5(r))
        throw new U1("stream", "stream.Stream", r);
      return Vo.exports.addAbortSignalNoValidate(e, r);
    };
    Vo.exports.addAbortSignalNoValidate = function(t, e) {
      if (typeof t != "object" || !("aborted" in t))
        return e;
      let r = () => {
        e.destroy(new r5(undefined, { cause: t.reason }));
      };
      return t.aborted ? r() : (t.addEventListener("abort", r), n5(e, () => t.removeEventListener("abort", r))), e;
    };
  });
  W1 = T3((FI, H1) => {
    var { StringPrototypeSlice: z1, SymbolIterator: o5, TypedArrayPrototypeSet: Go, Uint8Array: s5 } = Tt(), { Buffer: Ch } = Ut(), { inspect: h5 } = Gr();
    H1.exports = class {
      constructor() {
        this.head = null, this.tail = null, this.length = 0;
      }
      push(e) {
        let r = { data: e, next: null };
        this.length > 0 ? this.tail.next = r : this.head = r, this.tail = r, ++this.length;
      }
      unshift(e) {
        let r = { data: e, next: this.head };
        this.length === 0 && (this.tail = r), this.head = r, ++this.length;
      }
      shift() {
        if (this.length === 0)
          return;
        let e = this.head.data;
        return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, e;
      }
      clear() {
        this.head = this.tail = null, this.length = 0;
      }
      join(e) {
        if (this.length === 0)
          return "";
        let r = this.head, o = "" + r.data;
        for (;(r = r.next) !== null; )
          o += e + r.data;
        return o;
      }
      concat(e) {
        if (this.length === 0)
          return Ch.alloc(0);
        let r = Ch.allocUnsafe(e >>> 0), o = this.head, f2 = 0;
        for (;o; )
          Go(r, o.data, f2), f2 += o.data.length, o = o.next;
        return r;
      }
      consume(e, r) {
        let o = this.head.data;
        if (e < o.length) {
          let f2 = o.slice(0, e);
          return this.head.data = o.slice(e), f2;
        }
        return e === o.length ? this.shift() : r ? this._getString(e) : this._getBuffer(e);
      }
      first() {
        return this.head.data;
      }
      *[o5]() {
        for (let e = this.head;e; e = e.next)
          yield e.data;
      }
      _getString(e) {
        let r = "", o = this.head, f2 = 0;
        do {
          let p3 = o.data;
          if (e > p3.length)
            r += p3, e -= p3.length;
          else {
            e === p3.length ? (r += p3, ++f2, o.next ? this.head = o.next : this.head = this.tail = null) : (r += z1(p3, 0, e), this.head = o, o.data = z1(p3, e));
            break;
          }
          ++f2;
        } while ((o = o.next) !== null);
        return this.length -= f2, r;
      }
      _getBuffer(e) {
        let r = Ch.allocUnsafe(e), o = e, f2 = this.head, p3 = 0;
        do {
          let m3 = f2.data;
          if (e > m3.length)
            Go(r, m3, o - e), e -= m3.length;
          else {
            e === m3.length ? (Go(r, m3, o - e), ++p3, f2.next ? this.head = f2.next : this.head = this.tail = null) : (Go(r, new s5(m3.buffer, m3.byteOffset, e), o - e), this.head = f2, f2.data = m3.slice(e));
            break;
          }
          ++p3;
        } while ((f2 = f2.next) !== null);
        return this.length -= p3, r;
      }
      [Symbol.for("nodejs.util.inspect.custom")](e, r) {
        return h5(this, { ...r, depth: 0, customInspect: false });
      }
    };
  });
  Yo = T3((UI, j1) => {
    var { MathFloor: u5, NumberIsInteger: l5 } = Tt(), { ERR_INVALID_ARG_VALUE: d5 } = Xt3().codes;
    function c5(t, e, r) {
      return t.highWaterMark != null ? t.highWaterMark : e ? t[r] : null;
    }
    function K1(t) {
      return t ? 16 : 16 * 1024;
    }
    function p5(t, e, r, o) {
      let f2 = c5(e, o, r);
      if (f2 != null) {
        if (!l5(f2) || f2 < 0) {
          let p3 = o ? `options.${r}` : "options.highWaterMark";
          throw new d5(p3, f2);
        }
        return u5(f2);
      }
      return K1(t.objectMode);
    }
    j1.exports = { getHighWaterMark: p5, getDefaultHighWaterMark: K1 };
  });
  Oh = T3((zI, G1) => {
    var Z1 = (Oi(), ur(pr)), { PromisePrototypeThen: v5, SymbolAsyncIterator: V1, SymbolIterator: $1 } = Tt(), { Buffer: b5 } = Ut(), { ERR_INVALID_ARG_TYPE: m5, ERR_STREAM_NULL_VALUES: g5 } = Xt3().codes;
    function y5(t, e, r) {
      let o;
      if (typeof e == "string" || e instanceof b5)
        return new t({ objectMode: true, ...r, read() {
          this.push(e), this.push(null);
        } });
      let f2;
      if (e && e[V1])
        f2 = true, o = e[V1]();
      else if (e && e[$1])
        f2 = false, o = e[$1]();
      else
        throw new m5("iterable", ["Iterable"], e);
      let p3 = new t({ objectMode: true, highWaterMark: 1, ...r }), m3 = false;
      p3._read = function() {
        m3 || (m3 = true, M2());
      }, p3._destroy = function(x4, S3) {
        v5(y3(x4), () => Z1.nextTick(S3, x4), (E4) => Z1.nextTick(S3, E4 || x4));
      };
      async function y3(x4) {
        let S3 = x4 != null, E4 = typeof o.throw == "function";
        if (S3 && E4) {
          let { value: B3, done: q2 } = await o.throw(x4);
          if (await B3, q2)
            return;
        }
        if (typeof o.return == "function") {
          let { value: B3 } = await o.return();
          await B3;
        }
      }
      async function M2() {
        for (;; ) {
          try {
            let { value: x4, done: S3 } = f2 ? await o.next() : o.next();
            if (S3)
              p3.push(null);
            else {
              let E4 = x4 && typeof x4.then == "function" ? await x4 : x4;
              if (E4 === null)
                throw m3 = false, new g5;
              if (p3.push(E4))
                continue;
              m3 = false;
            }
          } catch (x4) {
            p3.destroy(x4);
          }
          break;
        }
      }
      return p3;
    }
    G1.exports = y5;
  });
  ba2 = T3((HI, sv) => {
    var Tr = (Oi(), ur(pr)), { ArrayPrototypeIndexOf: w5, NumberIsInteger: M5, NumberIsNaN: _5, NumberParseInt: x5, ObjectDefineProperties: J1, ObjectKeys: S5, ObjectSetPrototypeOf: Q1, Promise: E5, SafeSet: A5, SymbolAsyncIterator: R5, Symbol: B5 } = Tt();
    sv.exports = Le;
    Le.ReadableState = Kh;
    var { EventEmitter: q5 } = ki(), { Stream: Hi2, prependListener: I5 } = Zo(), { Buffer: Fh } = Ut(), { addAbortSignal: T5 } = $o(), k5 = Ui(), Pe = Gr().debuglog("stream", (t) => {
      Pe = t;
    }), L5 = W1(), hf = yn(), { getHighWaterMark: N5, getDefaultHighWaterMark: D5 } = Yo(), { aggregateTwoErrors: Y1, codes: { ERR_INVALID_ARG_TYPE: P5, ERR_METHOD_NOT_IMPLEMENTED: C5, ERR_OUT_OF_RANGE: O5, ERR_STREAM_PUSH_AFTER_EOF: F5, ERR_STREAM_UNSHIFT_AFTER_END_EVENT: U5 } } = Xt3(), { validateObject: z5 } = pa2(), wn = B5("kPaused"), { StringDecoder: ev } = lo2(), H5 = Oh();
    Q1(Le.prototype, Hi2.prototype);
    Q1(Le, Hi2);
    var Uh = () => {}, { errorOrDestroy: sf } = hf;
    function Kh(t, e, r) {
      typeof r != "boolean" && (r = e instanceof Qr()), this.objectMode = !!(t && t.objectMode), r && (this.objectMode = this.objectMode || !!(t && t.readableObjectMode)), this.highWaterMark = t ? N5(this, t, "readableHighWaterMark", r) : D5(false), this.buffer = new L5, this.length = 0, this.pipes = [], this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.constructed = true, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this[wn] = null, this.errorEmitted = false, this.emitClose = !t || t.emitClose !== false, this.autoDestroy = !t || t.autoDestroy !== false, this.destroyed = false, this.errored = null, this.closed = false, this.closeEmitted = false, this.defaultEncoding = t && t.defaultEncoding || "utf8", this.awaitDrainWriters = null, this.multiAwaitDrain = false, this.readingMore = false, this.dataEmitted = false, this.decoder = null, this.encoding = null, t && t.encoding && (this.decoder = new ev(t.encoding), this.encoding = t.encoding);
    }
    function Le(t) {
      if (!(this instanceof Le))
        return new Le(t);
      let e = this instanceof Qr();
      this._readableState = new Kh(t, this, e), t && (typeof t.read == "function" && (this._read = t.read), typeof t.destroy == "function" && (this._destroy = t.destroy), typeof t.construct == "function" && (this._construct = t.construct), t.signal && !e && T5(t.signal, this)), Hi2.call(this, t), hf.construct(this, () => {
        this._readableState.needReadable && Xo(this, this._readableState);
      });
    }
    Le.prototype.destroy = hf.destroy;
    Le.prototype._undestroy = hf.undestroy;
    Le.prototype._destroy = function(t, e) {
      e(t);
    };
    Le.prototype[q5.captureRejectionSymbol] = function(t) {
      this.destroy(t);
    };
    Le.prototype.push = function(t, e) {
      return tv(this, t, e, false);
    };
    Le.prototype.unshift = function(t, e) {
      return tv(this, t, e, true);
    };
    function tv(t, e, r, o) {
      Pe("readableAddChunk", e);
      let f2 = t._readableState, p3;
      if (f2.objectMode || (typeof e == "string" ? (r = r || f2.defaultEncoding, f2.encoding !== r && (o && f2.encoding ? e = Fh.from(e, r).toString(f2.encoding) : (e = Fh.from(e, r), r = ""))) : e instanceof Fh ? r = "" : Hi2._isUint8Array(e) ? (e = Hi2._uint8ArrayToBuffer(e), r = "") : e != null && (p3 = new P5("chunk", ["string", "Buffer", "Uint8Array"], e))), p3)
        sf(t, p3);
      else if (e === null)
        f2.reading = false, j5(t, f2);
      else if (f2.objectMode || e && e.length > 0)
        if (o)
          if (f2.endEmitted)
            sf(t, new U5);
          else {
            if (f2.destroyed || f2.errored)
              return false;
            zh(t, f2, e, true);
          }
        else if (f2.ended)
          sf(t, new F5);
        else {
          if (f2.destroyed || f2.errored)
            return false;
          f2.reading = false, f2.decoder && !r ? (e = f2.decoder.write(e), f2.objectMode || e.length !== 0 ? zh(t, f2, e, false) : Xo(t, f2)) : zh(t, f2, e, false);
        }
      else
        o || (f2.reading = false, Xo(t, f2));
      return !f2.ended && (f2.length < f2.highWaterMark || f2.length === 0);
    }
    function zh(t, e, r, o) {
      e.flowing && e.length === 0 && !e.sync && t.listenerCount("data") > 0 ? (e.multiAwaitDrain ? e.awaitDrainWriters.clear() : e.awaitDrainWriters = null, e.dataEmitted = true, t.emit("data", r)) : (e.length += e.objectMode ? 1 : r.length, o ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && Jo(t)), Xo(t, e);
    }
    Le.prototype.isPaused = function() {
      let t = this._readableState;
      return t[wn] === true || t.flowing === false;
    };
    Le.prototype.setEncoding = function(t) {
      let e = new ev(t);
      this._readableState.decoder = e, this._readableState.encoding = this._readableState.decoder.encoding;
      let r = this._readableState.buffer, o = "";
      for (let f2 of r)
        o += e.write(f2);
      return r.clear(), o !== "" && r.push(o), this._readableState.length = o.length, this;
    };
    var W5 = 1073741824;
    function K5(t) {
      if (t > W5)
        throw new O5("size", "<= 1GiB", t);
      return t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++, t;
    }
    function X1(t, e) {
      return t <= 0 || e.length === 0 && e.ended ? 0 : e.objectMode ? 1 : _5(t) ? e.flowing && e.length ? e.buffer.first().length : e.length : t <= e.length ? t : e.ended ? e.length : 0;
    }
    Le.prototype.read = function(t) {
      Pe("read", t), t === undefined ? t = NaN : M5(t) || (t = x5(t, 10));
      let e = this._readableState, r = t;
      if (t > e.highWaterMark && (e.highWaterMark = K5(t)), t !== 0 && (e.emittedReadable = false), t === 0 && e.needReadable && ((e.highWaterMark !== 0 ? e.length >= e.highWaterMark : e.length > 0) || e.ended))
        return Pe("read: emitReadable", e.length, e.ended), e.length === 0 && e.ended ? Hh(this) : Jo(this), null;
      if (t = X1(t, e), t === 0 && e.ended)
        return e.length === 0 && Hh(this), null;
      let o = e.needReadable;
      if (Pe("need readable", o), (e.length === 0 || e.length - t < e.highWaterMark) && (o = true, Pe("length less than watermark", o)), e.ended || e.reading || e.destroyed || e.errored || !e.constructed)
        o = false, Pe("reading, ended or constructing", o);
      else if (o) {
        Pe("do read"), e.reading = true, e.sync = true, e.length === 0 && (e.needReadable = true);
        try {
          this._read(e.highWaterMark);
        } catch (p3) {
          sf(this, p3);
        }
        e.sync = false, e.reading || (t = X1(r, e));
      }
      let f2;
      return t > 0 ? f2 = av(t, e) : f2 = null, f2 === null ? (e.needReadable = e.length <= e.highWaterMark, t = 0) : (e.length -= t, e.multiAwaitDrain ? e.awaitDrainWriters.clear() : e.awaitDrainWriters = null), e.length === 0 && (e.ended || (e.needReadable = true), r !== t && e.ended && Hh(this)), f2 !== null && !e.errorEmitted && !e.closeEmitted && (e.dataEmitted = true, this.emit("data", f2)), f2;
    };
    function j5(t, e) {
      if (Pe("onEofChunk"), !e.ended) {
        if (e.decoder) {
          let r = e.decoder.end();
          r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
        }
        e.ended = true, e.sync ? Jo(t) : (e.needReadable = false, e.emittedReadable = true, rv(t));
      }
    }
    function Jo(t) {
      let e = t._readableState;
      Pe("emitReadable", e.needReadable, e.emittedReadable), e.needReadable = false, e.emittedReadable || (Pe("emitReadable", e.flowing), e.emittedReadable = true, Tr.nextTick(rv, t));
    }
    function rv(t) {
      let e = t._readableState;
      Pe("emitReadable_", e.destroyed, e.length, e.ended), !e.destroyed && !e.errored && (e.length || e.ended) && (t.emit("readable"), e.emittedReadable = false), e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark, nv(t);
    }
    function Xo(t, e) {
      !e.readingMore && e.constructed && (e.readingMore = true, Tr.nextTick(Z5, t, e));
    }
    function Z5(t, e) {
      for (;!e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && e.length === 0); ) {
        let r = e.length;
        if (Pe("maybeReadMore read 0"), t.read(0), r === e.length)
          break;
      }
      e.readingMore = false;
    }
    Le.prototype._read = function(t) {
      throw new C5("_read()");
    };
    Le.prototype.pipe = function(t, e) {
      let r = this, o = this._readableState;
      o.pipes.length === 1 && (o.multiAwaitDrain || (o.multiAwaitDrain = true, o.awaitDrainWriters = new A5(o.awaitDrainWriters ? [o.awaitDrainWriters] : []))), o.pipes.push(t), Pe("pipe count=%d opts=%j", o.pipes.length, e);
      let p3 = (!e || e.end !== false) && t !== Tr.stdout && t !== Tr.stderr ? y3 : _e;
      o.endEmitted ? Tr.nextTick(p3) : r.once("end", p3), t.on("unpipe", m3);
      function m3(N3, we) {
        Pe("onunpipe"), N3 === r && we && we.hasUnpiped === false && (we.hasUnpiped = true, S3());
      }
      function y3() {
        Pe("onend"), t.end();
      }
      let M2, x4 = false;
      function S3() {
        Pe("cleanup"), t.removeListener("close", L3), t.removeListener("finish", ge2), M2 && t.removeListener("drain", M2), t.removeListener("error", q2), t.removeListener("unpipe", m3), r.removeListener("end", y3), r.removeListener("end", _e), r.removeListener("data", B3), x4 = true, M2 && o.awaitDrainWriters && (!t._writableState || t._writableState.needDrain) && M2();
      }
      function E4() {
        x4 || (o.pipes.length === 1 && o.pipes[0] === t ? (Pe("false write response, pause", 0), o.awaitDrainWriters = t, o.multiAwaitDrain = false) : o.pipes.length > 1 && o.pipes.includes(t) && (Pe("false write response, pause", o.awaitDrainWriters.size), o.awaitDrainWriters.add(t)), r.pause()), M2 || (M2 = V5(r, t), t.on("drain", M2));
      }
      r.on("data", B3);
      function B3(N3) {
        Pe("ondata");
        let we = t.write(N3);
        Pe("dest.write", we), we === false && E4();
      }
      function q2(N3) {
        if (Pe("onerror", N3), _e(), t.removeListener("error", q2), t.listenerCount("error") === 0) {
          let we = t._writableState || t._readableState;
          we && !we.errorEmitted ? sf(t, N3) : t.emit("error", N3);
        }
      }
      I5(t, "error", q2);
      function L3() {
        t.removeListener("finish", ge2), _e();
      }
      t.once("close", L3);
      function ge2() {
        Pe("onfinish"), t.removeListener("close", L3), _e();
      }
      t.once("finish", ge2);
      function _e() {
        Pe("unpipe"), r.unpipe(t);
      }
      return t.emit("pipe", r), t.writableNeedDrain === true ? o.flowing && E4() : o.flowing || (Pe("pipe resume"), r.resume()), t;
    };
    function V5(t, e) {
      return function() {
        let o = t._readableState;
        o.awaitDrainWriters === e ? (Pe("pipeOnDrain", 1), o.awaitDrainWriters = null) : o.multiAwaitDrain && (Pe("pipeOnDrain", o.awaitDrainWriters.size), o.awaitDrainWriters.delete(e)), (!o.awaitDrainWriters || o.awaitDrainWriters.size === 0) && t.listenerCount("data") && t.resume();
      };
    }
    Le.prototype.unpipe = function(t) {
      let e = this._readableState, r = { hasUnpiped: false };
      if (e.pipes.length === 0)
        return this;
      if (!t) {
        let f2 = e.pipes;
        e.pipes = [], this.pause();
        for (let p3 = 0;p3 < f2.length; p3++)
          f2[p3].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      let o = w5(e.pipes, t);
      return o === -1 ? this : (e.pipes.splice(o, 1), e.pipes.length === 0 && this.pause(), t.emit("unpipe", this, r), this);
    };
    Le.prototype.on = function(t, e) {
      let r = Hi2.prototype.on.call(this, t, e), o = this._readableState;
      return t === "data" ? (o.readableListening = this.listenerCount("readable") > 0, o.flowing !== false && this.resume()) : t === "readable" && !o.endEmitted && !o.readableListening && (o.readableListening = o.needReadable = true, o.flowing = false, o.emittedReadable = false, Pe("on readable", o.length, o.reading), o.length ? Jo(this) : o.reading || Tr.nextTick($5, this)), r;
    };
    Le.prototype.addListener = Le.prototype.on;
    Le.prototype.removeListener = function(t, e) {
      let r = Hi2.prototype.removeListener.call(this, t, e);
      return t === "readable" && Tr.nextTick(iv, this), r;
    };
    Le.prototype.off = Le.prototype.removeListener;
    Le.prototype.removeAllListeners = function(t) {
      let e = Hi2.prototype.removeAllListeners.apply(this, arguments);
      return (t === "readable" || t === undefined) && Tr.nextTick(iv, this), e;
    };
    function iv(t) {
      let e = t._readableState;
      e.readableListening = t.listenerCount("readable") > 0, e.resumeScheduled && e[wn] === false ? e.flowing = true : t.listenerCount("data") > 0 ? t.resume() : e.readableListening || (e.flowing = null);
    }
    function $5(t) {
      Pe("readable nexttick read 0"), t.read(0);
    }
    Le.prototype.resume = function() {
      let t = this._readableState;
      return t.flowing || (Pe("resume"), t.flowing = !t.readableListening, G5(this, t)), t[wn] = false, this;
    };
    function G5(t, e) {
      e.resumeScheduled || (e.resumeScheduled = true, Tr.nextTick(Y5, t, e));
    }
    function Y5(t, e) {
      Pe("resume", e.reading), e.reading || t.read(0), e.resumeScheduled = false, t.emit("resume"), nv(t), e.flowing && !e.reading && t.read(0);
    }
    Le.prototype.pause = function() {
      return Pe("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (Pe("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState[wn] = true, this;
    };
    function nv(t) {
      let e = t._readableState;
      for (Pe("flow", e.flowing);e.flowing && t.read() !== null; )
        ;
    }
    Le.prototype.wrap = function(t) {
      let e = false;
      t.on("data", (o) => {
        !this.push(o) && t.pause && (e = true, t.pause());
      }), t.on("end", () => {
        this.push(null);
      }), t.on("error", (o) => {
        sf(this, o);
      }), t.on("close", () => {
        this.destroy();
      }), t.on("destroy", () => {
        this.destroy();
      }), this._read = () => {
        e && t.resume && (e = false, t.resume());
      };
      let r = S5(t);
      for (let o = 1;o < r.length; o++) {
        let f2 = r[o];
        this[f2] === undefined && typeof t[f2] == "function" && (this[f2] = t[f2].bind(t));
      }
      return this;
    };
    Le.prototype[R5] = function() {
      return fv(this);
    };
    Le.prototype.iterator = function(t) {
      return t !== undefined && z5(t, "options"), fv(this, t);
    };
    function fv(t, e) {
      typeof t.read != "function" && (t = Le.wrap(t, { objectMode: true }));
      let r = X5(t, e);
      return r.stream = t, r;
    }
    async function* X5(t, e) {
      let r = Uh;
      function o(m3) {
        this === t ? (r(), r = Uh) : r = m3;
      }
      t.on("readable", o);
      let f2, p3 = k5(t, { writable: false }, (m3) => {
        f2 = m3 ? Y1(f2, m3) : null, r(), r = Uh;
      });
      try {
        for (;; ) {
          let m3 = t.destroyed ? null : t.read();
          if (m3 !== null)
            yield m3;
          else {
            if (f2)
              throw f2;
            if (f2 === null)
              return;
            await new E5(o);
          }
        }
      } catch (m3) {
        throw f2 = Y1(f2, m3), f2;
      } finally {
        (f2 || e?.destroyOnReturn !== false) && (f2 === undefined || t._readableState.autoDestroy) ? hf.destroyer(t, null) : (t.off("readable", o), p3());
      }
    }
    J1(Le.prototype, { readable: { __proto__: null, get() {
      let t = this._readableState;
      return !!t && t.readable !== false && !t.destroyed && !t.errorEmitted && !t.endEmitted;
    }, set(t) {
      this._readableState && (this._readableState.readable = !!t);
    } }, readableDidRead: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.dataEmitted;
    } }, readableAborted: { __proto__: null, enumerable: false, get: function() {
      return !!(this._readableState.readable !== false && (this._readableState.destroyed || this._readableState.errored) && !this._readableState.endEmitted);
    } }, readableHighWaterMark: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } }, readableBuffer: { __proto__: null, enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } }, readableFlowing: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(t) {
      this._readableState && (this._readableState.flowing = t);
    } }, readableLength: { __proto__: null, enumerable: false, get() {
      return this._readableState.length;
    } }, readableObjectMode: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.objectMode : false;
    } }, readableEncoding: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.encoding : null;
    } }, errored: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.errored : null;
    } }, closed: { __proto__: null, get() {
      return this._readableState ? this._readableState.closed : false;
    } }, destroyed: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.destroyed : false;
    }, set(t) {
      !this._readableState || (this._readableState.destroyed = t);
    } }, readableEnded: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.endEmitted : false;
    } } });
    J1(Kh.prototype, { pipesCount: { __proto__: null, get() {
      return this.pipes.length;
    } }, paused: { __proto__: null, get() {
      return this[wn] !== false;
    }, set(t) {
      this[wn] = !!t;
    } } });
    Le._fromList = av;
    function av(t, e) {
      if (e.length === 0)
        return null;
      let r;
      return e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (e.decoder ? r = e.buffer.join("") : e.buffer.length === 1 ? r = e.buffer.first() : r = e.buffer.concat(e.length), e.buffer.clear()) : r = e.buffer.consume(t, e.decoder), r;
    }
    function Hh(t) {
      let e = t._readableState;
      Pe("endReadable", e.endEmitted), e.endEmitted || (e.ended = true, Tr.nextTick(J5, e, t));
    }
    function J5(t, e) {
      if (Pe("endReadableNT", t.endEmitted, t.length), !t.errored && !t.closeEmitted && !t.endEmitted && t.length === 0) {
        if (t.endEmitted = true, e.emit("end"), e.writable && e.allowHalfOpen === false)
          Tr.nextTick(Q5, e);
        else if (t.autoDestroy) {
          let r = e._writableState;
          (!r || r.autoDestroy && (r.finished || r.writable === false)) && e.destroy();
        }
      }
    }
    function Q5(t) {
      t.writable && !t.writableEnded && !t.destroyed && t.end();
    }
    Le.from = function(t, e) {
      return H5(Le, t, e);
    };
    var Wh;
    function ov() {
      return Wh === undefined && (Wh = {}), Wh;
    }
    Le.fromWeb = function(t, e) {
      return ov().newStreamReadableFromReadableStream(t, e);
    };
    Le.toWeb = function(t, e) {
      return ov().newReadableStreamFromStreamReadable(t, e);
    };
    Le.wrap = function(t, e) {
      var r, o;
      return new Le({ objectMode: (r = (o = t.readableObjectMode) !== null && o !== undefined ? o : t.objectMode) !== null && r !== undefined ? r : true, ...e, destroy(f2, p3) {
        hf.destroyer(t, f2), p3(f2);
      } }).wrap(t);
    };
  });
  Xh = T3((WI, wv) => {
    var Mn = (Oi(), ur(pr)), { ArrayPrototypeSlice: lv, Error: ex, FunctionPrototypeSymbolHasInstance: dv, ObjectDefineProperty: cv, ObjectDefineProperties: tx, ObjectSetPrototypeOf: pv, StringPrototypeToLowerCase: rx, Symbol: ix, SymbolHasInstance: nx } = Tt();
    wv.exports = ot2;
    ot2.WritableState = ya2;
    var { EventEmitter: fx } = ki(), ma2 = Zo().Stream, { Buffer: Qo } = Ut(), rs = yn(), { addAbortSignal: ax } = $o(), { getHighWaterMark: ox, getDefaultHighWaterMark: sx } = Yo(), { ERR_INVALID_ARG_TYPE: hx, ERR_METHOD_NOT_IMPLEMENTED: ux, ERR_MULTIPLE_CALLBACK: vv, ERR_STREAM_CANNOT_PIPE: lx, ERR_STREAM_DESTROYED: ga2, ERR_STREAM_ALREADY_FINISHED: dx, ERR_STREAM_NULL_VALUES: cx, ERR_STREAM_WRITE_AFTER_END: px, ERR_UNKNOWN_ENCODING: bv } = Xt3().codes, { errorOrDestroy: uf } = rs;
    pv(ot2.prototype, ma2.prototype);
    pv(ot2, ma2);
    function Vh() {}
    var lf = ix("kOnFinished");
    function ya2(t, e, r) {
      typeof r != "boolean" && (r = e instanceof Qr()), this.objectMode = !!(t && t.objectMode), r && (this.objectMode = this.objectMode || !!(t && t.writableObjectMode)), this.highWaterMark = t ? ox(this, t, "writableHighWaterMark", r) : sx(false), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      let o = !!(t && t.decodeStrings === false);
      this.decodeStrings = !o, this.defaultEncoding = t && t.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = bx.bind(undefined, e), this.writecb = null, this.writelen = 0, this.afterWriteTickInfo = null, ts2(this), this.pendingcb = 0, this.constructed = true, this.prefinished = false, this.errorEmitted = false, this.emitClose = !t || t.emitClose !== false, this.autoDestroy = !t || t.autoDestroy !== false, this.errored = null, this.closed = false, this.closeEmitted = false, this[lf] = [];
    }
    function ts2(t) {
      t.buffered = [], t.bufferedIndex = 0, t.allBuffers = true, t.allNoop = true;
    }
    ya2.prototype.getBuffer = function() {
      return lv(this.buffered, this.bufferedIndex);
    };
    cv(ya2.prototype, "bufferedRequestCount", { __proto__: null, get() {
      return this.buffered.length - this.bufferedIndex;
    } });
    function ot2(t) {
      let e = this instanceof Qr();
      if (!e && !dv(ot2, this))
        return new ot2(t);
      this._writableState = new ya2(t, this, e), t && (typeof t.write == "function" && (this._write = t.write), typeof t.writev == "function" && (this._writev = t.writev), typeof t.destroy == "function" && (this._destroy = t.destroy), typeof t.final == "function" && (this._final = t.final), typeof t.construct == "function" && (this._construct = t.construct), t.signal && ax(t.signal, this)), ma2.call(this, t), rs.construct(this, () => {
        let r = this._writableState;
        r.writing || Gh(this, r), Yh(this, r);
      });
    }
    cv(ot2, nx, { __proto__: null, value: function(t) {
      return dv(this, t) ? true : this !== ot2 ? false : t && t._writableState instanceof ya2;
    } });
    ot2.prototype.pipe = function() {
      uf(this, new lx);
    };
    function mv(t, e, r, o) {
      let f2 = t._writableState;
      if (typeof r == "function")
        o = r, r = f2.defaultEncoding;
      else {
        if (!r)
          r = f2.defaultEncoding;
        else if (r !== "buffer" && !Qo.isEncoding(r))
          throw new bv(r);
        typeof o != "function" && (o = Vh);
      }
      if (e === null)
        throw new cx;
      if (!f2.objectMode)
        if (typeof e == "string")
          f2.decodeStrings !== false && (e = Qo.from(e, r), r = "buffer");
        else if (e instanceof Qo)
          r = "buffer";
        else if (ma2._isUint8Array(e))
          e = ma2._uint8ArrayToBuffer(e), r = "buffer";
        else
          throw new hx("chunk", ["string", "Buffer", "Uint8Array"], e);
      let p3;
      return f2.ending ? p3 = new px : f2.destroyed && (p3 = new ga2("write")), p3 ? (Mn.nextTick(o, p3), uf(t, p3, true), p3) : (f2.pendingcb++, vx(t, f2, e, r, o));
    }
    ot2.prototype.write = function(t, e, r) {
      return mv(this, t, e, r) === true;
    };
    ot2.prototype.cork = function() {
      this._writableState.corked++;
    };
    ot2.prototype.uncork = function() {
      let t = this._writableState;
      t.corked && (t.corked--, t.writing || Gh(this, t));
    };
    ot2.prototype.setDefaultEncoding = function(e) {
      if (typeof e == "string" && (e = rx(e)), !Qo.isEncoding(e))
        throw new bv(e);
      return this._writableState.defaultEncoding = e, this;
    };
    function vx(t, e, r, o, f2) {
      let p3 = e.objectMode ? 1 : r.length;
      e.length += p3;
      let m3 = e.length < e.highWaterMark;
      return m3 || (e.needDrain = true), e.writing || e.corked || e.errored || !e.constructed ? (e.buffered.push({ chunk: r, encoding: o, callback: f2 }), e.allBuffers && o !== "buffer" && (e.allBuffers = false), e.allNoop && f2 !== Vh && (e.allNoop = false)) : (e.writelen = p3, e.writecb = f2, e.writing = true, e.sync = true, t._write(r, o, e.onwrite), e.sync = false), m3 && !e.errored && !e.destroyed;
    }
    function hv(t, e, r, o, f2, p3, m3) {
      e.writelen = o, e.writecb = m3, e.writing = true, e.sync = true, e.destroyed ? e.onwrite(new ga2("write")) : r ? t._writev(f2, e.onwrite) : t._write(f2, p3, e.onwrite), e.sync = false;
    }
    function uv(t, e, r, o) {
      --e.pendingcb, o(r), $h(e), uf(t, r);
    }
    function bx(t, e) {
      let r = t._writableState, o = r.sync, f2 = r.writecb;
      if (typeof f2 != "function") {
        uf(t, new vv);
        return;
      }
      r.writing = false, r.writecb = null, r.length -= r.writelen, r.writelen = 0, e ? (e.stack, r.errored || (r.errored = e), t._readableState && !t._readableState.errored && (t._readableState.errored = e), o ? Mn.nextTick(uv, t, r, e, f2) : uv(t, r, e, f2)) : (r.buffered.length > r.bufferedIndex && Gh(t, r), o ? r.afterWriteTickInfo !== null && r.afterWriteTickInfo.cb === f2 ? r.afterWriteTickInfo.count++ : (r.afterWriteTickInfo = { count: 1, cb: f2, stream: t, state: r }, Mn.nextTick(mx, r.afterWriteTickInfo)) : gv(t, r, 1, f2));
    }
    function mx({ stream: t, state: e, count: r, cb: o }) {
      return e.afterWriteTickInfo = null, gv(t, e, r, o);
    }
    function gv(t, e, r, o) {
      for (!e.ending && !t.destroyed && e.length === 0 && e.needDrain && (e.needDrain = false, t.emit("drain"));r-- > 0; )
        e.pendingcb--, o();
      e.destroyed && $h(e), Yh(t, e);
    }
    function $h(t) {
      if (t.writing)
        return;
      for (let f2 = t.bufferedIndex;f2 < t.buffered.length; ++f2) {
        var e;
        let { chunk: p3, callback: m3 } = t.buffered[f2], y3 = t.objectMode ? 1 : p3.length;
        t.length -= y3, m3((e = t.errored) !== null && e !== undefined ? e : new ga2("write"));
      }
      let r = t[lf].splice(0);
      for (let f2 = 0;f2 < r.length; f2++) {
        var o;
        r[f2]((o = t.errored) !== null && o !== undefined ? o : new ga2("end"));
      }
      ts2(t);
    }
    function Gh(t, e) {
      if (e.corked || e.bufferProcessing || e.destroyed || !e.constructed)
        return;
      let { buffered: r, bufferedIndex: o, objectMode: f2 } = e, p3 = r.length - o;
      if (!p3)
        return;
      let m3 = o;
      if (e.bufferProcessing = true, p3 > 1 && t._writev) {
        e.pendingcb -= p3 - 1;
        let y3 = e.allNoop ? Vh : (x4) => {
          for (let S3 = m3;S3 < r.length; ++S3)
            r[S3].callback(x4);
        }, M2 = e.allNoop && m3 === 0 ? r : lv(r, m3);
        M2.allBuffers = e.allBuffers, hv(t, e, true, e.length, M2, "", y3), ts2(e);
      } else {
        do {
          let { chunk: y3, encoding: M2, callback: x4 } = r[m3];
          r[m3++] = null;
          let S3 = f2 ? 1 : y3.length;
          hv(t, e, false, S3, y3, M2, x4);
        } while (m3 < r.length && !e.writing);
        m3 === r.length ? ts2(e) : m3 > 256 ? (r.splice(0, m3), e.bufferedIndex = 0) : e.bufferedIndex = m3;
      }
      e.bufferProcessing = false;
    }
    ot2.prototype._write = function(t, e, r) {
      if (this._writev)
        this._writev([{ chunk: t, encoding: e }], r);
      else
        throw new ux("_write()");
    };
    ot2.prototype._writev = null;
    ot2.prototype.end = function(t, e, r) {
      let o = this._writableState;
      typeof t == "function" ? (r = t, t = null, e = null) : typeof e == "function" && (r = e, e = null);
      let f2;
      if (t != null) {
        let p3 = mv(this, t, e);
        p3 instanceof ex && (f2 = p3);
      }
      return o.corked && (o.corked = 1, this.uncork()), f2 || (!o.errored && !o.ending ? (o.ending = true, Yh(this, o, true), o.ended = true) : o.finished ? f2 = new dx("end") : o.destroyed && (f2 = new ga2("end"))), typeof r == "function" && (f2 || o.finished ? Mn.nextTick(r, f2) : o[lf].push(r)), this;
    };
    function es2(t) {
      return t.ending && !t.destroyed && t.constructed && t.length === 0 && !t.errored && t.buffered.length === 0 && !t.finished && !t.writing && !t.errorEmitted && !t.closeEmitted;
    }
    function gx(t, e) {
      let r = false;
      function o(f2) {
        if (r) {
          uf(t, f2 ?? vv());
          return;
        }
        if (r = true, e.pendingcb--, f2) {
          let p3 = e[lf].splice(0);
          for (let m3 = 0;m3 < p3.length; m3++)
            p3[m3](f2);
          uf(t, f2, e.sync);
        } else
          es2(e) && (e.prefinished = true, t.emit("prefinish"), e.pendingcb++, Mn.nextTick(Zh, t, e));
      }
      e.sync = true, e.pendingcb++;
      try {
        t._final(o);
      } catch (f2) {
        o(f2);
      }
      e.sync = false;
    }
    function yx(t, e) {
      !e.prefinished && !e.finalCalled && (typeof t._final == "function" && !e.destroyed ? (e.finalCalled = true, gx(t, e)) : (e.prefinished = true, t.emit("prefinish")));
    }
    function Yh(t, e, r) {
      es2(e) && (yx(t, e), e.pendingcb === 0 && (r ? (e.pendingcb++, Mn.nextTick((o, f2) => {
        es2(f2) ? Zh(o, f2) : f2.pendingcb--;
      }, t, e)) : es2(e) && (e.pendingcb++, Zh(t, e))));
    }
    function Zh(t, e) {
      e.pendingcb--, e.finished = true;
      let r = e[lf].splice(0);
      for (let o = 0;o < r.length; o++)
        r[o]();
      if (t.emit("finish"), e.autoDestroy) {
        let o = t._readableState;
        (!o || o.autoDestroy && (o.endEmitted || o.readable === false)) && t.destroy();
      }
    }
    tx(ot2.prototype, { closed: { __proto__: null, get() {
      return this._writableState ? this._writableState.closed : false;
    } }, destroyed: { __proto__: null, get() {
      return this._writableState ? this._writableState.destroyed : false;
    }, set(t) {
      this._writableState && (this._writableState.destroyed = t);
    } }, writable: { __proto__: null, get() {
      let t = this._writableState;
      return !!t && t.writable !== false && !t.destroyed && !t.errored && !t.ending && !t.ended;
    }, set(t) {
      this._writableState && (this._writableState.writable = !!t);
    } }, writableFinished: { __proto__: null, get() {
      return this._writableState ? this._writableState.finished : false;
    } }, writableObjectMode: { __proto__: null, get() {
      return this._writableState ? this._writableState.objectMode : false;
    } }, writableBuffer: { __proto__: null, get() {
      return this._writableState && this._writableState.getBuffer();
    } }, writableEnded: { __proto__: null, get() {
      return this._writableState ? this._writableState.ending : false;
    } }, writableNeedDrain: { __proto__: null, get() {
      let t = this._writableState;
      return t ? !t.destroyed && !t.ending && t.needDrain : false;
    } }, writableHighWaterMark: { __proto__: null, get() {
      return this._writableState && this._writableState.highWaterMark;
    } }, writableCorked: { __proto__: null, get() {
      return this._writableState ? this._writableState.corked : 0;
    } }, writableLength: { __proto__: null, get() {
      return this._writableState && this._writableState.length;
    } }, errored: { __proto__: null, enumerable: false, get() {
      return this._writableState ? this._writableState.errored : null;
    } }, writableAborted: { __proto__: null, enumerable: false, get: function() {
      return !!(this._writableState.writable !== false && (this._writableState.destroyed || this._writableState.errored) && !this._writableState.finished);
    } } });
    var wx = rs.destroy;
    ot2.prototype.destroy = function(t, e) {
      let r = this._writableState;
      return !r.destroyed && (r.bufferedIndex < r.buffered.length || r[lf].length) && Mn.nextTick($h, r), wx.call(this, t, e), this;
    };
    ot2.prototype._undestroy = rs.undestroy;
    ot2.prototype._destroy = function(t, e) {
      e(t);
    };
    ot2.prototype[fx.captureRejectionSymbol] = function(t) {
      this.destroy(t);
    };
    var jh;
    function yv() {
      return jh === undefined && (jh = {}), jh;
    }
    ot2.fromWeb = function(t, e) {
      return yv().newStreamWritableFromWritableStream(t, e);
    };
    ot2.toWeb = function(t) {
      return yv().newWritableStreamFromStreamWritable(t);
    };
  });
  kv = T3((KI, Tv) => {
    var Jh = (Oi(), ur(pr)), Mx = Ut(), { isReadable: _x, isWritable: xx, isIterable: Mv, isNodeStream: Sx, isReadableNodeStream: _v, isWritableNodeStream: xv, isDuplexNodeStream: Ex } = Fi2(), Sv = Ui(), { AbortError: Iv, codes: { ERR_INVALID_ARG_TYPE: Ax, ERR_INVALID_RETURN_VALUE: Ev } } = Xt3(), { destroyer: df } = yn(), Rx = Qr(), Bx = ba2(), { createDeferredPromise: Av } = Gr(), Rv = Oh(), Bv = globalThis.Blob || Mx.Blob, qx = typeof Bv < "u" ? function(e) {
      return e instanceof Bv;
    } : function(e) {
      return false;
    }, Ix = globalThis.AbortController || Lo().AbortController, { FunctionPrototypeCall: qv } = Tt(), _n = class extends Rx {
      constructor(e) {
        super(e), e?.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), e?.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true);
      }
    };
    Tv.exports = function t(e, r) {
      if (Ex(e))
        return e;
      if (_v(e))
        return is3({ readable: e });
      if (xv(e))
        return is3({ writable: e });
      if (Sx(e))
        return is3({ writable: false, readable: false });
      if (typeof e == "function") {
        let { value: f2, write: p3, final: m3, destroy: y3 } = Tx(e);
        if (Mv(f2))
          return Rv(_n, f2, { objectMode: true, write: p3, final: m3, destroy: y3 });
        let M2 = f2?.then;
        if (typeof M2 == "function") {
          let x4, S3 = qv(M2, f2, (E4) => {
            if (E4 != null)
              throw new Ev("nully", "body", E4);
          }, (E4) => {
            df(x4, E4);
          });
          return x4 = new _n({ objectMode: true, readable: false, write: p3, final(E4) {
            m3(async () => {
              try {
                await S3, Jh.nextTick(E4, null);
              } catch (B3) {
                Jh.nextTick(E4, B3);
              }
            });
          }, destroy: y3 });
        }
        throw new Ev("Iterable, AsyncIterable or AsyncFunction", r, f2);
      }
      if (qx(e))
        return t(e.arrayBuffer());
      if (Mv(e))
        return Rv(_n, e, { objectMode: true, writable: false });
      if (typeof e?.writable == "object" || typeof e?.readable == "object") {
        let f2 = e != null && e.readable ? _v(e?.readable) ? e?.readable : t(e.readable) : undefined, p3 = e != null && e.writable ? xv(e?.writable) ? e?.writable : t(e.writable) : undefined;
        return is3({ readable: f2, writable: p3 });
      }
      let o = e?.then;
      if (typeof o == "function") {
        let f2;
        return qv(o, e, (p3) => {
          p3 != null && f2.push(p3), f2.push(null);
        }, (p3) => {
          df(f2, p3);
        }), f2 = new _n({ objectMode: true, writable: false, read() {} });
      }
      throw new Ax(r, ["Blob", "ReadableStream", "WritableStream", "Stream", "Iterable", "AsyncIterable", "Function", "{ readable, writable } pair", "Promise"], e);
    };
    function Tx(t) {
      let { promise: e, resolve: r } = Av(), o = new Ix, f2 = o.signal;
      return { value: t(async function* () {
        for (;; ) {
          let m3 = e;
          e = null;
          let { chunk: y3, done: M2, cb: x4 } = await m3;
          if (Jh.nextTick(x4), M2)
            return;
          if (f2.aborted)
            throw new Iv(undefined, { cause: f2.reason });
          ({ promise: e, resolve: r } = Av()), yield y3;
        }
      }(), { signal: f2 }), write(m3, y3, M2) {
        let x4 = r;
        r = null, x4({ chunk: m3, done: false, cb: M2 });
      }, final(m3) {
        let y3 = r;
        r = null, y3({ done: true, cb: m3 });
      }, destroy(m3, y3) {
        o.abort(), y3(m3);
      } };
    }
    function is3(t) {
      let e = t.readable && typeof t.readable.read != "function" ? Bx.wrap(t.readable) : t.readable, r = t.writable, o = !!_x(e), f2 = !!xx(r), p3, m3, y3, M2, x4;
      function S3(E4) {
        let B3 = M2;
        M2 = null, B3 ? B3(E4) : E4 ? x4.destroy(E4) : !o && !f2 && x4.destroy();
      }
      return x4 = new _n({ readableObjectMode: !!(e != null && e.readableObjectMode), writableObjectMode: !!(r != null && r.writableObjectMode), readable: o, writable: f2 }), f2 && (Sv(r, (E4) => {
        f2 = false, E4 && df(e, E4), S3(E4);
      }), x4._write = function(E4, B3, q2) {
        r.write(E4, B3) ? q2() : p3 = q2;
      }, x4._final = function(E4) {
        r.end(), m3 = E4;
      }, r.on("drain", function() {
        if (p3) {
          let E4 = p3;
          p3 = null, E4();
        }
      }), r.on("finish", function() {
        if (m3) {
          let E4 = m3;
          m3 = null, E4();
        }
      })), o && (Sv(e, (E4) => {
        o = false, E4 && df(e, E4), S3(E4);
      }), e.on("readable", function() {
        if (y3) {
          let E4 = y3;
          y3 = null, E4();
        }
      }), e.on("end", function() {
        x4.push(null);
      }), x4._read = function() {
        for (;; ) {
          let E4 = e.read();
          if (E4 === null) {
            y3 = x4._read;
            return;
          }
          if (!x4.push(E4))
            return;
        }
      }), x4._destroy = function(E4, B3) {
        !E4 && M2 !== null && (E4 = new Iv), y3 = null, p3 = null, m3 = null, M2 === null ? B3(E4) : (M2 = B3, df(r, E4), df(e, E4));
      }, x4;
    }
  });
  Qr = T3((jI, Dv) => {
    var { ObjectDefineProperties: kx, ObjectGetOwnPropertyDescriptor: bi2, ObjectKeys: Lx, ObjectSetPrototypeOf: Lv } = Tt();
    Dv.exports = kr;
    var tu = ba2(), vr2 = Xh();
    Lv(kr.prototype, tu.prototype);
    Lv(kr, tu);
    {
      let t = Lx(vr2.prototype);
      for (let e = 0;e < t.length; e++) {
        let r = t[e];
        kr.prototype[r] || (kr.prototype[r] = vr2.prototype[r]);
      }
    }
    function kr(t) {
      if (!(this instanceof kr))
        return new kr(t);
      tu.call(this, t), vr2.call(this, t), t ? (this.allowHalfOpen = t.allowHalfOpen !== false, t.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), t.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true)) : this.allowHalfOpen = true;
    }
    kx(kr.prototype, { writable: { __proto__: null, ...bi2(vr2.prototype, "writable") }, writableHighWaterMark: { __proto__: null, ...bi2(vr2.prototype, "writableHighWaterMark") }, writableObjectMode: { __proto__: null, ...bi2(vr2.prototype, "writableObjectMode") }, writableBuffer: { __proto__: null, ...bi2(vr2.prototype, "writableBuffer") }, writableLength: { __proto__: null, ...bi2(vr2.prototype, "writableLength") }, writableFinished: { __proto__: null, ...bi2(vr2.prototype, "writableFinished") }, writableCorked: { __proto__: null, ...bi2(vr2.prototype, "writableCorked") }, writableEnded: { __proto__: null, ...bi2(vr2.prototype, "writableEnded") }, writableNeedDrain: { __proto__: null, ...bi2(vr2.prototype, "writableNeedDrain") }, destroyed: { __proto__: null, get() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set(t) {
      this._readableState && this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t);
    } } });
    var Qh;
    function Nv() {
      return Qh === undefined && (Qh = {}), Qh;
    }
    kr.fromWeb = function(t, e) {
      return Nv().newStreamDuplexFromReadableWritablePair(t, e);
    };
    kr.toWeb = function(t) {
      return Nv().newReadableWritablePairFromDuplex(t);
    };
    var eu;
    kr.from = function(t) {
      return eu || (eu = kv()), eu(t, "body");
    };
  });
  nu = T3((ZI, Cv) => {
    var { ObjectSetPrototypeOf: Pv, Symbol: Nx } = Tt();
    Cv.exports = mi2;
    var { ERR_METHOD_NOT_IMPLEMENTED: Dx } = Xt3().codes, iu = Qr(), { getHighWaterMark: Px } = Yo();
    Pv(mi2.prototype, iu.prototype);
    Pv(mi2, iu);
    var wa2 = Nx("kCallback");
    function mi2(t) {
      if (!(this instanceof mi2))
        return new mi2(t);
      let e = t ? Px(this, t, "readableHighWaterMark", true) : null;
      e === 0 && (t = { ...t, highWaterMark: null, readableHighWaterMark: e, writableHighWaterMark: t.writableHighWaterMark || 0 }), iu.call(this, t), this._readableState.sync = false, this[wa2] = null, t && (typeof t.transform == "function" && (this._transform = t.transform), typeof t.flush == "function" && (this._flush = t.flush)), this.on("prefinish", Cx);
    }
    function ru(t) {
      typeof this._flush == "function" && !this.destroyed ? this._flush((e, r) => {
        if (e) {
          t ? t(e) : this.destroy(e);
          return;
        }
        r != null && this.push(r), this.push(null), t && t();
      }) : (this.push(null), t && t());
    }
    function Cx() {
      this._final !== ru && ru.call(this);
    }
    mi2.prototype._final = ru;
    mi2.prototype._transform = function(t, e, r) {
      throw new Dx("_transform()");
    };
    mi2.prototype._write = function(t, e, r) {
      let o = this._readableState, f2 = this._writableState, p3 = o.length;
      this._transform(t, e, (m3, y3) => {
        if (m3) {
          r(m3);
          return;
        }
        y3 != null && this.push(y3), f2.ended || p3 === o.length || o.length < o.highWaterMark ? r() : this[wa2] = r;
      });
    };
    mi2.prototype._read = function() {
      if (this[wa2]) {
        let t = this[wa2];
        this[wa2] = null, t();
      }
    };
  });
  au = T3((VI, Fv) => {
    var { ObjectSetPrototypeOf: Ov } = Tt();
    Fv.exports = cf;
    var fu = nu();
    Ov(cf.prototype, fu.prototype);
    Ov(cf, fu);
    function cf(t) {
      if (!(this instanceof cf))
        return new cf(t);
      fu.call(this, t);
    }
    cf.prototype._transform = function(t, e, r) {
      r(null, t);
    };
  });
  as2 = T3(($I, Zv) => {
    var ns = (Oi(), ur(pr)), { ArrayIsArray: Ox, Promise: Fx, SymbolAsyncIterator: Ux } = Tt(), fs = Ui(), { once: zx } = Gr(), Hx = yn(), Uv = Qr(), { aggregateTwoErrors: Wx, codes: { ERR_INVALID_ARG_TYPE: Kv, ERR_INVALID_RETURN_VALUE: ou, ERR_MISSING_ARGS: Kx, ERR_STREAM_DESTROYED: jx, ERR_STREAM_PREMATURE_CLOSE: Zx }, AbortError: Vx } = Xt3(), { validateFunction: $x, validateAbortSignal: Gx } = pa2(), { isIterable: pf, isReadable: su, isReadableNodeStream: lu, isNodeStream: zv } = Fi2(), Yx = globalThis.AbortController || Lo().AbortController, hu, uu;
    function Hv(t, e, r) {
      let o = false;
      t.on("close", () => {
        o = true;
      });
      let f2 = fs(t, { readable: e, writable: r }, (p3) => {
        o = !p3;
      });
      return { destroy: (p3) => {
        o || (o = true, Hx.destroyer(t, p3 || new jx("pipe")));
      }, cleanup: f2 };
    }
    function Xx(t) {
      return $x(t[t.length - 1], "streams[stream.length - 1]"), t.pop();
    }
    function Jx(t) {
      if (pf(t))
        return t;
      if (lu(t))
        return Qx(t);
      throw new Kv("val", ["Readable", "Iterable", "AsyncIterable"], t);
    }
    async function* Qx(t) {
      uu || (uu = ba2()), yield* uu.prototype[Ux].call(t);
    }
    async function Wv(t, e, r, { end: o }) {
      let f2, p3 = null, m3 = (x4) => {
        if (x4 && (f2 = x4), p3) {
          let S3 = p3;
          p3 = null, S3();
        }
      }, y3 = () => new Fx((x4, S3) => {
        f2 ? S3(f2) : p3 = () => {
          f2 ? S3(f2) : x4();
        };
      });
      e.on("drain", m3);
      let M2 = fs(e, { readable: false }, m3);
      try {
        e.writableNeedDrain && await y3();
        for await (let x4 of t)
          e.write(x4) || await y3();
        o && e.end(), await y3(), r();
      } catch (x4) {
        r(f2 !== x4 ? Wx(f2, x4) : x4);
      } finally {
        M2(), e.off("drain", m3);
      }
    }
    function e7(...t) {
      return jv(t, zx(Xx(t)));
    }
    function jv(t, e, r) {
      if (t.length === 1 && Ox(t[0]) && (t = t[0]), t.length < 2)
        throw new Kx("streams");
      let o = new Yx, f2 = o.signal, p3 = r?.signal, m3 = [];
      Gx(p3, "options.signal");
      function y3() {
        q2(new Vx);
      }
      p3?.addEventListener("abort", y3);
      let M2, x4, S3 = [], E4 = 0;
      function B3(N3) {
        q2(N3, --E4 === 0);
      }
      function q2(N3, we) {
        if (N3 && (!M2 || M2.code === "ERR_STREAM_PREMATURE_CLOSE") && (M2 = N3), !(!M2 && !we)) {
          for (;S3.length; )
            S3.shift()(M2);
          p3?.removeEventListener("abort", y3), o.abort(), we && (M2 || m3.forEach((ye) => ye()), ns.nextTick(e, M2, x4));
        }
      }
      let L3;
      for (let N3 = 0;N3 < t.length; N3++) {
        let we = t[N3], ye = N3 < t.length - 1, xe = N3 > 0, Re = ye || r?.end !== false, Ee = N3 === t.length - 1;
        if (zv(we)) {
          let Ae = function(P2) {
            P2 && P2.name !== "AbortError" && P2.code !== "ERR_STREAM_PREMATURE_CLOSE" && B3(P2);
          };
          var _e = Ae;
          if (Re) {
            let { destroy: P2, cleanup: Se2 } = Hv(we, ye, xe);
            S3.push(P2), su(we) && Ee && m3.push(Se2);
          }
          we.on("error", Ae), su(we) && Ee && m3.push(() => {
            we.removeListener("error", Ae);
          });
        }
        if (N3 === 0)
          if (typeof we == "function") {
            if (L3 = we({ signal: f2 }), !pf(L3))
              throw new ou("Iterable, AsyncIterable or Stream", "source", L3);
          } else
            pf(we) || lu(we) ? L3 = we : L3 = Uv.from(we);
        else if (typeof we == "function")
          if (L3 = Jx(L3), L3 = we(L3, { signal: f2 }), ye) {
            if (!pf(L3, true))
              throw new ou("AsyncIterable", `transform[${N3 - 1}]`, L3);
          } else {
            var ge2;
            hu || (hu = au());
            let Ae = new hu({ objectMode: true }), P2 = (ge2 = L3) === null || ge2 === undefined ? undefined : ge2.then;
            if (typeof P2 == "function")
              E4++, P2.call(L3, (i) => {
                x4 = i, i != null && Ae.write(i), Re && Ae.end(), ns.nextTick(B3);
              }, (i) => {
                Ae.destroy(i), ns.nextTick(B3, i);
              });
            else if (pf(L3, true))
              E4++, Wv(L3, Ae, B3, { end: Re });
            else
              throw new ou("AsyncIterable or Promise", "destination", L3);
            L3 = Ae;
            let { destroy: Se2, cleanup: v2 } = Hv(L3, false, true);
            S3.push(Se2), Ee && m3.push(v2);
          }
        else if (zv(we)) {
          if (lu(L3)) {
            E4 += 2;
            let Ae = t7(L3, we, B3, { end: Re });
            su(we) && Ee && m3.push(Ae);
          } else if (pf(L3))
            E4++, Wv(L3, we, B3, { end: Re });
          else
            throw new Kv("val", ["Readable", "Iterable", "AsyncIterable"], L3);
          L3 = we;
        } else
          L3 = Uv.from(we);
      }
      return (f2 != null && f2.aborted || p3 != null && p3.aborted) && ns.nextTick(y3), L3;
    }
    function t7(t, e, r, { end: o }) {
      let f2 = false;
      return e.on("close", () => {
        f2 || r(new Zx);
      }), t.pipe(e, { end: o }), o ? t.once("end", () => {
        f2 = true, e.end();
      }) : r(), fs(t, { readable: true, writable: false }, (p3) => {
        let m3 = t._readableState;
        p3 && p3.code === "ERR_STREAM_PREMATURE_CLOSE" && m3 && m3.ended && !m3.errored && !m3.errorEmitted ? t.once("end", r).once("error", r) : r(p3);
      }), fs(e, { readable: false, writable: true }, r);
    }
    Zv.exports = { pipelineImpl: jv, pipeline: e7 };
  });
  Xv = T3((GI, Yv) => {
    var { pipeline: r7 } = as2(), os2 = Qr(), { destroyer: i7 } = yn(), { isNodeStream: n7, isReadable: Vv, isWritable: $v } = Fi2(), { AbortError: f7, codes: { ERR_INVALID_ARG_VALUE: Gv, ERR_MISSING_ARGS: a7 } } = Xt3();
    Yv.exports = function(...e) {
      if (e.length === 0)
        throw new a7("streams");
      if (e.length === 1)
        return os2.from(e[0]);
      let r = [...e];
      if (typeof e[0] == "function" && (e[0] = os2.from(e[0])), typeof e[e.length - 1] == "function") {
        let q2 = e.length - 1;
        e[q2] = os2.from(e[q2]);
      }
      for (let q2 = 0;q2 < e.length; ++q2)
        if (!!n7(e[q2])) {
          if (q2 < e.length - 1 && !Vv(e[q2]))
            throw new Gv(`streams[${q2}]`, r[q2], "must be readable");
          if (q2 > 0 && !$v(e[q2]))
            throw new Gv(`streams[${q2}]`, r[q2], "must be writable");
        }
      let o, f2, p3, m3, y3;
      function M2(q2) {
        let L3 = m3;
        m3 = null, L3 ? L3(q2) : q2 ? y3.destroy(q2) : !B3 && !E4 && y3.destroy();
      }
      let x4 = e[0], S3 = r7(e, M2), E4 = !!$v(x4), B3 = !!Vv(S3);
      return y3 = new os2({ writableObjectMode: !!(x4 != null && x4.writableObjectMode), readableObjectMode: !!(S3 != null && S3.writableObjectMode), writable: E4, readable: B3 }), E4 && (y3._write = function(q2, L3, ge2) {
        x4.write(q2, L3) ? ge2() : o = ge2;
      }, y3._final = function(q2) {
        x4.end(), f2 = q2;
      }, x4.on("drain", function() {
        if (o) {
          let q2 = o;
          o = null, q2();
        }
      }), S3.on("finish", function() {
        if (f2) {
          let q2 = f2;
          f2 = null, q2();
        }
      })), B3 && (S3.on("readable", function() {
        if (p3) {
          let q2 = p3;
          p3 = null, q2();
        }
      }), S3.on("end", function() {
        y3.push(null);
      }), y3._read = function() {
        for (;; ) {
          let q2 = S3.read();
          if (q2 === null) {
            p3 = y3._read;
            return;
          }
          if (!y3.push(q2))
            return;
        }
      }), y3._destroy = function(q2, L3) {
        !q2 && m3 !== null && (q2 = new f7), p3 = null, o = null, f2 = null, m3 === null ? L3(q2) : (m3 = L3, i7(S3, q2));
      }, y3;
    };
  });
  du = T3((YI, Jv) => {
    var { ArrayPrototypePop: o7, Promise: s7 } = Tt(), { isIterable: h7, isNodeStream: u7 } = Fi2(), { pipelineImpl: l7 } = as2(), { finished: d7 } = Ui();
    function c7(...t) {
      return new s7((e, r) => {
        let o, f2, p3 = t[t.length - 1];
        if (p3 && typeof p3 == "object" && !u7(p3) && !h7(p3)) {
          let m3 = o7(t);
          o = m3.signal, f2 = m3.end;
        }
        l7(t, (m3, y3) => {
          m3 ? r(m3) : e(y3);
        }, { signal: o, end: f2 });
      });
    }
    Jv.exports = { finished: d7, pipeline: c7 };
  });
  sb = T3((XI, ob) => {
    var { Buffer: p7 } = Ut(), { ObjectDefineProperty: gi2, ObjectKeys: tb, ReflectApply: rb } = Tt(), { promisify: { custom: ib } } = Gr(), { streamReturningOperators: Qv, promiseReturningOperators: eb } = q1(), { codes: { ERR_ILLEGAL_CONSTRUCTOR: nb } } = Xt3(), v7 = Xv(), { pipeline: fb } = as2(), { destroyer: b7 } = yn(), ab = Ui(), cu = du(), pu = Fi2(), ct2 = ob.exports = Zo().Stream;
    ct2.isDisturbed = pu.isDisturbed;
    ct2.isErrored = pu.isErrored;
    ct2.isReadable = pu.isReadable;
    ct2.Readable = ba2();
    for (let t of tb(Qv)) {
      let r = function(...o) {
        if (new.target)
          throw nb();
        return ct2.Readable.from(rb(e, this, o));
      };
      g7 = r;
      let e = Qv[t];
      gi2(r, "name", { __proto__: null, value: e.name }), gi2(r, "length", { __proto__: null, value: e.length }), gi2(ct2.Readable.prototype, t, { __proto__: null, value: r, enumerable: false, configurable: true, writable: true });
    }
    var g7;
    for (let t of tb(eb)) {
      let r = function(...f2) {
        if (new.target)
          throw nb();
        return rb(e, this, f2);
      };
      g7 = r;
      let e = eb[t];
      gi2(r, "name", { __proto__: null, value: e.name }), gi2(r, "length", { __proto__: null, value: e.length }), gi2(ct2.Readable.prototype, t, { __proto__: null, value: r, enumerable: false, configurable: true, writable: true });
    }
    var g7;
    ct2.Writable = Xh();
    ct2.Duplex = Qr();
    ct2.Transform = nu();
    ct2.PassThrough = au();
    ct2.pipeline = fb;
    var { addAbortSignal: m7 } = $o();
    ct2.addAbortSignal = m7;
    ct2.finished = ab;
    ct2.destroy = b7;
    ct2.compose = v7;
    gi2(ct2, "promises", { __proto__: null, configurable: true, enumerable: true, get() {
      return cu;
    } });
    gi2(fb, ib, { __proto__: null, enumerable: true, get() {
      return cu.pipeline;
    } });
    gi2(ab, ib, { __proto__: null, enumerable: true, get() {
      return cu.finished;
    } });
    ct2.Stream = ct2;
    ct2._isUint8Array = function(e) {
      return e instanceof Uint8Array;
    };
    ct2._uint8ArrayToBuffer = function(e) {
      return p7.from(e.buffer, e.byteOffset, e.byteLength);
    };
  });
  vu2 = T3((JI, pt) => {
    var Lt = sb(), y7 = du(), w7 = Lt.Readable.destroy;
    pt.exports = Lt.Readable;
    pt.exports._uint8ArrayToBuffer = Lt._uint8ArrayToBuffer;
    pt.exports._isUint8Array = Lt._isUint8Array;
    pt.exports.isDisturbed = Lt.isDisturbed;
    pt.exports.isErrored = Lt.isErrored;
    pt.exports.isReadable = Lt.isReadable;
    pt.exports.Readable = Lt.Readable;
    pt.exports.Writable = Lt.Writable;
    pt.exports.Duplex = Lt.Duplex;
    pt.exports.Transform = Lt.Transform;
    pt.exports.PassThrough = Lt.PassThrough;
    pt.exports.addAbortSignal = Lt.addAbortSignal;
    pt.exports.finished = Lt.finished;
    pt.exports.destroy = Lt.destroy;
    pt.exports.destroy = w7;
    pt.exports.pipeline = Lt.pipeline;
    pt.exports.compose = Lt.compose;
    Object.defineProperty(Lt, "promises", { configurable: true, enumerable: true, get() {
      return y7;
    } });
    pt.exports.Stream = Lt.Stream;
    pt.exports.default = pt.exports;
  });
  vf = {};
  Xa(vf, { default: () => M7 });
  hb = A0(() => {
    lt2(vf, rn(vu2()));
    M7 = rn(vu2());
  });
  yi2 = T3((eT, db) => {
    var ub = Te().Buffer, lb = (hb(), ur(vf)).Transform, _7 = lo2().StringDecoder, x7 = Ie2();
    function Lr(t) {
      lb.call(this), this.hashMode = typeof t == "string", this.hashMode ? this[t] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
    }
    x7(Lr, lb);
    Lr.prototype.update = function(t, e, r) {
      typeof t == "string" && (t = ub.from(t, e));
      var o = this._update(t);
      return this.hashMode ? this : (r && (o = this._toString(o, r)), o);
    };
    Lr.prototype.setAutoPadding = function() {};
    Lr.prototype.getAuthTag = function() {
      throw new Error("trying to get auth tag in unsupported state");
    };
    Lr.prototype.setAuthTag = function() {
      throw new Error("trying to set auth tag in unsupported state");
    };
    Lr.prototype.setAAD = function() {
      throw new Error("trying to set aad in unsupported state");
    };
    Lr.prototype._transform = function(t, e, r) {
      var o;
      try {
        this.hashMode ? this._update(t) : this.push(this._update(t));
      } catch (f2) {
        o = f2;
      } finally {
        r(o);
      }
    };
    Lr.prototype._flush = function(t) {
      var e;
      try {
        this.push(this.__final());
      } catch (r) {
        e = r;
      }
      t(e);
    };
    Lr.prototype._finalOrDigest = function(t) {
      var e = this.__final() || ub.alloc(0);
      return t && (e = this._toString(e, t, true)), e;
    };
    Lr.prototype._toString = function(t, e, r) {
      if (this._decoder || (this._decoder = new _7(e), this._encoding = e), this._encoding !== e)
        throw new Error("can't switch encodings");
      var o = this._decoder.write(t);
      return r && (o += this._decoder.end()), o;
    };
    db.exports = Lr;
  });
  bf = T3((tT, pb) => {
    var S7 = Ie2(), E7 = Eo2(), A7 = Ro(), R7 = To(), cb = yi2();
    function ss2(t) {
      cb.call(this, "digest"), this._hash = t;
    }
    S7(ss2, cb);
    ss2.prototype._update = function(t) {
      this._hash.update(t);
    };
    ss2.prototype._final = function() {
      return this._hash.digest();
    };
    pb.exports = function(e) {
      return e = e.toLowerCase(), e === "md5" ? new E7 : e === "rmd160" || e === "ripemd160" ? new A7 : new ss2(R7(e));
    };
  });
  mb = T3((rT, bb) => {
    var B7 = Ie2(), xn = Te().Buffer, vb = yi2(), q7 = xn.alloc(128), mf = 64;
    function hs(t, e) {
      vb.call(this, "digest"), typeof e == "string" && (e = xn.from(e)), this._alg = t, this._key = e, e.length > mf ? e = t(e) : e.length < mf && (e = xn.concat([e, q7], mf));
      for (var r = this._ipad = xn.allocUnsafe(mf), o = this._opad = xn.allocUnsafe(mf), f2 = 0;f2 < mf; f2++)
        r[f2] = e[f2] ^ 54, o[f2] = e[f2] ^ 92;
      this._hash = [r];
    }
    B7(hs, vb);
    hs.prototype._update = function(t) {
      this._hash.push(t);
    };
    hs.prototype._final = function() {
      var t = this._alg(xn.concat(this._hash));
      return this._alg(xn.concat([this._opad, t]));
    };
    bb.exports = hs;
  });
  bu2 = T3((iT, gb) => {
    var I7 = Eo2();
    gb.exports = function(t) {
      return new I7().update(t).digest();
    };
  });
  yu = T3((nT, wb) => {
    var T7 = Ie2(), k7 = mb(), yb = yi2(), Ma = Te().Buffer, L7 = bu2(), mu = Ro(), gu2 = To(), N7 = Ma.alloc(128);
    function _a(t, e) {
      yb.call(this, "digest"), typeof e == "string" && (e = Ma.from(e));
      var r = t === "sha512" || t === "sha384" ? 128 : 64;
      if (this._alg = t, this._key = e, e.length > r) {
        var o = t === "rmd160" ? new mu : gu2(t);
        e = o.update(e).digest();
      } else
        e.length < r && (e = Ma.concat([e, N7], r));
      for (var f2 = this._ipad = Ma.allocUnsafe(r), p3 = this._opad = Ma.allocUnsafe(r), m3 = 0;m3 < r; m3++)
        f2[m3] = e[m3] ^ 54, p3[m3] = e[m3] ^ 92;
      this._hash = t === "rmd160" ? new mu : gu2(t), this._hash.update(f2);
    }
    T7(_a, yb);
    _a.prototype._update = function(t) {
      this._hash.update(t);
    };
    _a.prototype._final = function() {
      var t = this._hash.digest(), e = this._alg === "rmd160" ? new mu : gu2(this._alg);
      return e.update(this._opad).update(t).digest();
    };
    wb.exports = function(e, r) {
      return e = e.toLowerCase(), e === "rmd160" || e === "ripemd160" ? new _a("rmd160", r) : e === "md5" ? new k7(L7, r) : new _a(e, r);
    };
  });
  wu = T3((fT, D7) => {
    D7.exports = { sha224WithRSAEncryption: { sign: "rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, "RSA-SHA224": { sign: "ecdsa/rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, sha256WithRSAEncryption: { sign: "rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, "RSA-SHA256": { sign: "ecdsa/rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, sha384WithRSAEncryption: { sign: "rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, "RSA-SHA384": { sign: "ecdsa/rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, sha512WithRSAEncryption: { sign: "rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, "RSA-SHA512": { sign: "ecdsa/rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, "RSA-SHA1": { sign: "rsa", hash: "sha1", id: "3021300906052b0e03021a05000414" }, "ecdsa-with-SHA1": { sign: "ecdsa", hash: "sha1", id: "" }, sha256: { sign: "ecdsa", hash: "sha256", id: "" }, sha224: { sign: "ecdsa", hash: "sha224", id: "" }, sha384: { sign: "ecdsa", hash: "sha384", id: "" }, sha512: { sign: "ecdsa", hash: "sha512", id: "" }, "DSA-SHA": { sign: "dsa", hash: "sha1", id: "" }, "DSA-SHA1": { sign: "dsa", hash: "sha1", id: "" }, DSA: { sign: "dsa", hash: "sha1", id: "" }, "DSA-WITH-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-WITH-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-WITH-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-WITH-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-RIPEMD160": { sign: "dsa", hash: "rmd160", id: "" }, ripemd160WithRSA: { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, "RSA-RIPEMD160": { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, md5WithRSAEncryption: { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" }, "RSA-MD5": { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" } };
  });
  _b = T3((aT, Mb) => {
    Mb.exports = wu();
  });
  Mu = T3((oT, xb) => {
    var P7 = Math.pow(2, 30) - 1;
    xb.exports = function(t, e) {
      if (typeof t != "number")
        throw new TypeError("Iterations not a number");
      if (t < 0)
        throw new TypeError("Bad iterations");
      if (typeof e != "number")
        throw new TypeError("Key length not a number");
      if (e < 0 || e > P7 || e !== e)
        throw new TypeError("Bad key length");
    };
  });
  _u = T3((sT, Eb) => {
    var us2;
    global.process && global.process.browser ? us2 = "utf-8" : global.process && global.process.version ? (Sb = parseInt(process.version.split(".")[0].slice(1), 10), us2 = Sb >= 6 ? "utf-8" : "binary") : us2 = "utf-8";
    var Sb;
    Eb.exports = us2;
  });
  Su = T3((hT, Ab) => {
    var xu = Te().Buffer;
    Ab.exports = function(t, e, r) {
      if (xu.isBuffer(t))
        return t;
      if (typeof t == "string")
        return xu.from(t, e);
      if (ArrayBuffer.isView(t))
        return xu.from(t.buffer);
      throw new TypeError(r + " must be a string, a Buffer, a typed array or a DataView");
    };
  });
  Eu = T3((uT, Ib) => {
    var C7 = bu2(), O7 = Ro(), F7 = To(), Sn = Te().Buffer, U7 = Mu(), Rb = _u(), Bb = Su(), z7 = Sn.alloc(128), ls = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
    function qb(t, e, r) {
      var o = H7(t), f2 = t === "sha512" || t === "sha384" ? 128 : 64;
      e.length > f2 ? e = o(e) : e.length < f2 && (e = Sn.concat([e, z7], f2));
      for (var p3 = Sn.allocUnsafe(f2 + ls[t]), m3 = Sn.allocUnsafe(f2 + ls[t]), y3 = 0;y3 < f2; y3++)
        p3[y3] = e[y3] ^ 54, m3[y3] = e[y3] ^ 92;
      var M2 = Sn.allocUnsafe(f2 + r + 4);
      p3.copy(M2, 0, 0, f2), this.ipad1 = M2, this.ipad2 = p3, this.opad = m3, this.alg = t, this.blocksize = f2, this.hash = o, this.size = ls[t];
    }
    qb.prototype.run = function(t, e) {
      t.copy(e, this.blocksize);
      var r = this.hash(e);
      return r.copy(this.opad, this.blocksize), this.hash(this.opad);
    };
    function H7(t) {
      function e(o) {
        return F7(t).update(o).digest();
      }
      function r(o) {
        return new O7().update(o).digest();
      }
      return t === "rmd160" || t === "ripemd160" ? r : t === "md5" ? C7 : e;
    }
    function W7(t, e, r, o, f2) {
      U7(r, o), t = Bb(t, Rb, "Password"), e = Bb(e, Rb, "Salt"), f2 = f2 || "sha1";
      var p3 = new qb(f2, t, e.length), m3 = Sn.allocUnsafe(o), y3 = Sn.allocUnsafe(e.length + 4);
      e.copy(y3, 0, 0, e.length);
      for (var M2 = 0, x4 = ls[f2], S3 = Math.ceil(o / x4), E4 = 1;E4 <= S3; E4++) {
        y3.writeUInt32BE(E4, e.length);
        for (var B3 = p3.run(y3, p3.ipad1), q2 = B3, L3 = 1;L3 < r; L3++) {
          q2 = p3.run(q2, p3.ipad2);
          for (var ge2 = 0;ge2 < x4; ge2++)
            B3[ge2] ^= q2[ge2];
        }
        B3.copy(m3, M2), M2 += x4;
      }
      return m3;
    }
    Ib.exports = W7;
  });
  Cb = T3((lT, Pb) => {
    var Nb = Te().Buffer, K7 = Mu(), Tb = _u(), kb = Eu(), Lb = Su(), ds2, xa2 = global.crypto && global.crypto.subtle, j7 = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" }, Au = [];
    function Z7(t) {
      if (global.process && !global.process.browser || !xa2 || !xa2.importKey || !xa2.deriveBits)
        return Promise.resolve(false);
      if (Au[t] !== undefined)
        return Au[t];
      ds2 = ds2 || Nb.alloc(8);
      var e = Db(ds2, ds2, 10, 128, t).then(function() {
        return true;
      }).catch(function() {
        return false;
      });
      return Au[t] = e, e;
    }
    var En2;
    function Ru2() {
      return En2 || (global.process && global.process.nextTick ? En2 = global.process.nextTick : global.queueMicrotask ? En2 = global.queueMicrotask : global.setImmediate ? En2 = global.setImmediate : En2 = global.setTimeout, En2);
    }
    function Db(t, e, r, o, f2) {
      return xa2.importKey("raw", t, { name: "PBKDF2" }, false, ["deriveBits"]).then(function(p3) {
        return xa2.deriveBits({ name: "PBKDF2", salt: e, iterations: r, hash: { name: f2 } }, p3, o << 3);
      }).then(function(p3) {
        return Nb.from(p3);
      });
    }
    function V7(t, e) {
      t.then(function(r) {
        Ru2()(function() {
          e(null, r);
        });
      }, function(r) {
        Ru2()(function() {
          e(r);
        });
      });
    }
    Pb.exports = function(t, e, r, o, f2, p3) {
      typeof f2 == "function" && (p3 = f2, f2 = undefined), f2 = f2 || "sha1";
      var m3 = j7[f2.toLowerCase()];
      if (!m3 || typeof global.Promise != "function") {
        Ru2()(function() {
          var y3;
          try {
            y3 = kb(t, e, r, o, f2);
          } catch (M2) {
            return p3(M2);
          }
          p3(null, y3);
        });
        return;
      }
      if (K7(r, o), t = Lb(t, Tb, "Password"), e = Lb(e, Tb, "Salt"), typeof p3 != "function")
        throw new Error("No callback provided to pbkdf2");
      V7(Z7(m3).then(function(y3) {
        return y3 ? Db(t, e, r, o, m3) : kb(t, e, r, o, f2);
      }), p3);
    };
  });
  qu = T3((Bu) => {
    Bu.pbkdf2 = Cb();
    Bu.pbkdf2Sync = Eu();
  });
  Iu = T3((br2) => {
    br2.readUInt32BE = function(e, r) {
      var o = e[0 + r] << 24 | e[1 + r] << 16 | e[2 + r] << 8 | e[3 + r];
      return o >>> 0;
    };
    br2.writeUInt32BE = function(e, r, o) {
      e[0 + o] = r >>> 24, e[1 + o] = r >>> 16 & 255, e[2 + o] = r >>> 8 & 255, e[3 + o] = r & 255;
    };
    br2.ip = function(e, r, o, f2) {
      for (var p3 = 0, m3 = 0, y3 = 6;y3 >= 0; y3 -= 2) {
        for (var M2 = 0;M2 <= 24; M2 += 8)
          p3 <<= 1, p3 |= r >>> M2 + y3 & 1;
        for (var M2 = 0;M2 <= 24; M2 += 8)
          p3 <<= 1, p3 |= e >>> M2 + y3 & 1;
      }
      for (var y3 = 6;y3 >= 0; y3 -= 2) {
        for (var M2 = 1;M2 <= 25; M2 += 8)
          m3 <<= 1, m3 |= r >>> M2 + y3 & 1;
        for (var M2 = 1;M2 <= 25; M2 += 8)
          m3 <<= 1, m3 |= e >>> M2 + y3 & 1;
      }
      o[f2 + 0] = p3 >>> 0, o[f2 + 1] = m3 >>> 0;
    };
    br2.rip = function(e, r, o, f2) {
      for (var p3 = 0, m3 = 0, y3 = 0;y3 < 4; y3++)
        for (var M2 = 24;M2 >= 0; M2 -= 8)
          p3 <<= 1, p3 |= r >>> M2 + y3 & 1, p3 <<= 1, p3 |= e >>> M2 + y3 & 1;
      for (var y3 = 4;y3 < 8; y3++)
        for (var M2 = 24;M2 >= 0; M2 -= 8)
          m3 <<= 1, m3 |= r >>> M2 + y3 & 1, m3 <<= 1, m3 |= e >>> M2 + y3 & 1;
      o[f2 + 0] = p3 >>> 0, o[f2 + 1] = m3 >>> 0;
    };
    br2.pc1 = function(e, r, o, f2) {
      for (var p3 = 0, m3 = 0, y3 = 7;y3 >= 5; y3--) {
        for (var M2 = 0;M2 <= 24; M2 += 8)
          p3 <<= 1, p3 |= r >> M2 + y3 & 1;
        for (var M2 = 0;M2 <= 24; M2 += 8)
          p3 <<= 1, p3 |= e >> M2 + y3 & 1;
      }
      for (var M2 = 0;M2 <= 24; M2 += 8)
        p3 <<= 1, p3 |= r >> M2 + y3 & 1;
      for (var y3 = 1;y3 <= 3; y3++) {
        for (var M2 = 0;M2 <= 24; M2 += 8)
          m3 <<= 1, m3 |= r >> M2 + y3 & 1;
        for (var M2 = 0;M2 <= 24; M2 += 8)
          m3 <<= 1, m3 |= e >> M2 + y3 & 1;
      }
      for (var M2 = 0;M2 <= 24; M2 += 8)
        m3 <<= 1, m3 |= e >> M2 + y3 & 1;
      o[f2 + 0] = p3 >>> 0, o[f2 + 1] = m3 >>> 0;
    };
    br2.r28shl = function(e, r) {
      return e << r & 268435455 | e >>> 28 - r;
    };
    var cs2 = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
    br2.pc2 = function(e, r, o, f2) {
      for (var p3 = 0, m3 = 0, y3 = cs2.length >>> 1, M2 = 0;M2 < y3; M2++)
        p3 <<= 1, p3 |= e >>> cs2[M2] & 1;
      for (var M2 = y3;M2 < cs2.length; M2++)
        m3 <<= 1, m3 |= r >>> cs2[M2] & 1;
      o[f2 + 0] = p3 >>> 0, o[f2 + 1] = m3 >>> 0;
    };
    br2.expand = function(e, r, o) {
      var f2 = 0, p3 = 0;
      f2 = (e & 1) << 5 | e >>> 27;
      for (var m3 = 23;m3 >= 15; m3 -= 4)
        f2 <<= 6, f2 |= e >>> m3 & 63;
      for (var m3 = 11;m3 >= 3; m3 -= 4)
        p3 |= e >>> m3 & 63, p3 <<= 6;
      p3 |= (e & 31) << 1 | e >>> 31, r[o + 0] = f2 >>> 0, r[o + 1] = p3 >>> 0;
    };
    var Ob = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
    br2.substitute = function(e, r) {
      for (var o = 0, f2 = 0;f2 < 4; f2++) {
        var p3 = e >>> 18 - f2 * 6 & 63, m3 = Ob[f2 * 64 + p3];
        o <<= 4, o |= m3;
      }
      for (var f2 = 0;f2 < 4; f2++) {
        var p3 = r >>> 18 - f2 * 6 & 63, m3 = Ob[4 * 64 + f2 * 64 + p3];
        o <<= 4, o |= m3;
      }
      return o >>> 0;
    };
    var Fb = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
    br2.permute = function(e) {
      for (var r = 0, o = 0;o < Fb.length; o++)
        r <<= 1, r |= e >>> Fb[o] & 1;
      return r >>> 0;
    };
    br2.padSplit = function(e, r, o) {
      for (var f2 = e.toString(2);f2.length < r; )
        f2 = "0" + f2;
      for (var p3 = [], m3 = 0;m3 < r; m3 += o)
        p3.push(f2.slice(m3, m3 + o));
      return p3.join(" ");
    };
  });
  ar = T3((pT, zb) => {
    zb.exports = Ub;
    function Ub(t, e) {
      if (!t)
        throw new Error(e || "Assertion failed");
    }
    Ub.equal = function(e, r, o) {
      if (e != r)
        throw new Error(o || "Assertion failed: " + e + " != " + r);
    };
  });
  ps = T3((vT, Hb) => {
    var $7 = ar();
    function mr2(t) {
      this.options = t, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
    }
    Hb.exports = mr2;
    mr2.prototype._init = function() {};
    mr2.prototype.update = function(e) {
      return e.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(e) : this._updateEncrypt(e);
    };
    mr2.prototype._buffer = function(e, r) {
      for (var o = Math.min(this.buffer.length - this.bufferOff, e.length - r), f2 = 0;f2 < o; f2++)
        this.buffer[this.bufferOff + f2] = e[r + f2];
      return this.bufferOff += o, o;
    };
    mr2.prototype._flushBuffer = function(e, r) {
      return this._update(this.buffer, 0, e, r), this.bufferOff = 0, this.blockSize;
    };
    mr2.prototype._updateEncrypt = function(e) {
      var r = 0, o = 0, f2 = (this.bufferOff + e.length) / this.blockSize | 0, p3 = new Array(f2 * this.blockSize);
      this.bufferOff !== 0 && (r += this._buffer(e, r), this.bufferOff === this.buffer.length && (o += this._flushBuffer(p3, o)));
      for (var m3 = e.length - (e.length - r) % this.blockSize;r < m3; r += this.blockSize)
        this._update(e, r, p3, o), o += this.blockSize;
      for (;r < e.length; r++, this.bufferOff++)
        this.buffer[this.bufferOff] = e[r];
      return p3;
    };
    mr2.prototype._updateDecrypt = function(e) {
      for (var r = 0, o = 0, f2 = Math.ceil((this.bufferOff + e.length) / this.blockSize) - 1, p3 = new Array(f2 * this.blockSize);f2 > 0; f2--)
        r += this._buffer(e, r), o += this._flushBuffer(p3, o);
      return r += this._buffer(e, r), p3;
    };
    mr2.prototype.final = function(e) {
      var r;
      e && (r = this.update(e));
      var o;
      return this.type === "encrypt" ? o = this._finalEncrypt() : o = this._finalDecrypt(), r ? r.concat(o) : o;
    };
    mr2.prototype._pad = function(e, r) {
      if (r === 0)
        return false;
      for (;r < e.length; )
        e[r++] = 0;
      return true;
    };
    mr2.prototype._finalEncrypt = function() {
      if (!this._pad(this.buffer, this.bufferOff))
        return [];
      var e = new Array(this.blockSize);
      return this._update(this.buffer, 0, e, 0), e;
    };
    mr2.prototype._unpad = function(e) {
      return e;
    };
    mr2.prototype._finalDecrypt = function() {
      $7.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
      var e = new Array(this.blockSize);
      return this._flushBuffer(e, 0), this._unpad(e);
    };
  });
  Tu = T3((bT, jb) => {
    var Wb = ar(), G7 = Ie2(), Nt = Iu(), Kb = ps();
    function Y7() {
      this.tmp = new Array(2), this.keys = null;
    }
    function ei(t) {
      Kb.call(this, t);
      var e = new Y7;
      this._desState = e, this.deriveKeys(e, t.key);
    }
    G7(ei, Kb);
    jb.exports = ei;
    ei.create = function(e) {
      return new ei(e);
    };
    var X7 = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
    ei.prototype.deriveKeys = function(e, r) {
      e.keys = new Array(16 * 2), Wb.equal(r.length, this.blockSize, "Invalid key length");
      var o = Nt.readUInt32BE(r, 0), f2 = Nt.readUInt32BE(r, 4);
      Nt.pc1(o, f2, e.tmp, 0), o = e.tmp[0], f2 = e.tmp[1];
      for (var p3 = 0;p3 < e.keys.length; p3 += 2) {
        var m3 = X7[p3 >>> 1];
        o = Nt.r28shl(o, m3), f2 = Nt.r28shl(f2, m3), Nt.pc2(o, f2, e.keys, p3);
      }
    };
    ei.prototype._update = function(e, r, o, f2) {
      var p3 = this._desState, m3 = Nt.readUInt32BE(e, r), y3 = Nt.readUInt32BE(e, r + 4);
      Nt.ip(m3, y3, p3.tmp, 0), m3 = p3.tmp[0], y3 = p3.tmp[1], this.type === "encrypt" ? this._encrypt(p3, m3, y3, p3.tmp, 0) : this._decrypt(p3, m3, y3, p3.tmp, 0), m3 = p3.tmp[0], y3 = p3.tmp[1], Nt.writeUInt32BE(o, m3, f2), Nt.writeUInt32BE(o, y3, f2 + 4);
    };
    ei.prototype._pad = function(e, r) {
      for (var o = e.length - r, f2 = r;f2 < e.length; f2++)
        e[f2] = o;
      return true;
    };
    ei.prototype._unpad = function(e) {
      for (var r = e[e.length - 1], o = e.length - r;o < e.length; o++)
        Wb.equal(e[o], r);
      return e.slice(0, e.length - r);
    };
    ei.prototype._encrypt = function(e, r, o, f2, p3) {
      for (var m3 = r, y3 = o, M2 = 0;M2 < e.keys.length; M2 += 2) {
        var x4 = e.keys[M2], S3 = e.keys[M2 + 1];
        Nt.expand(y3, e.tmp, 0), x4 ^= e.tmp[0], S3 ^= e.tmp[1];
        var E4 = Nt.substitute(x4, S3), B3 = Nt.permute(E4), q2 = y3;
        y3 = (m3 ^ B3) >>> 0, m3 = q2;
      }
      Nt.rip(y3, m3, f2, p3);
    };
    ei.prototype._decrypt = function(e, r, o, f2, p3) {
      for (var m3 = o, y3 = r, M2 = e.keys.length - 2;M2 >= 0; M2 -= 2) {
        var x4 = e.keys[M2], S3 = e.keys[M2 + 1];
        Nt.expand(m3, e.tmp, 0), x4 ^= e.tmp[0], S3 ^= e.tmp[1];
        var E4 = Nt.substitute(x4, S3), B3 = Nt.permute(E4), q2 = m3;
        m3 = (y3 ^ B3) >>> 0, y3 = q2;
      }
      Nt.rip(m3, y3, f2, p3);
    };
  });
  Vb = T3((Zb) => {
    var J7 = ar(), Q7 = Ie2(), vs2 = {};
    function e9(t) {
      J7.equal(t.length, 8, "Invalid IV length"), this.iv = new Array(8);
      for (var e = 0;e < this.iv.length; e++)
        this.iv[e] = t[e];
    }
    function t9(t) {
      function e(p3) {
        t.call(this, p3), this._cbcInit();
      }
      Q7(e, t);
      for (var r = Object.keys(vs2), o = 0;o < r.length; o++) {
        var f2 = r[o];
        e.prototype[f2] = vs2[f2];
      }
      return e.create = function(m3) {
        return new e(m3);
      }, e;
    }
    Zb.instantiate = t9;
    vs2._cbcInit = function() {
      var e = new e9(this.options.iv);
      this._cbcState = e;
    };
    vs2._update = function(e, r, o, f2) {
      var p3 = this._cbcState, m3 = this.constructor.super_.prototype, y3 = p3.iv;
      if (this.type === "encrypt") {
        for (var M2 = 0;M2 < this.blockSize; M2++)
          y3[M2] ^= e[r + M2];
        m3._update.call(this, y3, 0, o, f2);
        for (var M2 = 0;M2 < this.blockSize; M2++)
          y3[M2] = o[f2 + M2];
      } else {
        m3._update.call(this, e, r, o, f2);
        for (var M2 = 0;M2 < this.blockSize; M2++)
          o[f2 + M2] ^= y3[M2];
        for (var M2 = 0;M2 < this.blockSize; M2++)
          y3[M2] = e[r + M2];
      }
    };
  });
  Yb = T3((gT, Gb) => {
    var r9 = ar(), i9 = Ie2(), $b = ps(), Wi2 = Tu();
    function n9(t, e) {
      r9.equal(e.length, 24, "Invalid key length");
      var r = e.slice(0, 8), o = e.slice(8, 16), f2 = e.slice(16, 24);
      t === "encrypt" ? this.ciphers = [Wi2.create({ type: "encrypt", key: r }), Wi2.create({ type: "decrypt", key: o }), Wi2.create({ type: "encrypt", key: f2 })] : this.ciphers = [Wi2.create({ type: "decrypt", key: f2 }), Wi2.create({ type: "encrypt", key: o }), Wi2.create({ type: "decrypt", key: r })];
    }
    function An(t) {
      $b.call(this, t);
      var e = new n9(this.type, this.options.key);
      this._edeState = e;
    }
    i9(An, $b);
    Gb.exports = An;
    An.create = function(e) {
      return new An(e);
    };
    An.prototype._update = function(e, r, o, f2) {
      var p3 = this._edeState;
      p3.ciphers[0]._update(e, r, o, f2), p3.ciphers[1]._update(o, f2, o, f2), p3.ciphers[2]._update(o, f2, o, f2);
    };
    An.prototype._pad = Wi2.prototype._pad;
    An.prototype._unpad = Wi2.prototype._unpad;
  });
  Xb = T3((gf) => {
    gf.utils = Iu();
    gf.Cipher = ps();
    gf.DES = Tu();
    gf.CBC = Vb();
    gf.EDE = Yb();
  });
  em = T3((wT, Qb) => {
    var Jb = yi2(), wi2 = Xb(), f9 = Ie2(), Rn = Te().Buffer, Sa2 = { "des-ede3-cbc": wi2.CBC.instantiate(wi2.EDE), "des-ede3": wi2.EDE, "des-ede-cbc": wi2.CBC.instantiate(wi2.EDE), "des-ede": wi2.EDE, "des-cbc": wi2.CBC.instantiate(wi2.DES), "des-ecb": wi2.DES };
    Sa2.des = Sa2["des-cbc"];
    Sa2.des3 = Sa2["des-ede3-cbc"];
    Qb.exports = bs;
    f9(bs, Jb);
    function bs(t) {
      Jb.call(this);
      var e = t.mode.toLowerCase(), r = Sa2[e], o;
      t.decrypt ? o = "decrypt" : o = "encrypt";
      var f2 = t.key;
      Rn.isBuffer(f2) || (f2 = Rn.from(f2)), (e === "des-ede" || e === "des-ede-cbc") && (f2 = Rn.concat([f2, f2.slice(0, 8)]));
      var p3 = t.iv;
      Rn.isBuffer(p3) || (p3 = Rn.from(p3)), this._des = r.create({ key: f2, iv: p3, type: o });
    }
    bs.prototype._update = function(t) {
      return Rn.from(this._des.update(t));
    };
    bs.prototype._final = function() {
      return Rn.from(this._des.final());
    };
  });
  tm = T3((ku2) => {
    ku2.encrypt = function(t, e) {
      return t._cipher.encryptBlock(e);
    };
    ku2.decrypt = function(t, e) {
      return t._cipher.decryptBlock(e);
    };
  });
  yf = T3((_T, rm) => {
    rm.exports = function(e, r) {
      for (var o = Math.min(e.length, r.length), f2 = new Buffer(o), p3 = 0;p3 < o; ++p3)
        f2[p3] = e[p3] ^ r[p3];
      return f2;
    };
  });
  nm = T3((Lu2) => {
    var im = yf();
    Lu2.encrypt = function(t, e) {
      var r = im(e, t._prev);
      return t._prev = t._cipher.encryptBlock(r), t._prev;
    };
    Lu2.decrypt = function(t, e) {
      var r = t._prev;
      t._prev = e;
      var o = t._cipher.decryptBlock(e);
      return im(o, r);
    };
  });
  om = T3((am) => {
    var Ea2 = Te().Buffer, a9 = yf();
    function fm(t, e, r) {
      var o = e.length, f2 = a9(e, t._cache);
      return t._cache = t._cache.slice(o), t._prev = Ea2.concat([t._prev, r ? e : f2]), f2;
    }
    am.encrypt = function(t, e, r) {
      for (var o = Ea2.allocUnsafe(0), f2;e.length; )
        if (t._cache.length === 0 && (t._cache = t._cipher.encryptBlock(t._prev), t._prev = Ea2.allocUnsafe(0)), t._cache.length <= e.length)
          f2 = t._cache.length, o = Ea2.concat([o, fm(t, e.slice(0, f2), r)]), e = e.slice(f2);
        else {
          o = Ea2.concat([o, fm(t, e, r)]);
          break;
        }
      return o;
    };
  });
  hm = T3((sm) => {
    var Nu = Te().Buffer;
    function o9(t, e, r) {
      var o = t._cipher.encryptBlock(t._prev), f2 = o[0] ^ e;
      return t._prev = Nu.concat([t._prev.slice(1), Nu.from([r ? e : f2])]), f2;
    }
    sm.encrypt = function(t, e, r) {
      for (var o = e.length, f2 = Nu.allocUnsafe(o), p3 = -1;++p3 < o; )
        f2[p3] = o9(t, e[p3], r);
      return f2;
    };
  });
  lm = T3((um) => {
    var ms2 = Te().Buffer;
    function s9(t, e, r) {
      for (var o, f2 = -1, p3 = 8, m3 = 0, y3, M2;++f2 < p3; )
        o = t._cipher.encryptBlock(t._prev), y3 = e & 1 << 7 - f2 ? 128 : 0, M2 = o[0] ^ y3, m3 += (M2 & 128) >> f2 % 8, t._prev = h9(t._prev, r ? y3 : M2);
      return m3;
    }
    function h9(t, e) {
      var r = t.length, o = -1, f2 = ms2.allocUnsafe(t.length);
      for (t = ms2.concat([t, ms2.from([e])]);++o < r; )
        f2[o] = t[o] << 1 | t[o + 1] >> 7;
      return f2;
    }
    um.encrypt = function(t, e, r) {
      for (var o = e.length, f2 = ms2.allocUnsafe(o), p3 = -1;++p3 < o; )
        f2[p3] = s9(t, e[p3], r);
      return f2;
    };
  });
  cm = T3((dm) => {
    var u9 = yf();
    function l9(t) {
      return t._prev = t._cipher.encryptBlock(t._prev), t._prev;
    }
    dm.encrypt = function(t, e) {
      for (;t._cache.length < e.length; )
        t._cache = Buffer.concat([t._cache, l9(t)]);
      var r = t._cache.slice(0, e.length);
      return t._cache = t._cache.slice(e.length), u9(e, r);
    };
  });
  Du = T3((BT, pm) => {
    function d9(t) {
      for (var e = t.length, r;e--; )
        if (r = t.readUInt8(e), r === 255)
          t.writeUInt8(0, e);
        else {
          r++, t.writeUInt8(r, e);
          break;
        }
    }
    pm.exports = d9;
  });
  Cu = T3((bm) => {
    var c9 = yf(), vm = Te().Buffer, p9 = Du();
    function v9(t) {
      var e = t._cipher.encryptBlockRaw(t._prev);
      return p9(t._prev), e;
    }
    var Pu = 16;
    bm.encrypt = function(t, e) {
      var r = Math.ceil(e.length / Pu), o = t._cache.length;
      t._cache = vm.concat([t._cache, vm.allocUnsafe(r * Pu)]);
      for (var f2 = 0;f2 < r; f2++) {
        var p3 = v9(t), m3 = o + f2 * Pu;
        t._cache.writeUInt32BE(p3[0], m3 + 0), t._cache.writeUInt32BE(p3[1], m3 + 4), t._cache.writeUInt32BE(p3[2], m3 + 8), t._cache.writeUInt32BE(p3[3], m3 + 12);
      }
      var y3 = t._cache.slice(0, e.length);
      return t._cache = t._cache.slice(e.length), c9(e, y3);
    };
  });
  Ou = T3((IT, b9) => {
    b9.exports = { "aes-128-ecb": { cipher: "AES", key: 128, iv: 0, mode: "ECB", type: "block" }, "aes-192-ecb": { cipher: "AES", key: 192, iv: 0, mode: "ECB", type: "block" }, "aes-256-ecb": { cipher: "AES", key: 256, iv: 0, mode: "ECB", type: "block" }, "aes-128-cbc": { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, "aes-192-cbc": { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, "aes-256-cbc": { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, aes128: { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, aes192: { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, aes256: { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, "aes-128-cfb": { cipher: "AES", key: 128, iv: 16, mode: "CFB", type: "stream" }, "aes-192-cfb": { cipher: "AES", key: 192, iv: 16, mode: "CFB", type: "stream" }, "aes-256-cfb": { cipher: "AES", key: 256, iv: 16, mode: "CFB", type: "stream" }, "aes-128-cfb8": { cipher: "AES", key: 128, iv: 16, mode: "CFB8", type: "stream" }, "aes-192-cfb8": { cipher: "AES", key: 192, iv: 16, mode: "CFB8", type: "stream" }, "aes-256-cfb8": { cipher: "AES", key: 256, iv: 16, mode: "CFB8", type: "stream" }, "aes-128-cfb1": { cipher: "AES", key: 128, iv: 16, mode: "CFB1", type: "stream" }, "aes-192-cfb1": { cipher: "AES", key: 192, iv: 16, mode: "CFB1", type: "stream" }, "aes-256-cfb1": { cipher: "AES", key: 256, iv: 16, mode: "CFB1", type: "stream" }, "aes-128-ofb": { cipher: "AES", key: 128, iv: 16, mode: "OFB", type: "stream" }, "aes-192-ofb": { cipher: "AES", key: 192, iv: 16, mode: "OFB", type: "stream" }, "aes-256-ofb": { cipher: "AES", key: 256, iv: 16, mode: "OFB", type: "stream" }, "aes-128-ctr": { cipher: "AES", key: 128, iv: 16, mode: "CTR", type: "stream" }, "aes-192-ctr": { cipher: "AES", key: 192, iv: 16, mode: "CTR", type: "stream" }, "aes-256-ctr": { cipher: "AES", key: 256, iv: 16, mode: "CTR", type: "stream" }, "aes-128-gcm": { cipher: "AES", key: 128, iv: 12, mode: "GCM", type: "auth" }, "aes-192-gcm": { cipher: "AES", key: 192, iv: 12, mode: "GCM", type: "auth" }, "aes-256-gcm": { cipher: "AES", key: 256, iv: 12, mode: "GCM", type: "auth" } };
  });
  ys2 = T3((TT, mm) => {
    var m9 = { ECB: tm(), CBC: nm(), CFB: om(), CFB8: hm(), CFB1: lm(), OFB: cm(), CTR: Cu(), GCM: Cu() }, gs = Ou();
    for (Fu2 in gs)
      gs[Fu2].module = m9[gs[Fu2].mode];
    var Fu2;
    mm.exports = gs;
  });
  Aa2 = T3((kT, ym) => {
    var ws = Te().Buffer;
    function zu(t) {
      ws.isBuffer(t) || (t = ws.from(t));
      for (var e = t.length / 4 | 0, r = new Array(e), o = 0;o < e; o++)
        r[o] = t.readUInt32BE(o * 4);
      return r;
    }
    function Uu(t) {
      for (var e = 0;e < t.length; t++)
        t[e] = 0;
    }
    function gm(t, e, r, o, f2) {
      for (var p3 = r[0], m3 = r[1], y3 = r[2], M2 = r[3], x4 = t[0] ^ e[0], S3 = t[1] ^ e[1], E4 = t[2] ^ e[2], B3 = t[3] ^ e[3], q2, L3, ge2, _e, N3 = 4, we = 1;we < f2; we++)
        q2 = p3[x4 >>> 24] ^ m3[S3 >>> 16 & 255] ^ y3[E4 >>> 8 & 255] ^ M2[B3 & 255] ^ e[N3++], L3 = p3[S3 >>> 24] ^ m3[E4 >>> 16 & 255] ^ y3[B3 >>> 8 & 255] ^ M2[x4 & 255] ^ e[N3++], ge2 = p3[E4 >>> 24] ^ m3[B3 >>> 16 & 255] ^ y3[x4 >>> 8 & 255] ^ M2[S3 & 255] ^ e[N3++], _e = p3[B3 >>> 24] ^ m3[x4 >>> 16 & 255] ^ y3[S3 >>> 8 & 255] ^ M2[E4 & 255] ^ e[N3++], x4 = q2, S3 = L3, E4 = ge2, B3 = _e;
      return q2 = (o[x4 >>> 24] << 24 | o[S3 >>> 16 & 255] << 16 | o[E4 >>> 8 & 255] << 8 | o[B3 & 255]) ^ e[N3++], L3 = (o[S3 >>> 24] << 24 | o[E4 >>> 16 & 255] << 16 | o[B3 >>> 8 & 255] << 8 | o[x4 & 255]) ^ e[N3++], ge2 = (o[E4 >>> 24] << 24 | o[B3 >>> 16 & 255] << 16 | o[x4 >>> 8 & 255] << 8 | o[S3 & 255]) ^ e[N3++], _e = (o[B3 >>> 24] << 24 | o[x4 >>> 16 & 255] << 16 | o[S3 >>> 8 & 255] << 8 | o[E4 & 255]) ^ e[N3++], q2 = q2 >>> 0, L3 = L3 >>> 0, ge2 = ge2 >>> 0, _e = _e >>> 0, [q2, L3, ge2, _e];
    }
    var g9 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], kt = function() {
      for (var t = new Array(256), e = 0;e < 256; e++)
        e < 128 ? t[e] = e << 1 : t[e] = e << 1 ^ 283;
      for (var r = [], o = [], f2 = [[], [], [], []], p3 = [[], [], [], []], m3 = 0, y3 = 0, M2 = 0;M2 < 256; ++M2) {
        var x4 = y3 ^ y3 << 1 ^ y3 << 2 ^ y3 << 3 ^ y3 << 4;
        x4 = x4 >>> 8 ^ x4 & 255 ^ 99, r[m3] = x4, o[x4] = m3;
        var S3 = t[m3], E4 = t[S3], B3 = t[E4], q2 = t[x4] * 257 ^ x4 * 16843008;
        f2[0][m3] = q2 << 24 | q2 >>> 8, f2[1][m3] = q2 << 16 | q2 >>> 16, f2[2][m3] = q2 << 8 | q2 >>> 24, f2[3][m3] = q2, q2 = B3 * 16843009 ^ E4 * 65537 ^ S3 * 257 ^ m3 * 16843008, p3[0][x4] = q2 << 24 | q2 >>> 8, p3[1][x4] = q2 << 16 | q2 >>> 16, p3[2][x4] = q2 << 8 | q2 >>> 24, p3[3][x4] = q2, m3 === 0 ? m3 = y3 = 1 : (m3 = S3 ^ t[t[t[B3 ^ S3]]], y3 ^= t[t[y3]]);
      }
      return { SBOX: r, INV_SBOX: o, SUB_MIX: f2, INV_SUB_MIX: p3 };
    }();
    function gr2(t) {
      this._key = zu(t), this._reset();
    }
    gr2.blockSize = 4 * 4;
    gr2.keySize = 256 / 8;
    gr2.prototype.blockSize = gr2.blockSize;
    gr2.prototype.keySize = gr2.keySize;
    gr2.prototype._reset = function() {
      for (var t = this._key, e = t.length, r = e + 6, o = (r + 1) * 4, f2 = [], p3 = 0;p3 < e; p3++)
        f2[p3] = t[p3];
      for (p3 = e;p3 < o; p3++) {
        var m3 = f2[p3 - 1];
        p3 % e === 0 ? (m3 = m3 << 8 | m3 >>> 24, m3 = kt.SBOX[m3 >>> 24] << 24 | kt.SBOX[m3 >>> 16 & 255] << 16 | kt.SBOX[m3 >>> 8 & 255] << 8 | kt.SBOX[m3 & 255], m3 ^= g9[p3 / e | 0] << 24) : e > 6 && p3 % e === 4 && (m3 = kt.SBOX[m3 >>> 24] << 24 | kt.SBOX[m3 >>> 16 & 255] << 16 | kt.SBOX[m3 >>> 8 & 255] << 8 | kt.SBOX[m3 & 255]), f2[p3] = f2[p3 - e] ^ m3;
      }
      for (var y3 = [], M2 = 0;M2 < o; M2++) {
        var x4 = o - M2, S3 = f2[x4 - (M2 % 4 ? 0 : 4)];
        M2 < 4 || x4 <= 4 ? y3[M2] = S3 : y3[M2] = kt.INV_SUB_MIX[0][kt.SBOX[S3 >>> 24]] ^ kt.INV_SUB_MIX[1][kt.SBOX[S3 >>> 16 & 255]] ^ kt.INV_SUB_MIX[2][kt.SBOX[S3 >>> 8 & 255]] ^ kt.INV_SUB_MIX[3][kt.SBOX[S3 & 255]];
      }
      this._nRounds = r, this._keySchedule = f2, this._invKeySchedule = y3;
    };
    gr2.prototype.encryptBlockRaw = function(t) {
      return t = zu(t), gm(t, this._keySchedule, kt.SUB_MIX, kt.SBOX, this._nRounds);
    };
    gr2.prototype.encryptBlock = function(t) {
      var e = this.encryptBlockRaw(t), r = ws.allocUnsafe(16);
      return r.writeUInt32BE(e[0], 0), r.writeUInt32BE(e[1], 4), r.writeUInt32BE(e[2], 8), r.writeUInt32BE(e[3], 12), r;
    };
    gr2.prototype.decryptBlock = function(t) {
      t = zu(t);
      var e = t[1];
      t[1] = t[3], t[3] = e;
      var r = gm(t, this._invKeySchedule, kt.INV_SUB_MIX, kt.INV_SBOX, this._nRounds), o = ws.allocUnsafe(16);
      return o.writeUInt32BE(r[0], 0), o.writeUInt32BE(r[3], 4), o.writeUInt32BE(r[2], 8), o.writeUInt32BE(r[1], 12), o;
    };
    gr2.prototype.scrub = function() {
      Uu(this._keySchedule), Uu(this._invKeySchedule), Uu(this._key);
    };
    ym.exports.AES = gr2;
  });
  _m = T3((LT, Mm) => {
    var wf = Te().Buffer, y9 = wf.alloc(16, 0);
    function w9(t) {
      return [t.readUInt32BE(0), t.readUInt32BE(4), t.readUInt32BE(8), t.readUInt32BE(12)];
    }
    function wm(t) {
      var e = wf.allocUnsafe(16);
      return e.writeUInt32BE(t[0] >>> 0, 0), e.writeUInt32BE(t[1] >>> 0, 4), e.writeUInt32BE(t[2] >>> 0, 8), e.writeUInt32BE(t[3] >>> 0, 12), e;
    }
    function Ra(t) {
      this.h = t, this.state = wf.alloc(16, 0), this.cache = wf.allocUnsafe(0);
    }
    Ra.prototype.ghash = function(t) {
      for (var e = -1;++e < t.length; )
        this.state[e] ^= t[e];
      this._multiply();
    };
    Ra.prototype._multiply = function() {
      for (var t = w9(this.h), e = [0, 0, 0, 0], r, o, f2, p3 = -1;++p3 < 128; ) {
        for (o = (this.state[~~(p3 / 8)] & 1 << 7 - p3 % 8) !== 0, o && (e[0] ^= t[0], e[1] ^= t[1], e[2] ^= t[2], e[3] ^= t[3]), f2 = (t[3] & 1) !== 0, r = 3;r > 0; r--)
          t[r] = t[r] >>> 1 | (t[r - 1] & 1) << 31;
        t[0] = t[0] >>> 1, f2 && (t[0] = t[0] ^ 225 << 24);
      }
      this.state = wm(e);
    };
    Ra.prototype.update = function(t) {
      this.cache = wf.concat([this.cache, t]);
      for (var e;this.cache.length >= 16; )
        e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e);
    };
    Ra.prototype.final = function(t, e) {
      return this.cache.length && this.ghash(wf.concat([this.cache, y9], 16)), this.ghash(wm([0, t, 0, e])), this.state;
    };
    Mm.exports = Ra;
  });
  Hu2 = T3((NT, Em) => {
    var M9 = Aa2(), tr2 = Te().Buffer, xm = yi2(), _9 = Ie2(), Sm = _m(), x9 = yf(), S9 = Du();
    function E9(t, e) {
      var r = 0;
      t.length !== e.length && r++;
      for (var o = Math.min(t.length, e.length), f2 = 0;f2 < o; ++f2)
        r += t[f2] ^ e[f2];
      return r;
    }
    function A9(t, e, r) {
      if (e.length === 12)
        return t._finID = tr2.concat([e, tr2.from([0, 0, 0, 1])]), tr2.concat([e, tr2.from([0, 0, 0, 2])]);
      var o = new Sm(r), f2 = e.length, p3 = f2 % 16;
      o.update(e), p3 && (p3 = 16 - p3, o.update(tr2.alloc(p3, 0))), o.update(tr2.alloc(8, 0));
      var m3 = f2 * 8, y3 = tr2.alloc(8);
      y3.writeUIntBE(m3, 0, 8), o.update(y3), t._finID = o.state;
      var M2 = tr2.from(t._finID);
      return S9(M2), M2;
    }
    function Bn(t, e, r, o) {
      xm.call(this);
      var f2 = tr2.alloc(4, 0);
      this._cipher = new M9.AES(e);
      var p3 = this._cipher.encryptBlock(f2);
      this._ghash = new Sm(p3), r = A9(this, r, p3), this._prev = tr2.from(r), this._cache = tr2.allocUnsafe(0), this._secCache = tr2.allocUnsafe(0), this._decrypt = o, this._alen = 0, this._len = 0, this._mode = t, this._authTag = null, this._called = false;
    }
    _9(Bn, xm);
    Bn.prototype._update = function(t) {
      if (!this._called && this._alen) {
        var e = 16 - this._alen % 16;
        e < 16 && (e = tr2.alloc(e, 0), this._ghash.update(e));
      }
      this._called = true;
      var r = this._mode.encrypt(this, t);
      return this._decrypt ? this._ghash.update(t) : this._ghash.update(r), this._len += t.length, r;
    };
    Bn.prototype._final = function() {
      if (this._decrypt && !this._authTag)
        throw new Error("Unsupported state or unable to authenticate data");
      var t = x9(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
      if (this._decrypt && E9(t, this._authTag))
        throw new Error("Unsupported state or unable to authenticate data");
      this._authTag = t, this._cipher.scrub();
    };
    Bn.prototype.getAuthTag = function() {
      if (this._decrypt || !tr2.isBuffer(this._authTag))
        throw new Error("Attempting to get auth tag in unsupported state");
      return this._authTag;
    };
    Bn.prototype.setAuthTag = function(e) {
      if (!this._decrypt)
        throw new Error("Attempting to set auth tag in unsupported state");
      this._authTag = e;
    };
    Bn.prototype.setAAD = function(e) {
      if (this._called)
        throw new Error("Attempting to set AAD in unsupported state");
      this._ghash.update(e), this._alen += e.length;
    };
    Em.exports = Bn;
  });
  Ku = T3((DT, Rm) => {
    var R9 = Aa2(), Wu = Te().Buffer, Am = yi2(), B9 = Ie2();
    function Ms2(t, e, r, o) {
      Am.call(this), this._cipher = new R9.AES(e), this._prev = Wu.from(r), this._cache = Wu.allocUnsafe(0), this._secCache = Wu.allocUnsafe(0), this._decrypt = o, this._mode = t;
    }
    B9(Ms2, Am);
    Ms2.prototype._update = function(t) {
      return this._mode.encrypt(this, t, this._decrypt);
    };
    Ms2.prototype._final = function() {
      this._cipher.scrub();
    };
    Rm.exports = Ms2;
  });
  Ba = T3((PT, Bm) => {
    var qn = Te().Buffer, q9 = Eo2();
    function I9(t, e, r, o) {
      if (qn.isBuffer(t) || (t = qn.from(t, "binary")), e && (qn.isBuffer(e) || (e = qn.from(e, "binary")), e.length !== 8))
        throw new RangeError("salt should be Buffer with 8 byte length");
      for (var f2 = r / 8, p3 = qn.alloc(f2), m3 = qn.alloc(o || 0), y3 = qn.alloc(0);f2 > 0 || o > 0; ) {
        var M2 = new q9;
        M2.update(y3), M2.update(t), e && M2.update(e), y3 = M2.digest();
        var x4 = 0;
        if (f2 > 0) {
          var S3 = p3.length - f2;
          x4 = Math.min(f2, y3.length), y3.copy(p3, S3, 0, x4), f2 -= x4;
        }
        if (x4 < y3.length && o > 0) {
          var E4 = m3.length - o, B3 = Math.min(o, y3.length - x4);
          y3.copy(m3, E4, x4, x4 + B3), o -= B3;
        }
      }
      return y3.fill(0), { key: p3, iv: m3 };
    }
    Bm.exports = I9;
  });
  km = T3((ju2) => {
    var qm = ys2(), T9 = Hu2(), Mi2 = Te().Buffer, k9 = Ku(), Im = yi2(), L9 = Aa2(), N9 = Ba(), D9 = Ie2();
    function qa(t, e, r) {
      Im.call(this), this._cache = new _s2, this._cipher = new L9.AES(e), this._prev = Mi2.from(r), this._mode = t, this._autopadding = true;
    }
    D9(qa, Im);
    qa.prototype._update = function(t) {
      this._cache.add(t);
      for (var e, r, o = [];e = this._cache.get(); )
        r = this._mode.encrypt(this, e), o.push(r);
      return Mi2.concat(o);
    };
    var P9 = Mi2.alloc(16, 16);
    qa.prototype._final = function() {
      var t = this._cache.flush();
      if (this._autopadding)
        return t = this._mode.encrypt(this, t), this._cipher.scrub(), t;
      if (!t.equals(P9))
        throw this._cipher.scrub(), new Error("data not multiple of block length");
    };
    qa.prototype.setAutoPadding = function(t) {
      return this._autopadding = !!t, this;
    };
    function _s2() {
      this.cache = Mi2.allocUnsafe(0);
    }
    _s2.prototype.add = function(t) {
      this.cache = Mi2.concat([this.cache, t]);
    };
    _s2.prototype.get = function() {
      if (this.cache.length > 15) {
        var t = this.cache.slice(0, 16);
        return this.cache = this.cache.slice(16), t;
      }
      return null;
    };
    _s2.prototype.flush = function() {
      for (var t = 16 - this.cache.length, e = Mi2.allocUnsafe(t), r = -1;++r < t; )
        e.writeUInt8(t, r);
      return Mi2.concat([this.cache, e]);
    };
    function Tm(t, e, r) {
      var o = qm[t.toLowerCase()];
      if (!o)
        throw new TypeError("invalid suite type");
      if (typeof e == "string" && (e = Mi2.from(e)), e.length !== o.key / 8)
        throw new TypeError("invalid key length " + e.length);
      if (typeof r == "string" && (r = Mi2.from(r)), o.mode !== "GCM" && r.length !== o.iv)
        throw new TypeError("invalid iv length " + r.length);
      return o.type === "stream" ? new k9(o.module, e, r) : o.type === "auth" ? new T9(o.module, e, r) : new qa(o.module, e, r);
    }
    function C9(t, e) {
      var r = qm[t.toLowerCase()];
      if (!r)
        throw new TypeError("invalid suite type");
      var o = N9(e, false, r.key, r.iv);
      return Tm(t, o.key, o.iv);
    }
    ju2.createCipheriv = Tm;
    ju2.createCipher = C9;
  });
  Pm = T3((Zu) => {
    var O9 = Hu2(), Mf = Te().Buffer, Lm = ys2(), F9 = Ku(), Nm = yi2(), U9 = Aa2(), z9 = Ba(), H9 = Ie2();
    function Ia(t, e, r) {
      Nm.call(this), this._cache = new xs, this._last = undefined, this._cipher = new U9.AES(e), this._prev = Mf.from(r), this._mode = t, this._autopadding = true;
    }
    H9(Ia, Nm);
    Ia.prototype._update = function(t) {
      this._cache.add(t);
      for (var e, r, o = [];e = this._cache.get(this._autopadding); )
        r = this._mode.decrypt(this, e), o.push(r);
      return Mf.concat(o);
    };
    Ia.prototype._final = function() {
      var t = this._cache.flush();
      if (this._autopadding)
        return W9(this._mode.decrypt(this, t));
      if (t)
        throw new Error("data not multiple of block length");
    };
    Ia.prototype.setAutoPadding = function(t) {
      return this._autopadding = !!t, this;
    };
    function xs() {
      this.cache = Mf.allocUnsafe(0);
    }
    xs.prototype.add = function(t) {
      this.cache = Mf.concat([this.cache, t]);
    };
    xs.prototype.get = function(t) {
      var e;
      if (t) {
        if (this.cache.length > 16)
          return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
      } else if (this.cache.length >= 16)
        return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
      return null;
    };
    xs.prototype.flush = function() {
      if (this.cache.length)
        return this.cache;
    };
    function W9(t) {
      var e = t[15];
      if (e < 1 || e > 16)
        throw new Error("unable to decrypt data");
      for (var r = -1;++r < e; )
        if (t[r + (16 - e)] !== e)
          throw new Error("unable to decrypt data");
      if (e !== 16)
        return t.slice(0, 16 - e);
    }
    function Dm(t, e, r) {
      var o = Lm[t.toLowerCase()];
      if (!o)
        throw new TypeError("invalid suite type");
      if (typeof r == "string" && (r = Mf.from(r)), o.mode !== "GCM" && r.length !== o.iv)
        throw new TypeError("invalid iv length " + r.length);
      if (typeof e == "string" && (e = Mf.from(e)), e.length !== o.key / 8)
        throw new TypeError("invalid key length " + e.length);
      return o.type === "stream" ? new F9(o.module, e, r, true) : o.type === "auth" ? new O9(o.module, e, r, true) : new Ia(o.module, e, r);
    }
    function K9(t, e) {
      var r = Lm[t.toLowerCase()];
      if (!r)
        throw new TypeError("invalid suite type");
      var o = z9(e, false, r.key, r.iv);
      return Dm(t, o.key, o.iv);
    }
    Zu.createDecipher = K9;
    Zu.createDecipheriv = Dm;
  });
  Ss = T3((Nr) => {
    var Cm = km(), Om = Pm(), j9 = Ou();
    function Z9() {
      return Object.keys(j9);
    }
    Nr.createCipher = Nr.Cipher = Cm.createCipher;
    Nr.createCipheriv = Nr.Cipheriv = Cm.createCipheriv;
    Nr.createDecipher = Nr.Decipher = Om.createDecipher;
    Nr.createDecipheriv = Nr.Decipheriv = Om.createDecipheriv;
    Nr.listCiphers = Nr.getCiphers = Z9;
  });
  Fm = T3((_i) => {
    _i["des-ecb"] = { key: 8, iv: 0 };
    _i["des-cbc"] = _i.des = { key: 8, iv: 8 };
    _i["des-ede3-cbc"] = _i.des3 = { key: 24, iv: 8 };
    _i["des-ede3"] = { key: 24, iv: 0 };
    _i["des-ede-cbc"] = { key: 16, iv: 8 };
    _i["des-ede"] = { key: 16, iv: 0 };
  });
  Km = T3((Dr) => {
    var Um = em(), Vu = Ss(), Ki2 = ys2(), xi2 = Fm(), zm = Ba();
    function V9(t, e) {
      t = t.toLowerCase();
      var r, o;
      if (Ki2[t])
        r = Ki2[t].key, o = Ki2[t].iv;
      else if (xi2[t])
        r = xi2[t].key * 8, o = xi2[t].iv;
      else
        throw new TypeError("invalid suite type");
      var f2 = zm(e, false, r, o);
      return Hm(t, f2.key, f2.iv);
    }
    function $9(t, e) {
      t = t.toLowerCase();
      var r, o;
      if (Ki2[t])
        r = Ki2[t].key, o = Ki2[t].iv;
      else if (xi2[t])
        r = xi2[t].key * 8, o = xi2[t].iv;
      else
        throw new TypeError("invalid suite type");
      var f2 = zm(e, false, r, o);
      return Wm(t, f2.key, f2.iv);
    }
    function Hm(t, e, r) {
      if (t = t.toLowerCase(), Ki2[t])
        return Vu.createCipheriv(t, e, r);
      if (xi2[t])
        return new Um({ key: e, iv: r, mode: t });
      throw new TypeError("invalid suite type");
    }
    function Wm(t, e, r) {
      if (t = t.toLowerCase(), Ki2[t])
        return Vu.createDecipheriv(t, e, r);
      if (xi2[t])
        return new Um({ key: e, iv: r, mode: t, decrypt: true });
      throw new TypeError("invalid suite type");
    }
    function G9() {
      return Object.keys(xi2).concat(Vu.getCiphers());
    }
    Dr.createCipher = Dr.Cipher = V9;
    Dr.createCipheriv = Dr.Cipheriv = Hm;
    Dr.createDecipher = Dr.Decipher = $9;
    Dr.createDecipheriv = Dr.Decipheriv = Wm;
    Dr.listCiphers = Dr.getCiphers = G9;
  });
  ji = T3(() => {});
  Gu = T3((jm, $u2) => {
    (function(t, e) {
      function r(v2, i) {
        if (!v2)
          throw new Error(i || "Assertion failed");
      }
      function o(v2, i) {
        v2.super_ = i;
        var a3 = function() {};
        a3.prototype = i.prototype, v2.prototype = new a3, v2.prototype.constructor = v2;
      }
      function f2(v2, i, a3) {
        if (f2.isBN(v2))
          return v2;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v2 !== null && ((i === "le" || i === "be") && (a3 = i, i = 10), this._init(v2 || 0, i || 10, a3 || "be"));
      }
      typeof t == "object" ? t.exports = f2 : e.BN = f2, f2.BN = f2, f2.wordSize = 26;
      var p3;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p3 = window.Buffer : p3 = ji().Buffer;
      } catch {}
      f2.isBN = function(i) {
        return i instanceof f2 ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f2.wordSize && Array.isArray(i.words);
      }, f2.max = function(i, a3) {
        return i.cmp(a3) > 0 ? i : a3;
      }, f2.min = function(i, a3) {
        return i.cmp(a3) < 0 ? i : a3;
      }, f2.prototype._init = function(i, a3, h3) {
        if (typeof i == "number")
          return this._initNumber(i, a3, h3);
        if (typeof i == "object")
          return this._initArray(i, a3, h3);
        a3 === "hex" && (a3 = 16), r(a3 === (a3 | 0) && a3 >= 2 && a3 <= 36), i = i.toString().replace(/\s+/g, "");
        var s2 = 0;
        i[0] === "-" && (s2++, this.negative = 1), s2 < i.length && (a3 === 16 ? this._parseHex(i, s2, h3) : (this._parseBase(i, a3, s2), h3 === "le" && this._initArray(this.toArray(), a3, h3)));
      }, f2.prototype._initNumber = function(i, a3, h3) {
        i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h3 === "le" && this._initArray(this.toArray(), a3, h3);
      }, f2.prototype._initArray = function(i, a3, h3) {
        if (r(typeof i.length == "number"), i.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3, c2, b3 = 0;
        if (h3 === "be")
          for (s2 = i.length - 1, u3 = 0;s2 >= 0; s2 -= 3)
            c2 = i[s2] | i[s2 - 1] << 8 | i[s2 - 2] << 16, this.words[u3] |= c2 << b3 & 67108863, this.words[u3 + 1] = c2 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        else if (h3 === "le")
          for (s2 = 0, u3 = 0;s2 < i.length; s2 += 3)
            c2 = i[s2] | i[s2 + 1] << 8 | i[s2 + 2] << 16, this.words[u3] |= c2 << b3 & 67108863, this.words[u3 + 1] = c2 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        return this.strip();
      };
      function m3(v2, i) {
        var a3 = v2.charCodeAt(i);
        return a3 >= 65 && a3 <= 70 ? a3 - 55 : a3 >= 97 && a3 <= 102 ? a3 - 87 : a3 - 48 & 15;
      }
      function y3(v2, i, a3) {
        var h3 = m3(v2, a3);
        return a3 - 1 >= i && (h3 |= m3(v2, a3 - 1) << 4), h3;
      }
      f2.prototype._parseHex = function(i, a3, h3) {
        this.length = Math.ceil((i.length - a3) / 6), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3 = 0, c2 = 0, b3;
        if (h3 === "be")
          for (s2 = i.length - 1;s2 >= a3; s2 -= 2)
            b3 = y3(i, a3, s2) << u3, this.words[c2] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c2 += 1, this.words[c2] |= b3 >>> 26) : u3 += 8;
        else {
          var l2 = i.length - a3;
          for (s2 = l2 % 2 === 0 ? a3 + 1 : a3;s2 < i.length; s2 += 2)
            b3 = y3(i, a3, s2) << u3, this.words[c2] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c2 += 1, this.words[c2] |= b3 >>> 26) : u3 += 8;
        }
        this.strip();
      };
      function M2(v2, i, a3, h3) {
        for (var s2 = 0, u3 = Math.min(v2.length, a3), c2 = i;c2 < u3; c2++) {
          var b3 = v2.charCodeAt(c2) - 48;
          s2 *= h3, b3 >= 49 ? s2 += b3 - 49 + 10 : b3 >= 17 ? s2 += b3 - 17 + 10 : s2 += b3;
        }
        return s2;
      }
      f2.prototype._parseBase = function(i, a3, h3) {
        this.words = [0], this.length = 1;
        for (var s2 = 0, u3 = 1;u3 <= 67108863; u3 *= a3)
          s2++;
        s2--, u3 = u3 / a3 | 0;
        for (var c2 = i.length - h3, b3 = c2 % s2, l2 = Math.min(c2, c2 - b3) + h3, n = 0, d3 = h3;d3 < l2; d3 += s2)
          n = M2(i, d3, d3 + s2, a3), this.imuln(u3), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        if (b3 !== 0) {
          var w = 1;
          for (n = M2(i, d3, i.length, a3), d3 = 0;d3 < b3; d3++)
            w *= a3;
          this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        }
        this.strip();
      }, f2.prototype.copy = function(i) {
        i.words = new Array(this.length);
        for (var a3 = 0;a3 < this.length; a3++)
          i.words[a3] = this.words[a3];
        i.length = this.length, i.negative = this.negative, i.red = this.red;
      }, f2.prototype.clone = function() {
        var i = new f2(null);
        return this.copy(i), i;
      }, f2.prototype._expand = function(i) {
        for (;this.length < i; )
          this.words[this.length++] = 0;
        return this;
      }, f2.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f2.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f2.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E4 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f2.prototype.toString = function(i, a3) {
        i = i || 10, a3 = a3 | 0 || 1;
        var h3;
        if (i === 16 || i === "hex") {
          h3 = "";
          for (var s2 = 0, u3 = 0, c2 = 0;c2 < this.length; c2++) {
            var b3 = this.words[c2], l2 = ((b3 << s2 | u3) & 16777215).toString(16);
            u3 = b3 >>> 24 - s2 & 16777215, u3 !== 0 || c2 !== this.length - 1 ? h3 = x4[6 - l2.length] + l2 + h3 : h3 = l2 + h3, s2 += 2, s2 >= 26 && (s2 -= 26, c2--);
          }
          for (u3 !== 0 && (h3 = u3.toString(16) + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        if (i === (i | 0) && i >= 2 && i <= 36) {
          var n = S3[i], d3 = E4[i];
          h3 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g3 = w.modn(d3).toString(i);
            w = w.idivn(d3), w.isZero() ? h3 = g3 + h3 : h3 = x4[n - g3.length] + g3 + h3;
          }
          for (this.isZero() && (h3 = "0" + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        r(false, "Base should be between 2 and 36");
      }, f2.prototype.toNumber = function() {
        var i = this.words[0];
        return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
      }, f2.prototype.toJSON = function() {
        return this.toString(16);
      }, f2.prototype.toBuffer = function(i, a3) {
        return r(typeof p3 < "u"), this.toArrayLike(p3, i, a3);
      }, f2.prototype.toArray = function(i, a3) {
        return this.toArrayLike(Array, i, a3);
      }, f2.prototype.toArrayLike = function(i, a3, h3) {
        var s2 = this.byteLength(), u3 = h3 || Math.max(1, s2);
        r(s2 <= u3, "byte array longer than desired length"), r(u3 > 0, "Requested array length <= 0"), this.strip();
        var c2 = a3 === "le", b3 = new i(u3), l2, n, d3 = this.clone();
        if (c2) {
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[n] = l2;
          for (;n < u3; n++)
            b3[n] = 0;
        } else {
          for (n = 0;n < u3 - s2; n++)
            b3[n] = 0;
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[u3 - n - 1] = l2;
        }
        return b3;
      }, Math.clz32 ? f2.prototype._countBits = function(i) {
        return 32 - Math.clz32(i);
      } : f2.prototype._countBits = function(i) {
        var a3 = i, h3 = 0;
        return a3 >= 4096 && (h3 += 13, a3 >>>= 13), a3 >= 64 && (h3 += 7, a3 >>>= 7), a3 >= 8 && (h3 += 4, a3 >>>= 4), a3 >= 2 && (h3 += 2, a3 >>>= 2), h3 + a3;
      }, f2.prototype._zeroBits = function(i) {
        if (i === 0)
          return 26;
        var a3 = i, h3 = 0;
        return (a3 & 8191) === 0 && (h3 += 13, a3 >>>= 13), (a3 & 127) === 0 && (h3 += 7, a3 >>>= 7), (a3 & 15) === 0 && (h3 += 4, a3 >>>= 4), (a3 & 3) === 0 && (h3 += 2, a3 >>>= 2), (a3 & 1) === 0 && h3++, h3;
      }, f2.prototype.bitLength = function() {
        var i = this.words[this.length - 1], a3 = this._countBits(i);
        return (this.length - 1) * 26 + a3;
      };
      function B3(v2) {
        for (var i = new Array(v2.bitLength()), a3 = 0;a3 < i.length; a3++) {
          var h3 = a3 / 26 | 0, s2 = a3 % 26;
          i[a3] = (v2.words[h3] & 1 << s2) >>> s2;
        }
        return i;
      }
      f2.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i = 0, a3 = 0;a3 < this.length; a3++) {
          var h3 = this._zeroBits(this.words[a3]);
          if (i += h3, h3 !== 26)
            break;
        }
        return i;
      }, f2.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f2.prototype.toTwos = function(i) {
        return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
      }, f2.prototype.fromTwos = function(i) {
        return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
      }, f2.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f2.prototype.neg = function() {
        return this.clone().ineg();
      }, f2.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f2.prototype.iuor = function(i) {
        for (;this.length < i.length; )
          this.words[this.length++] = 0;
        for (var a3 = 0;a3 < i.length; a3++)
          this.words[a3] = this.words[a3] | i.words[a3];
        return this.strip();
      }, f2.prototype.ior = function(i) {
        return r((this.negative | i.negative) === 0), this.iuor(i);
      }, f2.prototype.or = function(i) {
        return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
      }, f2.prototype.uor = function(i) {
        return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
      }, f2.prototype.iuand = function(i) {
        var a3;
        this.length > i.length ? a3 = i : a3 = this;
        for (var h3 = 0;h3 < a3.length; h3++)
          this.words[h3] = this.words[h3] & i.words[h3];
        return this.length = a3.length, this.strip();
      }, f2.prototype.iand = function(i) {
        return r((this.negative | i.negative) === 0), this.iuand(i);
      }, f2.prototype.and = function(i) {
        return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
      }, f2.prototype.uand = function(i) {
        return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
      }, f2.prototype.iuxor = function(i) {
        var a3, h3;
        this.length > i.length ? (a3 = this, h3 = i) : (a3 = i, h3 = this);
        for (var s2 = 0;s2 < h3.length; s2++)
          this.words[s2] = a3.words[s2] ^ h3.words[s2];
        if (this !== a3)
          for (;s2 < a3.length; s2++)
            this.words[s2] = a3.words[s2];
        return this.length = a3.length, this.strip();
      }, f2.prototype.ixor = function(i) {
        return r((this.negative | i.negative) === 0), this.iuxor(i);
      }, f2.prototype.xor = function(i) {
        return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
      }, f2.prototype.uxor = function(i) {
        return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
      }, f2.prototype.inotn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = Math.ceil(i / 26) | 0, h3 = i % 26;
        this._expand(a3), h3 > 0 && a3--;
        for (var s2 = 0;s2 < a3; s2++)
          this.words[s2] = ~this.words[s2] & 67108863;
        return h3 > 0 && (this.words[s2] = ~this.words[s2] & 67108863 >> 26 - h3), this.strip();
      }, f2.prototype.notn = function(i) {
        return this.clone().inotn(i);
      }, f2.prototype.setn = function(i, a3) {
        r(typeof i == "number" && i >= 0);
        var h3 = i / 26 | 0, s2 = i % 26;
        return this._expand(h3 + 1), a3 ? this.words[h3] = this.words[h3] | 1 << s2 : this.words[h3] = this.words[h3] & ~(1 << s2), this.strip();
      }, f2.prototype.iadd = function(i) {
        var a3;
        if (this.negative !== 0 && i.negative === 0)
          return this.negative = 0, a3 = this.isub(i), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i.negative !== 0)
          return i.negative = 0, a3 = this.isub(i), i.negative = 1, a3._normSign();
        var h3, s2;
        this.length > i.length ? (h3 = this, s2 = i) : (h3 = i, s2 = this);
        for (var u3 = 0, c2 = 0;c2 < s2.length; c2++)
          a3 = (h3.words[c2] | 0) + (s2.words[c2] | 0) + u3, this.words[c2] = a3 & 67108863, u3 = a3 >>> 26;
        for (;u3 !== 0 && c2 < h3.length; c2++)
          a3 = (h3.words[c2] | 0) + u3, this.words[c2] = a3 & 67108863, u3 = a3 >>> 26;
        if (this.length = h3.length, u3 !== 0)
          this.words[this.length] = u3, this.length++;
        else if (h3 !== this)
          for (;c2 < h3.length; c2++)
            this.words[c2] = h3.words[c2];
        return this;
      }, f2.prototype.add = function(i) {
        var a3;
        return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a3 = this.sub(i), i.negative ^= 1, a3) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a3 = i.sub(this), this.negative = 1, a3) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
      }, f2.prototype.isub = function(i) {
        if (i.negative !== 0) {
          i.negative = 0;
          var a3 = this.iadd(i);
          return i.negative = 1, a3._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
        var h3 = this.cmp(i);
        if (h3 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s2, u3;
        h3 > 0 ? (s2 = this, u3 = i) : (s2 = i, u3 = this);
        for (var c2 = 0, b3 = 0;b3 < u3.length; b3++)
          a3 = (s2.words[b3] | 0) - (u3.words[b3] | 0) + c2, c2 = a3 >> 26, this.words[b3] = a3 & 67108863;
        for (;c2 !== 0 && b3 < s2.length; b3++)
          a3 = (s2.words[b3] | 0) + c2, c2 = a3 >> 26, this.words[b3] = a3 & 67108863;
        if (c2 === 0 && b3 < s2.length && s2 !== this)
          for (;b3 < s2.length; b3++)
            this.words[b3] = s2.words[b3];
        return this.length = Math.max(this.length, b3), s2 !== this && (this.negative = 1), this.strip();
      }, f2.prototype.sub = function(i) {
        return this.clone().isub(i);
      };
      function q2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative;
        var h3 = v2.length + i.length | 0;
        a3.length = h3, h3 = h3 - 1 | 0;
        var s2 = v2.words[0] | 0, u3 = i.words[0] | 0, c2 = s2 * u3, b3 = c2 & 67108863, l2 = c2 / 67108864 | 0;
        a3.words[0] = b3;
        for (var n = 1;n < h3; n++) {
          for (var d3 = l2 >>> 26, w = l2 & 67108863, g3 = Math.min(n, i.length - 1), _3 = Math.max(0, n - v2.length + 1);_3 <= g3; _3++) {
            var A2 = n - _3 | 0;
            s2 = v2.words[A2] | 0, u3 = i.words[_3] | 0, c2 = s2 * u3 + w, d3 += c2 / 67108864 | 0, w = c2 & 67108863;
          }
          a3.words[n] = w | 0, l2 = d3 | 0;
        }
        return l2 !== 0 ? a3.words[n] = l2 | 0 : a3.length--, a3.strip();
      }
      var L3 = function(i, a3, h3) {
        var s2 = i.words, u3 = a3.words, c2 = h3.words, b3 = 0, l2, n, d3, w = s2[0] | 0, g3 = w & 8191, _3 = w >>> 13, A2 = s2[1] | 0, R2 = A2 & 8191, I3 = A2 >>> 13, Me = s2[2] | 0, k3 = Me & 8191, D2 = Me >>> 13, nt2 = s2[3] | 0, C = nt2 & 8191, O4 = nt2 >>> 13, vt = s2[4] | 0, F = vt & 8191, U4 = vt >>> 13, bt2 = s2[5] | 0, z = bt2 & 8191, H2 = bt2 >>> 13, mt2 = s2[6] | 0, W = mt2 & 8191, K2 = mt2 >>> 13, gt4 = s2[7] | 0, j3 = gt4 & 8191, Z2 = gt4 >>> 13, yt2 = s2[8] | 0, V3 = yt2 & 8191, $2 = yt2 >>> 13, wt2 = s2[9] | 0, G3 = wt2 & 8191, Y2 = wt2 >>> 13, Mt = u3[0] | 0, X3 = Mt & 8191, J2 = Mt >>> 13, _t3 = u3[1] | 0, Q2 = _t3 & 8191, ee = _t3 >>> 13, xt = u3[2] | 0, te = xt & 8191, re = xt >>> 13, St = u3[3] | 0, ie2 = St & 8191, ne2 = St >>> 13, Et = u3[4] | 0, fe = Et & 8191, ae = Et >>> 13, At2 = u3[5] | 0, oe = At2 & 8191, se = At2 >>> 13, Rt = u3[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt2 = u3[7] | 0, le = Bt2 & 8191, de = Bt2 >>> 13, qt = u3[8] | 0, ce2 = qt & 8191, pe = qt >>> 13, It = u3[9] | 0, ve = It & 8191, be2 = It >>> 13;
        h3.negative = i.negative ^ a3.negative, h3.length = 19, l2 = Math.imul(g3, X3), n = Math.imul(g3, J2), n = n + Math.imul(_3, X3) | 0, d3 = Math.imul(_3, J2);
        var ft = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l2 = Math.imul(R2, X3), n = Math.imul(R2, J2), n = n + Math.imul(I3, X3) | 0, d3 = Math.imul(I3, J2), l2 = l2 + Math.imul(g3, Q2) | 0, n = n + Math.imul(g3, ee) | 0, n = n + Math.imul(_3, Q2) | 0, d3 = d3 + Math.imul(_3, ee) | 0;
        var Be = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l2 = Math.imul(k3, X3), n = Math.imul(k3, J2), n = n + Math.imul(D2, X3) | 0, d3 = Math.imul(D2, J2), l2 = l2 + Math.imul(R2, Q2) | 0, n = n + Math.imul(R2, ee) | 0, n = n + Math.imul(I3, Q2) | 0, d3 = d3 + Math.imul(I3, ee) | 0, l2 = l2 + Math.imul(g3, te) | 0, n = n + Math.imul(g3, re) | 0, n = n + Math.imul(_3, te) | 0, d3 = d3 + Math.imul(_3, re) | 0;
        var qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l2 = Math.imul(C, X3), n = Math.imul(C, J2), n = n + Math.imul(O4, X3) | 0, d3 = Math.imul(O4, J2), l2 = l2 + Math.imul(k3, Q2) | 0, n = n + Math.imul(k3, ee) | 0, n = n + Math.imul(D2, Q2) | 0, d3 = d3 + Math.imul(D2, ee) | 0, l2 = l2 + Math.imul(R2, te) | 0, n = n + Math.imul(R2, re) | 0, n = n + Math.imul(I3, te) | 0, d3 = d3 + Math.imul(I3, re) | 0, l2 = l2 + Math.imul(g3, ie2) | 0, n = n + Math.imul(g3, ne2) | 0, n = n + Math.imul(_3, ie2) | 0, d3 = d3 + Math.imul(_3, ne2) | 0;
        var ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l2 = Math.imul(F, X3), n = Math.imul(F, J2), n = n + Math.imul(U4, X3) | 0, d3 = Math.imul(U4, J2), l2 = l2 + Math.imul(C, Q2) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O4, Q2) | 0, d3 = d3 + Math.imul(O4, ee) | 0, l2 = l2 + Math.imul(k3, te) | 0, n = n + Math.imul(k3, re) | 0, n = n + Math.imul(D2, te) | 0, d3 = d3 + Math.imul(D2, re) | 0, l2 = l2 + Math.imul(R2, ie2) | 0, n = n + Math.imul(R2, ne2) | 0, n = n + Math.imul(I3, ie2) | 0, d3 = d3 + Math.imul(I3, ne2) | 0, l2 = l2 + Math.imul(g3, fe) | 0, n = n + Math.imul(g3, ae) | 0, n = n + Math.imul(_3, fe) | 0, d3 = d3 + Math.imul(_3, ae) | 0;
        var He2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (He2 >>> 26) | 0, He2 &= 67108863, l2 = Math.imul(z, X3), n = Math.imul(z, J2), n = n + Math.imul(H2, X3) | 0, d3 = Math.imul(H2, J2), l2 = l2 + Math.imul(F, Q2) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U4, Q2) | 0, d3 = d3 + Math.imul(U4, ee) | 0, l2 = l2 + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O4, te) | 0, d3 = d3 + Math.imul(O4, re) | 0, l2 = l2 + Math.imul(k3, ie2) | 0, n = n + Math.imul(k3, ne2) | 0, n = n + Math.imul(D2, ie2) | 0, d3 = d3 + Math.imul(D2, ne2) | 0, l2 = l2 + Math.imul(R2, fe) | 0, n = n + Math.imul(R2, ae) | 0, n = n + Math.imul(I3, fe) | 0, d3 = d3 + Math.imul(I3, ae) | 0, l2 = l2 + Math.imul(g3, oe) | 0, n = n + Math.imul(g3, se) | 0, n = n + Math.imul(_3, oe) | 0, d3 = d3 + Math.imul(_3, se) | 0;
        var We = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l2 = Math.imul(W, X3), n = Math.imul(W, J2), n = n + Math.imul(K2, X3) | 0, d3 = Math.imul(K2, J2), l2 = l2 + Math.imul(z, Q2) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H2, Q2) | 0, d3 = d3 + Math.imul(H2, ee) | 0, l2 = l2 + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U4, te) | 0, d3 = d3 + Math.imul(U4, re) | 0, l2 = l2 + Math.imul(C, ie2) | 0, n = n + Math.imul(C, ne2) | 0, n = n + Math.imul(O4, ie2) | 0, d3 = d3 + Math.imul(O4, ne2) | 0, l2 = l2 + Math.imul(k3, fe) | 0, n = n + Math.imul(k3, ae) | 0, n = n + Math.imul(D2, fe) | 0, d3 = d3 + Math.imul(D2, ae) | 0, l2 = l2 + Math.imul(R2, oe) | 0, n = n + Math.imul(R2, se) | 0, n = n + Math.imul(I3, oe) | 0, d3 = d3 + Math.imul(I3, se) | 0, l2 = l2 + Math.imul(g3, he) | 0, n = n + Math.imul(g3, ue) | 0, n = n + Math.imul(_3, he) | 0, d3 = d3 + Math.imul(_3, ue) | 0;
        var Ke = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l2 = Math.imul(j3, X3), n = Math.imul(j3, J2), n = n + Math.imul(Z2, X3) | 0, d3 = Math.imul(Z2, J2), l2 = l2 + Math.imul(W, Q2) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K2, Q2) | 0, d3 = d3 + Math.imul(K2, ee) | 0, l2 = l2 + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H2, te) | 0, d3 = d3 + Math.imul(H2, re) | 0, l2 = l2 + Math.imul(F, ie2) | 0, n = n + Math.imul(F, ne2) | 0, n = n + Math.imul(U4, ie2) | 0, d3 = d3 + Math.imul(U4, ne2) | 0, l2 = l2 + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O4, fe) | 0, d3 = d3 + Math.imul(O4, ae) | 0, l2 = l2 + Math.imul(k3, oe) | 0, n = n + Math.imul(k3, se) | 0, n = n + Math.imul(D2, oe) | 0, d3 = d3 + Math.imul(D2, se) | 0, l2 = l2 + Math.imul(R2, he) | 0, n = n + Math.imul(R2, ue) | 0, n = n + Math.imul(I3, he) | 0, d3 = d3 + Math.imul(I3, ue) | 0, l2 = l2 + Math.imul(g3, le) | 0, n = n + Math.imul(g3, de) | 0, n = n + Math.imul(_3, le) | 0, d3 = d3 + Math.imul(_3, de) | 0;
        var je = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l2 = Math.imul(V3, X3), n = Math.imul(V3, J2), n = n + Math.imul($2, X3) | 0, d3 = Math.imul($2, J2), l2 = l2 + Math.imul(j3, Q2) | 0, n = n + Math.imul(j3, ee) | 0, n = n + Math.imul(Z2, Q2) | 0, d3 = d3 + Math.imul(Z2, ee) | 0, l2 = l2 + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K2, te) | 0, d3 = d3 + Math.imul(K2, re) | 0, l2 = l2 + Math.imul(z, ie2) | 0, n = n + Math.imul(z, ne2) | 0, n = n + Math.imul(H2, ie2) | 0, d3 = d3 + Math.imul(H2, ne2) | 0, l2 = l2 + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U4, fe) | 0, d3 = d3 + Math.imul(U4, ae) | 0, l2 = l2 + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O4, oe) | 0, d3 = d3 + Math.imul(O4, se) | 0, l2 = l2 + Math.imul(k3, he) | 0, n = n + Math.imul(k3, ue) | 0, n = n + Math.imul(D2, he) | 0, d3 = d3 + Math.imul(D2, ue) | 0, l2 = l2 + Math.imul(R2, le) | 0, n = n + Math.imul(R2, de) | 0, n = n + Math.imul(I3, le) | 0, d3 = d3 + Math.imul(I3, de) | 0, l2 = l2 + Math.imul(g3, ce2) | 0, n = n + Math.imul(g3, pe) | 0, n = n + Math.imul(_3, ce2) | 0, d3 = d3 + Math.imul(_3, pe) | 0;
        var Ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l2 = Math.imul(G3, X3), n = Math.imul(G3, J2), n = n + Math.imul(Y2, X3) | 0, d3 = Math.imul(Y2, J2), l2 = l2 + Math.imul(V3, Q2) | 0, n = n + Math.imul(V3, ee) | 0, n = n + Math.imul($2, Q2) | 0, d3 = d3 + Math.imul($2, ee) | 0, l2 = l2 + Math.imul(j3, te) | 0, n = n + Math.imul(j3, re) | 0, n = n + Math.imul(Z2, te) | 0, d3 = d3 + Math.imul(Z2, re) | 0, l2 = l2 + Math.imul(W, ie2) | 0, n = n + Math.imul(W, ne2) | 0, n = n + Math.imul(K2, ie2) | 0, d3 = d3 + Math.imul(K2, ne2) | 0, l2 = l2 + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H2, fe) | 0, d3 = d3 + Math.imul(H2, ae) | 0, l2 = l2 + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U4, oe) | 0, d3 = d3 + Math.imul(U4, se) | 0, l2 = l2 + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O4, he) | 0, d3 = d3 + Math.imul(O4, ue) | 0, l2 = l2 + Math.imul(k3, le) | 0, n = n + Math.imul(k3, de) | 0, n = n + Math.imul(D2, le) | 0, d3 = d3 + Math.imul(D2, de) | 0, l2 = l2 + Math.imul(R2, ce2) | 0, n = n + Math.imul(R2, pe) | 0, n = n + Math.imul(I3, ce2) | 0, d3 = d3 + Math.imul(I3, pe) | 0, l2 = l2 + Math.imul(g3, ve) | 0, n = n + Math.imul(g3, be2) | 0, n = n + Math.imul(_3, ve) | 0, d3 = d3 + Math.imul(_3, be2) | 0;
        var Ve = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l2 = Math.imul(G3, Q2), n = Math.imul(G3, ee), n = n + Math.imul(Y2, Q2) | 0, d3 = Math.imul(Y2, ee), l2 = l2 + Math.imul(V3, te) | 0, n = n + Math.imul(V3, re) | 0, n = n + Math.imul($2, te) | 0, d3 = d3 + Math.imul($2, re) | 0, l2 = l2 + Math.imul(j3, ie2) | 0, n = n + Math.imul(j3, ne2) | 0, n = n + Math.imul(Z2, ie2) | 0, d3 = d3 + Math.imul(Z2, ne2) | 0, l2 = l2 + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K2, fe) | 0, d3 = d3 + Math.imul(K2, ae) | 0, l2 = l2 + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H2, oe) | 0, d3 = d3 + Math.imul(H2, se) | 0, l2 = l2 + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U4, he) | 0, d3 = d3 + Math.imul(U4, ue) | 0, l2 = l2 + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O4, le) | 0, d3 = d3 + Math.imul(O4, de) | 0, l2 = l2 + Math.imul(k3, ce2) | 0, n = n + Math.imul(k3, pe) | 0, n = n + Math.imul(D2, ce2) | 0, d3 = d3 + Math.imul(D2, pe) | 0, l2 = l2 + Math.imul(R2, ve) | 0, n = n + Math.imul(R2, be2) | 0, n = n + Math.imul(I3, ve) | 0, d3 = d3 + Math.imul(I3, be2) | 0;
        var $e2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + ($e2 >>> 26) | 0, $e2 &= 67108863, l2 = Math.imul(G3, te), n = Math.imul(G3, re), n = n + Math.imul(Y2, te) | 0, d3 = Math.imul(Y2, re), l2 = l2 + Math.imul(V3, ie2) | 0, n = n + Math.imul(V3, ne2) | 0, n = n + Math.imul($2, ie2) | 0, d3 = d3 + Math.imul($2, ne2) | 0, l2 = l2 + Math.imul(j3, fe) | 0, n = n + Math.imul(j3, ae) | 0, n = n + Math.imul(Z2, fe) | 0, d3 = d3 + Math.imul(Z2, ae) | 0, l2 = l2 + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K2, oe) | 0, d3 = d3 + Math.imul(K2, se) | 0, l2 = l2 + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H2, he) | 0, d3 = d3 + Math.imul(H2, ue) | 0, l2 = l2 + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U4, le) | 0, d3 = d3 + Math.imul(U4, de) | 0, l2 = l2 + Math.imul(C, ce2) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O4, ce2) | 0, d3 = d3 + Math.imul(O4, pe) | 0, l2 = l2 + Math.imul(k3, ve) | 0, n = n + Math.imul(k3, be2) | 0, n = n + Math.imul(D2, ve) | 0, d3 = d3 + Math.imul(D2, be2) | 0;
        var Ge2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ge2 >>> 26) | 0, Ge2 &= 67108863, l2 = Math.imul(G3, ie2), n = Math.imul(G3, ne2), n = n + Math.imul(Y2, ie2) | 0, d3 = Math.imul(Y2, ne2), l2 = l2 + Math.imul(V3, fe) | 0, n = n + Math.imul(V3, ae) | 0, n = n + Math.imul($2, fe) | 0, d3 = d3 + Math.imul($2, ae) | 0, l2 = l2 + Math.imul(j3, oe) | 0, n = n + Math.imul(j3, se) | 0, n = n + Math.imul(Z2, oe) | 0, d3 = d3 + Math.imul(Z2, se) | 0, l2 = l2 + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K2, he) | 0, d3 = d3 + Math.imul(K2, ue) | 0, l2 = l2 + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H2, le) | 0, d3 = d3 + Math.imul(H2, de) | 0, l2 = l2 + Math.imul(F, ce2) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U4, ce2) | 0, d3 = d3 + Math.imul(U4, pe) | 0, l2 = l2 + Math.imul(C, ve) | 0, n = n + Math.imul(C, be2) | 0, n = n + Math.imul(O4, ve) | 0, d3 = d3 + Math.imul(O4, be2) | 0;
        var Ye = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l2 = Math.imul(G3, fe), n = Math.imul(G3, ae), n = n + Math.imul(Y2, fe) | 0, d3 = Math.imul(Y2, ae), l2 = l2 + Math.imul(V3, oe) | 0, n = n + Math.imul(V3, se) | 0, n = n + Math.imul($2, oe) | 0, d3 = d3 + Math.imul($2, se) | 0, l2 = l2 + Math.imul(j3, he) | 0, n = n + Math.imul(j3, ue) | 0, n = n + Math.imul(Z2, he) | 0, d3 = d3 + Math.imul(Z2, ue) | 0, l2 = l2 + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K2, le) | 0, d3 = d3 + Math.imul(K2, de) | 0, l2 = l2 + Math.imul(z, ce2) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H2, ce2) | 0, d3 = d3 + Math.imul(H2, pe) | 0, l2 = l2 + Math.imul(F, ve) | 0, n = n + Math.imul(F, be2) | 0, n = n + Math.imul(U4, ve) | 0, d3 = d3 + Math.imul(U4, be2) | 0;
        var Xe2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Xe2 >>> 26) | 0, Xe2 &= 67108863, l2 = Math.imul(G3, oe), n = Math.imul(G3, se), n = n + Math.imul(Y2, oe) | 0, d3 = Math.imul(Y2, se), l2 = l2 + Math.imul(V3, he) | 0, n = n + Math.imul(V3, ue) | 0, n = n + Math.imul($2, he) | 0, d3 = d3 + Math.imul($2, ue) | 0, l2 = l2 + Math.imul(j3, le) | 0, n = n + Math.imul(j3, de) | 0, n = n + Math.imul(Z2, le) | 0, d3 = d3 + Math.imul(Z2, de) | 0, l2 = l2 + Math.imul(W, ce2) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K2, ce2) | 0, d3 = d3 + Math.imul(K2, pe) | 0, l2 = l2 + Math.imul(z, ve) | 0, n = n + Math.imul(z, be2) | 0, n = n + Math.imul(H2, ve) | 0, d3 = d3 + Math.imul(H2, be2) | 0;
        var Je2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Je2 >>> 26) | 0, Je2 &= 67108863, l2 = Math.imul(G3, he), n = Math.imul(G3, ue), n = n + Math.imul(Y2, he) | 0, d3 = Math.imul(Y2, ue), l2 = l2 + Math.imul(V3, le) | 0, n = n + Math.imul(V3, de) | 0, n = n + Math.imul($2, le) | 0, d3 = d3 + Math.imul($2, de) | 0, l2 = l2 + Math.imul(j3, ce2) | 0, n = n + Math.imul(j3, pe) | 0, n = n + Math.imul(Z2, ce2) | 0, d3 = d3 + Math.imul(Z2, pe) | 0, l2 = l2 + Math.imul(W, ve) | 0, n = n + Math.imul(W, be2) | 0, n = n + Math.imul(K2, ve) | 0, d3 = d3 + Math.imul(K2, be2) | 0;
        var Qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l2 = Math.imul(G3, le), n = Math.imul(G3, de), n = n + Math.imul(Y2, le) | 0, d3 = Math.imul(Y2, de), l2 = l2 + Math.imul(V3, ce2) | 0, n = n + Math.imul(V3, pe) | 0, n = n + Math.imul($2, ce2) | 0, d3 = d3 + Math.imul($2, pe) | 0, l2 = l2 + Math.imul(j3, ve) | 0, n = n + Math.imul(j3, be2) | 0, n = n + Math.imul(Z2, ve) | 0, d3 = d3 + Math.imul(Z2, be2) | 0;
        var et2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (et2 >>> 26) | 0, et2 &= 67108863, l2 = Math.imul(G3, ce2), n = Math.imul(G3, pe), n = n + Math.imul(Y2, ce2) | 0, d3 = Math.imul(Y2, pe), l2 = l2 + Math.imul(V3, ve) | 0, n = n + Math.imul(V3, be2) | 0, n = n + Math.imul($2, ve) | 0, d3 = d3 + Math.imul($2, be2) | 0;
        var tt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (tt2 >>> 26) | 0, tt2 &= 67108863, l2 = Math.imul(G3, ve), n = Math.imul(G3, be2), n = n + Math.imul(Y2, ve) | 0, d3 = Math.imul(Y2, be2);
        var rt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        return b3 = (d3 + (n >>> 13) | 0) + (rt2 >>> 26) | 0, rt2 &= 67108863, c2[0] = ft, c2[1] = Be, c2[2] = qe, c2[3] = ze, c2[4] = He2, c2[5] = We, c2[6] = Ke, c2[7] = je, c2[8] = Ze, c2[9] = Ve, c2[10] = $e2, c2[11] = Ge2, c2[12] = Ye, c2[13] = Xe2, c2[14] = Je2, c2[15] = Qe, c2[16] = et2, c2[17] = tt2, c2[18] = rt2, b3 !== 0 && (c2[19] = b3, h3.length++), h3;
      };
      Math.imul || (L3 = q2);
      function ge2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative, a3.length = v2.length + i.length;
        for (var h3 = 0, s2 = 0, u3 = 0;u3 < a3.length - 1; u3++) {
          var c2 = s2;
          s2 = 0;
          for (var b3 = h3 & 67108863, l2 = Math.min(u3, i.length - 1), n = Math.max(0, u3 - v2.length + 1);n <= l2; n++) {
            var d3 = u3 - n, w = v2.words[d3] | 0, g3 = i.words[n] | 0, _3 = w * g3, A2 = _3 & 67108863;
            c2 = c2 + (_3 / 67108864 | 0) | 0, A2 = A2 + b3 | 0, b3 = A2 & 67108863, c2 = c2 + (A2 >>> 26) | 0, s2 += c2 >>> 26, c2 &= 67108863;
          }
          a3.words[u3] = b3, h3 = c2, c2 = s2;
        }
        return h3 !== 0 ? a3.words[u3] = h3 : a3.length--, a3.strip();
      }
      function _e(v2, i, a3) {
        var h3 = new N3;
        return h3.mulp(v2, i, a3);
      }
      f2.prototype.mulTo = function(i, a3) {
        var h3, s2 = this.length + i.length;
        return this.length === 10 && i.length === 10 ? h3 = L3(this, i, a3) : s2 < 63 ? h3 = q2(this, i, a3) : s2 < 1024 ? h3 = ge2(this, i, a3) : h3 = _e(this, i, a3), h3;
      };
      function N3(v2, i) {
        this.x = v2, this.y = i;
      }
      N3.prototype.makeRBT = function(i) {
        for (var a3 = new Array(i), h3 = f2.prototype._countBits(i) - 1, s2 = 0;s2 < i; s2++)
          a3[s2] = this.revBin(s2, h3, i);
        return a3;
      }, N3.prototype.revBin = function(i, a3, h3) {
        if (i === 0 || i === h3 - 1)
          return i;
        for (var s2 = 0, u3 = 0;u3 < a3; u3++)
          s2 |= (i & 1) << a3 - u3 - 1, i >>= 1;
        return s2;
      }, N3.prototype.permute = function(i, a3, h3, s2, u3, c2) {
        for (var b3 = 0;b3 < c2; b3++)
          s2[b3] = a3[i[b3]], u3[b3] = h3[i[b3]];
      }, N3.prototype.transform = function(i, a3, h3, s2, u3, c2) {
        this.permute(c2, i, a3, h3, s2, u3);
        for (var b3 = 1;b3 < u3; b3 <<= 1)
          for (var l2 = b3 << 1, n = Math.cos(2 * Math.PI / l2), d3 = Math.sin(2 * Math.PI / l2), w = 0;w < u3; w += l2)
            for (var g3 = n, _3 = d3, A2 = 0;A2 < b3; A2++) {
              var R2 = h3[w + A2], I3 = s2[w + A2], Me = h3[w + A2 + b3], k3 = s2[w + A2 + b3], D2 = g3 * Me - _3 * k3;
              k3 = g3 * k3 + _3 * Me, Me = D2, h3[w + A2] = R2 + Me, s2[w + A2] = I3 + k3, h3[w + A2 + b3] = R2 - Me, s2[w + A2 + b3] = I3 - k3, A2 !== l2 && (D2 = n * g3 - d3 * _3, _3 = n * _3 + d3 * g3, g3 = D2);
            }
      }, N3.prototype.guessLen13b = function(i, a3) {
        var h3 = Math.max(a3, i) | 1, s2 = h3 & 1, u3 = 0;
        for (h3 = h3 / 2 | 0;h3; h3 = h3 >>> 1)
          u3++;
        return 1 << u3 + 1 + s2;
      }, N3.prototype.conjugate = function(i, a3, h3) {
        if (!(h3 <= 1))
          for (var s2 = 0;s2 < h3 / 2; s2++) {
            var u3 = i[s2];
            i[s2] = i[h3 - s2 - 1], i[h3 - s2 - 1] = u3, u3 = a3[s2], a3[s2] = -a3[h3 - s2 - 1], a3[h3 - s2 - 1] = -u3;
          }
      }, N3.prototype.normalize13b = function(i, a3) {
        for (var h3 = 0, s2 = 0;s2 < a3 / 2; s2++) {
          var u3 = Math.round(i[2 * s2 + 1] / a3) * 8192 + Math.round(i[2 * s2] / a3) + h3;
          i[s2] = u3 & 67108863, u3 < 67108864 ? h3 = 0 : h3 = u3 / 67108864 | 0;
        }
        return i;
      }, N3.prototype.convert13b = function(i, a3, h3, s2) {
        for (var u3 = 0, c2 = 0;c2 < a3; c2++)
          u3 = u3 + (i[c2] | 0), h3[2 * c2] = u3 & 8191, u3 = u3 >>> 13, h3[2 * c2 + 1] = u3 & 8191, u3 = u3 >>> 13;
        for (c2 = 2 * a3;c2 < s2; ++c2)
          h3[c2] = 0;
        r(u3 === 0), r((u3 & -8192) === 0);
      }, N3.prototype.stub = function(i) {
        for (var a3 = new Array(i), h3 = 0;h3 < i; h3++)
          a3[h3] = 0;
        return a3;
      }, N3.prototype.mulp = function(i, a3, h3) {
        var s2 = 2 * this.guessLen13b(i.length, a3.length), u3 = this.makeRBT(s2), c2 = this.stub(s2), b3 = new Array(s2), l2 = new Array(s2), n = new Array(s2), d3 = new Array(s2), w = new Array(s2), g3 = new Array(s2), _3 = h3.words;
        _3.length = s2, this.convert13b(i.words, i.length, b3, s2), this.convert13b(a3.words, a3.length, d3, s2), this.transform(b3, c2, l2, n, s2, u3), this.transform(d3, c2, w, g3, s2, u3);
        for (var A2 = 0;A2 < s2; A2++) {
          var R2 = l2[A2] * w[A2] - n[A2] * g3[A2];
          n[A2] = l2[A2] * g3[A2] + n[A2] * w[A2], l2[A2] = R2;
        }
        return this.conjugate(l2, n, s2), this.transform(l2, n, _3, c2, s2, u3), this.conjugate(_3, c2, s2), this.normalize13b(_3, s2), h3.negative = i.negative ^ a3.negative, h3.length = i.length + a3.length, h3.strip();
      }, f2.prototype.mul = function(i) {
        var a3 = new f2(null);
        return a3.words = new Array(this.length + i.length), this.mulTo(i, a3);
      }, f2.prototype.mulf = function(i) {
        var a3 = new f2(null);
        return a3.words = new Array(this.length + i.length), _e(this, i, a3);
      }, f2.prototype.imul = function(i) {
        return this.clone().mulTo(i, this);
      }, f2.prototype.imuln = function(i) {
        r(typeof i == "number"), r(i < 67108864);
        for (var a3 = 0, h3 = 0;h3 < this.length; h3++) {
          var s2 = (this.words[h3] | 0) * i, u3 = (s2 & 67108863) + (a3 & 67108863);
          a3 >>= 26, a3 += s2 / 67108864 | 0, a3 += u3 >>> 26, this.words[h3] = u3 & 67108863;
        }
        return a3 !== 0 && (this.words[h3] = a3, this.length++), this;
      }, f2.prototype.muln = function(i) {
        return this.clone().imuln(i);
      }, f2.prototype.sqr = function() {
        return this.mul(this);
      }, f2.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f2.prototype.pow = function(i) {
        var a3 = B3(i);
        if (a3.length === 0)
          return new f2(1);
        for (var h3 = this, s2 = 0;s2 < a3.length && a3[s2] === 0; s2++, h3 = h3.sqr())
          ;
        if (++s2 < a3.length)
          for (var u3 = h3.sqr();s2 < a3.length; s2++, u3 = u3.sqr())
            a3[s2] !== 0 && (h3 = h3.mul(u3));
        return h3;
      }, f2.prototype.iushln = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 67108863 >>> 26 - a3 << 26 - a3, u3;
        if (a3 !== 0) {
          var c2 = 0;
          for (u3 = 0;u3 < this.length; u3++) {
            var b3 = this.words[u3] & s2, l2 = (this.words[u3] | 0) - b3 << a3;
            this.words[u3] = l2 | c2, c2 = b3 >>> 26 - a3;
          }
          c2 && (this.words[u3] = c2, this.length++);
        }
        if (h3 !== 0) {
          for (u3 = this.length - 1;u3 >= 0; u3--)
            this.words[u3 + h3] = this.words[u3];
          for (u3 = 0;u3 < h3; u3++)
            this.words[u3] = 0;
          this.length += h3;
        }
        return this.strip();
      }, f2.prototype.ishln = function(i) {
        return r(this.negative === 0), this.iushln(i);
      }, f2.prototype.iushrn = function(i, a3, h3) {
        r(typeof i == "number" && i >= 0);
        var s2;
        a3 ? s2 = (a3 - a3 % 26) / 26 : s2 = 0;
        var u3 = i % 26, c2 = Math.min((i - u3) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u3 << u3, l2 = h3;
        if (s2 -= c2, s2 = Math.max(0, s2), l2) {
          for (var n = 0;n < c2; n++)
            l2.words[n] = this.words[n];
          l2.length = c2;
        }
        if (c2 !== 0)
          if (this.length > c2)
            for (this.length -= c2, n = 0;n < this.length; n++)
              this.words[n] = this.words[n + c2];
          else
            this.words[0] = 0, this.length = 1;
        var d3 = 0;
        for (n = this.length - 1;n >= 0 && (d3 !== 0 || n >= s2); n--) {
          var w = this.words[n] | 0;
          this.words[n] = d3 << 26 - u3 | w >>> u3, d3 = w & b3;
        }
        return l2 && d3 !== 0 && (l2.words[l2.length++] = d3), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f2.prototype.ishrn = function(i, a3, h3) {
        return r(this.negative === 0), this.iushrn(i, a3, h3);
      }, f2.prototype.shln = function(i) {
        return this.clone().ishln(i);
      }, f2.prototype.ushln = function(i) {
        return this.clone().iushln(i);
      }, f2.prototype.shrn = function(i) {
        return this.clone().ishrn(i);
      }, f2.prototype.ushrn = function(i) {
        return this.clone().iushrn(i);
      }, f2.prototype.testn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return false;
        var u3 = this.words[h3];
        return !!(u3 & s2);
      }, f2.prototype.imaskn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26;
        if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h3)
          return this;
        if (a3 !== 0 && h3++, this.length = Math.min(h3, this.length), a3 !== 0) {
          var s2 = 67108863 ^ 67108863 >>> a3 << a3;
          this.words[this.length - 1] &= s2;
        }
        return this.strip();
      }, f2.prototype.maskn = function(i) {
        return this.clone().imaskn(i);
      }, f2.prototype.iaddn = function(i) {
        return r(typeof i == "number"), r(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
      }, f2.prototype._iaddn = function(i) {
        this.words[0] += i;
        for (var a3 = 0;a3 < this.length && this.words[a3] >= 67108864; a3++)
          this.words[a3] -= 67108864, a3 === this.length - 1 ? this.words[a3 + 1] = 1 : this.words[a3 + 1]++;
        return this.length = Math.max(this.length, a3 + 1), this;
      }, f2.prototype.isubn = function(i) {
        if (r(typeof i == "number"), r(i < 67108864), i < 0)
          return this.iaddn(-i);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i), this.negative = 1, this;
        if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a3 = 0;a3 < this.length && this.words[a3] < 0; a3++)
            this.words[a3] += 67108864, this.words[a3 + 1] -= 1;
        return this.strip();
      }, f2.prototype.addn = function(i) {
        return this.clone().iaddn(i);
      }, f2.prototype.subn = function(i) {
        return this.clone().isubn(i);
      }, f2.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f2.prototype.abs = function() {
        return this.clone().iabs();
      }, f2.prototype._ishlnsubmul = function(i, a3, h3) {
        var s2 = i.length + h3, u3;
        this._expand(s2);
        var c2, b3 = 0;
        for (u3 = 0;u3 < i.length; u3++) {
          c2 = (this.words[u3 + h3] | 0) + b3;
          var l2 = (i.words[u3] | 0) * a3;
          c2 -= l2 & 67108863, b3 = (c2 >> 26) - (l2 / 67108864 | 0), this.words[u3 + h3] = c2 & 67108863;
        }
        for (;u3 < this.length - h3; u3++)
          c2 = (this.words[u3 + h3] | 0) + b3, b3 = c2 >> 26, this.words[u3 + h3] = c2 & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r(b3 === -1), b3 = 0, u3 = 0;u3 < this.length; u3++)
          c2 = -(this.words[u3] | 0) + b3, b3 = c2 >> 26, this.words[u3] = c2 & 67108863;
        return this.negative = 1, this.strip();
      }, f2.prototype._wordDiv = function(i, a3) {
        var h3 = this.length - i.length, s2 = this.clone(), u3 = i, c2 = u3.words[u3.length - 1] | 0, b3 = this._countBits(c2);
        h3 = 26 - b3, h3 !== 0 && (u3 = u3.ushln(h3), s2.iushln(h3), c2 = u3.words[u3.length - 1] | 0);
        var l2 = s2.length - u3.length, n;
        if (a3 !== "mod") {
          n = new f2(null), n.length = l2 + 1, n.words = new Array(n.length);
          for (var d3 = 0;d3 < n.length; d3++)
            n.words[d3] = 0;
        }
        var w = s2.clone()._ishlnsubmul(u3, 1, l2);
        w.negative === 0 && (s2 = w, n && (n.words[l2] = 1));
        for (var g3 = l2 - 1;g3 >= 0; g3--) {
          var _3 = (s2.words[u3.length + g3] | 0) * 67108864 + (s2.words[u3.length + g3 - 1] | 0);
          for (_3 = Math.min(_3 / c2 | 0, 67108863), s2._ishlnsubmul(u3, _3, g3);s2.negative !== 0; )
            _3--, s2.negative = 0, s2._ishlnsubmul(u3, 1, g3), s2.isZero() || (s2.negative ^= 1);
          n && (n.words[g3] = _3);
        }
        return n && n.strip(), s2.strip(), a3 !== "div" && h3 !== 0 && s2.iushrn(h3), { div: n || null, mod: s2 };
      }, f2.prototype.divmod = function(i, a3, h3) {
        if (r(!i.isZero()), this.isZero())
          return { div: new f2(0), mod: new f2(0) };
        var s2, u3, c2;
        return this.negative !== 0 && i.negative === 0 ? (c2 = this.neg().divmod(i, a3), a3 !== "mod" && (s2 = c2.div.neg()), a3 !== "div" && (u3 = c2.mod.neg(), h3 && u3.negative !== 0 && u3.iadd(i)), { div: s2, mod: u3 }) : this.negative === 0 && i.negative !== 0 ? (c2 = this.divmod(i.neg(), a3), a3 !== "mod" && (s2 = c2.div.neg()), { div: s2, mod: c2.mod }) : (this.negative & i.negative) !== 0 ? (c2 = this.neg().divmod(i.neg(), a3), a3 !== "div" && (u3 = c2.mod.neg(), h3 && u3.negative !== 0 && u3.isub(i)), { div: c2.div, mod: u3 }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f2(0), mod: this } : i.length === 1 ? a3 === "div" ? { div: this.divn(i.words[0]), mod: null } : a3 === "mod" ? { div: null, mod: new f2(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f2(this.modn(i.words[0])) } : this._wordDiv(i, a3);
      }, f2.prototype.div = function(i) {
        return this.divmod(i, "div", false).div;
      }, f2.prototype.mod = function(i) {
        return this.divmod(i, "mod", false).mod;
      }, f2.prototype.umod = function(i) {
        return this.divmod(i, "mod", true).mod;
      }, f2.prototype.divRound = function(i) {
        var a3 = this.divmod(i);
        if (a3.mod.isZero())
          return a3.div;
        var h3 = a3.div.negative !== 0 ? a3.mod.isub(i) : a3.mod, s2 = i.ushrn(1), u3 = i.andln(1), c2 = h3.cmp(s2);
        return c2 < 0 || u3 === 1 && c2 === 0 ? a3.div : a3.div.negative !== 0 ? a3.div.isubn(1) : a3.div.iaddn(1);
      }, f2.prototype.modn = function(i) {
        r(i <= 67108863);
        for (var a3 = (1 << 26) % i, h3 = 0, s2 = this.length - 1;s2 >= 0; s2--)
          h3 = (a3 * h3 + (this.words[s2] | 0)) % i;
        return h3;
      }, f2.prototype.idivn = function(i) {
        r(i <= 67108863);
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = (this.words[h3] | 0) + a3 * 67108864;
          this.words[h3] = s2 / i | 0, a3 = s2 % i;
        }
        return this.strip();
      }, f2.prototype.divn = function(i) {
        return this.clone().idivn(i);
      }, f2.prototype.egcd = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f2(1), u3 = new f2(0), c2 = new f2(0), b3 = new f2(1), l2 = 0;a3.isEven() && h3.isEven(); )
          a3.iushrn(1), h3.iushrn(1), ++l2;
        for (var n = h3.clone(), d3 = a3.clone();!a3.isZero(); ) {
          for (var w = 0, g3 = 1;(a3.words[0] & g3) === 0 && w < 26; ++w, g3 <<= 1)
            ;
          if (w > 0)
            for (a3.iushrn(w);w-- > 0; )
              (s2.isOdd() || u3.isOdd()) && (s2.iadd(n), u3.isub(d3)), s2.iushrn(1), u3.iushrn(1);
          for (var _3 = 0, A2 = 1;(h3.words[0] & A2) === 0 && _3 < 26; ++_3, A2 <<= 1)
            ;
          if (_3 > 0)
            for (h3.iushrn(_3);_3-- > 0; )
              (c2.isOdd() || b3.isOdd()) && (c2.iadd(n), b3.isub(d3)), c2.iushrn(1), b3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(c2), u3.isub(b3)) : (h3.isub(a3), c2.isub(s2), b3.isub(u3));
        }
        return { a: c2, b: b3, gcd: h3.iushln(l2) };
      }, f2.prototype._invmp = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f2(1), u3 = new f2(0), c2 = h3.clone();a3.cmpn(1) > 0 && h3.cmpn(1) > 0; ) {
          for (var b3 = 0, l2 = 1;(a3.words[0] & l2) === 0 && b3 < 26; ++b3, l2 <<= 1)
            ;
          if (b3 > 0)
            for (a3.iushrn(b3);b3-- > 0; )
              s2.isOdd() && s2.iadd(c2), s2.iushrn(1);
          for (var n = 0, d3 = 1;(h3.words[0] & d3) === 0 && n < 26; ++n, d3 <<= 1)
            ;
          if (n > 0)
            for (h3.iushrn(n);n-- > 0; )
              u3.isOdd() && u3.iadd(c2), u3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(u3)) : (h3.isub(a3), u3.isub(s2));
        }
        var w;
        return a3.cmpn(1) === 0 ? w = s2 : w = u3, w.cmpn(0) < 0 && w.iadd(i), w;
      }, f2.prototype.gcd = function(i) {
        if (this.isZero())
          return i.abs();
        if (i.isZero())
          return this.abs();
        var a3 = this.clone(), h3 = i.clone();
        a3.negative = 0, h3.negative = 0;
        for (var s2 = 0;a3.isEven() && h3.isEven(); s2++)
          a3.iushrn(1), h3.iushrn(1);
        do {
          for (;a3.isEven(); )
            a3.iushrn(1);
          for (;h3.isEven(); )
            h3.iushrn(1);
          var u3 = a3.cmp(h3);
          if (u3 < 0) {
            var c2 = a3;
            a3 = h3, h3 = c2;
          } else if (u3 === 0 || h3.cmpn(1) === 0)
            break;
          a3.isub(h3);
        } while (true);
        return h3.iushln(s2);
      }, f2.prototype.invm = function(i) {
        return this.egcd(i).a.umod(i);
      }, f2.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f2.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f2.prototype.andln = function(i) {
        return this.words[0] & i;
      }, f2.prototype.bincn = function(i) {
        r(typeof i == "number");
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return this._expand(h3 + 1), this.words[h3] |= s2, this;
        for (var u3 = s2, c2 = h3;u3 !== 0 && c2 < this.length; c2++) {
          var b3 = this.words[c2] | 0;
          b3 += u3, u3 = b3 >>> 26, b3 &= 67108863, this.words[c2] = b3;
        }
        return u3 !== 0 && (this.words[c2] = u3, this.length++), this;
      }, f2.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f2.prototype.cmpn = function(i) {
        var a3 = i < 0;
        if (this.negative !== 0 && !a3)
          return -1;
        if (this.negative === 0 && a3)
          return 1;
        this.strip();
        var h3;
        if (this.length > 1)
          h3 = 1;
        else {
          a3 && (i = -i), r(i <= 67108863, "Number is too big");
          var s2 = this.words[0] | 0;
          h3 = s2 === i ? 0 : s2 < i ? -1 : 1;
        }
        return this.negative !== 0 ? -h3 | 0 : h3;
      }, f2.prototype.cmp = function(i) {
        if (this.negative !== 0 && i.negative === 0)
          return -1;
        if (this.negative === 0 && i.negative !== 0)
          return 1;
        var a3 = this.ucmp(i);
        return this.negative !== 0 ? -a3 | 0 : a3;
      }, f2.prototype.ucmp = function(i) {
        if (this.length > i.length)
          return 1;
        if (this.length < i.length)
          return -1;
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = this.words[h3] | 0, u3 = i.words[h3] | 0;
          if (s2 !== u3) {
            s2 < u3 ? a3 = -1 : s2 > u3 && (a3 = 1);
            break;
          }
        }
        return a3;
      }, f2.prototype.gtn = function(i) {
        return this.cmpn(i) === 1;
      }, f2.prototype.gt = function(i) {
        return this.cmp(i) === 1;
      }, f2.prototype.gten = function(i) {
        return this.cmpn(i) >= 0;
      }, f2.prototype.gte = function(i) {
        return this.cmp(i) >= 0;
      }, f2.prototype.ltn = function(i) {
        return this.cmpn(i) === -1;
      }, f2.prototype.lt = function(i) {
        return this.cmp(i) === -1;
      }, f2.prototype.lten = function(i) {
        return this.cmpn(i) <= 0;
      }, f2.prototype.lte = function(i) {
        return this.cmp(i) <= 0;
      }, f2.prototype.eqn = function(i) {
        return this.cmpn(i) === 0;
      }, f2.prototype.eq = function(i) {
        return this.cmp(i) === 0;
      }, f2.red = function(i) {
        return new P2(i);
      }, f2.prototype.toRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
      }, f2.prototype.fromRed = function() {
        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f2.prototype._forceRed = function(i) {
        return this.red = i, this;
      }, f2.prototype.forceRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), this._forceRed(i);
      }, f2.prototype.redAdd = function(i) {
        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
      }, f2.prototype.redIAdd = function(i) {
        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
      }, f2.prototype.redSub = function(i) {
        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
      }, f2.prototype.redISub = function(i) {
        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
      }, f2.prototype.redShl = function(i) {
        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
      }, f2.prototype.redMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
      }, f2.prototype.redIMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
      }, f2.prototype.redSqr = function() {
        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f2.prototype.redISqr = function() {
        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f2.prototype.redSqrt = function() {
        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f2.prototype.redInvm = function() {
        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f2.prototype.redNeg = function() {
        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f2.prototype.redPow = function(i) {
        return r(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v2, i) {
        this.name = v2, this.p = new f2(i, 16), this.n = this.p.bitLength(), this.k = new f2(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i = new f2(null);
        return i.words = new Array(Math.ceil(this.n / 13)), i;
      }, ye.prototype.ireduce = function(i) {
        var a3 = i, h3;
        do
          this.split(a3, this.tmp), a3 = this.imulK(a3), a3 = a3.iadd(this.tmp), h3 = a3.bitLength();
        while (h3 > this.n);
        var s2 = h3 < this.n ? -1 : a3.ucmp(this.p);
        return s2 === 0 ? (a3.words[0] = 0, a3.length = 1) : s2 > 0 ? a3.isub(this.p) : a3.strip !== undefined ? a3.strip() : a3._strip(), a3;
      }, ye.prototype.split = function(i, a3) {
        i.iushrn(this.n, 0, a3);
      }, ye.prototype.imulK = function(i) {
        return i.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o(xe, ye), xe.prototype.split = function(i, a3) {
        for (var h3 = 4194303, s2 = Math.min(i.length, 9), u3 = 0;u3 < s2; u3++)
          a3.words[u3] = i.words[u3];
        if (a3.length = s2, i.length <= 9) {
          i.words[0] = 0, i.length = 1;
          return;
        }
        var c2 = i.words[9];
        for (a3.words[a3.length++] = c2 & h3, u3 = 10;u3 < i.length; u3++) {
          var b3 = i.words[u3] | 0;
          i.words[u3 - 10] = (b3 & h3) << 4 | c2 >>> 22, c2 = b3;
        }
        c2 >>>= 22, i.words[u3 - 10] = c2, c2 === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
      }, xe.prototype.imulK = function(i) {
        i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = i.words[h3] | 0;
          a3 += s2 * 977, i.words[h3] = a3 & 67108863, a3 = s2 * 64 + (a3 / 67108864 | 0);
        }
        return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o(Ae, ye), Ae.prototype.imulK = function(i) {
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = (i.words[h3] | 0) * 19 + a3, u3 = s2 & 67108863;
          s2 >>>= 26, i.words[h3] = u3, a3 = s2;
        }
        return a3 !== 0 && (i.words[i.length++] = a3), i;
      }, f2._prime = function(i) {
        if (we[i])
          return we[i];
        var a3;
        if (i === "k256")
          a3 = new xe;
        else if (i === "p224")
          a3 = new Re;
        else if (i === "p192")
          a3 = new Ee;
        else if (i === "p25519")
          a3 = new Ae;
        else
          throw new Error("Unknown prime " + i);
        return we[i] = a3, a3;
      };
      function P2(v2) {
        if (typeof v2 == "string") {
          var i = f2._prime(v2);
          this.m = i.p, this.prime = i;
        } else
          r(v2.gtn(1), "modulus must be greater than 1"), this.m = v2, this.prime = null;
      }
      P2.prototype._verify1 = function(i) {
        r(i.negative === 0, "red works only with positives"), r(i.red, "red works only with red numbers");
      }, P2.prototype._verify2 = function(i, a3) {
        r((i.negative | a3.negative) === 0, "red works only with positives"), r(i.red && i.red === a3.red, "red works only with red numbers");
      }, P2.prototype.imod = function(i) {
        return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
      }, P2.prototype.neg = function(i) {
        return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
      }, P2.prototype.add = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.add(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3._forceRed(this);
      }, P2.prototype.iadd = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.iadd(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3;
      }, P2.prototype.sub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.sub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3._forceRed(this);
      }, P2.prototype.isub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.isub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3;
      }, P2.prototype.shl = function(i, a3) {
        return this._verify1(i), this.imod(i.ushln(a3));
      }, P2.prototype.imul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.imul(a3));
      }, P2.prototype.mul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.mul(a3));
      }, P2.prototype.isqr = function(i) {
        return this.imul(i, i.clone());
      }, P2.prototype.sqr = function(i) {
        return this.mul(i, i);
      }, P2.prototype.sqrt = function(i) {
        if (i.isZero())
          return i.clone();
        var a3 = this.m.andln(3);
        if (r(a3 % 2 === 1), a3 === 3) {
          var h3 = this.m.add(new f2(1)).iushrn(2);
          return this.pow(i, h3);
        }
        for (var s2 = this.m.subn(1), u3 = 0;!s2.isZero() && s2.andln(1) === 0; )
          u3++, s2.iushrn(1);
        r(!s2.isZero());
        var c2 = new f2(1).toRed(this), b3 = c2.redNeg(), l2 = this.m.subn(1).iushrn(1), n = this.m.bitLength();
        for (n = new f2(2 * n * n).toRed(this);this.pow(n, l2).cmp(b3) !== 0; )
          n.redIAdd(b3);
        for (var d3 = this.pow(n, s2), w = this.pow(i, s2.addn(1).iushrn(1)), g3 = this.pow(i, s2), _3 = u3;g3.cmp(c2) !== 0; ) {
          for (var A2 = g3, R2 = 0;A2.cmp(c2) !== 0; R2++)
            A2 = A2.redSqr();
          r(R2 < _3);
          var I3 = this.pow(d3, new f2(1).iushln(_3 - R2 - 1));
          w = w.redMul(I3), d3 = I3.redSqr(), g3 = g3.redMul(d3), _3 = R2;
        }
        return w;
      }, P2.prototype.invm = function(i) {
        var a3 = i._invmp(this.m);
        return a3.negative !== 0 ? (a3.negative = 0, this.imod(a3).redNeg()) : this.imod(a3);
      }, P2.prototype.pow = function(i, a3) {
        if (a3.isZero())
          return new f2(1).toRed(this);
        if (a3.cmpn(1) === 0)
          return i.clone();
        var h3 = 4, s2 = new Array(1 << h3);
        s2[0] = new f2(1).toRed(this), s2[1] = i;
        for (var u3 = 2;u3 < s2.length; u3++)
          s2[u3] = this.mul(s2[u3 - 1], i);
        var c2 = s2[0], b3 = 0, l2 = 0, n = a3.bitLength() % 26;
        for (n === 0 && (n = 26), u3 = a3.length - 1;u3 >= 0; u3--) {
          for (var d3 = a3.words[u3], w = n - 1;w >= 0; w--) {
            var g3 = d3 >> w & 1;
            if (c2 !== s2[0] && (c2 = this.sqr(c2)), g3 === 0 && b3 === 0) {
              l2 = 0;
              continue;
            }
            b3 <<= 1, b3 |= g3, l2++, !(l2 !== h3 && (u3 !== 0 || w !== 0)) && (c2 = this.mul(c2, s2[b3]), l2 = 0, b3 = 0);
          }
          n = 26;
        }
        return c2;
      }, P2.prototype.convertTo = function(i) {
        var a3 = i.umod(this.m);
        return a3 === i ? a3.clone() : a3;
      }, P2.prototype.convertFrom = function(i) {
        var a3 = i.clone();
        return a3.red = null, a3;
      }, f2.mont = function(i) {
        return new Se2(i);
      };
      function Se2(v2) {
        P2.call(this, v2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f2(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o(Se2, P2), Se2.prototype.convertTo = function(i) {
        return this.imod(i.ushln(this.shift));
      }, Se2.prototype.convertFrom = function(i) {
        var a3 = this.imod(i.mul(this.rinv));
        return a3.red = null, a3;
      }, Se2.prototype.imul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return i.words[0] = 0, i.length = 1, i;
        var h3 = i.imul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c2 = u3;
        return u3.cmp(this.m) >= 0 ? c2 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c2 = u3.iadd(this.m)), c2._forceRed(this);
      }, Se2.prototype.mul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return new f2(0)._forceRed(this);
        var h3 = i.mul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c2 = u3;
        return u3.cmp(this.m) >= 0 ? c2 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c2 = u3.iadd(this.m)), c2._forceRed(this);
      }, Se2.prototype.invm = function(i) {
        var a3 = this.imod(i._invmp(this.m).mul(this.r2));
        return a3._forceRed(this);
      };
    })(typeof $u2 > "u" || $u2, jm);
  });
  Vm = T3((Zm, Yu) => {
    (function(t, e) {
      function r(v2, i) {
        if (!v2)
          throw new Error(i || "Assertion failed");
      }
      function o(v2, i) {
        v2.super_ = i;
        var a3 = function() {};
        a3.prototype = i.prototype, v2.prototype = new a3, v2.prototype.constructor = v2;
      }
      function f2(v2, i, a3) {
        if (f2.isBN(v2))
          return v2;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v2 !== null && ((i === "le" || i === "be") && (a3 = i, i = 10), this._init(v2 || 0, i || 10, a3 || "be"));
      }
      typeof t == "object" ? t.exports = f2 : e.BN = f2, f2.BN = f2, f2.wordSize = 26;
      var p3;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p3 = window.Buffer : p3 = ji().Buffer;
      } catch {}
      f2.isBN = function(i) {
        return i instanceof f2 ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f2.wordSize && Array.isArray(i.words);
      }, f2.max = function(i, a3) {
        return i.cmp(a3) > 0 ? i : a3;
      }, f2.min = function(i, a3) {
        return i.cmp(a3) < 0 ? i : a3;
      }, f2.prototype._init = function(i, a3, h3) {
        if (typeof i == "number")
          return this._initNumber(i, a3, h3);
        if (typeof i == "object")
          return this._initArray(i, a3, h3);
        a3 === "hex" && (a3 = 16), r(a3 === (a3 | 0) && a3 >= 2 && a3 <= 36), i = i.toString().replace(/\s+/g, "");
        var s2 = 0;
        i[0] === "-" && (s2++, this.negative = 1), s2 < i.length && (a3 === 16 ? this._parseHex(i, s2, h3) : (this._parseBase(i, a3, s2), h3 === "le" && this._initArray(this.toArray(), a3, h3)));
      }, f2.prototype._initNumber = function(i, a3, h3) {
        i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h3 === "le" && this._initArray(this.toArray(), a3, h3);
      }, f2.prototype._initArray = function(i, a3, h3) {
        if (r(typeof i.length == "number"), i.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3, c2, b3 = 0;
        if (h3 === "be")
          for (s2 = i.length - 1, u3 = 0;s2 >= 0; s2 -= 3)
            c2 = i[s2] | i[s2 - 1] << 8 | i[s2 - 2] << 16, this.words[u3] |= c2 << b3 & 67108863, this.words[u3 + 1] = c2 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        else if (h3 === "le")
          for (s2 = 0, u3 = 0;s2 < i.length; s2 += 3)
            c2 = i[s2] | i[s2 + 1] << 8 | i[s2 + 2] << 16, this.words[u3] |= c2 << b3 & 67108863, this.words[u3 + 1] = c2 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        return this.strip();
      };
      function m3(v2, i) {
        var a3 = v2.charCodeAt(i);
        return a3 >= 65 && a3 <= 70 ? a3 - 55 : a3 >= 97 && a3 <= 102 ? a3 - 87 : a3 - 48 & 15;
      }
      function y3(v2, i, a3) {
        var h3 = m3(v2, a3);
        return a3 - 1 >= i && (h3 |= m3(v2, a3 - 1) << 4), h3;
      }
      f2.prototype._parseHex = function(i, a3, h3) {
        this.length = Math.ceil((i.length - a3) / 6), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3 = 0, c2 = 0, b3;
        if (h3 === "be")
          for (s2 = i.length - 1;s2 >= a3; s2 -= 2)
            b3 = y3(i, a3, s2) << u3, this.words[c2] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c2 += 1, this.words[c2] |= b3 >>> 26) : u3 += 8;
        else {
          var l2 = i.length - a3;
          for (s2 = l2 % 2 === 0 ? a3 + 1 : a3;s2 < i.length; s2 += 2)
            b3 = y3(i, a3, s2) << u3, this.words[c2] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c2 += 1, this.words[c2] |= b3 >>> 26) : u3 += 8;
        }
        this.strip();
      };
      function M2(v2, i, a3, h3) {
        for (var s2 = 0, u3 = Math.min(v2.length, a3), c2 = i;c2 < u3; c2++) {
          var b3 = v2.charCodeAt(c2) - 48;
          s2 *= h3, b3 >= 49 ? s2 += b3 - 49 + 10 : b3 >= 17 ? s2 += b3 - 17 + 10 : s2 += b3;
        }
        return s2;
      }
      f2.prototype._parseBase = function(i, a3, h3) {
        this.words = [0], this.length = 1;
        for (var s2 = 0, u3 = 1;u3 <= 67108863; u3 *= a3)
          s2++;
        s2--, u3 = u3 / a3 | 0;
        for (var c2 = i.length - h3, b3 = c2 % s2, l2 = Math.min(c2, c2 - b3) + h3, n = 0, d3 = h3;d3 < l2; d3 += s2)
          n = M2(i, d3, d3 + s2, a3), this.imuln(u3), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        if (b3 !== 0) {
          var w = 1;
          for (n = M2(i, d3, i.length, a3), d3 = 0;d3 < b3; d3++)
            w *= a3;
          this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        }
        this.strip();
      }, f2.prototype.copy = function(i) {
        i.words = new Array(this.length);
        for (var a3 = 0;a3 < this.length; a3++)
          i.words[a3] = this.words[a3];
        i.length = this.length, i.negative = this.negative, i.red = this.red;
      }, f2.prototype.clone = function() {
        var i = new f2(null);
        return this.copy(i), i;
      }, f2.prototype._expand = function(i) {
        for (;this.length < i; )
          this.words[this.length++] = 0;
        return this;
      }, f2.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f2.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f2.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E4 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f2.prototype.toString = function(i, a3) {
        i = i || 10, a3 = a3 | 0 || 1;
        var h3;
        if (i === 16 || i === "hex") {
          h3 = "";
          for (var s2 = 0, u3 = 0, c2 = 0;c2 < this.length; c2++) {
            var b3 = this.words[c2], l2 = ((b3 << s2 | u3) & 16777215).toString(16);
            u3 = b3 >>> 24 - s2 & 16777215, u3 !== 0 || c2 !== this.length - 1 ? h3 = x4[6 - l2.length] + l2 + h3 : h3 = l2 + h3, s2 += 2, s2 >= 26 && (s2 -= 26, c2--);
          }
          for (u3 !== 0 && (h3 = u3.toString(16) + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        if (i === (i | 0) && i >= 2 && i <= 36) {
          var n = S3[i], d3 = E4[i];
          h3 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g3 = w.modn(d3).toString(i);
            w = w.idivn(d3), w.isZero() ? h3 = g3 + h3 : h3 = x4[n - g3.length] + g3 + h3;
          }
          for (this.isZero() && (h3 = "0" + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        r(false, "Base should be between 2 and 36");
      }, f2.prototype.toNumber = function() {
        var i = this.words[0];
        return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
      }, f2.prototype.toJSON = function() {
        return this.toString(16);
      }, f2.prototype.toBuffer = function(i, a3) {
        return r(typeof p3 < "u"), this.toArrayLike(p3, i, a3);
      }, f2.prototype.toArray = function(i, a3) {
        return this.toArrayLike(Array, i, a3);
      }, f2.prototype.toArrayLike = function(i, a3, h3) {
        var s2 = this.byteLength(), u3 = h3 || Math.max(1, s2);
        r(s2 <= u3, "byte array longer than desired length"), r(u3 > 0, "Requested array length <= 0"), this.strip();
        var c2 = a3 === "le", b3 = new i(u3), l2, n, d3 = this.clone();
        if (c2) {
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[n] = l2;
          for (;n < u3; n++)
            b3[n] = 0;
        } else {
          for (n = 0;n < u3 - s2; n++)
            b3[n] = 0;
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[u3 - n - 1] = l2;
        }
        return b3;
      }, Math.clz32 ? f2.prototype._countBits = function(i) {
        return 32 - Math.clz32(i);
      } : f2.prototype._countBits = function(i) {
        var a3 = i, h3 = 0;
        return a3 >= 4096 && (h3 += 13, a3 >>>= 13), a3 >= 64 && (h3 += 7, a3 >>>= 7), a3 >= 8 && (h3 += 4, a3 >>>= 4), a3 >= 2 && (h3 += 2, a3 >>>= 2), h3 + a3;
      }, f2.prototype._zeroBits = function(i) {
        if (i === 0)
          return 26;
        var a3 = i, h3 = 0;
        return (a3 & 8191) === 0 && (h3 += 13, a3 >>>= 13), (a3 & 127) === 0 && (h3 += 7, a3 >>>= 7), (a3 & 15) === 0 && (h3 += 4, a3 >>>= 4), (a3 & 3) === 0 && (h3 += 2, a3 >>>= 2), (a3 & 1) === 0 && h3++, h3;
      }, f2.prototype.bitLength = function() {
        var i = this.words[this.length - 1], a3 = this._countBits(i);
        return (this.length - 1) * 26 + a3;
      };
      function B3(v2) {
        for (var i = new Array(v2.bitLength()), a3 = 0;a3 < i.length; a3++) {
          var h3 = a3 / 26 | 0, s2 = a3 % 26;
          i[a3] = (v2.words[h3] & 1 << s2) >>> s2;
        }
        return i;
      }
      f2.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i = 0, a3 = 0;a3 < this.length; a3++) {
          var h3 = this._zeroBits(this.words[a3]);
          if (i += h3, h3 !== 26)
            break;
        }
        return i;
      }, f2.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f2.prototype.toTwos = function(i) {
        return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
      }, f2.prototype.fromTwos = function(i) {
        return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
      }, f2.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f2.prototype.neg = function() {
        return this.clone().ineg();
      }, f2.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f2.prototype.iuor = function(i) {
        for (;this.length < i.length; )
          this.words[this.length++] = 0;
        for (var a3 = 0;a3 < i.length; a3++)
          this.words[a3] = this.words[a3] | i.words[a3];
        return this.strip();
      }, f2.prototype.ior = function(i) {
        return r((this.negative | i.negative) === 0), this.iuor(i);
      }, f2.prototype.or = function(i) {
        return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
      }, f2.prototype.uor = function(i) {
        return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
      }, f2.prototype.iuand = function(i) {
        var a3;
        this.length > i.length ? a3 = i : a3 = this;
        for (var h3 = 0;h3 < a3.length; h3++)
          this.words[h3] = this.words[h3] & i.words[h3];
        return this.length = a3.length, this.strip();
      }, f2.prototype.iand = function(i) {
        return r((this.negative | i.negative) === 0), this.iuand(i);
      }, f2.prototype.and = function(i) {
        return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
      }, f2.prototype.uand = function(i) {
        return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
      }, f2.prototype.iuxor = function(i) {
        var a3, h3;
        this.length > i.length ? (a3 = this, h3 = i) : (a3 = i, h3 = this);
        for (var s2 = 0;s2 < h3.length; s2++)
          this.words[s2] = a3.words[s2] ^ h3.words[s2];
        if (this !== a3)
          for (;s2 < a3.length; s2++)
            this.words[s2] = a3.words[s2];
        return this.length = a3.length, this.strip();
      }, f2.prototype.ixor = function(i) {
        return r((this.negative | i.negative) === 0), this.iuxor(i);
      }, f2.prototype.xor = function(i) {
        return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
      }, f2.prototype.uxor = function(i) {
        return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
      }, f2.prototype.inotn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = Math.ceil(i / 26) | 0, h3 = i % 26;
        this._expand(a3), h3 > 0 && a3--;
        for (var s2 = 0;s2 < a3; s2++)
          this.words[s2] = ~this.words[s2] & 67108863;
        return h3 > 0 && (this.words[s2] = ~this.words[s2] & 67108863 >> 26 - h3), this.strip();
      }, f2.prototype.notn = function(i) {
        return this.clone().inotn(i);
      }, f2.prototype.setn = function(i, a3) {
        r(typeof i == "number" && i >= 0);
        var h3 = i / 26 | 0, s2 = i % 26;
        return this._expand(h3 + 1), a3 ? this.words[h3] = this.words[h3] | 1 << s2 : this.words[h3] = this.words[h3] & ~(1 << s2), this.strip();
      }, f2.prototype.iadd = function(i) {
        var a3;
        if (this.negative !== 0 && i.negative === 0)
          return this.negative = 0, a3 = this.isub(i), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i.negative !== 0)
          return i.negative = 0, a3 = this.isub(i), i.negative = 1, a3._normSign();
        var h3, s2;
        this.length > i.length ? (h3 = this, s2 = i) : (h3 = i, s2 = this);
        for (var u3 = 0, c2 = 0;c2 < s2.length; c2++)
          a3 = (h3.words[c2] | 0) + (s2.words[c2] | 0) + u3, this.words[c2] = a3 & 67108863, u3 = a3 >>> 26;
        for (;u3 !== 0 && c2 < h3.length; c2++)
          a3 = (h3.words[c2] | 0) + u3, this.words[c2] = a3 & 67108863, u3 = a3 >>> 26;
        if (this.length = h3.length, u3 !== 0)
          this.words[this.length] = u3, this.length++;
        else if (h3 !== this)
          for (;c2 < h3.length; c2++)
            this.words[c2] = h3.words[c2];
        return this;
      }, f2.prototype.add = function(i) {
        var a3;
        return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a3 = this.sub(i), i.negative ^= 1, a3) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a3 = i.sub(this), this.negative = 1, a3) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
      }, f2.prototype.isub = function(i) {
        if (i.negative !== 0) {
          i.negative = 0;
          var a3 = this.iadd(i);
          return i.negative = 1, a3._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
        var h3 = this.cmp(i);
        if (h3 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s2, u3;
        h3 > 0 ? (s2 = this, u3 = i) : (s2 = i, u3 = this);
        for (var c2 = 0, b3 = 0;b3 < u3.length; b3++)
          a3 = (s2.words[b3] | 0) - (u3.words[b3] | 0) + c2, c2 = a3 >> 26, this.words[b3] = a3 & 67108863;
        for (;c2 !== 0 && b3 < s2.length; b3++)
          a3 = (s2.words[b3] | 0) + c2, c2 = a3 >> 26, this.words[b3] = a3 & 67108863;
        if (c2 === 0 && b3 < s2.length && s2 !== this)
          for (;b3 < s2.length; b3++)
            this.words[b3] = s2.words[b3];
        return this.length = Math.max(this.length, b3), s2 !== this && (this.negative = 1), this.strip();
      }, f2.prototype.sub = function(i) {
        return this.clone().isub(i);
      };
      function q2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative;
        var h3 = v2.length + i.length | 0;
        a3.length = h3, h3 = h3 - 1 | 0;
        var s2 = v2.words[0] | 0, u3 = i.words[0] | 0, c2 = s2 * u3, b3 = c2 & 67108863, l2 = c2 / 67108864 | 0;
        a3.words[0] = b3;
        for (var n = 1;n < h3; n++) {
          for (var d3 = l2 >>> 26, w = l2 & 67108863, g3 = Math.min(n, i.length - 1), _3 = Math.max(0, n - v2.length + 1);_3 <= g3; _3++) {
            var A2 = n - _3 | 0;
            s2 = v2.words[A2] | 0, u3 = i.words[_3] | 0, c2 = s2 * u3 + w, d3 += c2 / 67108864 | 0, w = c2 & 67108863;
          }
          a3.words[n] = w | 0, l2 = d3 | 0;
        }
        return l2 !== 0 ? a3.words[n] = l2 | 0 : a3.length--, a3.strip();
      }
      var L3 = function(i, a3, h3) {
        var s2 = i.words, u3 = a3.words, c2 = h3.words, b3 = 0, l2, n, d3, w = s2[0] | 0, g3 = w & 8191, _3 = w >>> 13, A2 = s2[1] | 0, R2 = A2 & 8191, I3 = A2 >>> 13, Me = s2[2] | 0, k3 = Me & 8191, D2 = Me >>> 13, nt2 = s2[3] | 0, C = nt2 & 8191, O4 = nt2 >>> 13, vt = s2[4] | 0, F = vt & 8191, U4 = vt >>> 13, bt2 = s2[5] | 0, z = bt2 & 8191, H2 = bt2 >>> 13, mt2 = s2[6] | 0, W = mt2 & 8191, K2 = mt2 >>> 13, gt4 = s2[7] | 0, j3 = gt4 & 8191, Z2 = gt4 >>> 13, yt2 = s2[8] | 0, V3 = yt2 & 8191, $2 = yt2 >>> 13, wt2 = s2[9] | 0, G3 = wt2 & 8191, Y2 = wt2 >>> 13, Mt = u3[0] | 0, X3 = Mt & 8191, J2 = Mt >>> 13, _t3 = u3[1] | 0, Q2 = _t3 & 8191, ee = _t3 >>> 13, xt = u3[2] | 0, te = xt & 8191, re = xt >>> 13, St = u3[3] | 0, ie2 = St & 8191, ne2 = St >>> 13, Et = u3[4] | 0, fe = Et & 8191, ae = Et >>> 13, At2 = u3[5] | 0, oe = At2 & 8191, se = At2 >>> 13, Rt = u3[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt2 = u3[7] | 0, le = Bt2 & 8191, de = Bt2 >>> 13, qt = u3[8] | 0, ce2 = qt & 8191, pe = qt >>> 13, It = u3[9] | 0, ve = It & 8191, be2 = It >>> 13;
        h3.negative = i.negative ^ a3.negative, h3.length = 19, l2 = Math.imul(g3, X3), n = Math.imul(g3, J2), n = n + Math.imul(_3, X3) | 0, d3 = Math.imul(_3, J2);
        var ft = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l2 = Math.imul(R2, X3), n = Math.imul(R2, J2), n = n + Math.imul(I3, X3) | 0, d3 = Math.imul(I3, J2), l2 = l2 + Math.imul(g3, Q2) | 0, n = n + Math.imul(g3, ee) | 0, n = n + Math.imul(_3, Q2) | 0, d3 = d3 + Math.imul(_3, ee) | 0;
        var Be = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l2 = Math.imul(k3, X3), n = Math.imul(k3, J2), n = n + Math.imul(D2, X3) | 0, d3 = Math.imul(D2, J2), l2 = l2 + Math.imul(R2, Q2) | 0, n = n + Math.imul(R2, ee) | 0, n = n + Math.imul(I3, Q2) | 0, d3 = d3 + Math.imul(I3, ee) | 0, l2 = l2 + Math.imul(g3, te) | 0, n = n + Math.imul(g3, re) | 0, n = n + Math.imul(_3, te) | 0, d3 = d3 + Math.imul(_3, re) | 0;
        var qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l2 = Math.imul(C, X3), n = Math.imul(C, J2), n = n + Math.imul(O4, X3) | 0, d3 = Math.imul(O4, J2), l2 = l2 + Math.imul(k3, Q2) | 0, n = n + Math.imul(k3, ee) | 0, n = n + Math.imul(D2, Q2) | 0, d3 = d3 + Math.imul(D2, ee) | 0, l2 = l2 + Math.imul(R2, te) | 0, n = n + Math.imul(R2, re) | 0, n = n + Math.imul(I3, te) | 0, d3 = d3 + Math.imul(I3, re) | 0, l2 = l2 + Math.imul(g3, ie2) | 0, n = n + Math.imul(g3, ne2) | 0, n = n + Math.imul(_3, ie2) | 0, d3 = d3 + Math.imul(_3, ne2) | 0;
        var ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l2 = Math.imul(F, X3), n = Math.imul(F, J2), n = n + Math.imul(U4, X3) | 0, d3 = Math.imul(U4, J2), l2 = l2 + Math.imul(C, Q2) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O4, Q2) | 0, d3 = d3 + Math.imul(O4, ee) | 0, l2 = l2 + Math.imul(k3, te) | 0, n = n + Math.imul(k3, re) | 0, n = n + Math.imul(D2, te) | 0, d3 = d3 + Math.imul(D2, re) | 0, l2 = l2 + Math.imul(R2, ie2) | 0, n = n + Math.imul(R2, ne2) | 0, n = n + Math.imul(I3, ie2) | 0, d3 = d3 + Math.imul(I3, ne2) | 0, l2 = l2 + Math.imul(g3, fe) | 0, n = n + Math.imul(g3, ae) | 0, n = n + Math.imul(_3, fe) | 0, d3 = d3 + Math.imul(_3, ae) | 0;
        var He2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (He2 >>> 26) | 0, He2 &= 67108863, l2 = Math.imul(z, X3), n = Math.imul(z, J2), n = n + Math.imul(H2, X3) | 0, d3 = Math.imul(H2, J2), l2 = l2 + Math.imul(F, Q2) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U4, Q2) | 0, d3 = d3 + Math.imul(U4, ee) | 0, l2 = l2 + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O4, te) | 0, d3 = d3 + Math.imul(O4, re) | 0, l2 = l2 + Math.imul(k3, ie2) | 0, n = n + Math.imul(k3, ne2) | 0, n = n + Math.imul(D2, ie2) | 0, d3 = d3 + Math.imul(D2, ne2) | 0, l2 = l2 + Math.imul(R2, fe) | 0, n = n + Math.imul(R2, ae) | 0, n = n + Math.imul(I3, fe) | 0, d3 = d3 + Math.imul(I3, ae) | 0, l2 = l2 + Math.imul(g3, oe) | 0, n = n + Math.imul(g3, se) | 0, n = n + Math.imul(_3, oe) | 0, d3 = d3 + Math.imul(_3, se) | 0;
        var We = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l2 = Math.imul(W, X3), n = Math.imul(W, J2), n = n + Math.imul(K2, X3) | 0, d3 = Math.imul(K2, J2), l2 = l2 + Math.imul(z, Q2) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H2, Q2) | 0, d3 = d3 + Math.imul(H2, ee) | 0, l2 = l2 + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U4, te) | 0, d3 = d3 + Math.imul(U4, re) | 0, l2 = l2 + Math.imul(C, ie2) | 0, n = n + Math.imul(C, ne2) | 0, n = n + Math.imul(O4, ie2) | 0, d3 = d3 + Math.imul(O4, ne2) | 0, l2 = l2 + Math.imul(k3, fe) | 0, n = n + Math.imul(k3, ae) | 0, n = n + Math.imul(D2, fe) | 0, d3 = d3 + Math.imul(D2, ae) | 0, l2 = l2 + Math.imul(R2, oe) | 0, n = n + Math.imul(R2, se) | 0, n = n + Math.imul(I3, oe) | 0, d3 = d3 + Math.imul(I3, se) | 0, l2 = l2 + Math.imul(g3, he) | 0, n = n + Math.imul(g3, ue) | 0, n = n + Math.imul(_3, he) | 0, d3 = d3 + Math.imul(_3, ue) | 0;
        var Ke = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l2 = Math.imul(j3, X3), n = Math.imul(j3, J2), n = n + Math.imul(Z2, X3) | 0, d3 = Math.imul(Z2, J2), l2 = l2 + Math.imul(W, Q2) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K2, Q2) | 0, d3 = d3 + Math.imul(K2, ee) | 0, l2 = l2 + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H2, te) | 0, d3 = d3 + Math.imul(H2, re) | 0, l2 = l2 + Math.imul(F, ie2) | 0, n = n + Math.imul(F, ne2) | 0, n = n + Math.imul(U4, ie2) | 0, d3 = d3 + Math.imul(U4, ne2) | 0, l2 = l2 + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O4, fe) | 0, d3 = d3 + Math.imul(O4, ae) | 0, l2 = l2 + Math.imul(k3, oe) | 0, n = n + Math.imul(k3, se) | 0, n = n + Math.imul(D2, oe) | 0, d3 = d3 + Math.imul(D2, se) | 0, l2 = l2 + Math.imul(R2, he) | 0, n = n + Math.imul(R2, ue) | 0, n = n + Math.imul(I3, he) | 0, d3 = d3 + Math.imul(I3, ue) | 0, l2 = l2 + Math.imul(g3, le) | 0, n = n + Math.imul(g3, de) | 0, n = n + Math.imul(_3, le) | 0, d3 = d3 + Math.imul(_3, de) | 0;
        var je = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l2 = Math.imul(V3, X3), n = Math.imul(V3, J2), n = n + Math.imul($2, X3) | 0, d3 = Math.imul($2, J2), l2 = l2 + Math.imul(j3, Q2) | 0, n = n + Math.imul(j3, ee) | 0, n = n + Math.imul(Z2, Q2) | 0, d3 = d3 + Math.imul(Z2, ee) | 0, l2 = l2 + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K2, te) | 0, d3 = d3 + Math.imul(K2, re) | 0, l2 = l2 + Math.imul(z, ie2) | 0, n = n + Math.imul(z, ne2) | 0, n = n + Math.imul(H2, ie2) | 0, d3 = d3 + Math.imul(H2, ne2) | 0, l2 = l2 + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U4, fe) | 0, d3 = d3 + Math.imul(U4, ae) | 0, l2 = l2 + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O4, oe) | 0, d3 = d3 + Math.imul(O4, se) | 0, l2 = l2 + Math.imul(k3, he) | 0, n = n + Math.imul(k3, ue) | 0, n = n + Math.imul(D2, he) | 0, d3 = d3 + Math.imul(D2, ue) | 0, l2 = l2 + Math.imul(R2, le) | 0, n = n + Math.imul(R2, de) | 0, n = n + Math.imul(I3, le) | 0, d3 = d3 + Math.imul(I3, de) | 0, l2 = l2 + Math.imul(g3, ce2) | 0, n = n + Math.imul(g3, pe) | 0, n = n + Math.imul(_3, ce2) | 0, d3 = d3 + Math.imul(_3, pe) | 0;
        var Ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l2 = Math.imul(G3, X3), n = Math.imul(G3, J2), n = n + Math.imul(Y2, X3) | 0, d3 = Math.imul(Y2, J2), l2 = l2 + Math.imul(V3, Q2) | 0, n = n + Math.imul(V3, ee) | 0, n = n + Math.imul($2, Q2) | 0, d3 = d3 + Math.imul($2, ee) | 0, l2 = l2 + Math.imul(j3, te) | 0, n = n + Math.imul(j3, re) | 0, n = n + Math.imul(Z2, te) | 0, d3 = d3 + Math.imul(Z2, re) | 0, l2 = l2 + Math.imul(W, ie2) | 0, n = n + Math.imul(W, ne2) | 0, n = n + Math.imul(K2, ie2) | 0, d3 = d3 + Math.imul(K2, ne2) | 0, l2 = l2 + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H2, fe) | 0, d3 = d3 + Math.imul(H2, ae) | 0, l2 = l2 + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U4, oe) | 0, d3 = d3 + Math.imul(U4, se) | 0, l2 = l2 + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O4, he) | 0, d3 = d3 + Math.imul(O4, ue) | 0, l2 = l2 + Math.imul(k3, le) | 0, n = n + Math.imul(k3, de) | 0, n = n + Math.imul(D2, le) | 0, d3 = d3 + Math.imul(D2, de) | 0, l2 = l2 + Math.imul(R2, ce2) | 0, n = n + Math.imul(R2, pe) | 0, n = n + Math.imul(I3, ce2) | 0, d3 = d3 + Math.imul(I3, pe) | 0, l2 = l2 + Math.imul(g3, ve) | 0, n = n + Math.imul(g3, be2) | 0, n = n + Math.imul(_3, ve) | 0, d3 = d3 + Math.imul(_3, be2) | 0;
        var Ve = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l2 = Math.imul(G3, Q2), n = Math.imul(G3, ee), n = n + Math.imul(Y2, Q2) | 0, d3 = Math.imul(Y2, ee), l2 = l2 + Math.imul(V3, te) | 0, n = n + Math.imul(V3, re) | 0, n = n + Math.imul($2, te) | 0, d3 = d3 + Math.imul($2, re) | 0, l2 = l2 + Math.imul(j3, ie2) | 0, n = n + Math.imul(j3, ne2) | 0, n = n + Math.imul(Z2, ie2) | 0, d3 = d3 + Math.imul(Z2, ne2) | 0, l2 = l2 + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K2, fe) | 0, d3 = d3 + Math.imul(K2, ae) | 0, l2 = l2 + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H2, oe) | 0, d3 = d3 + Math.imul(H2, se) | 0, l2 = l2 + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U4, he) | 0, d3 = d3 + Math.imul(U4, ue) | 0, l2 = l2 + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O4, le) | 0, d3 = d3 + Math.imul(O4, de) | 0, l2 = l2 + Math.imul(k3, ce2) | 0, n = n + Math.imul(k3, pe) | 0, n = n + Math.imul(D2, ce2) | 0, d3 = d3 + Math.imul(D2, pe) | 0, l2 = l2 + Math.imul(R2, ve) | 0, n = n + Math.imul(R2, be2) | 0, n = n + Math.imul(I3, ve) | 0, d3 = d3 + Math.imul(I3, be2) | 0;
        var $e2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + ($e2 >>> 26) | 0, $e2 &= 67108863, l2 = Math.imul(G3, te), n = Math.imul(G3, re), n = n + Math.imul(Y2, te) | 0, d3 = Math.imul(Y2, re), l2 = l2 + Math.imul(V3, ie2) | 0, n = n + Math.imul(V3, ne2) | 0, n = n + Math.imul($2, ie2) | 0, d3 = d3 + Math.imul($2, ne2) | 0, l2 = l2 + Math.imul(j3, fe) | 0, n = n + Math.imul(j3, ae) | 0, n = n + Math.imul(Z2, fe) | 0, d3 = d3 + Math.imul(Z2, ae) | 0, l2 = l2 + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K2, oe) | 0, d3 = d3 + Math.imul(K2, se) | 0, l2 = l2 + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H2, he) | 0, d3 = d3 + Math.imul(H2, ue) | 0, l2 = l2 + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U4, le) | 0, d3 = d3 + Math.imul(U4, de) | 0, l2 = l2 + Math.imul(C, ce2) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O4, ce2) | 0, d3 = d3 + Math.imul(O4, pe) | 0, l2 = l2 + Math.imul(k3, ve) | 0, n = n + Math.imul(k3, be2) | 0, n = n + Math.imul(D2, ve) | 0, d3 = d3 + Math.imul(D2, be2) | 0;
        var Ge2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ge2 >>> 26) | 0, Ge2 &= 67108863, l2 = Math.imul(G3, ie2), n = Math.imul(G3, ne2), n = n + Math.imul(Y2, ie2) | 0, d3 = Math.imul(Y2, ne2), l2 = l2 + Math.imul(V3, fe) | 0, n = n + Math.imul(V3, ae) | 0, n = n + Math.imul($2, fe) | 0, d3 = d3 + Math.imul($2, ae) | 0, l2 = l2 + Math.imul(j3, oe) | 0, n = n + Math.imul(j3, se) | 0, n = n + Math.imul(Z2, oe) | 0, d3 = d3 + Math.imul(Z2, se) | 0, l2 = l2 + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K2, he) | 0, d3 = d3 + Math.imul(K2, ue) | 0, l2 = l2 + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H2, le) | 0, d3 = d3 + Math.imul(H2, de) | 0, l2 = l2 + Math.imul(F, ce2) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U4, ce2) | 0, d3 = d3 + Math.imul(U4, pe) | 0, l2 = l2 + Math.imul(C, ve) | 0, n = n + Math.imul(C, be2) | 0, n = n + Math.imul(O4, ve) | 0, d3 = d3 + Math.imul(O4, be2) | 0;
        var Ye = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l2 = Math.imul(G3, fe), n = Math.imul(G3, ae), n = n + Math.imul(Y2, fe) | 0, d3 = Math.imul(Y2, ae), l2 = l2 + Math.imul(V3, oe) | 0, n = n + Math.imul(V3, se) | 0, n = n + Math.imul($2, oe) | 0, d3 = d3 + Math.imul($2, se) | 0, l2 = l2 + Math.imul(j3, he) | 0, n = n + Math.imul(j3, ue) | 0, n = n + Math.imul(Z2, he) | 0, d3 = d3 + Math.imul(Z2, ue) | 0, l2 = l2 + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K2, le) | 0, d3 = d3 + Math.imul(K2, de) | 0, l2 = l2 + Math.imul(z, ce2) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H2, ce2) | 0, d3 = d3 + Math.imul(H2, pe) | 0, l2 = l2 + Math.imul(F, ve) | 0, n = n + Math.imul(F, be2) | 0, n = n + Math.imul(U4, ve) | 0, d3 = d3 + Math.imul(U4, be2) | 0;
        var Xe2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Xe2 >>> 26) | 0, Xe2 &= 67108863, l2 = Math.imul(G3, oe), n = Math.imul(G3, se), n = n + Math.imul(Y2, oe) | 0, d3 = Math.imul(Y2, se), l2 = l2 + Math.imul(V3, he) | 0, n = n + Math.imul(V3, ue) | 0, n = n + Math.imul($2, he) | 0, d3 = d3 + Math.imul($2, ue) | 0, l2 = l2 + Math.imul(j3, le) | 0, n = n + Math.imul(j3, de) | 0, n = n + Math.imul(Z2, le) | 0, d3 = d3 + Math.imul(Z2, de) | 0, l2 = l2 + Math.imul(W, ce2) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K2, ce2) | 0, d3 = d3 + Math.imul(K2, pe) | 0, l2 = l2 + Math.imul(z, ve) | 0, n = n + Math.imul(z, be2) | 0, n = n + Math.imul(H2, ve) | 0, d3 = d3 + Math.imul(H2, be2) | 0;
        var Je2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Je2 >>> 26) | 0, Je2 &= 67108863, l2 = Math.imul(G3, he), n = Math.imul(G3, ue), n = n + Math.imul(Y2, he) | 0, d3 = Math.imul(Y2, ue), l2 = l2 + Math.imul(V3, le) | 0, n = n + Math.imul(V3, de) | 0, n = n + Math.imul($2, le) | 0, d3 = d3 + Math.imul($2, de) | 0, l2 = l2 + Math.imul(j3, ce2) | 0, n = n + Math.imul(j3, pe) | 0, n = n + Math.imul(Z2, ce2) | 0, d3 = d3 + Math.imul(Z2, pe) | 0, l2 = l2 + Math.imul(W, ve) | 0, n = n + Math.imul(W, be2) | 0, n = n + Math.imul(K2, ve) | 0, d3 = d3 + Math.imul(K2, be2) | 0;
        var Qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l2 = Math.imul(G3, le), n = Math.imul(G3, de), n = n + Math.imul(Y2, le) | 0, d3 = Math.imul(Y2, de), l2 = l2 + Math.imul(V3, ce2) | 0, n = n + Math.imul(V3, pe) | 0, n = n + Math.imul($2, ce2) | 0, d3 = d3 + Math.imul($2, pe) | 0, l2 = l2 + Math.imul(j3, ve) | 0, n = n + Math.imul(j3, be2) | 0, n = n + Math.imul(Z2, ve) | 0, d3 = d3 + Math.imul(Z2, be2) | 0;
        var et2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (et2 >>> 26) | 0, et2 &= 67108863, l2 = Math.imul(G3, ce2), n = Math.imul(G3, pe), n = n + Math.imul(Y2, ce2) | 0, d3 = Math.imul(Y2, pe), l2 = l2 + Math.imul(V3, ve) | 0, n = n + Math.imul(V3, be2) | 0, n = n + Math.imul($2, ve) | 0, d3 = d3 + Math.imul($2, be2) | 0;
        var tt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (tt2 >>> 26) | 0, tt2 &= 67108863, l2 = Math.imul(G3, ve), n = Math.imul(G3, be2), n = n + Math.imul(Y2, ve) | 0, d3 = Math.imul(Y2, be2);
        var rt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        return b3 = (d3 + (n >>> 13) | 0) + (rt2 >>> 26) | 0, rt2 &= 67108863, c2[0] = ft, c2[1] = Be, c2[2] = qe, c2[3] = ze, c2[4] = He2, c2[5] = We, c2[6] = Ke, c2[7] = je, c2[8] = Ze, c2[9] = Ve, c2[10] = $e2, c2[11] = Ge2, c2[12] = Ye, c2[13] = Xe2, c2[14] = Je2, c2[15] = Qe, c2[16] = et2, c2[17] = tt2, c2[18] = rt2, b3 !== 0 && (c2[19] = b3, h3.length++), h3;
      };
      Math.imul || (L3 = q2);
      function ge2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative, a3.length = v2.length + i.length;
        for (var h3 = 0, s2 = 0, u3 = 0;u3 < a3.length - 1; u3++) {
          var c2 = s2;
          s2 = 0;
          for (var b3 = h3 & 67108863, l2 = Math.min(u3, i.length - 1), n = Math.max(0, u3 - v2.length + 1);n <= l2; n++) {
            var d3 = u3 - n, w = v2.words[d3] | 0, g3 = i.words[n] | 0, _3 = w * g3, A2 = _3 & 67108863;
            c2 = c2 + (_3 / 67108864 | 0) | 0, A2 = A2 + b3 | 0, b3 = A2 & 67108863, c2 = c2 + (A2 >>> 26) | 0, s2 += c2 >>> 26, c2 &= 67108863;
          }
          a3.words[u3] = b3, h3 = c2, c2 = s2;
        }
        return h3 !== 0 ? a3.words[u3] = h3 : a3.length--, a3.strip();
      }
      function _e(v2, i, a3) {
        var h3 = new N3;
        return h3.mulp(v2, i, a3);
      }
      f2.prototype.mulTo = function(i, a3) {
        var h3, s2 = this.length + i.length;
        return this.length === 10 && i.length === 10 ? h3 = L3(this, i, a3) : s2 < 63 ? h3 = q2(this, i, a3) : s2 < 1024 ? h3 = ge2(this, i, a3) : h3 = _e(this, i, a3), h3;
      };
      function N3(v2, i) {
        this.x = v2, this.y = i;
      }
      N3.prototype.makeRBT = function(i) {
        for (var a3 = new Array(i), h3 = f2.prototype._countBits(i) - 1, s2 = 0;s2 < i; s2++)
          a3[s2] = this.revBin(s2, h3, i);
        return a3;
      }, N3.prototype.revBin = function(i, a3, h3) {
        if (i === 0 || i === h3 - 1)
          return i;
        for (var s2 = 0, u3 = 0;u3 < a3; u3++)
          s2 |= (i & 1) << a3 - u3 - 1, i >>= 1;
        return s2;
      }, N3.prototype.permute = function(i, a3, h3, s2, u3, c2) {
        for (var b3 = 0;b3 < c2; b3++)
          s2[b3] = a3[i[b3]], u3[b3] = h3[i[b3]];
      }, N3.prototype.transform = function(i, a3, h3, s2, u3, c2) {
        this.permute(c2, i, a3, h3, s2, u3);
        for (var b3 = 1;b3 < u3; b3 <<= 1)
          for (var l2 = b3 << 1, n = Math.cos(2 * Math.PI / l2), d3 = Math.sin(2 * Math.PI / l2), w = 0;w < u3; w += l2)
            for (var g3 = n, _3 = d3, A2 = 0;A2 < b3; A2++) {
              var R2 = h3[w + A2], I3 = s2[w + A2], Me = h3[w + A2 + b3], k3 = s2[w + A2 + b3], D2 = g3 * Me - _3 * k3;
              k3 = g3 * k3 + _3 * Me, Me = D2, h3[w + A2] = R2 + Me, s2[w + A2] = I3 + k3, h3[w + A2 + b3] = R2 - Me, s2[w + A2 + b3] = I3 - k3, A2 !== l2 && (D2 = n * g3 - d3 * _3, _3 = n * _3 + d3 * g3, g3 = D2);
            }
      }, N3.prototype.guessLen13b = function(i, a3) {
        var h3 = Math.max(a3, i) | 1, s2 = h3 & 1, u3 = 0;
        for (h3 = h3 / 2 | 0;h3; h3 = h3 >>> 1)
          u3++;
        return 1 << u3 + 1 + s2;
      }, N3.prototype.conjugate = function(i, a3, h3) {
        if (!(h3 <= 1))
          for (var s2 = 0;s2 < h3 / 2; s2++) {
            var u3 = i[s2];
            i[s2] = i[h3 - s2 - 1], i[h3 - s2 - 1] = u3, u3 = a3[s2], a3[s2] = -a3[h3 - s2 - 1], a3[h3 - s2 - 1] = -u3;
          }
      }, N3.prototype.normalize13b = function(i, a3) {
        for (var h3 = 0, s2 = 0;s2 < a3 / 2; s2++) {
          var u3 = Math.round(i[2 * s2 + 1] / a3) * 8192 + Math.round(i[2 * s2] / a3) + h3;
          i[s2] = u3 & 67108863, u3 < 67108864 ? h3 = 0 : h3 = u3 / 67108864 | 0;
        }
        return i;
      }, N3.prototype.convert13b = function(i, a3, h3, s2) {
        for (var u3 = 0, c2 = 0;c2 < a3; c2++)
          u3 = u3 + (i[c2] | 0), h3[2 * c2] = u3 & 8191, u3 = u3 >>> 13, h3[2 * c2 + 1] = u3 & 8191, u3 = u3 >>> 13;
        for (c2 = 2 * a3;c2 < s2; ++c2)
          h3[c2] = 0;
        r(u3 === 0), r((u3 & -8192) === 0);
      }, N3.prototype.stub = function(i) {
        for (var a3 = new Array(i), h3 = 0;h3 < i; h3++)
          a3[h3] = 0;
        return a3;
      }, N3.prototype.mulp = function(i, a3, h3) {
        var s2 = 2 * this.guessLen13b(i.length, a3.length), u3 = this.makeRBT(s2), c2 = this.stub(s2), b3 = new Array(s2), l2 = new Array(s2), n = new Array(s2), d3 = new Array(s2), w = new Array(s2), g3 = new Array(s2), _3 = h3.words;
        _3.length = s2, this.convert13b(i.words, i.length, b3, s2), this.convert13b(a3.words, a3.length, d3, s2), this.transform(b3, c2, l2, n, s2, u3), this.transform(d3, c2, w, g3, s2, u3);
        for (var A2 = 0;A2 < s2; A2++) {
          var R2 = l2[A2] * w[A2] - n[A2] * g3[A2];
          n[A2] = l2[A2] * g3[A2] + n[A2] * w[A2], l2[A2] = R2;
        }
        return this.conjugate(l2, n, s2), this.transform(l2, n, _3, c2, s2, u3), this.conjugate(_3, c2, s2), this.normalize13b(_3, s2), h3.negative = i.negative ^ a3.negative, h3.length = i.length + a3.length, h3.strip();
      }, f2.prototype.mul = function(i) {
        var a3 = new f2(null);
        return a3.words = new Array(this.length + i.length), this.mulTo(i, a3);
      }, f2.prototype.mulf = function(i) {
        var a3 = new f2(null);
        return a3.words = new Array(this.length + i.length), _e(this, i, a3);
      }, f2.prototype.imul = function(i) {
        return this.clone().mulTo(i, this);
      }, f2.prototype.imuln = function(i) {
        r(typeof i == "number"), r(i < 67108864);
        for (var a3 = 0, h3 = 0;h3 < this.length; h3++) {
          var s2 = (this.words[h3] | 0) * i, u3 = (s2 & 67108863) + (a3 & 67108863);
          a3 >>= 26, a3 += s2 / 67108864 | 0, a3 += u3 >>> 26, this.words[h3] = u3 & 67108863;
        }
        return a3 !== 0 && (this.words[h3] = a3, this.length++), this;
      }, f2.prototype.muln = function(i) {
        return this.clone().imuln(i);
      }, f2.prototype.sqr = function() {
        return this.mul(this);
      }, f2.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f2.prototype.pow = function(i) {
        var a3 = B3(i);
        if (a3.length === 0)
          return new f2(1);
        for (var h3 = this, s2 = 0;s2 < a3.length && a3[s2] === 0; s2++, h3 = h3.sqr())
          ;
        if (++s2 < a3.length)
          for (var u3 = h3.sqr();s2 < a3.length; s2++, u3 = u3.sqr())
            a3[s2] !== 0 && (h3 = h3.mul(u3));
        return h3;
      }, f2.prototype.iushln = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 67108863 >>> 26 - a3 << 26 - a3, u3;
        if (a3 !== 0) {
          var c2 = 0;
          for (u3 = 0;u3 < this.length; u3++) {
            var b3 = this.words[u3] & s2, l2 = (this.words[u3] | 0) - b3 << a3;
            this.words[u3] = l2 | c2, c2 = b3 >>> 26 - a3;
          }
          c2 && (this.words[u3] = c2, this.length++);
        }
        if (h3 !== 0) {
          for (u3 = this.length - 1;u3 >= 0; u3--)
            this.words[u3 + h3] = this.words[u3];
          for (u3 = 0;u3 < h3; u3++)
            this.words[u3] = 0;
          this.length += h3;
        }
        return this.strip();
      }, f2.prototype.ishln = function(i) {
        return r(this.negative === 0), this.iushln(i);
      }, f2.prototype.iushrn = function(i, a3, h3) {
        r(typeof i == "number" && i >= 0);
        var s2;
        a3 ? s2 = (a3 - a3 % 26) / 26 : s2 = 0;
        var u3 = i % 26, c2 = Math.min((i - u3) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u3 << u3, l2 = h3;
        if (s2 -= c2, s2 = Math.max(0, s2), l2) {
          for (var n = 0;n < c2; n++)
            l2.words[n] = this.words[n];
          l2.length = c2;
        }
        if (c2 !== 0)
          if (this.length > c2)
            for (this.length -= c2, n = 0;n < this.length; n++)
              this.words[n] = this.words[n + c2];
          else
            this.words[0] = 0, this.length = 1;
        var d3 = 0;
        for (n = this.length - 1;n >= 0 && (d3 !== 0 || n >= s2); n--) {
          var w = this.words[n] | 0;
          this.words[n] = d3 << 26 - u3 | w >>> u3, d3 = w & b3;
        }
        return l2 && d3 !== 0 && (l2.words[l2.length++] = d3), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f2.prototype.ishrn = function(i, a3, h3) {
        return r(this.negative === 0), this.iushrn(i, a3, h3);
      }, f2.prototype.shln = function(i) {
        return this.clone().ishln(i);
      }, f2.prototype.ushln = function(i) {
        return this.clone().iushln(i);
      }, f2.prototype.shrn = function(i) {
        return this.clone().ishrn(i);
      }, f2.prototype.ushrn = function(i) {
        return this.clone().iushrn(i);
      }, f2.prototype.testn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return false;
        var u3 = this.words[h3];
        return !!(u3 & s2);
      }, f2.prototype.imaskn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26;
        if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h3)
          return this;
        if (a3 !== 0 && h3++, this.length = Math.min(h3, this.length), a3 !== 0) {
          var s2 = 67108863 ^ 67108863 >>> a3 << a3;
          this.words[this.length - 1] &= s2;
        }
        return this.strip();
      }, f2.prototype.maskn = function(i) {
        return this.clone().imaskn(i);
      }, f2.prototype.iaddn = function(i) {
        return r(typeof i == "number"), r(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
      }, f2.prototype._iaddn = function(i) {
        this.words[0] += i;
        for (var a3 = 0;a3 < this.length && this.words[a3] >= 67108864; a3++)
          this.words[a3] -= 67108864, a3 === this.length - 1 ? this.words[a3 + 1] = 1 : this.words[a3 + 1]++;
        return this.length = Math.max(this.length, a3 + 1), this;
      }, f2.prototype.isubn = function(i) {
        if (r(typeof i == "number"), r(i < 67108864), i < 0)
          return this.iaddn(-i);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i), this.negative = 1, this;
        if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a3 = 0;a3 < this.length && this.words[a3] < 0; a3++)
            this.words[a3] += 67108864, this.words[a3 + 1] -= 1;
        return this.strip();
      }, f2.prototype.addn = function(i) {
        return this.clone().iaddn(i);
      }, f2.prototype.subn = function(i) {
        return this.clone().isubn(i);
      }, f2.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f2.prototype.abs = function() {
        return this.clone().iabs();
      }, f2.prototype._ishlnsubmul = function(i, a3, h3) {
        var s2 = i.length + h3, u3;
        this._expand(s2);
        var c2, b3 = 0;
        for (u3 = 0;u3 < i.length; u3++) {
          c2 = (this.words[u3 + h3] | 0) + b3;
          var l2 = (i.words[u3] | 0) * a3;
          c2 -= l2 & 67108863, b3 = (c2 >> 26) - (l2 / 67108864 | 0), this.words[u3 + h3] = c2 & 67108863;
        }
        for (;u3 < this.length - h3; u3++)
          c2 = (this.words[u3 + h3] | 0) + b3, b3 = c2 >> 26, this.words[u3 + h3] = c2 & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r(b3 === -1), b3 = 0, u3 = 0;u3 < this.length; u3++)
          c2 = -(this.words[u3] | 0) + b3, b3 = c2 >> 26, this.words[u3] = c2 & 67108863;
        return this.negative = 1, this.strip();
      }, f2.prototype._wordDiv = function(i, a3) {
        var h3 = this.length - i.length, s2 = this.clone(), u3 = i, c2 = u3.words[u3.length - 1] | 0, b3 = this._countBits(c2);
        h3 = 26 - b3, h3 !== 0 && (u3 = u3.ushln(h3), s2.iushln(h3), c2 = u3.words[u3.length - 1] | 0);
        var l2 = s2.length - u3.length, n;
        if (a3 !== "mod") {
          n = new f2(null), n.length = l2 + 1, n.words = new Array(n.length);
          for (var d3 = 0;d3 < n.length; d3++)
            n.words[d3] = 0;
        }
        var w = s2.clone()._ishlnsubmul(u3, 1, l2);
        w.negative === 0 && (s2 = w, n && (n.words[l2] = 1));
        for (var g3 = l2 - 1;g3 >= 0; g3--) {
          var _3 = (s2.words[u3.length + g3] | 0) * 67108864 + (s2.words[u3.length + g3 - 1] | 0);
          for (_3 = Math.min(_3 / c2 | 0, 67108863), s2._ishlnsubmul(u3, _3, g3);s2.negative !== 0; )
            _3--, s2.negative = 0, s2._ishlnsubmul(u3, 1, g3), s2.isZero() || (s2.negative ^= 1);
          n && (n.words[g3] = _3);
        }
        return n && n.strip(), s2.strip(), a3 !== "div" && h3 !== 0 && s2.iushrn(h3), { div: n || null, mod: s2 };
      }, f2.prototype.divmod = function(i, a3, h3) {
        if (r(!i.isZero()), this.isZero())
          return { div: new f2(0), mod: new f2(0) };
        var s2, u3, c2;
        return this.negative !== 0 && i.negative === 0 ? (c2 = this.neg().divmod(i, a3), a3 !== "mod" && (s2 = c2.div.neg()), a3 !== "div" && (u3 = c2.mod.neg(), h3 && u3.negative !== 0 && u3.iadd(i)), { div: s2, mod: u3 }) : this.negative === 0 && i.negative !== 0 ? (c2 = this.divmod(i.neg(), a3), a3 !== "mod" && (s2 = c2.div.neg()), { div: s2, mod: c2.mod }) : (this.negative & i.negative) !== 0 ? (c2 = this.neg().divmod(i.neg(), a3), a3 !== "div" && (u3 = c2.mod.neg(), h3 && u3.negative !== 0 && u3.isub(i)), { div: c2.div, mod: u3 }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f2(0), mod: this } : i.length === 1 ? a3 === "div" ? { div: this.divn(i.words[0]), mod: null } : a3 === "mod" ? { div: null, mod: new f2(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f2(this.modn(i.words[0])) } : this._wordDiv(i, a3);
      }, f2.prototype.div = function(i) {
        return this.divmod(i, "div", false).div;
      }, f2.prototype.mod = function(i) {
        return this.divmod(i, "mod", false).mod;
      }, f2.prototype.umod = function(i) {
        return this.divmod(i, "mod", true).mod;
      }, f2.prototype.divRound = function(i) {
        var a3 = this.divmod(i);
        if (a3.mod.isZero())
          return a3.div;
        var h3 = a3.div.negative !== 0 ? a3.mod.isub(i) : a3.mod, s2 = i.ushrn(1), u3 = i.andln(1), c2 = h3.cmp(s2);
        return c2 < 0 || u3 === 1 && c2 === 0 ? a3.div : a3.div.negative !== 0 ? a3.div.isubn(1) : a3.div.iaddn(1);
      }, f2.prototype.modn = function(i) {
        r(i <= 67108863);
        for (var a3 = (1 << 26) % i, h3 = 0, s2 = this.length - 1;s2 >= 0; s2--)
          h3 = (a3 * h3 + (this.words[s2] | 0)) % i;
        return h3;
      }, f2.prototype.idivn = function(i) {
        r(i <= 67108863);
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = (this.words[h3] | 0) + a3 * 67108864;
          this.words[h3] = s2 / i | 0, a3 = s2 % i;
        }
        return this.strip();
      }, f2.prototype.divn = function(i) {
        return this.clone().idivn(i);
      }, f2.prototype.egcd = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f2(1), u3 = new f2(0), c2 = new f2(0), b3 = new f2(1), l2 = 0;a3.isEven() && h3.isEven(); )
          a3.iushrn(1), h3.iushrn(1), ++l2;
        for (var n = h3.clone(), d3 = a3.clone();!a3.isZero(); ) {
          for (var w = 0, g3 = 1;(a3.words[0] & g3) === 0 && w < 26; ++w, g3 <<= 1)
            ;
          if (w > 0)
            for (a3.iushrn(w);w-- > 0; )
              (s2.isOdd() || u3.isOdd()) && (s2.iadd(n), u3.isub(d3)), s2.iushrn(1), u3.iushrn(1);
          for (var _3 = 0, A2 = 1;(h3.words[0] & A2) === 0 && _3 < 26; ++_3, A2 <<= 1)
            ;
          if (_3 > 0)
            for (h3.iushrn(_3);_3-- > 0; )
              (c2.isOdd() || b3.isOdd()) && (c2.iadd(n), b3.isub(d3)), c2.iushrn(1), b3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(c2), u3.isub(b3)) : (h3.isub(a3), c2.isub(s2), b3.isub(u3));
        }
        return { a: c2, b: b3, gcd: h3.iushln(l2) };
      }, f2.prototype._invmp = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f2(1), u3 = new f2(0), c2 = h3.clone();a3.cmpn(1) > 0 && h3.cmpn(1) > 0; ) {
          for (var b3 = 0, l2 = 1;(a3.words[0] & l2) === 0 && b3 < 26; ++b3, l2 <<= 1)
            ;
          if (b3 > 0)
            for (a3.iushrn(b3);b3-- > 0; )
              s2.isOdd() && s2.iadd(c2), s2.iushrn(1);
          for (var n = 0, d3 = 1;(h3.words[0] & d3) === 0 && n < 26; ++n, d3 <<= 1)
            ;
          if (n > 0)
            for (h3.iushrn(n);n-- > 0; )
              u3.isOdd() && u3.iadd(c2), u3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(u3)) : (h3.isub(a3), u3.isub(s2));
        }
        var w;
        return a3.cmpn(1) === 0 ? w = s2 : w = u3, w.cmpn(0) < 0 && w.iadd(i), w;
      }, f2.prototype.gcd = function(i) {
        if (this.isZero())
          return i.abs();
        if (i.isZero())
          return this.abs();
        var a3 = this.clone(), h3 = i.clone();
        a3.negative = 0, h3.negative = 0;
        for (var s2 = 0;a3.isEven() && h3.isEven(); s2++)
          a3.iushrn(1), h3.iushrn(1);
        do {
          for (;a3.isEven(); )
            a3.iushrn(1);
          for (;h3.isEven(); )
            h3.iushrn(1);
          var u3 = a3.cmp(h3);
          if (u3 < 0) {
            var c2 = a3;
            a3 = h3, h3 = c2;
          } else if (u3 === 0 || h3.cmpn(1) === 0)
            break;
          a3.isub(h3);
        } while (true);
        return h3.iushln(s2);
      }, f2.prototype.invm = function(i) {
        return this.egcd(i).a.umod(i);
      }, f2.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f2.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f2.prototype.andln = function(i) {
        return this.words[0] & i;
      }, f2.prototype.bincn = function(i) {
        r(typeof i == "number");
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return this._expand(h3 + 1), this.words[h3] |= s2, this;
        for (var u3 = s2, c2 = h3;u3 !== 0 && c2 < this.length; c2++) {
          var b3 = this.words[c2] | 0;
          b3 += u3, u3 = b3 >>> 26, b3 &= 67108863, this.words[c2] = b3;
        }
        return u3 !== 0 && (this.words[c2] = u3, this.length++), this;
      }, f2.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f2.prototype.cmpn = function(i) {
        var a3 = i < 0;
        if (this.negative !== 0 && !a3)
          return -1;
        if (this.negative === 0 && a3)
          return 1;
        this.strip();
        var h3;
        if (this.length > 1)
          h3 = 1;
        else {
          a3 && (i = -i), r(i <= 67108863, "Number is too big");
          var s2 = this.words[0] | 0;
          h3 = s2 === i ? 0 : s2 < i ? -1 : 1;
        }
        return this.negative !== 0 ? -h3 | 0 : h3;
      }, f2.prototype.cmp = function(i) {
        if (this.negative !== 0 && i.negative === 0)
          return -1;
        if (this.negative === 0 && i.negative !== 0)
          return 1;
        var a3 = this.ucmp(i);
        return this.negative !== 0 ? -a3 | 0 : a3;
      }, f2.prototype.ucmp = function(i) {
        if (this.length > i.length)
          return 1;
        if (this.length < i.length)
          return -1;
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = this.words[h3] | 0, u3 = i.words[h3] | 0;
          if (s2 !== u3) {
            s2 < u3 ? a3 = -1 : s2 > u3 && (a3 = 1);
            break;
          }
        }
        return a3;
      }, f2.prototype.gtn = function(i) {
        return this.cmpn(i) === 1;
      }, f2.prototype.gt = function(i) {
        return this.cmp(i) === 1;
      }, f2.prototype.gten = function(i) {
        return this.cmpn(i) >= 0;
      }, f2.prototype.gte = function(i) {
        return this.cmp(i) >= 0;
      }, f2.prototype.ltn = function(i) {
        return this.cmpn(i) === -1;
      }, f2.prototype.lt = function(i) {
        return this.cmp(i) === -1;
      }, f2.prototype.lten = function(i) {
        return this.cmpn(i) <= 0;
      }, f2.prototype.lte = function(i) {
        return this.cmp(i) <= 0;
      }, f2.prototype.eqn = function(i) {
        return this.cmpn(i) === 0;
      }, f2.prototype.eq = function(i) {
        return this.cmp(i) === 0;
      }, f2.red = function(i) {
        return new P2(i);
      }, f2.prototype.toRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
      }, f2.prototype.fromRed = function() {
        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f2.prototype._forceRed = function(i) {
        return this.red = i, this;
      }, f2.prototype.forceRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), this._forceRed(i);
      }, f2.prototype.redAdd = function(i) {
        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
      }, f2.prototype.redIAdd = function(i) {
        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
      }, f2.prototype.redSub = function(i) {
        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
      }, f2.prototype.redISub = function(i) {
        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
      }, f2.prototype.redShl = function(i) {
        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
      }, f2.prototype.redMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
      }, f2.prototype.redIMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
      }, f2.prototype.redSqr = function() {
        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f2.prototype.redISqr = function() {
        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f2.prototype.redSqrt = function() {
        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f2.prototype.redInvm = function() {
        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f2.prototype.redNeg = function() {
        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f2.prototype.redPow = function(i) {
        return r(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v2, i) {
        this.name = v2, this.p = new f2(i, 16), this.n = this.p.bitLength(), this.k = new f2(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i = new f2(null);
        return i.words = new Array(Math.ceil(this.n / 13)), i;
      }, ye.prototype.ireduce = function(i) {
        var a3 = i, h3;
        do
          this.split(a3, this.tmp), a3 = this.imulK(a3), a3 = a3.iadd(this.tmp), h3 = a3.bitLength();
        while (h3 > this.n);
        var s2 = h3 < this.n ? -1 : a3.ucmp(this.p);
        return s2 === 0 ? (a3.words[0] = 0, a3.length = 1) : s2 > 0 ? a3.isub(this.p) : a3.strip !== undefined ? a3.strip() : a3._strip(), a3;
      }, ye.prototype.split = function(i, a3) {
        i.iushrn(this.n, 0, a3);
      }, ye.prototype.imulK = function(i) {
        return i.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o(xe, ye), xe.prototype.split = function(i, a3) {
        for (var h3 = 4194303, s2 = Math.min(i.length, 9), u3 = 0;u3 < s2; u3++)
          a3.words[u3] = i.words[u3];
        if (a3.length = s2, i.length <= 9) {
          i.words[0] = 0, i.length = 1;
          return;
        }
        var c2 = i.words[9];
        for (a3.words[a3.length++] = c2 & h3, u3 = 10;u3 < i.length; u3++) {
          var b3 = i.words[u3] | 0;
          i.words[u3 - 10] = (b3 & h3) << 4 | c2 >>> 22, c2 = b3;
        }
        c2 >>>= 22, i.words[u3 - 10] = c2, c2 === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
      }, xe.prototype.imulK = function(i) {
        i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = i.words[h3] | 0;
          a3 += s2 * 977, i.words[h3] = a3 & 67108863, a3 = s2 * 64 + (a3 / 67108864 | 0);
        }
        return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o(Ae, ye), Ae.prototype.imulK = function(i) {
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = (i.words[h3] | 0) * 19 + a3, u3 = s2 & 67108863;
          s2 >>>= 26, i.words[h3] = u3, a3 = s2;
        }
        return a3 !== 0 && (i.words[i.length++] = a3), i;
      }, f2._prime = function(i) {
        if (we[i])
          return we[i];
        var a3;
        if (i === "k256")
          a3 = new xe;
        else if (i === "p224")
          a3 = new Re;
        else if (i === "p192")
          a3 = new Ee;
        else if (i === "p25519")
          a3 = new Ae;
        else
          throw new Error("Unknown prime " + i);
        return we[i] = a3, a3;
      };
      function P2(v2) {
        if (typeof v2 == "string") {
          var i = f2._prime(v2);
          this.m = i.p, this.prime = i;
        } else
          r(v2.gtn(1), "modulus must be greater than 1"), this.m = v2, this.prime = null;
      }
      P2.prototype._verify1 = function(i) {
        r(i.negative === 0, "red works only with positives"), r(i.red, "red works only with red numbers");
      }, P2.prototype._verify2 = function(i, a3) {
        r((i.negative | a3.negative) === 0, "red works only with positives"), r(i.red && i.red === a3.red, "red works only with red numbers");
      }, P2.prototype.imod = function(i) {
        return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
      }, P2.prototype.neg = function(i) {
        return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
      }, P2.prototype.add = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.add(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3._forceRed(this);
      }, P2.prototype.iadd = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.iadd(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3;
      }, P2.prototype.sub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.sub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3._forceRed(this);
      }, P2.prototype.isub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.isub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3;
      }, P2.prototype.shl = function(i, a3) {
        return this._verify1(i), this.imod(i.ushln(a3));
      }, P2.prototype.imul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.imul(a3));
      }, P2.prototype.mul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.mul(a3));
      }, P2.prototype.isqr = function(i) {
        return this.imul(i, i.clone());
      }, P2.prototype.sqr = function(i) {
        return this.mul(i, i);
      }, P2.prototype.sqrt = function(i) {
        if (i.isZero())
          return i.clone();
        var a3 = this.m.andln(3);
        if (r(a3 % 2 === 1), a3 === 3) {
          var h3 = this.m.add(new f2(1)).iushrn(2);
          return this.pow(i, h3);
        }
        for (var s2 = this.m.subn(1), u3 = 0;!s2.isZero() && s2.andln(1) === 0; )
          u3++, s2.iushrn(1);
        r(!s2.isZero());
        var c2 = new f2(1).toRed(this), b3 = c2.redNeg(), l2 = this.m.subn(1).iushrn(1), n = this.m.bitLength();
        for (n = new f2(2 * n * n).toRed(this);this.pow(n, l2).cmp(b3) !== 0; )
          n.redIAdd(b3);
        for (var d3 = this.pow(n, s2), w = this.pow(i, s2.addn(1).iushrn(1)), g3 = this.pow(i, s2), _3 = u3;g3.cmp(c2) !== 0; ) {
          for (var A2 = g3, R2 = 0;A2.cmp(c2) !== 0; R2++)
            A2 = A2.redSqr();
          r(R2 < _3);
          var I3 = this.pow(d3, new f2(1).iushln(_3 - R2 - 1));
          w = w.redMul(I3), d3 = I3.redSqr(), g3 = g3.redMul(d3), _3 = R2;
        }
        return w;
      }, P2.prototype.invm = function(i) {
        var a3 = i._invmp(this.m);
        return a3.negative !== 0 ? (a3.negative = 0, this.imod(a3).redNeg()) : this.imod(a3);
      }, P2.prototype.pow = function(i, a3) {
        if (a3.isZero())
          return new f2(1).toRed(this);
        if (a3.cmpn(1) === 0)
          return i.clone();
        var h3 = 4, s2 = new Array(1 << h3);
        s2[0] = new f2(1).toRed(this), s2[1] = i;
        for (var u3 = 2;u3 < s2.length; u3++)
          s2[u3] = this.mul(s2[u3 - 1], i);
        var c2 = s2[0], b3 = 0, l2 = 0, n = a3.bitLength() % 26;
        for (n === 0 && (n = 26), u3 = a3.length - 1;u3 >= 0; u3--) {
          for (var d3 = a3.words[u3], w = n - 1;w >= 0; w--) {
            var g3 = d3 >> w & 1;
            if (c2 !== s2[0] && (c2 = this.sqr(c2)), g3 === 0 && b3 === 0) {
              l2 = 0;
              continue;
            }
            b3 <<= 1, b3 |= g3, l2++, !(l2 !== h3 && (u3 !== 0 || w !== 0)) && (c2 = this.mul(c2, s2[b3]), l2 = 0, b3 = 0);
          }
          n = 26;
        }
        return c2;
      }, P2.prototype.convertTo = function(i) {
        var a3 = i.umod(this.m);
        return a3 === i ? a3.clone() : a3;
      }, P2.prototype.convertFrom = function(i) {
        var a3 = i.clone();
        return a3.red = null, a3;
      }, f2.mont = function(i) {
        return new Se2(i);
      };
      function Se2(v2) {
        P2.call(this, v2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f2(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o(Se2, P2), Se2.prototype.convertTo = function(i) {
        return this.imod(i.ushln(this.shift));
      }, Se2.prototype.convertFrom = function(i) {
        var a3 = this.imod(i.mul(this.rinv));
        return a3.red = null, a3;
      }, Se2.prototype.imul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return i.words[0] = 0, i.length = 1, i;
        var h3 = i.imul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c2 = u3;
        return u3.cmp(this.m) >= 0 ? c2 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c2 = u3.iadd(this.m)), c2._forceRed(this);
      }, Se2.prototype.mul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return new f2(0)._forceRed(this);
        var h3 = i.mul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c2 = u3;
        return u3.cmp(this.m) >= 0 ? c2 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c2 = u3.iadd(this.m)), c2._forceRed(this);
      }, Se2.prototype.invm = function(i) {
        var a3 = this.imod(i._invmp(this.m).mul(this.r2));
        return a3._forceRed(this);
      };
    })(typeof Yu > "u" || Yu, Zm);
  });
  $m = T3(() => {});
  Es2 = T3((ZT, Qu) => {
    var Xu;
    Qu.exports = function(e) {
      return Xu || (Xu = new Zi2(null)), Xu.generate(e);
    };
    function Zi2(t) {
      this.rand = t;
    }
    Qu.exports.Rand = Zi2;
    Zi2.prototype.generate = function(e) {
      return this._rand(e);
    };
    Zi2.prototype._rand = function(e) {
      if (this.rand.getBytes)
        return this.rand.getBytes(e);
      for (var r = new Uint8Array(e), o = 0;o < r.length; o++)
        r[o] = this.rand.getByte();
      return r;
    };
    if (typeof self == "object")
      self.crypto && self.crypto.getRandomValues ? Zi2.prototype._rand = function(e) {
        var r = new Uint8Array(e);
        return self.crypto.getRandomValues(r), r;
      } : self.msCrypto && self.msCrypto.getRandomValues ? Zi2.prototype._rand = function(e) {
        var r = new Uint8Array(e);
        return self.msCrypto.getRandomValues(r), r;
      } : typeof window == "object" && (Zi2.prototype._rand = function() {
        throw new Error("Not implemented yet");
      });
    else
      try {
        if (Ju = $m(), typeof Ju.randomBytes != "function")
          throw new Error("Not supported");
        Zi2.prototype._rand = function(e) {
          return Ju.randomBytes(e);
        };
      } catch {}
    var Ju;
  });
  el = T3((VT, Gm) => {
    var In = Vm(), Y9 = Es2();
    function Tn(t) {
      this.rand = t || new Y9.Rand;
    }
    Gm.exports = Tn;
    Tn.create = function(e) {
      return new Tn(e);
    };
    Tn.prototype._randbelow = function(e) {
      var r = e.bitLength(), o = Math.ceil(r / 8);
      do
        var f2 = new In(this.rand.generate(o));
      while (f2.cmp(e) >= 0);
      return f2;
    };
    Tn.prototype._randrange = function(e, r) {
      var o = r.sub(e);
      return e.add(this._randbelow(o));
    };
    Tn.prototype.test = function(e, r, o) {
      var f2 = e.bitLength(), p3 = In.mont(e), m3 = new In(1).toRed(p3);
      r || (r = Math.max(1, f2 / 48 | 0));
      for (var y3 = e.subn(1), M2 = 0;!y3.testn(M2); M2++)
        ;
      for (var x4 = e.shrn(M2), S3 = y3.toRed(p3), E4 = true;r > 0; r--) {
        var B3 = this._randrange(new In(2), y3);
        o && o(B3);
        var q2 = B3.toRed(p3).redPow(x4);
        if (!(q2.cmp(m3) === 0 || q2.cmp(S3) === 0)) {
          for (var L3 = 1;L3 < M2; L3++) {
            if (q2 = q2.redSqr(), q2.cmp(m3) === 0)
              return false;
            if (q2.cmp(S3) === 0)
              break;
          }
          if (L3 === M2)
            return false;
        }
      }
      return E4;
    };
    Tn.prototype.getDivisor = function(e, r) {
      var o = e.bitLength(), f2 = In.mont(e), p3 = new In(1).toRed(f2);
      r || (r = Math.max(1, o / 48 | 0));
      for (var m3 = e.subn(1), y3 = 0;!m3.testn(y3); y3++)
        ;
      for (var M2 = e.shrn(y3), x4 = m3.toRed(f2);r > 0; r--) {
        var S3 = this._randrange(new In(2), m3), E4 = e.gcd(S3);
        if (E4.cmpn(1) !== 0)
          return E4;
        var B3 = S3.toRed(f2).redPow(M2);
        if (!(B3.cmp(p3) === 0 || B3.cmp(x4) === 0)) {
          for (var q2 = 1;q2 < y3; q2++) {
            if (B3 = B3.redSqr(), B3.cmp(p3) === 0)
              return B3.fromRed().subn(1).gcd(e);
            if (B3.cmp(x4) === 0)
              break;
          }
          if (q2 === y3)
            return B3 = B3.redSqr(), B3.fromRed().subn(1).gcd(e);
        }
      }
      return false;
    };
  });
  al = T3((JT, Jm) => {
    var X9 = on();
    Jm.exports = fl;
    fl.simpleSieve = il;
    fl.fermatTest = nl;
    var Ht = Gu(), J9 = new Ht(24), Q9 = el(), Ym = new Q9, eS = new Ht(1), rl = new Ht(2), tS = new Ht(5), $T = new Ht(16), GT = new Ht(8), rS = new Ht(10), iS = new Ht(3), YT = new Ht(7), nS = new Ht(11), Xm = new Ht(4), XT = new Ht(12), tl = null;
    function fS() {
      if (tl !== null)
        return tl;
      var t = 1048576, e = [];
      e[0] = 2;
      for (var r = 1, o = 3;o < t; o += 2) {
        for (var f2 = Math.ceil(Math.sqrt(o)), p3 = 0;p3 < r && e[p3] <= f2 && o % e[p3] !== 0; p3++)
          ;
        r !== p3 && e[p3] <= f2 || (e[r++] = o);
      }
      return tl = e, e;
    }
    function il(t) {
      for (var e = fS(), r = 0;r < e.length; r++)
        if (t.modn(e[r]) === 0)
          return t.cmpn(e[r]) === 0;
      return true;
    }
    function nl(t) {
      var e = Ht.mont(t);
      return rl.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1) === 0;
    }
    function fl(t, e) {
      if (t < 16)
        return e === 2 || e === 5 ? new Ht([140, 123]) : new Ht([140, 39]);
      e = new Ht(e);
      for (var r, o;; ) {
        for (r = new Ht(X9(Math.ceil(t / 8)));r.bitLength() > t; )
          r.ishrn(1);
        if (r.isEven() && r.iadd(eS), r.testn(1) || r.iadd(rl), e.cmp(rl)) {
          if (!e.cmp(tS))
            for (;r.mod(rS).cmp(iS); )
              r.iadd(Xm);
        } else
          for (;r.mod(J9).cmp(nS); )
            r.iadd(Xm);
        if (o = r.shrn(1), il(o) && il(r) && nl(o) && nl(r) && Ym.test(o) && Ym.test(r))
          return r;
      }
    }
  });
  Qm = T3((QT, aS) => {
    aS.exports = { modp1: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff" }, modp2: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff" }, modp5: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff" }, modp14: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff" }, modp15: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff" }, modp16: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff" }, modp17: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff" }, modp18: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff" } };
  });
  ig = T3((ek, rg) => {
    var yr = Gu(), oS = el(), eg = new oS, sS = new yr(24), hS = new yr(11), uS = new yr(10), lS = new yr(3), dS = new yr(7), tg = al(), cS = on();
    rg.exports = Si2;
    function pS(t, e) {
      return e = e || "utf8", Buffer.isBuffer(t) || (t = new Buffer(t, e)), this._pub = new yr(t), this;
    }
    function vS(t, e) {
      return e = e || "utf8", Buffer.isBuffer(t) || (t = new Buffer(t, e)), this._priv = new yr(t), this;
    }
    var As = {};
    function bS(t, e) {
      var r = e.toString("hex"), o = [r, t.toString(16)].join("_");
      if (o in As)
        return As[o];
      var f2 = 0;
      if (t.isEven() || !tg.simpleSieve || !tg.fermatTest(t) || !eg.test(t))
        return f2 += 1, r === "02" || r === "05" ? f2 += 8 : f2 += 4, As[o] = f2, f2;
      eg.test(t.shrn(1)) || (f2 += 2);
      var p3;
      switch (r) {
        case "02":
          t.mod(sS).cmp(hS) && (f2 += 8);
          break;
        case "05":
          p3 = t.mod(uS), p3.cmp(lS) && p3.cmp(dS) && (f2 += 8);
          break;
        default:
          f2 += 4;
      }
      return As[o] = f2, f2;
    }
    function Si2(t, e, r) {
      this.setGenerator(e), this.__prime = new yr(t), this._prime = yr.mont(this.__prime), this._primeLen = t.length, this._pub = undefined, this._priv = undefined, this._primeCode = undefined, r ? (this.setPublicKey = pS, this.setPrivateKey = vS) : this._primeCode = 8;
    }
    Object.defineProperty(Si2.prototype, "verifyError", { enumerable: true, get: function() {
      return typeof this._primeCode != "number" && (this._primeCode = bS(this.__prime, this.__gen)), this._primeCode;
    } });
    Si2.prototype.generateKeys = function() {
      return this._priv || (this._priv = new yr(cS(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
    };
    Si2.prototype.computeSecret = function(t) {
      t = new yr(t), t = t.toRed(this._prime);
      var e = t.redPow(this._priv).fromRed(), r = new Buffer(e.toArray()), o = this.getPrime();
      if (r.length < o.length) {
        var f2 = new Buffer(o.length - r.length);
        f2.fill(0), r = Buffer.concat([f2, r]);
      }
      return r;
    };
    Si2.prototype.getPublicKey = function(e) {
      return Rs(this._pub, e);
    };
    Si2.prototype.getPrivateKey = function(e) {
      return Rs(this._priv, e);
    };
    Si2.prototype.getPrime = function(t) {
      return Rs(this.__prime, t);
    };
    Si2.prototype.getGenerator = function(t) {
      return Rs(this._gen, t);
    };
    Si2.prototype.setGenerator = function(t, e) {
      return e = e || "utf8", Buffer.isBuffer(t) || (t = new Buffer(t, e)), this.__gen = t, this._gen = new yr(t), this;
    };
    function Rs(t, e) {
      var r = new Buffer(t.toArray());
      return e ? r.toString(e) : r;
    }
  });
  ag = T3((_f) => {
    var mS = al(), ng = Qm(), ol2 = ig();
    function gS(t) {
      var e = new Buffer(ng[t].prime, "hex"), r = new Buffer(ng[t].gen, "hex");
      return new ol2(e, r);
    }
    var yS = { binary: true, hex: true, base64: true };
    function fg(t, e, r, o) {
      return Buffer.isBuffer(e) || yS[e] === undefined ? fg(t, "binary", e, r) : (e = e || "binary", o = o || "binary", r = r || new Buffer([2]), Buffer.isBuffer(r) || (r = new Buffer(r, o)), typeof t == "number" ? new ol2(mS(t, r), r, true) : (Buffer.isBuffer(t) || (t = new Buffer(t, e)), new ol2(t, r, true)));
    }
    _f.DiffieHellmanGroup = _f.createDiffieHellmanGroup = _f.getDiffieHellman = gS;
    _f.createDiffieHellman = _f.DiffieHellman = fg;
  });
  sl = T3((rk, og) => {
    og.exports = ki().EventEmitter;
  });
  lg = T3((ik, ug) => {
    function sg(t, e) {
      var r = Object.keys(t);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(t);
        e && (o = o.filter(function(f2) {
          return Object.getOwnPropertyDescriptor(t, f2).enumerable;
        })), r.push.apply(r, o);
      }
      return r;
    }
    function wS(t) {
      for (var e = 1;e < arguments.length; e++) {
        var r = arguments[e] != null ? arguments[e] : {};
        e % 2 ? sg(Object(r), true).forEach(function(o) {
          MS(t, o, r[o]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : sg(Object(r)).forEach(function(o) {
          Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(r, o));
        });
      }
      return t;
    }
    function MS(t, e, r) {
      return e in t ? Object.defineProperty(t, e, { value: r, enumerable: true, configurable: true, writable: true }) : t[e] = r, t;
    }
    function _S(t, e) {
      if (!(t instanceof e))
        throw new TypeError("Cannot call a class as a function");
    }
    function hg(t, e) {
      for (var r = 0;r < e.length; r++) {
        var o = e[r];
        o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(t, o.key, o);
      }
    }
    function xS(t, e, r) {
      return e && hg(t.prototype, e), r && hg(t, r), t;
    }
    var SS = Ut(), Bs = SS.Buffer, ES = $f(), hl = ES.inspect, AS = hl && hl.custom || "inspect";
    function RS(t, e, r) {
      Bs.prototype.copy.call(t, e, r);
    }
    ug.exports = function() {
      function t() {
        _S(this, t), this.head = null, this.tail = null, this.length = 0;
      }
      return xS(t, [{ key: "push", value: function(r) {
        var o = { data: r, next: null };
        this.length > 0 ? this.tail.next = o : this.head = o, this.tail = o, ++this.length;
      } }, { key: "unshift", value: function(r) {
        var o = { data: r, next: this.head };
        this.length === 0 && (this.tail = o), this.head = o, ++this.length;
      } }, { key: "shift", value: function() {
        if (this.length !== 0) {
          var r = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r;
        }
      } }, { key: "clear", value: function() {
        this.head = this.tail = null, this.length = 0;
      } }, { key: "join", value: function(r) {
        if (this.length === 0)
          return "";
        for (var o = this.head, f2 = "" + o.data;o = o.next; )
          f2 += r + o.data;
        return f2;
      } }, { key: "concat", value: function(r) {
        if (this.length === 0)
          return Bs.alloc(0);
        for (var o = Bs.allocUnsafe(r >>> 0), f2 = this.head, p3 = 0;f2; )
          RS(f2.data, o, p3), p3 += f2.data.length, f2 = f2.next;
        return o;
      } }, { key: "consume", value: function(r, o) {
        var f2;
        return r < this.head.data.length ? (f2 = this.head.data.slice(0, r), this.head.data = this.head.data.slice(r)) : r === this.head.data.length ? f2 = this.shift() : f2 = o ? this._getString(r) : this._getBuffer(r), f2;
      } }, { key: "first", value: function() {
        return this.head.data;
      } }, { key: "_getString", value: function(r) {
        var o = this.head, f2 = 1, p3 = o.data;
        for (r -= p3.length;o = o.next; ) {
          var m3 = o.data, y3 = r > m3.length ? m3.length : r;
          if (y3 === m3.length ? p3 += m3 : p3 += m3.slice(0, r), r -= y3, r === 0) {
            y3 === m3.length ? (++f2, o.next ? this.head = o.next : this.head = this.tail = null) : (this.head = o, o.data = m3.slice(y3));
            break;
          }
          ++f2;
        }
        return this.length -= f2, p3;
      } }, { key: "_getBuffer", value: function(r) {
        var o = Bs.allocUnsafe(r), f2 = this.head, p3 = 1;
        for (f2.data.copy(o), r -= f2.data.length;f2 = f2.next; ) {
          var m3 = f2.data, y3 = r > m3.length ? m3.length : r;
          if (m3.copy(o, o.length - r, 0, y3), r -= y3, r === 0) {
            y3 === m3.length ? (++p3, f2.next ? this.head = f2.next : this.head = this.tail = null) : (this.head = f2, f2.data = m3.slice(y3));
            break;
          }
          ++p3;
        }
        return this.length -= p3, o;
      } }, { key: AS, value: function(r, o) {
        return hl(this, wS({}, o, { depth: 0, customInspect: false }));
      } }]), t;
    }();
  });
  ll = T3((nk, cg) => {
    function BS(t, e) {
      var r = this, o = this._readableState && this._readableState.destroyed, f2 = this._writableState && this._writableState.destroyed;
      return o || f2 ? (e ? e(t) : t && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(ul, this, t)) : process.nextTick(ul, this, t)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t || null, function(p3) {
        !e && p3 ? r._writableState ? r._writableState.errorEmitted ? process.nextTick(qs2, r) : (r._writableState.errorEmitted = true, process.nextTick(dg, r, p3)) : process.nextTick(dg, r, p3) : e ? (process.nextTick(qs2, r), e(p3)) : process.nextTick(qs2, r);
      }), this);
    }
    function dg(t, e) {
      ul(t, e), qs2(t);
    }
    function qs2(t) {
      t._writableState && !t._writableState.emitClose || t._readableState && !t._readableState.emitClose || t.emit("close");
    }
    function qS() {
      this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
    }
    function ul(t, e) {
      t.emit("error", e);
    }
    function IS(t, e) {
      var { _readableState: r, _writableState: o } = t;
      r && r.autoDestroy || o && o.autoDestroy ? t.destroy(e) : t.emit("error", e);
    }
    cg.exports = { destroy: BS, undestroy: qS, errorOrDestroy: IS };
  });
  kn3 = T3((fk, bg) => {
    function TS(t, e) {
      t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e;
    }
    var vg = {};
    function wr2(t, e, r) {
      r || (r = Error);
      function o(p3, m3, y3) {
        return typeof e == "string" ? e : e(p3, m3, y3);
      }
      var f2 = function(p3) {
        TS(m3, p3);
        function m3(y3, M2, x4) {
          return p3.call(this, o(y3, M2, x4)) || this;
        }
        return m3;
      }(r);
      f2.prototype.name = r.name, f2.prototype.code = t, vg[t] = f2;
    }
    function pg(t, e) {
      if (Array.isArray(t)) {
        var r = t.length;
        return t = t.map(function(o) {
          return String(o);
        }), r > 2 ? "one of ".concat(e, " ").concat(t.slice(0, r - 1).join(", "), ", or ") + t[r - 1] : r === 2 ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
      } else
        return "of ".concat(e, " ").concat(String(t));
    }
    function kS(t, e, r) {
      return t.substr(!r || r < 0 ? 0 : +r, e.length) === e;
    }
    function LS(t, e, r) {
      return (r === undefined || r > t.length) && (r = t.length), t.substring(r - e.length, r) === e;
    }
    function NS(t, e, r) {
      return typeof r != "number" && (r = 0), r + e.length > t.length ? false : t.indexOf(e, r) !== -1;
    }
    wr2("ERR_INVALID_OPT_VALUE", function(t, e) {
      return 'The value "' + e + '" is invalid for option "' + t + '"';
    }, TypeError);
    wr2("ERR_INVALID_ARG_TYPE", function(t, e, r) {
      var o;
      typeof e == "string" && kS(e, "not ") ? (o = "must not be", e = e.replace(/^not /, "")) : o = "must be";
      var f2;
      if (LS(t, " argument"))
        f2 = "The ".concat(t, " ").concat(o, " ").concat(pg(e, "type"));
      else {
        var p3 = NS(t, ".") ? "property" : "argument";
        f2 = 'The "'.concat(t, '" ').concat(p3, " ").concat(o, " ").concat(pg(e, "type"));
      }
      return f2 += ". Received type ".concat(typeof r), f2;
    }, TypeError);
    wr2("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    wr2("ERR_METHOD_NOT_IMPLEMENTED", function(t) {
      return "The " + t + " method is not implemented";
    });
    wr2("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    wr2("ERR_STREAM_DESTROYED", function(t) {
      return "Cannot call " + t + " after a stream was destroyed";
    });
    wr2("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    wr2("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    wr2("ERR_STREAM_WRITE_AFTER_END", "write after end");
    wr2("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    wr2("ERR_UNKNOWN_ENCODING", function(t) {
      return "Unknown encoding: " + t;
    }, TypeError);
    wr2("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    bg.exports.codes = vg;
  });
  dl = T3((ak, mg) => {
    var DS = kn3().codes.ERR_INVALID_OPT_VALUE;
    function PS(t, e, r) {
      return t.highWaterMark != null ? t.highWaterMark : e ? t[r] : null;
    }
    function CS(t, e, r, o) {
      var f2 = PS(e, o, r);
      if (f2 != null) {
        if (!(isFinite(f2) && Math.floor(f2) === f2) || f2 < 0) {
          var p3 = o ? r : "highWaterMark";
          throw new DS(p3, f2);
        }
        return Math.floor(f2);
      }
      return t.objectMode ? 16 : 16 * 1024;
    }
    mg.exports = { getHighWaterMark: CS };
  });
  vl2 = T3((ok, xg) => {
    xg.exports = ht;
    function yg(t) {
      var e = this;
      this.next = null, this.entry = null, this.finish = function() {
        uE(e, t);
      };
    }
    var xf;
    ht.WritableState = ka;
    var OS = { deprecate: $0() }, wg = sl(), Ts = Ut().Buffer, FS = global.Uint8Array || function() {};
    function US(t) {
      return Ts.from(t);
    }
    function zS(t) {
      return Ts.isBuffer(t) || t instanceof FS;
    }
    var pl = ll(), HS = dl(), WS = HS.getHighWaterMark, Vi = kn3().codes, KS = Vi.ERR_INVALID_ARG_TYPE, jS = Vi.ERR_METHOD_NOT_IMPLEMENTED, ZS = Vi.ERR_MULTIPLE_CALLBACK, VS = Vi.ERR_STREAM_CANNOT_PIPE, $S = Vi.ERR_STREAM_DESTROYED, GS = Vi.ERR_STREAM_NULL_VALUES, YS = Vi.ERR_STREAM_WRITE_AFTER_END, XS = Vi.ERR_UNKNOWN_ENCODING, Sf = pl.errorOrDestroy;
    Ie2()(ht, wg);
    function JS() {}
    function ka(t, e, r) {
      xf = xf || Ln2(), t = t || {}, typeof r != "boolean" && (r = e instanceof xf), this.objectMode = !!t.objectMode, r && (this.objectMode = this.objectMode || !!t.writableObjectMode), this.highWaterMark = WS(this, t, "writableHighWaterMark", r), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      var o = t.decodeStrings === false;
      this.decodeStrings = !o, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(f2) {
        fE(e, f2);
      }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = t.emitClose !== false, this.autoDestroy = !!t.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new yg(this);
    }
    ka.prototype.getBuffer = function() {
      for (var e = this.bufferedRequest, r = [];e; )
        r.push(e), e = e.next;
      return r;
    };
    (function() {
      try {
        Object.defineProperty(ka.prototype, "buffer", { get: OS.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
      } catch {}
    })();
    var Is2;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (Is2 = Function.prototype[Symbol.hasInstance], Object.defineProperty(ht, Symbol.hasInstance, { value: function(e) {
      return Is2.call(this, e) ? true : this !== ht ? false : e && e._writableState instanceof ka;
    } })) : Is2 = function(e) {
      return e instanceof this;
    };
    function ht(t) {
      xf = xf || Ln2();
      var e = this instanceof xf;
      if (!e && !Is2.call(ht, this))
        return new ht(t);
      this._writableState = new ka(t, this, e), this.writable = true, t && (typeof t.write == "function" && (this._write = t.write), typeof t.writev == "function" && (this._writev = t.writev), typeof t.destroy == "function" && (this._destroy = t.destroy), typeof t.final == "function" && (this._final = t.final)), wg.call(this);
    }
    ht.prototype.pipe = function() {
      Sf(this, new VS);
    };
    function QS(t, e) {
      var r = new YS;
      Sf(t, r), process.nextTick(e, r);
    }
    function eE(t, e, r, o) {
      var f2;
      return r === null ? f2 = new GS : typeof r != "string" && !e.objectMode && (f2 = new KS("chunk", ["string", "Buffer"], r)), f2 ? (Sf(t, f2), process.nextTick(o, f2), false) : true;
    }
    ht.prototype.write = function(t, e, r) {
      var o = this._writableState, f2 = false, p3 = !o.objectMode && zS(t);
      return p3 && !Ts.isBuffer(t) && (t = US(t)), typeof e == "function" && (r = e, e = null), p3 ? e = "buffer" : e || (e = o.defaultEncoding), typeof r != "function" && (r = JS), o.ending ? QS(this, r) : (p3 || eE(this, o, t, r)) && (o.pendingcb++, f2 = rE(this, o, p3, t, e, r)), f2;
    };
    ht.prototype.cork = function() {
      this._writableState.corked++;
    };
    ht.prototype.uncork = function() {
      var t = this._writableState;
      t.corked && (t.corked--, !t.writing && !t.corked && !t.bufferProcessing && t.bufferedRequest && Mg(this, t));
    };
    ht.prototype.setDefaultEncoding = function(e) {
      if (typeof e == "string" && (e = e.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e + "").toLowerCase()) > -1))
        throw new XS(e);
      return this._writableState.defaultEncoding = e, this;
    };
    Object.defineProperty(ht.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    function tE(t, e, r) {
      return !t.objectMode && t.decodeStrings !== false && typeof e == "string" && (e = Ts.from(e, r)), e;
    }
    Object.defineProperty(ht.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    function rE(t, e, r, o, f2, p3) {
      if (!r) {
        var m3 = tE(e, o, f2);
        o !== m3 && (r = true, f2 = "buffer", o = m3);
      }
      var y3 = e.objectMode ? 1 : o.length;
      e.length += y3;
      var M2 = e.length < e.highWaterMark;
      if (M2 || (e.needDrain = true), e.writing || e.corked) {
        var x4 = e.lastBufferedRequest;
        e.lastBufferedRequest = { chunk: o, encoding: f2, isBuf: r, callback: p3, next: null }, x4 ? x4.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;
      } else
        cl(t, e, false, y3, o, f2, p3);
      return M2;
    }
    function cl(t, e, r, o, f2, p3, m3) {
      e.writelen = o, e.writecb = m3, e.writing = true, e.sync = true, e.destroyed ? e.onwrite(new $S("write")) : r ? t._writev(f2, e.onwrite) : t._write(f2, p3, e.onwrite), e.sync = false;
    }
    function iE(t, e, r, o, f2) {
      --e.pendingcb, r ? (process.nextTick(f2, o), process.nextTick(Ta, t, e), t._writableState.errorEmitted = true, Sf(t, o)) : (f2(o), t._writableState.errorEmitted = true, Sf(t, o), Ta(t, e));
    }
    function nE(t) {
      t.writing = false, t.writecb = null, t.length -= t.writelen, t.writelen = 0;
    }
    function fE(t, e) {
      var r = t._writableState, o = r.sync, f2 = r.writecb;
      if (typeof f2 != "function")
        throw new ZS;
      if (nE(r), e)
        iE(t, r, o, e, f2);
      else {
        var p3 = _g(r) || t.destroyed;
        !p3 && !r.corked && !r.bufferProcessing && r.bufferedRequest && Mg(t, r), o ? process.nextTick(gg, t, r, p3, f2) : gg(t, r, p3, f2);
      }
    }
    function gg(t, e, r, o) {
      r || aE(t, e), e.pendingcb--, o(), Ta(t, e);
    }
    function aE(t, e) {
      e.length === 0 && e.needDrain && (e.needDrain = false, t.emit("drain"));
    }
    function Mg(t, e) {
      e.bufferProcessing = true;
      var r = e.bufferedRequest;
      if (t._writev && r && r.next) {
        var o = e.bufferedRequestCount, f2 = new Array(o), p3 = e.corkedRequestsFree;
        p3.entry = r;
        for (var m3 = 0, y3 = true;r; )
          f2[m3] = r, r.isBuf || (y3 = false), r = r.next, m3 += 1;
        f2.allBuffers = y3, cl(t, e, true, e.length, f2, "", p3.finish), e.pendingcb++, e.lastBufferedRequest = null, p3.next ? (e.corkedRequestsFree = p3.next, p3.next = null) : e.corkedRequestsFree = new yg(e), e.bufferedRequestCount = 0;
      } else {
        for (;r; ) {
          var { chunk: M2, encoding: x4, callback: S3 } = r, E4 = e.objectMode ? 1 : M2.length;
          if (cl(t, e, false, E4, M2, x4, S3), r = r.next, e.bufferedRequestCount--, e.writing)
            break;
        }
        r === null && (e.lastBufferedRequest = null);
      }
      e.bufferedRequest = r, e.bufferProcessing = false;
    }
    ht.prototype._write = function(t, e, r) {
      r(new jS("_write()"));
    };
    ht.prototype._writev = null;
    ht.prototype.end = function(t, e, r) {
      var o = this._writableState;
      return typeof t == "function" ? (r = t, t = null, e = null) : typeof e == "function" && (r = e, e = null), t != null && this.write(t, e), o.corked && (o.corked = 1, this.uncork()), o.ending || hE(this, o, r), this;
    };
    Object.defineProperty(ht.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function _g(t) {
      return t.ending && t.length === 0 && t.bufferedRequest === null && !t.finished && !t.writing;
    }
    function oE(t, e) {
      t._final(function(r) {
        e.pendingcb--, r && Sf(t, r), e.prefinished = true, t.emit("prefinish"), Ta(t, e);
      });
    }
    function sE(t, e) {
      !e.prefinished && !e.finalCalled && (typeof t._final == "function" && !e.destroyed ? (e.pendingcb++, e.finalCalled = true, process.nextTick(oE, t, e)) : (e.prefinished = true, t.emit("prefinish")));
    }
    function Ta(t, e) {
      var r = _g(e);
      if (r && (sE(t, e), e.pendingcb === 0 && (e.finished = true, t.emit("finish"), e.autoDestroy))) {
        var o = t._readableState;
        (!o || o.autoDestroy && o.endEmitted) && t.destroy();
      }
      return r;
    }
    function hE(t, e, r) {
      e.ending = true, Ta(t, e), r && (e.finished ? process.nextTick(r) : t.once("finish", r)), e.ended = true, t.writable = false;
    }
    function uE(t, e, r) {
      var o = t.entry;
      for (t.entry = null;o; ) {
        var f2 = o.callback;
        e.pendingcb--, f2(r), o = o.next;
      }
      e.corkedRequestsFree.next = t;
    }
    Object.defineProperty(ht.prototype, "destroyed", { enumerable: false, get: function() {
      return this._writableState === undefined ? false : this._writableState.destroyed;
    }, set: function(e) {
      !this._writableState || (this._writableState.destroyed = e);
    } });
    ht.prototype.destroy = pl.destroy;
    ht.prototype._undestroy = pl.undestroy;
    ht.prototype._destroy = function(t, e) {
      e(t);
    };
  });
  Ln2 = T3((sk, Eg) => {
    var lE = Object.keys || function(t) {
      var e = [];
      for (var r in t)
        e.push(r);
      return e;
    };
    Eg.exports = ti;
    var Sg = gl(), ml = vl2();
    Ie2()(ti, Sg);
    for (bl = lE(ml.prototype), ks = 0;ks < bl.length; ks++)
      Ls = bl[ks], ti.prototype[Ls] || (ti.prototype[Ls] = ml.prototype[Ls]);
    var bl, Ls, ks;
    function ti(t) {
      if (!(this instanceof ti))
        return new ti(t);
      Sg.call(this, t), ml.call(this, t), this.allowHalfOpen = true, t && (t.readable === false && (this.readable = false), t.writable === false && (this.writable = false), t.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", dE)));
    }
    Object.defineProperty(ti.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    Object.defineProperty(ti.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    Object.defineProperty(ti.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function dE() {
      this._writableState.ended || process.nextTick(cE, this);
    }
    function cE(t) {
      t.end();
    }
    Object.defineProperty(ti.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set: function(e) {
      this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = e, this._writableState.destroyed = e);
    } });
  });
  Ns = T3((hk, Bg) => {
    var Ag = kn3().codes.ERR_STREAM_PREMATURE_CLOSE;
    function pE(t) {
      var e = false;
      return function() {
        if (!e) {
          e = true;
          for (var r = arguments.length, o = new Array(r), f2 = 0;f2 < r; f2++)
            o[f2] = arguments[f2];
          t.apply(this, o);
        }
      };
    }
    function vE() {}
    function bE(t) {
      return t.setHeader && typeof t.abort == "function";
    }
    function Rg(t, e, r) {
      if (typeof e == "function")
        return Rg(t, null, e);
      e || (e = {}), r = pE(r || vE);
      var o = e.readable || e.readable !== false && t.readable, f2 = e.writable || e.writable !== false && t.writable, p3 = function() {
        t.writable || y3();
      }, m3 = t._writableState && t._writableState.finished, y3 = function() {
        f2 = false, m3 = true, o || r.call(t);
      }, M2 = t._readableState && t._readableState.endEmitted, x4 = function() {
        o = false, M2 = true, f2 || r.call(t);
      }, S3 = function(L3) {
        r.call(t, L3);
      }, E4 = function() {
        var L3;
        if (o && !M2)
          return (!t._readableState || !t._readableState.ended) && (L3 = new Ag), r.call(t, L3);
        if (f2 && !m3)
          return (!t._writableState || !t._writableState.ended) && (L3 = new Ag), r.call(t, L3);
      }, B3 = function() {
        t.req.on("finish", y3);
      };
      return bE(t) ? (t.on("complete", y3), t.on("abort", E4), t.req ? B3() : t.on("request", B3)) : f2 && !t._writableState && (t.on("end", p3), t.on("close", p3)), t.on("end", x4), t.on("finish", y3), e.error !== false && t.on("error", S3), t.on("close", E4), function() {
        t.removeListener("complete", y3), t.removeListener("abort", E4), t.removeListener("request", B3), t.req && t.req.removeListener("finish", y3), t.removeListener("end", p3), t.removeListener("close", p3), t.removeListener("finish", y3), t.removeListener("end", x4), t.removeListener("error", S3), t.removeListener("close", E4);
      };
    }
    Bg.exports = Rg;
  });
  Ig = T3((uk, qg) => {
    var Ds;
    function $i(t, e, r) {
      return e in t ? Object.defineProperty(t, e, { value: r, enumerable: true, configurable: true, writable: true }) : t[e] = r, t;
    }
    var mE = Ns(), Gi = Symbol("lastResolve"), Nn2 = Symbol("lastReject"), La = Symbol("error"), Ps2 = Symbol("ended"), Dn2 = Symbol("lastPromise"), yl = Symbol("handlePromise"), Pn = Symbol("stream");
    function Yi(t, e) {
      return { value: t, done: e };
    }
    function gE(t) {
      var e = t[Gi];
      if (e !== null) {
        var r = t[Pn].read();
        r !== null && (t[Dn2] = null, t[Gi] = null, t[Nn2] = null, e(Yi(r, false)));
      }
    }
    function yE(t) {
      process.nextTick(gE, t);
    }
    function wE(t, e) {
      return function(r, o) {
        t.then(function() {
          if (e[Ps2]) {
            r(Yi(undefined, true));
            return;
          }
          e[yl](r, o);
        }, o);
      };
    }
    var ME = Object.getPrototypeOf(function() {}), _E = Object.setPrototypeOf((Ds = { get stream() {
      return this[Pn];
    }, next: function() {
      var e = this, r = this[La];
      if (r !== null)
        return Promise.reject(r);
      if (this[Ps2])
        return Promise.resolve(Yi(undefined, true));
      if (this[Pn].destroyed)
        return new Promise(function(m3, y3) {
          process.nextTick(function() {
            e[La] ? y3(e[La]) : m3(Yi(undefined, true));
          });
        });
      var o = this[Dn2], f2;
      if (o)
        f2 = new Promise(wE(o, this));
      else {
        var p3 = this[Pn].read();
        if (p3 !== null)
          return Promise.resolve(Yi(p3, false));
        f2 = new Promise(this[yl]);
      }
      return this[Dn2] = f2, f2;
    } }, $i(Ds, Symbol.asyncIterator, function() {
      return this;
    }), $i(Ds, "return", function() {
      var e = this;
      return new Promise(function(r, o) {
        e[Pn].destroy(null, function(f2) {
          if (f2) {
            o(f2);
            return;
          }
          r(Yi(undefined, true));
        });
      });
    }), Ds), ME), xE = function(e) {
      var r, o = Object.create(_E, (r = {}, $i(r, Pn, { value: e, writable: true }), $i(r, Gi, { value: null, writable: true }), $i(r, Nn2, { value: null, writable: true }), $i(r, La, { value: null, writable: true }), $i(r, Ps2, { value: e._readableState.endEmitted, writable: true }), $i(r, yl, { value: function(p3, m3) {
        var y3 = o[Pn].read();
        y3 ? (o[Dn2] = null, o[Gi] = null, o[Nn2] = null, p3(Yi(y3, false))) : (o[Gi] = p3, o[Nn2] = m3);
      }, writable: true }), r));
      return o[Dn2] = null, mE(e, function(f2) {
        if (f2 && f2.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var p3 = o[Nn2];
          p3 !== null && (o[Dn2] = null, o[Gi] = null, o[Nn2] = null, p3(f2)), o[La] = f2;
          return;
        }
        var m3 = o[Gi];
        m3 !== null && (o[Dn2] = null, o[Gi] = null, o[Nn2] = null, m3(Yi(undefined, true))), o[Ps2] = true;
      }), e.on("readable", yE.bind(null, o)), o;
    };
    qg.exports = xE;
  });
  kg = T3((lk, Tg) => {
    Tg.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  });
  gl = T3((ck, Hg) => {
    Hg.exports = Oe;
    var Ef;
    Oe.ReadableState = Pg;
    var dk = ki().EventEmitter, Dg = function(e, r) {
      return e.listeners(r).length;
    }, Da = sl(), Cs2 = Ut().Buffer, SE = global.Uint8Array || function() {};
    function EE(t) {
      return Cs2.from(t);
    }
    function AE(t) {
      return Cs2.isBuffer(t) || t instanceof SE;
    }
    var wl = $f(), De;
    wl && wl.debuglog ? De = wl.debuglog("stream") : De = function() {};
    var RE = lg(), Rl = ll(), BE = dl(), qE = BE.getHighWaterMark, Os = kn3().codes, IE = Os.ERR_INVALID_ARG_TYPE, TE = Os.ERR_STREAM_PUSH_AFTER_EOF, kE = Os.ERR_METHOD_NOT_IMPLEMENTED, LE = Os.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, Af, Ml, _l;
    Ie2()(Oe, Da);
    var Na = Rl.errorOrDestroy, xl = ["error", "close", "destroy", "pause", "resume"];
    function NE(t, e, r) {
      if (typeof t.prependListener == "function")
        return t.prependListener(e, r);
      !t._events || !t._events[e] ? t.on(e, r) : Array.isArray(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [r, t._events[e]];
    }
    function Pg(t, e, r) {
      Ef = Ef || Ln2(), t = t || {}, typeof r != "boolean" && (r = e instanceof Ef), this.objectMode = !!t.objectMode, r && (this.objectMode = this.objectMode || !!t.readableObjectMode), this.highWaterMark = qE(this, t, "readableHighWaterMark", r), this.buffer = new RE, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = t.emitClose !== false, this.autoDestroy = !!t.autoDestroy, this.destroyed = false, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t.encoding && (Af || (Af = (Qf(), ur(Jf)).StringDecoder), this.decoder = new Af(t.encoding), this.encoding = t.encoding);
    }
    function Oe(t) {
      if (Ef = Ef || Ln2(), !(this instanceof Oe))
        return new Oe(t);
      var e = this instanceof Ef;
      this._readableState = new Pg(t, this, e), this.readable = true, t && (typeof t.read == "function" && (this._read = t.read), typeof t.destroy == "function" && (this._destroy = t.destroy)), Da.call(this);
    }
    Object.defineProperty(Oe.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined ? false : this._readableState.destroyed;
    }, set: function(e) {
      !this._readableState || (this._readableState.destroyed = e);
    } });
    Oe.prototype.destroy = Rl.destroy;
    Oe.prototype._undestroy = Rl.undestroy;
    Oe.prototype._destroy = function(t, e) {
      e(t);
    };
    Oe.prototype.push = function(t, e) {
      var r = this._readableState, o;
      return r.objectMode ? o = true : typeof t == "string" && (e = e || r.defaultEncoding, e !== r.encoding && (t = Cs2.from(t, e), e = ""), o = true), Cg(this, t, e, false, o);
    };
    Oe.prototype.unshift = function(t) {
      return Cg(this, t, null, true, false);
    };
    function Cg(t, e, r, o, f2) {
      De("readableAddChunk", e);
      var p3 = t._readableState;
      if (e === null)
        p3.reading = false, CE(t, p3);
      else {
        var m3;
        if (f2 || (m3 = DE(p3, e)), m3)
          Na(t, m3);
        else if (p3.objectMode || e && e.length > 0)
          if (typeof e != "string" && !p3.objectMode && Object.getPrototypeOf(e) !== Cs2.prototype && (e = EE(e)), o)
            p3.endEmitted ? Na(t, new LE) : Sl(t, p3, e, true);
          else if (p3.ended)
            Na(t, new TE);
          else {
            if (p3.destroyed)
              return false;
            p3.reading = false, p3.decoder && !r ? (e = p3.decoder.write(e), p3.objectMode || e.length !== 0 ? Sl(t, p3, e, false) : Al(t, p3)) : Sl(t, p3, e, false);
          }
        else
          o || (p3.reading = false, Al(t, p3));
      }
      return !p3.ended && (p3.length < p3.highWaterMark || p3.length === 0);
    }
    function Sl(t, e, r, o) {
      e.flowing && e.length === 0 && !e.sync ? (e.awaitDrain = 0, t.emit("data", r)) : (e.length += e.objectMode ? 1 : r.length, o ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && Fs(t)), Al(t, e);
    }
    function DE(t, e) {
      var r;
      return !AE(e) && typeof e != "string" && e !== undefined && !t.objectMode && (r = new IE("chunk", ["string", "Buffer", "Uint8Array"], e)), r;
    }
    Oe.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Oe.prototype.setEncoding = function(t) {
      Af || (Af = (Qf(), ur(Jf)).StringDecoder);
      var e = new Af(t);
      this._readableState.decoder = e, this._readableState.encoding = this._readableState.decoder.encoding;
      for (var r = this._readableState.buffer.head, o = "";r !== null; )
        o += e.write(r.data), r = r.next;
      return this._readableState.buffer.clear(), o !== "" && this._readableState.buffer.push(o), this._readableState.length = o.length, this;
    };
    var Lg = 1073741824;
    function PE(t) {
      return t >= Lg ? t = Lg : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;
    }
    function Ng(t, e) {
      return t <= 0 || e.length === 0 && e.ended ? 0 : e.objectMode ? 1 : t !== t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = PE(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = true, 0));
    }
    Oe.prototype.read = function(t) {
      De("read", t), t = parseInt(t, 10);
      var e = this._readableState, r = t;
      if (t !== 0 && (e.emittedReadable = false), t === 0 && e.needReadable && ((e.highWaterMark !== 0 ? e.length >= e.highWaterMark : e.length > 0) || e.ended))
        return De("read: emitReadable", e.length, e.ended), e.length === 0 && e.ended ? El(this) : Fs(this), null;
      if (t = Ng(t, e), t === 0 && e.ended)
        return e.length === 0 && El(this), null;
      var o = e.needReadable;
      De("need readable", o), (e.length === 0 || e.length - t < e.highWaterMark) && (o = true, De("length less than watermark", o)), e.ended || e.reading ? (o = false, De("reading or ended", o)) : o && (De("do read"), e.reading = true, e.sync = true, e.length === 0 && (e.needReadable = true), this._read(e.highWaterMark), e.sync = false, e.reading || (t = Ng(r, e)));
      var f2;
      return t > 0 ? f2 = Ug(t, e) : f2 = null, f2 === null ? (e.needReadable = e.length <= e.highWaterMark, t = 0) : (e.length -= t, e.awaitDrain = 0), e.length === 0 && (e.ended || (e.needReadable = true), r !== t && e.ended && El(this)), f2 !== null && this.emit("data", f2), f2;
    };
    function CE(t, e) {
      if (De("onEofChunk"), !e.ended) {
        if (e.decoder) {
          var r = e.decoder.end();
          r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length);
        }
        e.ended = true, e.sync ? Fs(t) : (e.needReadable = false, e.emittedReadable || (e.emittedReadable = true, Og(t)));
      }
    }
    function Fs(t) {
      var e = t._readableState;
      De("emitReadable", e.needReadable, e.emittedReadable), e.needReadable = false, e.emittedReadable || (De("emitReadable", e.flowing), e.emittedReadable = true, process.nextTick(Og, t));
    }
    function Og(t) {
      var e = t._readableState;
      De("emitReadable_", e.destroyed, e.length, e.ended), !e.destroyed && (e.length || e.ended) && (t.emit("readable"), e.emittedReadable = false), e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark, Bl(t);
    }
    function Al(t, e) {
      e.readingMore || (e.readingMore = true, process.nextTick(OE, t, e));
    }
    function OE(t, e) {
      for (;!e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && e.length === 0); ) {
        var r = e.length;
        if (De("maybeReadMore read 0"), t.read(0), r === e.length)
          break;
      }
      e.readingMore = false;
    }
    Oe.prototype._read = function(t) {
      Na(this, new kE("_read()"));
    };
    Oe.prototype.pipe = function(t, e) {
      var r = this, o = this._readableState;
      switch (o.pipesCount) {
        case 0:
          o.pipes = t;
          break;
        case 1:
          o.pipes = [o.pipes, t];
          break;
        default:
          o.pipes.push(t);
          break;
      }
      o.pipesCount += 1, De("pipe count=%d opts=%j", o.pipesCount, e);
      var f2 = (!e || e.end !== false) && t !== process.stdout && t !== process.stderr, p3 = f2 ? y3 : ge2;
      o.endEmitted ? process.nextTick(p3) : r.once("end", p3), t.on("unpipe", m3);
      function m3(_e, N3) {
        De("onunpipe"), _e === r && N3 && N3.hasUnpiped === false && (N3.hasUnpiped = true, S3());
      }
      function y3() {
        De("onend"), t.end();
      }
      var M2 = FE(r);
      t.on("drain", M2);
      var x4 = false;
      function S3() {
        De("cleanup"), t.removeListener("close", q2), t.removeListener("finish", L3), t.removeListener("drain", M2), t.removeListener("error", B3), t.removeListener("unpipe", m3), r.removeListener("end", y3), r.removeListener("end", ge2), r.removeListener("data", E4), x4 = true, o.awaitDrain && (!t._writableState || t._writableState.needDrain) && M2();
      }
      r.on("data", E4);
      function E4(_e) {
        De("ondata");
        var N3 = t.write(_e);
        De("dest.write", N3), N3 === false && ((o.pipesCount === 1 && o.pipes === t || o.pipesCount > 1 && zg(o.pipes, t) !== -1) && !x4 && (De("false write response, pause", o.awaitDrain), o.awaitDrain++), r.pause());
      }
      function B3(_e) {
        De("onerror", _e), ge2(), t.removeListener("error", B3), Dg(t, "error") === 0 && Na(t, _e);
      }
      NE(t, "error", B3);
      function q2() {
        t.removeListener("finish", L3), ge2();
      }
      t.once("close", q2);
      function L3() {
        De("onfinish"), t.removeListener("close", q2), ge2();
      }
      t.once("finish", L3);
      function ge2() {
        De("unpipe"), r.unpipe(t);
      }
      return t.emit("pipe", r), o.flowing || (De("pipe resume"), r.resume()), t;
    };
    function FE(t) {
      return function() {
        var r = t._readableState;
        De("pipeOnDrain", r.awaitDrain), r.awaitDrain && r.awaitDrain--, r.awaitDrain === 0 && Dg(t, "data") && (r.flowing = true, Bl(t));
      };
    }
    Oe.prototype.unpipe = function(t) {
      var e = this._readableState, r = { hasUnpiped: false };
      if (e.pipesCount === 0)
        return this;
      if (e.pipesCount === 1)
        return t && t !== e.pipes ? this : (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = false, t && t.emit("unpipe", this, r), this);
      if (!t) {
        var { pipes: o, pipesCount: f2 } = e;
        e.pipes = null, e.pipesCount = 0, e.flowing = false;
        for (var p3 = 0;p3 < f2; p3++)
          o[p3].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      var m3 = zg(e.pipes, t);
      return m3 === -1 ? this : (e.pipes.splice(m3, 1), e.pipesCount -= 1, e.pipesCount === 1 && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r), this);
    };
    Oe.prototype.on = function(t, e) {
      var r = Da.prototype.on.call(this, t, e), o = this._readableState;
      return t === "data" ? (o.readableListening = this.listenerCount("readable") > 0, o.flowing !== false && this.resume()) : t === "readable" && !o.endEmitted && !o.readableListening && (o.readableListening = o.needReadable = true, o.flowing = false, o.emittedReadable = false, De("on readable", o.length, o.reading), o.length ? Fs(this) : o.reading || process.nextTick(UE, this)), r;
    };
    Oe.prototype.addListener = Oe.prototype.on;
    Oe.prototype.removeListener = function(t, e) {
      var r = Da.prototype.removeListener.call(this, t, e);
      return t === "readable" && process.nextTick(Fg, this), r;
    };
    Oe.prototype.removeAllListeners = function(t) {
      var e = Da.prototype.removeAllListeners.apply(this, arguments);
      return (t === "readable" || t === undefined) && process.nextTick(Fg, this), e;
    };
    function Fg(t) {
      var e = t._readableState;
      e.readableListening = t.listenerCount("readable") > 0, e.resumeScheduled && !e.paused ? e.flowing = true : t.listenerCount("data") > 0 && t.resume();
    }
    function UE(t) {
      De("readable nexttick read 0"), t.read(0);
    }
    Oe.prototype.resume = function() {
      var t = this._readableState;
      return t.flowing || (De("resume"), t.flowing = !t.readableListening, zE(this, t)), t.paused = false, this;
    };
    function zE(t, e) {
      e.resumeScheduled || (e.resumeScheduled = true, process.nextTick(HE, t, e));
    }
    function HE(t, e) {
      De("resume", e.reading), e.reading || t.read(0), e.resumeScheduled = false, t.emit("resume"), Bl(t), e.flowing && !e.reading && t.read(0);
    }
    Oe.prototype.pause = function() {
      return De("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (De("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
    };
    function Bl(t) {
      var e = t._readableState;
      for (De("flow", e.flowing);e.flowing && t.read() !== null; )
        ;
    }
    Oe.prototype.wrap = function(t) {
      var e = this, r = this._readableState, o = false;
      t.on("end", function() {
        if (De("wrapped end"), r.decoder && !r.ended) {
          var m3 = r.decoder.end();
          m3 && m3.length && e.push(m3);
        }
        e.push(null);
      }), t.on("data", function(m3) {
        if (De("wrapped data"), r.decoder && (m3 = r.decoder.write(m3)), !(r.objectMode && m3 == null) && !(!r.objectMode && (!m3 || !m3.length))) {
          var y3 = e.push(m3);
          y3 || (o = true, t.pause());
        }
      });
      for (var f2 in t)
        this[f2] === undefined && typeof t[f2] == "function" && (this[f2] = function(y3) {
          return function() {
            return t[y3].apply(t, arguments);
          };
        }(f2));
      for (var p3 = 0;p3 < xl.length; p3++)
        t.on(xl[p3], this.emit.bind(this, xl[p3]));
      return this._read = function(m3) {
        De("wrapped _read", m3), o && (o = false, t.resume());
      }, this;
    };
    typeof Symbol == "function" && (Oe.prototype[Symbol.asyncIterator] = function() {
      return Ml === undefined && (Ml = Ig()), Ml(this);
    });
    Object.defineProperty(Oe.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } });
    Object.defineProperty(Oe.prototype, "readableBuffer", { enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } });
    Object.defineProperty(Oe.prototype, "readableFlowing", { enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(e) {
      this._readableState && (this._readableState.flowing = e);
    } });
    Oe._fromList = Ug;
    Object.defineProperty(Oe.prototype, "readableLength", { enumerable: false, get: function() {
      return this._readableState.length;
    } });
    function Ug(t, e) {
      if (e.length === 0)
        return null;
      var r;
      return e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (e.decoder ? r = e.buffer.join("") : e.buffer.length === 1 ? r = e.buffer.first() : r = e.buffer.concat(e.length), e.buffer.clear()) : r = e.buffer.consume(t, e.decoder), r;
    }
    function El(t) {
      var e = t._readableState;
      De("endReadable", e.endEmitted), e.endEmitted || (e.ended = true, process.nextTick(WE, e, t));
    }
    function WE(t, e) {
      if (De("endReadableNT", t.endEmitted, t.length), !t.endEmitted && t.length === 0 && (t.endEmitted = true, e.readable = false, e.emit("end"), t.autoDestroy)) {
        var r = e._writableState;
        (!r || r.autoDestroy && r.finished) && e.destroy();
      }
    }
    typeof Symbol == "function" && (Oe.from = function(t, e) {
      return _l === undefined && (_l = kg()), _l(Oe, t, e);
    });
    function zg(t, e) {
      for (var r = 0, o = t.length;r < o; r++)
        if (t[r] === e)
          return r;
      return -1;
    }
  });
  ql = T3((pk, Kg) => {
    Kg.exports = Ei2;
    var Us = kn3().codes, KE = Us.ERR_METHOD_NOT_IMPLEMENTED, jE = Us.ERR_MULTIPLE_CALLBACK, ZE = Us.ERR_TRANSFORM_ALREADY_TRANSFORMING, VE = Us.ERR_TRANSFORM_WITH_LENGTH_0, zs2 = Ln2();
    Ie2()(Ei2, zs2);
    function $E(t, e) {
      var r = this._transformState;
      r.transforming = false;
      var o = r.writecb;
      if (o === null)
        return this.emit("error", new jE);
      r.writechunk = null, r.writecb = null, e != null && this.push(e), o(t);
      var f2 = this._readableState;
      f2.reading = false, (f2.needReadable || f2.length < f2.highWaterMark) && this._read(f2.highWaterMark);
    }
    function Ei2(t) {
      if (!(this instanceof Ei2))
        return new Ei2(t);
      zs2.call(this, t), this._transformState = { afterTransform: $E.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t && (typeof t.transform == "function" && (this._transform = t.transform), typeof t.flush == "function" && (this._flush = t.flush)), this.on("prefinish", GE);
    }
    function GE() {
      var t = this;
      typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(e, r) {
        Wg(t, e, r);
      }) : Wg(this, null, null);
    }
    Ei2.prototype.push = function(t, e) {
      return this._transformState.needTransform = false, zs2.prototype.push.call(this, t, e);
    };
    Ei2.prototype._transform = function(t, e, r) {
      r(new KE("_transform()"));
    };
    Ei2.prototype._write = function(t, e, r) {
      var o = this._transformState;
      if (o.writecb = r, o.writechunk = t, o.writeencoding = e, !o.transforming) {
        var f2 = this._readableState;
        (o.needTransform || f2.needReadable || f2.length < f2.highWaterMark) && this._read(f2.highWaterMark);
      }
    };
    Ei2.prototype._read = function(t) {
      var e = this._transformState;
      e.writechunk !== null && !e.transforming ? (e.transforming = true, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = true;
    };
    Ei2.prototype._destroy = function(t, e) {
      zs2.prototype._destroy.call(this, t, function(r) {
        e(r);
      });
    };
    function Wg(t, e, r) {
      if (e)
        return t.emit("error", e);
      if (r != null && t.push(r), t._writableState.length)
        throw new VE;
      if (t._transformState.transforming)
        throw new ZE;
      return t.push(null);
    }
  });
  Vg = T3((vk, Zg) => {
    Zg.exports = Pa;
    var jg = ql();
    Ie2()(Pa, jg);
    function Pa(t) {
      if (!(this instanceof Pa))
        return new Pa(t);
      jg.call(this, t);
    }
    Pa.prototype._transform = function(t, e, r) {
      r(null, t);
    };
  });
  Jg = T3((bk, Xg) => {
    var Il;
    function YE(t) {
      var e = false;
      return function() {
        e || (e = true, t.apply(undefined, arguments));
      };
    }
    var Yg = kn3().codes, XE = Yg.ERR_MISSING_ARGS, JE = Yg.ERR_STREAM_DESTROYED;
    function $g(t) {
      if (t)
        throw t;
    }
    function QE(t) {
      return t.setHeader && typeof t.abort == "function";
    }
    function eA(t, e, r, o) {
      o = YE(o);
      var f2 = false;
      t.on("close", function() {
        f2 = true;
      }), Il === undefined && (Il = Ns()), Il(t, { readable: e, writable: r }, function(m3) {
        if (m3)
          return o(m3);
        f2 = true, o();
      });
      var p3 = false;
      return function(m3) {
        if (!f2 && !p3) {
          if (p3 = true, QE(t))
            return t.abort();
          if (typeof t.destroy == "function")
            return t.destroy();
          o(m3 || new JE("pipe"));
        }
      };
    }
    function Gg(t) {
      t();
    }
    function tA(t, e) {
      return t.pipe(e);
    }
    function rA(t) {
      return !t.length || typeof t[t.length - 1] != "function" ? $g : t.pop();
    }
    function iA() {
      for (var t = arguments.length, e = new Array(t), r = 0;r < t; r++)
        e[r] = arguments[r];
      var o = rA(e);
      if (Array.isArray(e[0]) && (e = e[0]), e.length < 2)
        throw new XE("streams");
      var f2, p3 = e.map(function(m3, y3) {
        var M2 = y3 < e.length - 1, x4 = y3 > 0;
        return eA(m3, M2, x4, function(S3) {
          f2 || (f2 = S3), S3 && p3.forEach(Gg), !M2 && (p3.forEach(Gg), o(f2));
        });
      });
      return e.reduce(tA);
    }
    Xg.exports = iA;
  });
  e2 = T3((Mr, Qg) => {
    Mr = Qg.exports = gl();
    Mr.Stream = Mr;
    Mr.Readable = Mr;
    Mr.Writable = vl2();
    Mr.Duplex = Ln2();
    Mr.Transform = ql();
    Mr.PassThrough = Vg();
    Mr.finished = Ns();
    Mr.pipeline = Jg();
  });
  Hs = T3((t2, Tl) => {
    (function(t, e) {
      function r(h3, s2) {
        if (!h3)
          throw new Error(s2 || "Assertion failed");
      }
      function o(h3, s2) {
        h3.super_ = s2;
        var u3 = function() {};
        u3.prototype = s2.prototype, h3.prototype = new u3, h3.prototype.constructor = h3;
      }
      function f2(h3, s2, u3) {
        if (f2.isBN(h3))
          return h3;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, h3 !== null && ((s2 === "le" || s2 === "be") && (u3 = s2, s2 = 10), this._init(h3 || 0, s2 || 10, u3 || "be"));
      }
      typeof t == "object" ? t.exports = f2 : e.BN = f2, f2.BN = f2, f2.wordSize = 26;
      var p3;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p3 = window.Buffer : p3 = ji().Buffer;
      } catch {}
      f2.isBN = function(s2) {
        return s2 instanceof f2 ? true : s2 !== null && typeof s2 == "object" && s2.constructor.wordSize === f2.wordSize && Array.isArray(s2.words);
      }, f2.max = function(s2, u3) {
        return s2.cmp(u3) > 0 ? s2 : u3;
      }, f2.min = function(s2, u3) {
        return s2.cmp(u3) < 0 ? s2 : u3;
      }, f2.prototype._init = function(s2, u3, c2) {
        if (typeof s2 == "number")
          return this._initNumber(s2, u3, c2);
        if (typeof s2 == "object")
          return this._initArray(s2, u3, c2);
        u3 === "hex" && (u3 = 16), r(u3 === (u3 | 0) && u3 >= 2 && u3 <= 36), s2 = s2.toString().replace(/\s+/g, "");
        var b3 = 0;
        s2[0] === "-" && (b3++, this.negative = 1), b3 < s2.length && (u3 === 16 ? this._parseHex(s2, b3, c2) : (this._parseBase(s2, u3, b3), c2 === "le" && this._initArray(this.toArray(), u3, c2)));
      }, f2.prototype._initNumber = function(s2, u3, c2) {
        s2 < 0 && (this.negative = 1, s2 = -s2), s2 < 67108864 ? (this.words = [s2 & 67108863], this.length = 1) : s2 < 4503599627370496 ? (this.words = [s2 & 67108863, s2 / 67108864 & 67108863], this.length = 2) : (r(s2 < 9007199254740992), this.words = [s2 & 67108863, s2 / 67108864 & 67108863, 1], this.length = 3), c2 === "le" && this._initArray(this.toArray(), u3, c2);
      }, f2.prototype._initArray = function(s2, u3, c2) {
        if (r(typeof s2.length == "number"), s2.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(s2.length / 3), this.words = new Array(this.length);
        for (var b3 = 0;b3 < this.length; b3++)
          this.words[b3] = 0;
        var l2, n, d3 = 0;
        if (c2 === "be")
          for (b3 = s2.length - 1, l2 = 0;b3 >= 0; b3 -= 3)
            n = s2[b3] | s2[b3 - 1] << 8 | s2[b3 - 2] << 16, this.words[l2] |= n << d3 & 67108863, this.words[l2 + 1] = n >>> 26 - d3 & 67108863, d3 += 24, d3 >= 26 && (d3 -= 26, l2++);
        else if (c2 === "le")
          for (b3 = 0, l2 = 0;b3 < s2.length; b3 += 3)
            n = s2[b3] | s2[b3 + 1] << 8 | s2[b3 + 2] << 16, this.words[l2] |= n << d3 & 67108863, this.words[l2 + 1] = n >>> 26 - d3 & 67108863, d3 += 24, d3 >= 26 && (d3 -= 26, l2++);
        return this._strip();
      };
      function m3(h3, s2) {
        var u3 = h3.charCodeAt(s2);
        if (u3 >= 48 && u3 <= 57)
          return u3 - 48;
        if (u3 >= 65 && u3 <= 70)
          return u3 - 55;
        if (u3 >= 97 && u3 <= 102)
          return u3 - 87;
        r(false, "Invalid character in " + h3);
      }
      function y3(h3, s2, u3) {
        var c2 = m3(h3, u3);
        return u3 - 1 >= s2 && (c2 |= m3(h3, u3 - 1) << 4), c2;
      }
      f2.prototype._parseHex = function(s2, u3, c2) {
        this.length = Math.ceil((s2.length - u3) / 6), this.words = new Array(this.length);
        for (var b3 = 0;b3 < this.length; b3++)
          this.words[b3] = 0;
        var l2 = 0, n = 0, d3;
        if (c2 === "be")
          for (b3 = s2.length - 1;b3 >= u3; b3 -= 2)
            d3 = y3(s2, u3, b3) << l2, this.words[n] |= d3 & 67108863, l2 >= 18 ? (l2 -= 18, n += 1, this.words[n] |= d3 >>> 26) : l2 += 8;
        else {
          var w = s2.length - u3;
          for (b3 = w % 2 === 0 ? u3 + 1 : u3;b3 < s2.length; b3 += 2)
            d3 = y3(s2, u3, b3) << l2, this.words[n] |= d3 & 67108863, l2 >= 18 ? (l2 -= 18, n += 1, this.words[n] |= d3 >>> 26) : l2 += 8;
        }
        this._strip();
      };
      function M2(h3, s2, u3, c2) {
        for (var b3 = 0, l2 = 0, n = Math.min(h3.length, u3), d3 = s2;d3 < n; d3++) {
          var w = h3.charCodeAt(d3) - 48;
          b3 *= c2, w >= 49 ? l2 = w - 49 + 10 : w >= 17 ? l2 = w - 17 + 10 : l2 = w, r(w >= 0 && l2 < c2, "Invalid character"), b3 += l2;
        }
        return b3;
      }
      f2.prototype._parseBase = function(s2, u3, c2) {
        this.words = [0], this.length = 1;
        for (var b3 = 0, l2 = 1;l2 <= 67108863; l2 *= u3)
          b3++;
        b3--, l2 = l2 / u3 | 0;
        for (var n = s2.length - c2, d3 = n % b3, w = Math.min(n, n - d3) + c2, g3 = 0, _3 = c2;_3 < w; _3 += b3)
          g3 = M2(s2, _3, _3 + b3, u3), this.imuln(l2), this.words[0] + g3 < 67108864 ? this.words[0] += g3 : this._iaddn(g3);
        if (d3 !== 0) {
          var A2 = 1;
          for (g3 = M2(s2, _3, s2.length, u3), _3 = 0;_3 < d3; _3++)
            A2 *= u3;
          this.imuln(A2), this.words[0] + g3 < 67108864 ? this.words[0] += g3 : this._iaddn(g3);
        }
        this._strip();
      }, f2.prototype.copy = function(s2) {
        s2.words = new Array(this.length);
        for (var u3 = 0;u3 < this.length; u3++)
          s2.words[u3] = this.words[u3];
        s2.length = this.length, s2.negative = this.negative, s2.red = this.red;
      };
      function x4(h3, s2) {
        h3.words = s2.words, h3.length = s2.length, h3.negative = s2.negative, h3.red = s2.red;
      }
      if (f2.prototype._move = function(s2) {
        x4(s2, this);
      }, f2.prototype.clone = function() {
        var s2 = new f2(null);
        return this.copy(s2), s2;
      }, f2.prototype._expand = function(s2) {
        for (;this.length < s2; )
          this.words[this.length++] = 0;
        return this;
      }, f2.prototype._strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f2.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, typeof Symbol < "u" && typeof Symbol.for == "function")
        try {
          f2.prototype[Symbol.for("nodejs.util.inspect.custom")] = S3;
        } catch {
          f2.prototype.inspect = S3;
        }
      else
        f2.prototype.inspect = S3;
      function S3() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      }
      var E4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], B3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], q2 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f2.prototype.toString = function(s2, u3) {
        s2 = s2 || 10, u3 = u3 | 0 || 1;
        var c2;
        if (s2 === 16 || s2 === "hex") {
          c2 = "";
          for (var b3 = 0, l2 = 0, n = 0;n < this.length; n++) {
            var d3 = this.words[n], w = ((d3 << b3 | l2) & 16777215).toString(16);
            l2 = d3 >>> 24 - b3 & 16777215, b3 += 2, b3 >= 26 && (b3 -= 26, n--), l2 !== 0 || n !== this.length - 1 ? c2 = E4[6 - w.length] + w + c2 : c2 = w + c2;
          }
          for (l2 !== 0 && (c2 = l2.toString(16) + c2);c2.length % u3 !== 0; )
            c2 = "0" + c2;
          return this.negative !== 0 && (c2 = "-" + c2), c2;
        }
        if (s2 === (s2 | 0) && s2 >= 2 && s2 <= 36) {
          var g3 = B3[s2], _3 = q2[s2];
          c2 = "";
          var A2 = this.clone();
          for (A2.negative = 0;!A2.isZero(); ) {
            var R2 = A2.modrn(_3).toString(s2);
            A2 = A2.idivn(_3), A2.isZero() ? c2 = R2 + c2 : c2 = E4[g3 - R2.length] + R2 + c2;
          }
          for (this.isZero() && (c2 = "0" + c2);c2.length % u3 !== 0; )
            c2 = "0" + c2;
          return this.negative !== 0 && (c2 = "-" + c2), c2;
        }
        r(false, "Base should be between 2 and 36");
      }, f2.prototype.toNumber = function() {
        var s2 = this.words[0];
        return this.length === 2 ? s2 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? s2 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -s2 : s2;
      }, f2.prototype.toJSON = function() {
        return this.toString(16, 2);
      }, p3 && (f2.prototype.toBuffer = function(s2, u3) {
        return this.toArrayLike(p3, s2, u3);
      }), f2.prototype.toArray = function(s2, u3) {
        return this.toArrayLike(Array, s2, u3);
      };
      var L3 = function(s2, u3) {
        return s2.allocUnsafe ? s2.allocUnsafe(u3) : new s2(u3);
      };
      f2.prototype.toArrayLike = function(s2, u3, c2) {
        this._strip();
        var b3 = this.byteLength(), l2 = c2 || Math.max(1, b3);
        r(b3 <= l2, "byte array longer than desired length"), r(l2 > 0, "Requested array length <= 0");
        var n = L3(s2, l2), d3 = u3 === "le" ? "LE" : "BE";
        return this["_toArrayLike" + d3](n, b3), n;
      }, f2.prototype._toArrayLikeLE = function(s2, u3) {
        for (var c2 = 0, b3 = 0, l2 = 0, n = 0;l2 < this.length; l2++) {
          var d3 = this.words[l2] << n | b3;
          s2[c2++] = d3 & 255, c2 < s2.length && (s2[c2++] = d3 >> 8 & 255), c2 < s2.length && (s2[c2++] = d3 >> 16 & 255), n === 6 ? (c2 < s2.length && (s2[c2++] = d3 >> 24 & 255), b3 = 0, n = 0) : (b3 = d3 >>> 24, n += 2);
        }
        if (c2 < s2.length)
          for (s2[c2++] = b3;c2 < s2.length; )
            s2[c2++] = 0;
      }, f2.prototype._toArrayLikeBE = function(s2, u3) {
        for (var c2 = s2.length - 1, b3 = 0, l2 = 0, n = 0;l2 < this.length; l2++) {
          var d3 = this.words[l2] << n | b3;
          s2[c2--] = d3 & 255, c2 >= 0 && (s2[c2--] = d3 >> 8 & 255), c2 >= 0 && (s2[c2--] = d3 >> 16 & 255), n === 6 ? (c2 >= 0 && (s2[c2--] = d3 >> 24 & 255), b3 = 0, n = 0) : (b3 = d3 >>> 24, n += 2);
        }
        if (c2 >= 0)
          for (s2[c2--] = b3;c2 >= 0; )
            s2[c2--] = 0;
      }, Math.clz32 ? f2.prototype._countBits = function(s2) {
        return 32 - Math.clz32(s2);
      } : f2.prototype._countBits = function(s2) {
        var u3 = s2, c2 = 0;
        return u3 >= 4096 && (c2 += 13, u3 >>>= 13), u3 >= 64 && (c2 += 7, u3 >>>= 7), u3 >= 8 && (c2 += 4, u3 >>>= 4), u3 >= 2 && (c2 += 2, u3 >>>= 2), c2 + u3;
      }, f2.prototype._zeroBits = function(s2) {
        if (s2 === 0)
          return 26;
        var u3 = s2, c2 = 0;
        return (u3 & 8191) === 0 && (c2 += 13, u3 >>>= 13), (u3 & 127) === 0 && (c2 += 7, u3 >>>= 7), (u3 & 15) === 0 && (c2 += 4, u3 >>>= 4), (u3 & 3) === 0 && (c2 += 2, u3 >>>= 2), (u3 & 1) === 0 && c2++, c2;
      }, f2.prototype.bitLength = function() {
        var s2 = this.words[this.length - 1], u3 = this._countBits(s2);
        return (this.length - 1) * 26 + u3;
      };
      function ge2(h3) {
        for (var s2 = new Array(h3.bitLength()), u3 = 0;u3 < s2.length; u3++) {
          var c2 = u3 / 26 | 0, b3 = u3 % 26;
          s2[u3] = h3.words[c2] >>> b3 & 1;
        }
        return s2;
      }
      f2.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var s2 = 0, u3 = 0;u3 < this.length; u3++) {
          var c2 = this._zeroBits(this.words[u3]);
          if (s2 += c2, c2 !== 26)
            break;
        }
        return s2;
      }, f2.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f2.prototype.toTwos = function(s2) {
        return this.negative !== 0 ? this.abs().inotn(s2).iaddn(1) : this.clone();
      }, f2.prototype.fromTwos = function(s2) {
        return this.testn(s2 - 1) ? this.notn(s2).iaddn(1).ineg() : this.clone();
      }, f2.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f2.prototype.neg = function() {
        return this.clone().ineg();
      }, f2.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f2.prototype.iuor = function(s2) {
        for (;this.length < s2.length; )
          this.words[this.length++] = 0;
        for (var u3 = 0;u3 < s2.length; u3++)
          this.words[u3] = this.words[u3] | s2.words[u3];
        return this._strip();
      }, f2.prototype.ior = function(s2) {
        return r((this.negative | s2.negative) === 0), this.iuor(s2);
      }, f2.prototype.or = function(s2) {
        return this.length > s2.length ? this.clone().ior(s2) : s2.clone().ior(this);
      }, f2.prototype.uor = function(s2) {
        return this.length > s2.length ? this.clone().iuor(s2) : s2.clone().iuor(this);
      }, f2.prototype.iuand = function(s2) {
        var u3;
        this.length > s2.length ? u3 = s2 : u3 = this;
        for (var c2 = 0;c2 < u3.length; c2++)
          this.words[c2] = this.words[c2] & s2.words[c2];
        return this.length = u3.length, this._strip();
      }, f2.prototype.iand = function(s2) {
        return r((this.negative | s2.negative) === 0), this.iuand(s2);
      }, f2.prototype.and = function(s2) {
        return this.length > s2.length ? this.clone().iand(s2) : s2.clone().iand(this);
      }, f2.prototype.uand = function(s2) {
        return this.length > s2.length ? this.clone().iuand(s2) : s2.clone().iuand(this);
      }, f2.prototype.iuxor = function(s2) {
        var u3, c2;
        this.length > s2.length ? (u3 = this, c2 = s2) : (u3 = s2, c2 = this);
        for (var b3 = 0;b3 < c2.length; b3++)
          this.words[b3] = u3.words[b3] ^ c2.words[b3];
        if (this !== u3)
          for (;b3 < u3.length; b3++)
            this.words[b3] = u3.words[b3];
        return this.length = u3.length, this._strip();
      }, f2.prototype.ixor = function(s2) {
        return r((this.negative | s2.negative) === 0), this.iuxor(s2);
      }, f2.prototype.xor = function(s2) {
        return this.length > s2.length ? this.clone().ixor(s2) : s2.clone().ixor(this);
      }, f2.prototype.uxor = function(s2) {
        return this.length > s2.length ? this.clone().iuxor(s2) : s2.clone().iuxor(this);
      }, f2.prototype.inotn = function(s2) {
        r(typeof s2 == "number" && s2 >= 0);
        var u3 = Math.ceil(s2 / 26) | 0, c2 = s2 % 26;
        this._expand(u3), c2 > 0 && u3--;
        for (var b3 = 0;b3 < u3; b3++)
          this.words[b3] = ~this.words[b3] & 67108863;
        return c2 > 0 && (this.words[b3] = ~this.words[b3] & 67108863 >> 26 - c2), this._strip();
      }, f2.prototype.notn = function(s2) {
        return this.clone().inotn(s2);
      }, f2.prototype.setn = function(s2, u3) {
        r(typeof s2 == "number" && s2 >= 0);
        var c2 = s2 / 26 | 0, b3 = s2 % 26;
        return this._expand(c2 + 1), u3 ? this.words[c2] = this.words[c2] | 1 << b3 : this.words[c2] = this.words[c2] & ~(1 << b3), this._strip();
      }, f2.prototype.iadd = function(s2) {
        var u3;
        if (this.negative !== 0 && s2.negative === 0)
          return this.negative = 0, u3 = this.isub(s2), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && s2.negative !== 0)
          return s2.negative = 0, u3 = this.isub(s2), s2.negative = 1, u3._normSign();
        var c2, b3;
        this.length > s2.length ? (c2 = this, b3 = s2) : (c2 = s2, b3 = this);
        for (var l2 = 0, n = 0;n < b3.length; n++)
          u3 = (c2.words[n] | 0) + (b3.words[n] | 0) + l2, this.words[n] = u3 & 67108863, l2 = u3 >>> 26;
        for (;l2 !== 0 && n < c2.length; n++)
          u3 = (c2.words[n] | 0) + l2, this.words[n] = u3 & 67108863, l2 = u3 >>> 26;
        if (this.length = c2.length, l2 !== 0)
          this.words[this.length] = l2, this.length++;
        else if (c2 !== this)
          for (;n < c2.length; n++)
            this.words[n] = c2.words[n];
        return this;
      }, f2.prototype.add = function(s2) {
        var u3;
        return s2.negative !== 0 && this.negative === 0 ? (s2.negative = 0, u3 = this.sub(s2), s2.negative ^= 1, u3) : s2.negative === 0 && this.negative !== 0 ? (this.negative = 0, u3 = s2.sub(this), this.negative = 1, u3) : this.length > s2.length ? this.clone().iadd(s2) : s2.clone().iadd(this);
      }, f2.prototype.isub = function(s2) {
        if (s2.negative !== 0) {
          s2.negative = 0;
          var u3 = this.iadd(s2);
          return s2.negative = 1, u3._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(s2), this.negative = 1, this._normSign();
        var c2 = this.cmp(s2);
        if (c2 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var b3, l2;
        c2 > 0 ? (b3 = this, l2 = s2) : (b3 = s2, l2 = this);
        for (var n = 0, d3 = 0;d3 < l2.length; d3++)
          u3 = (b3.words[d3] | 0) - (l2.words[d3] | 0) + n, n = u3 >> 26, this.words[d3] = u3 & 67108863;
        for (;n !== 0 && d3 < b3.length; d3++)
          u3 = (b3.words[d3] | 0) + n, n = u3 >> 26, this.words[d3] = u3 & 67108863;
        if (n === 0 && d3 < b3.length && b3 !== this)
          for (;d3 < b3.length; d3++)
            this.words[d3] = b3.words[d3];
        return this.length = Math.max(this.length, d3), b3 !== this && (this.negative = 1), this._strip();
      }, f2.prototype.sub = function(s2) {
        return this.clone().isub(s2);
      };
      function _e(h3, s2, u3) {
        u3.negative = s2.negative ^ h3.negative;
        var c2 = h3.length + s2.length | 0;
        u3.length = c2, c2 = c2 - 1 | 0;
        var b3 = h3.words[0] | 0, l2 = s2.words[0] | 0, n = b3 * l2, d3 = n & 67108863, w = n / 67108864 | 0;
        u3.words[0] = d3;
        for (var g3 = 1;g3 < c2; g3++) {
          for (var _3 = w >>> 26, A2 = w & 67108863, R2 = Math.min(g3, s2.length - 1), I3 = Math.max(0, g3 - h3.length + 1);I3 <= R2; I3++) {
            var Me = g3 - I3 | 0;
            b3 = h3.words[Me] | 0, l2 = s2.words[I3] | 0, n = b3 * l2 + A2, _3 += n / 67108864 | 0, A2 = n & 67108863;
          }
          u3.words[g3] = A2 | 0, w = _3 | 0;
        }
        return w !== 0 ? u3.words[g3] = w | 0 : u3.length--, u3._strip();
      }
      var N3 = function(s2, u3, c2) {
        var b3 = s2.words, l2 = u3.words, n = c2.words, d3 = 0, w, g3, _3, A2 = b3[0] | 0, R2 = A2 & 8191, I3 = A2 >>> 13, Me = b3[1] | 0, k3 = Me & 8191, D2 = Me >>> 13, nt2 = b3[2] | 0, C = nt2 & 8191, O4 = nt2 >>> 13, vt = b3[3] | 0, F = vt & 8191, U4 = vt >>> 13, bt2 = b3[4] | 0, z = bt2 & 8191, H2 = bt2 >>> 13, mt2 = b3[5] | 0, W = mt2 & 8191, K2 = mt2 >>> 13, gt4 = b3[6] | 0, j3 = gt4 & 8191, Z2 = gt4 >>> 13, yt2 = b3[7] | 0, V3 = yt2 & 8191, $2 = yt2 >>> 13, wt2 = b3[8] | 0, G3 = wt2 & 8191, Y2 = wt2 >>> 13, Mt = b3[9] | 0, X3 = Mt & 8191, J2 = Mt >>> 13, _t3 = l2[0] | 0, Q2 = _t3 & 8191, ee = _t3 >>> 13, xt = l2[1] | 0, te = xt & 8191, re = xt >>> 13, St = l2[2] | 0, ie2 = St & 8191, ne2 = St >>> 13, Et = l2[3] | 0, fe = Et & 8191, ae = Et >>> 13, At2 = l2[4] | 0, oe = At2 & 8191, se = At2 >>> 13, Rt = l2[5] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt2 = l2[6] | 0, le = Bt2 & 8191, de = Bt2 >>> 13, qt = l2[7] | 0, ce2 = qt & 8191, pe = qt >>> 13, It = l2[8] | 0, ve = It & 8191, be2 = It >>> 13, ft = l2[9] | 0, Be = ft & 8191, qe = ft >>> 13;
        c2.negative = s2.negative ^ u3.negative, c2.length = 19, w = Math.imul(R2, Q2), g3 = Math.imul(R2, ee), g3 = g3 + Math.imul(I3, Q2) | 0, _3 = Math.imul(I3, ee);
        var ze = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, w = Math.imul(k3, Q2), g3 = Math.imul(k3, ee), g3 = g3 + Math.imul(D2, Q2) | 0, _3 = Math.imul(D2, ee), w = w + Math.imul(R2, te) | 0, g3 = g3 + Math.imul(R2, re) | 0, g3 = g3 + Math.imul(I3, te) | 0, _3 = _3 + Math.imul(I3, re) | 0;
        var He2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (He2 >>> 26) | 0, He2 &= 67108863, w = Math.imul(C, Q2), g3 = Math.imul(C, ee), g3 = g3 + Math.imul(O4, Q2) | 0, _3 = Math.imul(O4, ee), w = w + Math.imul(k3, te) | 0, g3 = g3 + Math.imul(k3, re) | 0, g3 = g3 + Math.imul(D2, te) | 0, _3 = _3 + Math.imul(D2, re) | 0, w = w + Math.imul(R2, ie2) | 0, g3 = g3 + Math.imul(R2, ne2) | 0, g3 = g3 + Math.imul(I3, ie2) | 0, _3 = _3 + Math.imul(I3, ne2) | 0;
        var We = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, w = Math.imul(F, Q2), g3 = Math.imul(F, ee), g3 = g3 + Math.imul(U4, Q2) | 0, _3 = Math.imul(U4, ee), w = w + Math.imul(C, te) | 0, g3 = g3 + Math.imul(C, re) | 0, g3 = g3 + Math.imul(O4, te) | 0, _3 = _3 + Math.imul(O4, re) | 0, w = w + Math.imul(k3, ie2) | 0, g3 = g3 + Math.imul(k3, ne2) | 0, g3 = g3 + Math.imul(D2, ie2) | 0, _3 = _3 + Math.imul(D2, ne2) | 0, w = w + Math.imul(R2, fe) | 0, g3 = g3 + Math.imul(R2, ae) | 0, g3 = g3 + Math.imul(I3, fe) | 0, _3 = _3 + Math.imul(I3, ae) | 0;
        var Ke = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, w = Math.imul(z, Q2), g3 = Math.imul(z, ee), g3 = g3 + Math.imul(H2, Q2) | 0, _3 = Math.imul(H2, ee), w = w + Math.imul(F, te) | 0, g3 = g3 + Math.imul(F, re) | 0, g3 = g3 + Math.imul(U4, te) | 0, _3 = _3 + Math.imul(U4, re) | 0, w = w + Math.imul(C, ie2) | 0, g3 = g3 + Math.imul(C, ne2) | 0, g3 = g3 + Math.imul(O4, ie2) | 0, _3 = _3 + Math.imul(O4, ne2) | 0, w = w + Math.imul(k3, fe) | 0, g3 = g3 + Math.imul(k3, ae) | 0, g3 = g3 + Math.imul(D2, fe) | 0, _3 = _3 + Math.imul(D2, ae) | 0, w = w + Math.imul(R2, oe) | 0, g3 = g3 + Math.imul(R2, se) | 0, g3 = g3 + Math.imul(I3, oe) | 0, _3 = _3 + Math.imul(I3, se) | 0;
        var je = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, w = Math.imul(W, Q2), g3 = Math.imul(W, ee), g3 = g3 + Math.imul(K2, Q2) | 0, _3 = Math.imul(K2, ee), w = w + Math.imul(z, te) | 0, g3 = g3 + Math.imul(z, re) | 0, g3 = g3 + Math.imul(H2, te) | 0, _3 = _3 + Math.imul(H2, re) | 0, w = w + Math.imul(F, ie2) | 0, g3 = g3 + Math.imul(F, ne2) | 0, g3 = g3 + Math.imul(U4, ie2) | 0, _3 = _3 + Math.imul(U4, ne2) | 0, w = w + Math.imul(C, fe) | 0, g3 = g3 + Math.imul(C, ae) | 0, g3 = g3 + Math.imul(O4, fe) | 0, _3 = _3 + Math.imul(O4, ae) | 0, w = w + Math.imul(k3, oe) | 0, g3 = g3 + Math.imul(k3, se) | 0, g3 = g3 + Math.imul(D2, oe) | 0, _3 = _3 + Math.imul(D2, se) | 0, w = w + Math.imul(R2, he) | 0, g3 = g3 + Math.imul(R2, ue) | 0, g3 = g3 + Math.imul(I3, he) | 0, _3 = _3 + Math.imul(I3, ue) | 0;
        var Ze = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, w = Math.imul(j3, Q2), g3 = Math.imul(j3, ee), g3 = g3 + Math.imul(Z2, Q2) | 0, _3 = Math.imul(Z2, ee), w = w + Math.imul(W, te) | 0, g3 = g3 + Math.imul(W, re) | 0, g3 = g3 + Math.imul(K2, te) | 0, _3 = _3 + Math.imul(K2, re) | 0, w = w + Math.imul(z, ie2) | 0, g3 = g3 + Math.imul(z, ne2) | 0, g3 = g3 + Math.imul(H2, ie2) | 0, _3 = _3 + Math.imul(H2, ne2) | 0, w = w + Math.imul(F, fe) | 0, g3 = g3 + Math.imul(F, ae) | 0, g3 = g3 + Math.imul(U4, fe) | 0, _3 = _3 + Math.imul(U4, ae) | 0, w = w + Math.imul(C, oe) | 0, g3 = g3 + Math.imul(C, se) | 0, g3 = g3 + Math.imul(O4, oe) | 0, _3 = _3 + Math.imul(O4, se) | 0, w = w + Math.imul(k3, he) | 0, g3 = g3 + Math.imul(k3, ue) | 0, g3 = g3 + Math.imul(D2, he) | 0, _3 = _3 + Math.imul(D2, ue) | 0, w = w + Math.imul(R2, le) | 0, g3 = g3 + Math.imul(R2, de) | 0, g3 = g3 + Math.imul(I3, le) | 0, _3 = _3 + Math.imul(I3, de) | 0;
        var Ve = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, w = Math.imul(V3, Q2), g3 = Math.imul(V3, ee), g3 = g3 + Math.imul($2, Q2) | 0, _3 = Math.imul($2, ee), w = w + Math.imul(j3, te) | 0, g3 = g3 + Math.imul(j3, re) | 0, g3 = g3 + Math.imul(Z2, te) | 0, _3 = _3 + Math.imul(Z2, re) | 0, w = w + Math.imul(W, ie2) | 0, g3 = g3 + Math.imul(W, ne2) | 0, g3 = g3 + Math.imul(K2, ie2) | 0, _3 = _3 + Math.imul(K2, ne2) | 0, w = w + Math.imul(z, fe) | 0, g3 = g3 + Math.imul(z, ae) | 0, g3 = g3 + Math.imul(H2, fe) | 0, _3 = _3 + Math.imul(H2, ae) | 0, w = w + Math.imul(F, oe) | 0, g3 = g3 + Math.imul(F, se) | 0, g3 = g3 + Math.imul(U4, oe) | 0, _3 = _3 + Math.imul(U4, se) | 0, w = w + Math.imul(C, he) | 0, g3 = g3 + Math.imul(C, ue) | 0, g3 = g3 + Math.imul(O4, he) | 0, _3 = _3 + Math.imul(O4, ue) | 0, w = w + Math.imul(k3, le) | 0, g3 = g3 + Math.imul(k3, de) | 0, g3 = g3 + Math.imul(D2, le) | 0, _3 = _3 + Math.imul(D2, de) | 0, w = w + Math.imul(R2, ce2) | 0, g3 = g3 + Math.imul(R2, pe) | 0, g3 = g3 + Math.imul(I3, ce2) | 0, _3 = _3 + Math.imul(I3, pe) | 0;
        var $e2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + ($e2 >>> 26) | 0, $e2 &= 67108863, w = Math.imul(G3, Q2), g3 = Math.imul(G3, ee), g3 = g3 + Math.imul(Y2, Q2) | 0, _3 = Math.imul(Y2, ee), w = w + Math.imul(V3, te) | 0, g3 = g3 + Math.imul(V3, re) | 0, g3 = g3 + Math.imul($2, te) | 0, _3 = _3 + Math.imul($2, re) | 0, w = w + Math.imul(j3, ie2) | 0, g3 = g3 + Math.imul(j3, ne2) | 0, g3 = g3 + Math.imul(Z2, ie2) | 0, _3 = _3 + Math.imul(Z2, ne2) | 0, w = w + Math.imul(W, fe) | 0, g3 = g3 + Math.imul(W, ae) | 0, g3 = g3 + Math.imul(K2, fe) | 0, _3 = _3 + Math.imul(K2, ae) | 0, w = w + Math.imul(z, oe) | 0, g3 = g3 + Math.imul(z, se) | 0, g3 = g3 + Math.imul(H2, oe) | 0, _3 = _3 + Math.imul(H2, se) | 0, w = w + Math.imul(F, he) | 0, g3 = g3 + Math.imul(F, ue) | 0, g3 = g3 + Math.imul(U4, he) | 0, _3 = _3 + Math.imul(U4, ue) | 0, w = w + Math.imul(C, le) | 0, g3 = g3 + Math.imul(C, de) | 0, g3 = g3 + Math.imul(O4, le) | 0, _3 = _3 + Math.imul(O4, de) | 0, w = w + Math.imul(k3, ce2) | 0, g3 = g3 + Math.imul(k3, pe) | 0, g3 = g3 + Math.imul(D2, ce2) | 0, _3 = _3 + Math.imul(D2, pe) | 0, w = w + Math.imul(R2, ve) | 0, g3 = g3 + Math.imul(R2, be2) | 0, g3 = g3 + Math.imul(I3, ve) | 0, _3 = _3 + Math.imul(I3, be2) | 0;
        var Ge2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Ge2 >>> 26) | 0, Ge2 &= 67108863, w = Math.imul(X3, Q2), g3 = Math.imul(X3, ee), g3 = g3 + Math.imul(J2, Q2) | 0, _3 = Math.imul(J2, ee), w = w + Math.imul(G3, te) | 0, g3 = g3 + Math.imul(G3, re) | 0, g3 = g3 + Math.imul(Y2, te) | 0, _3 = _3 + Math.imul(Y2, re) | 0, w = w + Math.imul(V3, ie2) | 0, g3 = g3 + Math.imul(V3, ne2) | 0, g3 = g3 + Math.imul($2, ie2) | 0, _3 = _3 + Math.imul($2, ne2) | 0, w = w + Math.imul(j3, fe) | 0, g3 = g3 + Math.imul(j3, ae) | 0, g3 = g3 + Math.imul(Z2, fe) | 0, _3 = _3 + Math.imul(Z2, ae) | 0, w = w + Math.imul(W, oe) | 0, g3 = g3 + Math.imul(W, se) | 0, g3 = g3 + Math.imul(K2, oe) | 0, _3 = _3 + Math.imul(K2, se) | 0, w = w + Math.imul(z, he) | 0, g3 = g3 + Math.imul(z, ue) | 0, g3 = g3 + Math.imul(H2, he) | 0, _3 = _3 + Math.imul(H2, ue) | 0, w = w + Math.imul(F, le) | 0, g3 = g3 + Math.imul(F, de) | 0, g3 = g3 + Math.imul(U4, le) | 0, _3 = _3 + Math.imul(U4, de) | 0, w = w + Math.imul(C, ce2) | 0, g3 = g3 + Math.imul(C, pe) | 0, g3 = g3 + Math.imul(O4, ce2) | 0, _3 = _3 + Math.imul(O4, pe) | 0, w = w + Math.imul(k3, ve) | 0, g3 = g3 + Math.imul(k3, be2) | 0, g3 = g3 + Math.imul(D2, ve) | 0, _3 = _3 + Math.imul(D2, be2) | 0, w = w + Math.imul(R2, Be) | 0, g3 = g3 + Math.imul(R2, qe) | 0, g3 = g3 + Math.imul(I3, Be) | 0, _3 = _3 + Math.imul(I3, qe) | 0;
        var Ye = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, w = Math.imul(X3, te), g3 = Math.imul(X3, re), g3 = g3 + Math.imul(J2, te) | 0, _3 = Math.imul(J2, re), w = w + Math.imul(G3, ie2) | 0, g3 = g3 + Math.imul(G3, ne2) | 0, g3 = g3 + Math.imul(Y2, ie2) | 0, _3 = _3 + Math.imul(Y2, ne2) | 0, w = w + Math.imul(V3, fe) | 0, g3 = g3 + Math.imul(V3, ae) | 0, g3 = g3 + Math.imul($2, fe) | 0, _3 = _3 + Math.imul($2, ae) | 0, w = w + Math.imul(j3, oe) | 0, g3 = g3 + Math.imul(j3, se) | 0, g3 = g3 + Math.imul(Z2, oe) | 0, _3 = _3 + Math.imul(Z2, se) | 0, w = w + Math.imul(W, he) | 0, g3 = g3 + Math.imul(W, ue) | 0, g3 = g3 + Math.imul(K2, he) | 0, _3 = _3 + Math.imul(K2, ue) | 0, w = w + Math.imul(z, le) | 0, g3 = g3 + Math.imul(z, de) | 0, g3 = g3 + Math.imul(H2, le) | 0, _3 = _3 + Math.imul(H2, de) | 0, w = w + Math.imul(F, ce2) | 0, g3 = g3 + Math.imul(F, pe) | 0, g3 = g3 + Math.imul(U4, ce2) | 0, _3 = _3 + Math.imul(U4, pe) | 0, w = w + Math.imul(C, ve) | 0, g3 = g3 + Math.imul(C, be2) | 0, g3 = g3 + Math.imul(O4, ve) | 0, _3 = _3 + Math.imul(O4, be2) | 0, w = w + Math.imul(k3, Be) | 0, g3 = g3 + Math.imul(k3, qe) | 0, g3 = g3 + Math.imul(D2, Be) | 0, _3 = _3 + Math.imul(D2, qe) | 0;
        var Xe2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Xe2 >>> 26) | 0, Xe2 &= 67108863, w = Math.imul(X3, ie2), g3 = Math.imul(X3, ne2), g3 = g3 + Math.imul(J2, ie2) | 0, _3 = Math.imul(J2, ne2), w = w + Math.imul(G3, fe) | 0, g3 = g3 + Math.imul(G3, ae) | 0, g3 = g3 + Math.imul(Y2, fe) | 0, _3 = _3 + Math.imul(Y2, ae) | 0, w = w + Math.imul(V3, oe) | 0, g3 = g3 + Math.imul(V3, se) | 0, g3 = g3 + Math.imul($2, oe) | 0, _3 = _3 + Math.imul($2, se) | 0, w = w + Math.imul(j3, he) | 0, g3 = g3 + Math.imul(j3, ue) | 0, g3 = g3 + Math.imul(Z2, he) | 0, _3 = _3 + Math.imul(Z2, ue) | 0, w = w + Math.imul(W, le) | 0, g3 = g3 + Math.imul(W, de) | 0, g3 = g3 + Math.imul(K2, le) | 0, _3 = _3 + Math.imul(K2, de) | 0, w = w + Math.imul(z, ce2) | 0, g3 = g3 + Math.imul(z, pe) | 0, g3 = g3 + Math.imul(H2, ce2) | 0, _3 = _3 + Math.imul(H2, pe) | 0, w = w + Math.imul(F, ve) | 0, g3 = g3 + Math.imul(F, be2) | 0, g3 = g3 + Math.imul(U4, ve) | 0, _3 = _3 + Math.imul(U4, be2) | 0, w = w + Math.imul(C, Be) | 0, g3 = g3 + Math.imul(C, qe) | 0, g3 = g3 + Math.imul(O4, Be) | 0, _3 = _3 + Math.imul(O4, qe) | 0;
        var Je2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Je2 >>> 26) | 0, Je2 &= 67108863, w = Math.imul(X3, fe), g3 = Math.imul(X3, ae), g3 = g3 + Math.imul(J2, fe) | 0, _3 = Math.imul(J2, ae), w = w + Math.imul(G3, oe) | 0, g3 = g3 + Math.imul(G3, se) | 0, g3 = g3 + Math.imul(Y2, oe) | 0, _3 = _3 + Math.imul(Y2, se) | 0, w = w + Math.imul(V3, he) | 0, g3 = g3 + Math.imul(V3, ue) | 0, g3 = g3 + Math.imul($2, he) | 0, _3 = _3 + Math.imul($2, ue) | 0, w = w + Math.imul(j3, le) | 0, g3 = g3 + Math.imul(j3, de) | 0, g3 = g3 + Math.imul(Z2, le) | 0, _3 = _3 + Math.imul(Z2, de) | 0, w = w + Math.imul(W, ce2) | 0, g3 = g3 + Math.imul(W, pe) | 0, g3 = g3 + Math.imul(K2, ce2) | 0, _3 = _3 + Math.imul(K2, pe) | 0, w = w + Math.imul(z, ve) | 0, g3 = g3 + Math.imul(z, be2) | 0, g3 = g3 + Math.imul(H2, ve) | 0, _3 = _3 + Math.imul(H2, be2) | 0, w = w + Math.imul(F, Be) | 0, g3 = g3 + Math.imul(F, qe) | 0, g3 = g3 + Math.imul(U4, Be) | 0, _3 = _3 + Math.imul(U4, qe) | 0;
        var Qe = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, w = Math.imul(X3, oe), g3 = Math.imul(X3, se), g3 = g3 + Math.imul(J2, oe) | 0, _3 = Math.imul(J2, se), w = w + Math.imul(G3, he) | 0, g3 = g3 + Math.imul(G3, ue) | 0, g3 = g3 + Math.imul(Y2, he) | 0, _3 = _3 + Math.imul(Y2, ue) | 0, w = w + Math.imul(V3, le) | 0, g3 = g3 + Math.imul(V3, de) | 0, g3 = g3 + Math.imul($2, le) | 0, _3 = _3 + Math.imul($2, de) | 0, w = w + Math.imul(j3, ce2) | 0, g3 = g3 + Math.imul(j3, pe) | 0, g3 = g3 + Math.imul(Z2, ce2) | 0, _3 = _3 + Math.imul(Z2, pe) | 0, w = w + Math.imul(W, ve) | 0, g3 = g3 + Math.imul(W, be2) | 0, g3 = g3 + Math.imul(K2, ve) | 0, _3 = _3 + Math.imul(K2, be2) | 0, w = w + Math.imul(z, Be) | 0, g3 = g3 + Math.imul(z, qe) | 0, g3 = g3 + Math.imul(H2, Be) | 0, _3 = _3 + Math.imul(H2, qe) | 0;
        var et2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (et2 >>> 26) | 0, et2 &= 67108863, w = Math.imul(X3, he), g3 = Math.imul(X3, ue), g3 = g3 + Math.imul(J2, he) | 0, _3 = Math.imul(J2, ue), w = w + Math.imul(G3, le) | 0, g3 = g3 + Math.imul(G3, de) | 0, g3 = g3 + Math.imul(Y2, le) | 0, _3 = _3 + Math.imul(Y2, de) | 0, w = w + Math.imul(V3, ce2) | 0, g3 = g3 + Math.imul(V3, pe) | 0, g3 = g3 + Math.imul($2, ce2) | 0, _3 = _3 + Math.imul($2, pe) | 0, w = w + Math.imul(j3, ve) | 0, g3 = g3 + Math.imul(j3, be2) | 0, g3 = g3 + Math.imul(Z2, ve) | 0, _3 = _3 + Math.imul(Z2, be2) | 0, w = w + Math.imul(W, Be) | 0, g3 = g3 + Math.imul(W, qe) | 0, g3 = g3 + Math.imul(K2, Be) | 0, _3 = _3 + Math.imul(K2, qe) | 0;
        var tt2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (tt2 >>> 26) | 0, tt2 &= 67108863, w = Math.imul(X3, le), g3 = Math.imul(X3, de), g3 = g3 + Math.imul(J2, le) | 0, _3 = Math.imul(J2, de), w = w + Math.imul(G3, ce2) | 0, g3 = g3 + Math.imul(G3, pe) | 0, g3 = g3 + Math.imul(Y2, ce2) | 0, _3 = _3 + Math.imul(Y2, pe) | 0, w = w + Math.imul(V3, ve) | 0, g3 = g3 + Math.imul(V3, be2) | 0, g3 = g3 + Math.imul($2, ve) | 0, _3 = _3 + Math.imul($2, be2) | 0, w = w + Math.imul(j3, Be) | 0, g3 = g3 + Math.imul(j3, qe) | 0, g3 = g3 + Math.imul(Z2, Be) | 0, _3 = _3 + Math.imul(Z2, qe) | 0;
        var rt2 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (rt2 >>> 26) | 0, rt2 &= 67108863, w = Math.imul(X3, ce2), g3 = Math.imul(X3, pe), g3 = g3 + Math.imul(J2, ce2) | 0, _3 = Math.imul(J2, pe), w = w + Math.imul(G3, ve) | 0, g3 = g3 + Math.imul(G3, be2) | 0, g3 = g3 + Math.imul(Y2, ve) | 0, _3 = _3 + Math.imul(Y2, be2) | 0, w = w + Math.imul(V3, Be) | 0, g3 = g3 + Math.imul(V3, qe) | 0, g3 = g3 + Math.imul($2, Be) | 0, _3 = _3 + Math.imul($2, qe) | 0;
        var x0 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (x0 >>> 26) | 0, x0 &= 67108863, w = Math.imul(X3, ve), g3 = Math.imul(X3, be2), g3 = g3 + Math.imul(J2, ve) | 0, _3 = Math.imul(J2, be2), w = w + Math.imul(G3, Be) | 0, g3 = g3 + Math.imul(G3, qe) | 0, g3 = g3 + Math.imul(Y2, Be) | 0, _3 = _3 + Math.imul(Y2, qe) | 0;
        var S0 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        d3 = (_3 + (g3 >>> 13) | 0) + (S0 >>> 26) | 0, S0 &= 67108863, w = Math.imul(X3, Be), g3 = Math.imul(X3, qe), g3 = g3 + Math.imul(J2, Be) | 0, _3 = Math.imul(J2, qe);
        var E0 = (d3 + w | 0) + ((g3 & 8191) << 13) | 0;
        return d3 = (_3 + (g3 >>> 13) | 0) + (E0 >>> 26) | 0, E0 &= 67108863, n[0] = ze, n[1] = He2, n[2] = We, n[3] = Ke, n[4] = je, n[5] = Ze, n[6] = Ve, n[7] = $e2, n[8] = Ge2, n[9] = Ye, n[10] = Xe2, n[11] = Je2, n[12] = Qe, n[13] = et2, n[14] = tt2, n[15] = rt2, n[16] = x0, n[17] = S0, n[18] = E0, d3 !== 0 && (n[19] = d3, c2.length++), c2;
      };
      Math.imul || (N3 = _e);
      function we(h3, s2, u3) {
        u3.negative = s2.negative ^ h3.negative, u3.length = h3.length + s2.length;
        for (var c2 = 0, b3 = 0, l2 = 0;l2 < u3.length - 1; l2++) {
          var n = b3;
          b3 = 0;
          for (var d3 = c2 & 67108863, w = Math.min(l2, s2.length - 1), g3 = Math.max(0, l2 - h3.length + 1);g3 <= w; g3++) {
            var _3 = l2 - g3, A2 = h3.words[_3] | 0, R2 = s2.words[g3] | 0, I3 = A2 * R2, Me = I3 & 67108863;
            n = n + (I3 / 67108864 | 0) | 0, Me = Me + d3 | 0, d3 = Me & 67108863, n = n + (Me >>> 26) | 0, b3 += n >>> 26, n &= 67108863;
          }
          u3.words[l2] = d3, c2 = n, n = b3;
        }
        return c2 !== 0 ? u3.words[l2] = c2 : u3.length--, u3._strip();
      }
      function ye(h3, s2, u3) {
        return we(h3, s2, u3);
      }
      f2.prototype.mulTo = function(s2, u3) {
        var c2, b3 = this.length + s2.length;
        return this.length === 10 && s2.length === 10 ? c2 = N3(this, s2, u3) : b3 < 63 ? c2 = _e(this, s2, u3) : b3 < 1024 ? c2 = we(this, s2, u3) : c2 = ye(this, s2, u3), c2;
      };
      function xe(h3, s2) {
        this.x = h3, this.y = s2;
      }
      xe.prototype.makeRBT = function(s2) {
        for (var u3 = new Array(s2), c2 = f2.prototype._countBits(s2) - 1, b3 = 0;b3 < s2; b3++)
          u3[b3] = this.revBin(b3, c2, s2);
        return u3;
      }, xe.prototype.revBin = function(s2, u3, c2) {
        if (s2 === 0 || s2 === c2 - 1)
          return s2;
        for (var b3 = 0, l2 = 0;l2 < u3; l2++)
          b3 |= (s2 & 1) << u3 - l2 - 1, s2 >>= 1;
        return b3;
      }, xe.prototype.permute = function(s2, u3, c2, b3, l2, n) {
        for (var d3 = 0;d3 < n; d3++)
          b3[d3] = u3[s2[d3]], l2[d3] = c2[s2[d3]];
      }, xe.prototype.transform = function(s2, u3, c2, b3, l2, n) {
        this.permute(n, s2, u3, c2, b3, l2);
        for (var d3 = 1;d3 < l2; d3 <<= 1)
          for (var w = d3 << 1, g3 = Math.cos(2 * Math.PI / w), _3 = Math.sin(2 * Math.PI / w), A2 = 0;A2 < l2; A2 += w)
            for (var R2 = g3, I3 = _3, Me = 0;Me < d3; Me++) {
              var k3 = c2[A2 + Me], D2 = b3[A2 + Me], nt2 = c2[A2 + Me + d3], C = b3[A2 + Me + d3], O4 = R2 * nt2 - I3 * C;
              C = R2 * C + I3 * nt2, nt2 = O4, c2[A2 + Me] = k3 + nt2, b3[A2 + Me] = D2 + C, c2[A2 + Me + d3] = k3 - nt2, b3[A2 + Me + d3] = D2 - C, Me !== w && (O4 = g3 * R2 - _3 * I3, I3 = g3 * I3 + _3 * R2, R2 = O4);
            }
      }, xe.prototype.guessLen13b = function(s2, u3) {
        var c2 = Math.max(u3, s2) | 1, b3 = c2 & 1, l2 = 0;
        for (c2 = c2 / 2 | 0;c2; c2 = c2 >>> 1)
          l2++;
        return 1 << l2 + 1 + b3;
      }, xe.prototype.conjugate = function(s2, u3, c2) {
        if (!(c2 <= 1))
          for (var b3 = 0;b3 < c2 / 2; b3++) {
            var l2 = s2[b3];
            s2[b3] = s2[c2 - b3 - 1], s2[c2 - b3 - 1] = l2, l2 = u3[b3], u3[b3] = -u3[c2 - b3 - 1], u3[c2 - b3 - 1] = -l2;
          }
      }, xe.prototype.normalize13b = function(s2, u3) {
        for (var c2 = 0, b3 = 0;b3 < u3 / 2; b3++) {
          var l2 = Math.round(s2[2 * b3 + 1] / u3) * 8192 + Math.round(s2[2 * b3] / u3) + c2;
          s2[b3] = l2 & 67108863, l2 < 67108864 ? c2 = 0 : c2 = l2 / 67108864 | 0;
        }
        return s2;
      }, xe.prototype.convert13b = function(s2, u3, c2, b3) {
        for (var l2 = 0, n = 0;n < u3; n++)
          l2 = l2 + (s2[n] | 0), c2[2 * n] = l2 & 8191, l2 = l2 >>> 13, c2[2 * n + 1] = l2 & 8191, l2 = l2 >>> 13;
        for (n = 2 * u3;n < b3; ++n)
          c2[n] = 0;
        r(l2 === 0), r((l2 & -8192) === 0);
      }, xe.prototype.stub = function(s2) {
        for (var u3 = new Array(s2), c2 = 0;c2 < s2; c2++)
          u3[c2] = 0;
        return u3;
      }, xe.prototype.mulp = function(s2, u3, c2) {
        var b3 = 2 * this.guessLen13b(s2.length, u3.length), l2 = this.makeRBT(b3), n = this.stub(b3), d3 = new Array(b3), w = new Array(b3), g3 = new Array(b3), _3 = new Array(b3), A2 = new Array(b3), R2 = new Array(b3), I3 = c2.words;
        I3.length = b3, this.convert13b(s2.words, s2.length, d3, b3), this.convert13b(u3.words, u3.length, _3, b3), this.transform(d3, n, w, g3, b3, l2), this.transform(_3, n, A2, R2, b3, l2);
        for (var Me = 0;Me < b3; Me++) {
          var k3 = w[Me] * A2[Me] - g3[Me] * R2[Me];
          g3[Me] = w[Me] * R2[Me] + g3[Me] * A2[Me], w[Me] = k3;
        }
        return this.conjugate(w, g3, b3), this.transform(w, g3, I3, n, b3, l2), this.conjugate(I3, n, b3), this.normalize13b(I3, b3), c2.negative = s2.negative ^ u3.negative, c2.length = s2.length + u3.length, c2._strip();
      }, f2.prototype.mul = function(s2) {
        var u3 = new f2(null);
        return u3.words = new Array(this.length + s2.length), this.mulTo(s2, u3);
      }, f2.prototype.mulf = function(s2) {
        var u3 = new f2(null);
        return u3.words = new Array(this.length + s2.length), ye(this, s2, u3);
      }, f2.prototype.imul = function(s2) {
        return this.clone().mulTo(s2, this);
      }, f2.prototype.imuln = function(s2) {
        var u3 = s2 < 0;
        u3 && (s2 = -s2), r(typeof s2 == "number"), r(s2 < 67108864);
        for (var c2 = 0, b3 = 0;b3 < this.length; b3++) {
          var l2 = (this.words[b3] | 0) * s2, n = (l2 & 67108863) + (c2 & 67108863);
          c2 >>= 26, c2 += l2 / 67108864 | 0, c2 += n >>> 26, this.words[b3] = n & 67108863;
        }
        return c2 !== 0 && (this.words[b3] = c2, this.length++), u3 ? this.ineg() : this;
      }, f2.prototype.muln = function(s2) {
        return this.clone().imuln(s2);
      }, f2.prototype.sqr = function() {
        return this.mul(this);
      }, f2.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f2.prototype.pow = function(s2) {
        var u3 = ge2(s2);
        if (u3.length === 0)
          return new f2(1);
        for (var c2 = this, b3 = 0;b3 < u3.length && u3[b3] === 0; b3++, c2 = c2.sqr())
          ;
        if (++b3 < u3.length)
          for (var l2 = c2.sqr();b3 < u3.length; b3++, l2 = l2.sqr())
            u3[b3] !== 0 && (c2 = c2.mul(l2));
        return c2;
      }, f2.prototype.iushln = function(s2) {
        r(typeof s2 == "number" && s2 >= 0);
        var u3 = s2 % 26, c2 = (s2 - u3) / 26, b3 = 67108863 >>> 26 - u3 << 26 - u3, l2;
        if (u3 !== 0) {
          var n = 0;
          for (l2 = 0;l2 < this.length; l2++) {
            var d3 = this.words[l2] & b3, w = (this.words[l2] | 0) - d3 << u3;
            this.words[l2] = w | n, n = d3 >>> 26 - u3;
          }
          n && (this.words[l2] = n, this.length++);
        }
        if (c2 !== 0) {
          for (l2 = this.length - 1;l2 >= 0; l2--)
            this.words[l2 + c2] = this.words[l2];
          for (l2 = 0;l2 < c2; l2++)
            this.words[l2] = 0;
          this.length += c2;
        }
        return this._strip();
      }, f2.prototype.ishln = function(s2) {
        return r(this.negative === 0), this.iushln(s2);
      }, f2.prototype.iushrn = function(s2, u3, c2) {
        r(typeof s2 == "number" && s2 >= 0);
        var b3;
        u3 ? b3 = (u3 - u3 % 26) / 26 : b3 = 0;
        var l2 = s2 % 26, n = Math.min((s2 - l2) / 26, this.length), d3 = 67108863 ^ 67108863 >>> l2 << l2, w = c2;
        if (b3 -= n, b3 = Math.max(0, b3), w) {
          for (var g3 = 0;g3 < n; g3++)
            w.words[g3] = this.words[g3];
          w.length = n;
        }
        if (n !== 0)
          if (this.length > n)
            for (this.length -= n, g3 = 0;g3 < this.length; g3++)
              this.words[g3] = this.words[g3 + n];
          else
            this.words[0] = 0, this.length = 1;
        var _3 = 0;
        for (g3 = this.length - 1;g3 >= 0 && (_3 !== 0 || g3 >= b3); g3--) {
          var A2 = this.words[g3] | 0;
          this.words[g3] = _3 << 26 - l2 | A2 >>> l2, _3 = A2 & d3;
        }
        return w && _3 !== 0 && (w.words[w.length++] = _3), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
      }, f2.prototype.ishrn = function(s2, u3, c2) {
        return r(this.negative === 0), this.iushrn(s2, u3, c2);
      }, f2.prototype.shln = function(s2) {
        return this.clone().ishln(s2);
      }, f2.prototype.ushln = function(s2) {
        return this.clone().iushln(s2);
      }, f2.prototype.shrn = function(s2) {
        return this.clone().ishrn(s2);
      }, f2.prototype.ushrn = function(s2) {
        return this.clone().iushrn(s2);
      }, f2.prototype.testn = function(s2) {
        r(typeof s2 == "number" && s2 >= 0);
        var u3 = s2 % 26, c2 = (s2 - u3) / 26, b3 = 1 << u3;
        if (this.length <= c2)
          return false;
        var l2 = this.words[c2];
        return !!(l2 & b3);
      }, f2.prototype.imaskn = function(s2) {
        r(typeof s2 == "number" && s2 >= 0);
        var u3 = s2 % 26, c2 = (s2 - u3) / 26;
        if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= c2)
          return this;
        if (u3 !== 0 && c2++, this.length = Math.min(c2, this.length), u3 !== 0) {
          var b3 = 67108863 ^ 67108863 >>> u3 << u3;
          this.words[this.length - 1] &= b3;
        }
        return this._strip();
      }, f2.prototype.maskn = function(s2) {
        return this.clone().imaskn(s2);
      }, f2.prototype.iaddn = function(s2) {
        return r(typeof s2 == "number"), r(s2 < 67108864), s2 < 0 ? this.isubn(-s2) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= s2 ? (this.words[0] = s2 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(s2), this.negative = 1, this) : this._iaddn(s2);
      }, f2.prototype._iaddn = function(s2) {
        this.words[0] += s2;
        for (var u3 = 0;u3 < this.length && this.words[u3] >= 67108864; u3++)
          this.words[u3] -= 67108864, u3 === this.length - 1 ? this.words[u3 + 1] = 1 : this.words[u3 + 1]++;
        return this.length = Math.max(this.length, u3 + 1), this;
      }, f2.prototype.isubn = function(s2) {
        if (r(typeof s2 == "number"), r(s2 < 67108864), s2 < 0)
          return this.iaddn(-s2);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(s2), this.negative = 1, this;
        if (this.words[0] -= s2, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var u3 = 0;u3 < this.length && this.words[u3] < 0; u3++)
            this.words[u3] += 67108864, this.words[u3 + 1] -= 1;
        return this._strip();
      }, f2.prototype.addn = function(s2) {
        return this.clone().iaddn(s2);
      }, f2.prototype.subn = function(s2) {
        return this.clone().isubn(s2);
      }, f2.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f2.prototype.abs = function() {
        return this.clone().iabs();
      }, f2.prototype._ishlnsubmul = function(s2, u3, c2) {
        var b3 = s2.length + c2, l2;
        this._expand(b3);
        var n, d3 = 0;
        for (l2 = 0;l2 < s2.length; l2++) {
          n = (this.words[l2 + c2] | 0) + d3;
          var w = (s2.words[l2] | 0) * u3;
          n -= w & 67108863, d3 = (n >> 26) - (w / 67108864 | 0), this.words[l2 + c2] = n & 67108863;
        }
        for (;l2 < this.length - c2; l2++)
          n = (this.words[l2 + c2] | 0) + d3, d3 = n >> 26, this.words[l2 + c2] = n & 67108863;
        if (d3 === 0)
          return this._strip();
        for (r(d3 === -1), d3 = 0, l2 = 0;l2 < this.length; l2++)
          n = -(this.words[l2] | 0) + d3, d3 = n >> 26, this.words[l2] = n & 67108863;
        return this.negative = 1, this._strip();
      }, f2.prototype._wordDiv = function(s2, u3) {
        var c2 = this.length - s2.length, b3 = this.clone(), l2 = s2, n = l2.words[l2.length - 1] | 0, d3 = this._countBits(n);
        c2 = 26 - d3, c2 !== 0 && (l2 = l2.ushln(c2), b3.iushln(c2), n = l2.words[l2.length - 1] | 0);
        var w = b3.length - l2.length, g3;
        if (u3 !== "mod") {
          g3 = new f2(null), g3.length = w + 1, g3.words = new Array(g3.length);
          for (var _3 = 0;_3 < g3.length; _3++)
            g3.words[_3] = 0;
        }
        var A2 = b3.clone()._ishlnsubmul(l2, 1, w);
        A2.negative === 0 && (b3 = A2, g3 && (g3.words[w] = 1));
        for (var R2 = w - 1;R2 >= 0; R2--) {
          var I3 = (b3.words[l2.length + R2] | 0) * 67108864 + (b3.words[l2.length + R2 - 1] | 0);
          for (I3 = Math.min(I3 / n | 0, 67108863), b3._ishlnsubmul(l2, I3, R2);b3.negative !== 0; )
            I3--, b3.negative = 0, b3._ishlnsubmul(l2, 1, R2), b3.isZero() || (b3.negative ^= 1);
          g3 && (g3.words[R2] = I3);
        }
        return g3 && g3._strip(), b3._strip(), u3 !== "div" && c2 !== 0 && b3.iushrn(c2), { div: g3 || null, mod: b3 };
      }, f2.prototype.divmod = function(s2, u3, c2) {
        if (r(!s2.isZero()), this.isZero())
          return { div: new f2(0), mod: new f2(0) };
        var b3, l2, n;
        return this.negative !== 0 && s2.negative === 0 ? (n = this.neg().divmod(s2, u3), u3 !== "mod" && (b3 = n.div.neg()), u3 !== "div" && (l2 = n.mod.neg(), c2 && l2.negative !== 0 && l2.iadd(s2)), { div: b3, mod: l2 }) : this.negative === 0 && s2.negative !== 0 ? (n = this.divmod(s2.neg(), u3), u3 !== "mod" && (b3 = n.div.neg()), { div: b3, mod: n.mod }) : (this.negative & s2.negative) !== 0 ? (n = this.neg().divmod(s2.neg(), u3), u3 !== "div" && (l2 = n.mod.neg(), c2 && l2.negative !== 0 && l2.isub(s2)), { div: n.div, mod: l2 }) : s2.length > this.length || this.cmp(s2) < 0 ? { div: new f2(0), mod: this } : s2.length === 1 ? u3 === "div" ? { div: this.divn(s2.words[0]), mod: null } : u3 === "mod" ? { div: null, mod: new f2(this.modrn(s2.words[0])) } : { div: this.divn(s2.words[0]), mod: new f2(this.modrn(s2.words[0])) } : this._wordDiv(s2, u3);
      }, f2.prototype.div = function(s2) {
        return this.divmod(s2, "div", false).div;
      }, f2.prototype.mod = function(s2) {
        return this.divmod(s2, "mod", false).mod;
      }, f2.prototype.umod = function(s2) {
        return this.divmod(s2, "mod", true).mod;
      }, f2.prototype.divRound = function(s2) {
        var u3 = this.divmod(s2);
        if (u3.mod.isZero())
          return u3.div;
        var c2 = u3.div.negative !== 0 ? u3.mod.isub(s2) : u3.mod, b3 = s2.ushrn(1), l2 = s2.andln(1), n = c2.cmp(b3);
        return n < 0 || l2 === 1 && n === 0 ? u3.div : u3.div.negative !== 0 ? u3.div.isubn(1) : u3.div.iaddn(1);
      }, f2.prototype.modrn = function(s2) {
        var u3 = s2 < 0;
        u3 && (s2 = -s2), r(s2 <= 67108863);
        for (var c2 = (1 << 26) % s2, b3 = 0, l2 = this.length - 1;l2 >= 0; l2--)
          b3 = (c2 * b3 + (this.words[l2] | 0)) % s2;
        return u3 ? -b3 : b3;
      }, f2.prototype.modn = function(s2) {
        return this.modrn(s2);
      }, f2.prototype.idivn = function(s2) {
        var u3 = s2 < 0;
        u3 && (s2 = -s2), r(s2 <= 67108863);
        for (var c2 = 0, b3 = this.length - 1;b3 >= 0; b3--) {
          var l2 = (this.words[b3] | 0) + c2 * 67108864;
          this.words[b3] = l2 / s2 | 0, c2 = l2 % s2;
        }
        return this._strip(), u3 ? this.ineg() : this;
      }, f2.prototype.divn = function(s2) {
        return this.clone().idivn(s2);
      }, f2.prototype.egcd = function(s2) {
        r(s2.negative === 0), r(!s2.isZero());
        var u3 = this, c2 = s2.clone();
        u3.negative !== 0 ? u3 = u3.umod(s2) : u3 = u3.clone();
        for (var b3 = new f2(1), l2 = new f2(0), n = new f2(0), d3 = new f2(1), w = 0;u3.isEven() && c2.isEven(); )
          u3.iushrn(1), c2.iushrn(1), ++w;
        for (var g3 = c2.clone(), _3 = u3.clone();!u3.isZero(); ) {
          for (var A2 = 0, R2 = 1;(u3.words[0] & R2) === 0 && A2 < 26; ++A2, R2 <<= 1)
            ;
          if (A2 > 0)
            for (u3.iushrn(A2);A2-- > 0; )
              (b3.isOdd() || l2.isOdd()) && (b3.iadd(g3), l2.isub(_3)), b3.iushrn(1), l2.iushrn(1);
          for (var I3 = 0, Me = 1;(c2.words[0] & Me) === 0 && I3 < 26; ++I3, Me <<= 1)
            ;
          if (I3 > 0)
            for (c2.iushrn(I3);I3-- > 0; )
              (n.isOdd() || d3.isOdd()) && (n.iadd(g3), d3.isub(_3)), n.iushrn(1), d3.iushrn(1);
          u3.cmp(c2) >= 0 ? (u3.isub(c2), b3.isub(n), l2.isub(d3)) : (c2.isub(u3), n.isub(b3), d3.isub(l2));
        }
        return { a: n, b: d3, gcd: c2.iushln(w) };
      }, f2.prototype._invmp = function(s2) {
        r(s2.negative === 0), r(!s2.isZero());
        var u3 = this, c2 = s2.clone();
        u3.negative !== 0 ? u3 = u3.umod(s2) : u3 = u3.clone();
        for (var b3 = new f2(1), l2 = new f2(0), n = c2.clone();u3.cmpn(1) > 0 && c2.cmpn(1) > 0; ) {
          for (var d3 = 0, w = 1;(u3.words[0] & w) === 0 && d3 < 26; ++d3, w <<= 1)
            ;
          if (d3 > 0)
            for (u3.iushrn(d3);d3-- > 0; )
              b3.isOdd() && b3.iadd(n), b3.iushrn(1);
          for (var g3 = 0, _3 = 1;(c2.words[0] & _3) === 0 && g3 < 26; ++g3, _3 <<= 1)
            ;
          if (g3 > 0)
            for (c2.iushrn(g3);g3-- > 0; )
              l2.isOdd() && l2.iadd(n), l2.iushrn(1);
          u3.cmp(c2) >= 0 ? (u3.isub(c2), b3.isub(l2)) : (c2.isub(u3), l2.isub(b3));
        }
        var A2;
        return u3.cmpn(1) === 0 ? A2 = b3 : A2 = l2, A2.cmpn(0) < 0 && A2.iadd(s2), A2;
      }, f2.prototype.gcd = function(s2) {
        if (this.isZero())
          return s2.abs();
        if (s2.isZero())
          return this.abs();
        var u3 = this.clone(), c2 = s2.clone();
        u3.negative = 0, c2.negative = 0;
        for (var b3 = 0;u3.isEven() && c2.isEven(); b3++)
          u3.iushrn(1), c2.iushrn(1);
        do {
          for (;u3.isEven(); )
            u3.iushrn(1);
          for (;c2.isEven(); )
            c2.iushrn(1);
          var l2 = u3.cmp(c2);
          if (l2 < 0) {
            var n = u3;
            u3 = c2, c2 = n;
          } else if (l2 === 0 || c2.cmpn(1) === 0)
            break;
          u3.isub(c2);
        } while (true);
        return c2.iushln(b3);
      }, f2.prototype.invm = function(s2) {
        return this.egcd(s2).a.umod(s2);
      }, f2.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f2.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f2.prototype.andln = function(s2) {
        return this.words[0] & s2;
      }, f2.prototype.bincn = function(s2) {
        r(typeof s2 == "number");
        var u3 = s2 % 26, c2 = (s2 - u3) / 26, b3 = 1 << u3;
        if (this.length <= c2)
          return this._expand(c2 + 1), this.words[c2] |= b3, this;
        for (var l2 = b3, n = c2;l2 !== 0 && n < this.length; n++) {
          var d3 = this.words[n] | 0;
          d3 += l2, l2 = d3 >>> 26, d3 &= 67108863, this.words[n] = d3;
        }
        return l2 !== 0 && (this.words[n] = l2, this.length++), this;
      }, f2.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f2.prototype.cmpn = function(s2) {
        var u3 = s2 < 0;
        if (this.negative !== 0 && !u3)
          return -1;
        if (this.negative === 0 && u3)
          return 1;
        this._strip();
        var c2;
        if (this.length > 1)
          c2 = 1;
        else {
          u3 && (s2 = -s2), r(s2 <= 67108863, "Number is too big");
          var b3 = this.words[0] | 0;
          c2 = b3 === s2 ? 0 : b3 < s2 ? -1 : 1;
        }
        return this.negative !== 0 ? -c2 | 0 : c2;
      }, f2.prototype.cmp = function(s2) {
        if (this.negative !== 0 && s2.negative === 0)
          return -1;
        if (this.negative === 0 && s2.negative !== 0)
          return 1;
        var u3 = this.ucmp(s2);
        return this.negative !== 0 ? -u3 | 0 : u3;
      }, f2.prototype.ucmp = function(s2) {
        if (this.length > s2.length)
          return 1;
        if (this.length < s2.length)
          return -1;
        for (var u3 = 0, c2 = this.length - 1;c2 >= 0; c2--) {
          var b3 = this.words[c2] | 0, l2 = s2.words[c2] | 0;
          if (b3 !== l2) {
            b3 < l2 ? u3 = -1 : b3 > l2 && (u3 = 1);
            break;
          }
        }
        return u3;
      }, f2.prototype.gtn = function(s2) {
        return this.cmpn(s2) === 1;
      }, f2.prototype.gt = function(s2) {
        return this.cmp(s2) === 1;
      }, f2.prototype.gten = function(s2) {
        return this.cmpn(s2) >= 0;
      }, f2.prototype.gte = function(s2) {
        return this.cmp(s2) >= 0;
      }, f2.prototype.ltn = function(s2) {
        return this.cmpn(s2) === -1;
      }, f2.prototype.lt = function(s2) {
        return this.cmp(s2) === -1;
      }, f2.prototype.lten = function(s2) {
        return this.cmpn(s2) <= 0;
      }, f2.prototype.lte = function(s2) {
        return this.cmp(s2) <= 0;
      }, f2.prototype.eqn = function(s2) {
        return this.cmpn(s2) === 0;
      }, f2.prototype.eq = function(s2) {
        return this.cmp(s2) === 0;
      }, f2.red = function(s2) {
        return new i(s2);
      }, f2.prototype.toRed = function(s2) {
        return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), s2.convertTo(this)._forceRed(s2);
      }, f2.prototype.fromRed = function() {
        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f2.prototype._forceRed = function(s2) {
        return this.red = s2, this;
      }, f2.prototype.forceRed = function(s2) {
        return r(!this.red, "Already a number in reduction context"), this._forceRed(s2);
      }, f2.prototype.redAdd = function(s2) {
        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, s2);
      }, f2.prototype.redIAdd = function(s2) {
        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, s2);
      }, f2.prototype.redSub = function(s2) {
        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, s2);
      }, f2.prototype.redISub = function(s2) {
        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, s2);
      }, f2.prototype.redShl = function(s2) {
        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, s2);
      }, f2.prototype.redMul = function(s2) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, s2), this.red.mul(this, s2);
      }, f2.prototype.redIMul = function(s2) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, s2), this.red.imul(this, s2);
      }, f2.prototype.redSqr = function() {
        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f2.prototype.redISqr = function() {
        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f2.prototype.redSqrt = function() {
        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f2.prototype.redInvm = function() {
        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f2.prototype.redNeg = function() {
        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f2.prototype.redPow = function(s2) {
        return r(this.red && !s2.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, s2);
      };
      var Re = { k256: null, p224: null, p192: null, p25519: null };
      function Ee(h3, s2) {
        this.name = h3, this.p = new f2(s2, 16), this.n = this.p.bitLength(), this.k = new f2(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      Ee.prototype._tmp = function() {
        var s2 = new f2(null);
        return s2.words = new Array(Math.ceil(this.n / 13)), s2;
      }, Ee.prototype.ireduce = function(s2) {
        var u3 = s2, c2;
        do
          this.split(u3, this.tmp), u3 = this.imulK(u3), u3 = u3.iadd(this.tmp), c2 = u3.bitLength();
        while (c2 > this.n);
        var b3 = c2 < this.n ? -1 : u3.ucmp(this.p);
        return b3 === 0 ? (u3.words[0] = 0, u3.length = 1) : b3 > 0 ? u3.isub(this.p) : u3.strip !== undefined ? u3.strip() : u3._strip(), u3;
      }, Ee.prototype.split = function(s2, u3) {
        s2.iushrn(this.n, 0, u3);
      }, Ee.prototype.imulK = function(s2) {
        return s2.imul(this.k);
      };
      function Ae() {
        Ee.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o(Ae, Ee), Ae.prototype.split = function(s2, u3) {
        for (var c2 = 4194303, b3 = Math.min(s2.length, 9), l2 = 0;l2 < b3; l2++)
          u3.words[l2] = s2.words[l2];
        if (u3.length = b3, s2.length <= 9) {
          s2.words[0] = 0, s2.length = 1;
          return;
        }
        var n = s2.words[9];
        for (u3.words[u3.length++] = n & c2, l2 = 10;l2 < s2.length; l2++) {
          var d3 = s2.words[l2] | 0;
          s2.words[l2 - 10] = (d3 & c2) << 4 | n >>> 22, n = d3;
        }
        n >>>= 22, s2.words[l2 - 10] = n, n === 0 && s2.length > 10 ? s2.length -= 10 : s2.length -= 9;
      }, Ae.prototype.imulK = function(s2) {
        s2.words[s2.length] = 0, s2.words[s2.length + 1] = 0, s2.length += 2;
        for (var u3 = 0, c2 = 0;c2 < s2.length; c2++) {
          var b3 = s2.words[c2] | 0;
          u3 += b3 * 977, s2.words[c2] = u3 & 67108863, u3 = b3 * 64 + (u3 / 67108864 | 0);
        }
        return s2.words[s2.length - 1] === 0 && (s2.length--, s2.words[s2.length - 1] === 0 && s2.length--), s2;
      };
      function P2() {
        Ee.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o(P2, Ee);
      function Se2() {
        Ee.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o(Se2, Ee);
      function v2() {
        Ee.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o(v2, Ee), v2.prototype.imulK = function(s2) {
        for (var u3 = 0, c2 = 0;c2 < s2.length; c2++) {
          var b3 = (s2.words[c2] | 0) * 19 + u3, l2 = b3 & 67108863;
          b3 >>>= 26, s2.words[c2] = l2, u3 = b3;
        }
        return u3 !== 0 && (s2.words[s2.length++] = u3), s2;
      }, f2._prime = function(s2) {
        if (Re[s2])
          return Re[s2];
        var u3;
        if (s2 === "k256")
          u3 = new Ae;
        else if (s2 === "p224")
          u3 = new P2;
        else if (s2 === "p192")
          u3 = new Se2;
        else if (s2 === "p25519")
          u3 = new v2;
        else
          throw new Error("Unknown prime " + s2);
        return Re[s2] = u3, u3;
      };
      function i(h3) {
        if (typeof h3 == "string") {
          var s2 = f2._prime(h3);
          this.m = s2.p, this.prime = s2;
        } else
          r(h3.gtn(1), "modulus must be greater than 1"), this.m = h3, this.prime = null;
      }
      i.prototype._verify1 = function(s2) {
        r(s2.negative === 0, "red works only with positives"), r(s2.red, "red works only with red numbers");
      }, i.prototype._verify2 = function(s2, u3) {
        r((s2.negative | u3.negative) === 0, "red works only with positives"), r(s2.red && s2.red === u3.red, "red works only with red numbers");
      }, i.prototype.imod = function(s2) {
        return this.prime ? this.prime.ireduce(s2)._forceRed(this) : (x4(s2, s2.umod(this.m)._forceRed(this)), s2);
      }, i.prototype.neg = function(s2) {
        return s2.isZero() ? s2.clone() : this.m.sub(s2)._forceRed(this);
      }, i.prototype.add = function(s2, u3) {
        this._verify2(s2, u3);
        var c2 = s2.add(u3);
        return c2.cmp(this.m) >= 0 && c2.isub(this.m), c2._forceRed(this);
      }, i.prototype.iadd = function(s2, u3) {
        this._verify2(s2, u3);
        var c2 = s2.iadd(u3);
        return c2.cmp(this.m) >= 0 && c2.isub(this.m), c2;
      }, i.prototype.sub = function(s2, u3) {
        this._verify2(s2, u3);
        var c2 = s2.sub(u3);
        return c2.cmpn(0) < 0 && c2.iadd(this.m), c2._forceRed(this);
      }, i.prototype.isub = function(s2, u3) {
        this._verify2(s2, u3);
        var c2 = s2.isub(u3);
        return c2.cmpn(0) < 0 && c2.iadd(this.m), c2;
      }, i.prototype.shl = function(s2, u3) {
        return this._verify1(s2), this.imod(s2.ushln(u3));
      }, i.prototype.imul = function(s2, u3) {
        return this._verify2(s2, u3), this.imod(s2.imul(u3));
      }, i.prototype.mul = function(s2, u3) {
        return this._verify2(s2, u3), this.imod(s2.mul(u3));
      }, i.prototype.isqr = function(s2) {
        return this.imul(s2, s2.clone());
      }, i.prototype.sqr = function(s2) {
        return this.mul(s2, s2);
      }, i.prototype.sqrt = function(s2) {
        if (s2.isZero())
          return s2.clone();
        var u3 = this.m.andln(3);
        if (r(u3 % 2 === 1), u3 === 3) {
          var c2 = this.m.add(new f2(1)).iushrn(2);
          return this.pow(s2, c2);
        }
        for (var b3 = this.m.subn(1), l2 = 0;!b3.isZero() && b3.andln(1) === 0; )
          l2++, b3.iushrn(1);
        r(!b3.isZero());
        var n = new f2(1).toRed(this), d3 = n.redNeg(), w = this.m.subn(1).iushrn(1), g3 = this.m.bitLength();
        for (g3 = new f2(2 * g3 * g3).toRed(this);this.pow(g3, w).cmp(d3) !== 0; )
          g3.redIAdd(d3);
        for (var _3 = this.pow(g3, b3), A2 = this.pow(s2, b3.addn(1).iushrn(1)), R2 = this.pow(s2, b3), I3 = l2;R2.cmp(n) !== 0; ) {
          for (var Me = R2, k3 = 0;Me.cmp(n) !== 0; k3++)
            Me = Me.redSqr();
          r(k3 < I3);
          var D2 = this.pow(_3, new f2(1).iushln(I3 - k3 - 1));
          A2 = A2.redMul(D2), _3 = D2.redSqr(), R2 = R2.redMul(_3), I3 = k3;
        }
        return A2;
      }, i.prototype.invm = function(s2) {
        var u3 = s2._invmp(this.m);
        return u3.negative !== 0 ? (u3.negative = 0, this.imod(u3).redNeg()) : this.imod(u3);
      }, i.prototype.pow = function(s2, u3) {
        if (u3.isZero())
          return new f2(1).toRed(this);
        if (u3.cmpn(1) === 0)
          return s2.clone();
        var c2 = 4, b3 = new Array(1 << c2);
        b3[0] = new f2(1).toRed(this), b3[1] = s2;
        for (var l2 = 2;l2 < b3.length; l2++)
          b3[l2] = this.mul(b3[l2 - 1], s2);
        var n = b3[0], d3 = 0, w = 0, g3 = u3.bitLength() % 26;
        for (g3 === 0 && (g3 = 26), l2 = u3.length - 1;l2 >= 0; l2--) {
          for (var _3 = u3.words[l2], A2 = g3 - 1;A2 >= 0; A2--) {
            var R2 = _3 >> A2 & 1;
            if (n !== b3[0] && (n = this.sqr(n)), R2 === 0 && d3 === 0) {
              w = 0;
              continue;
            }
            d3 <<= 1, d3 |= R2, w++, !(w !== c2 && (l2 !== 0 || A2 !== 0)) && (n = this.mul(n, b3[d3]), w = 0, d3 = 0);
          }
          g3 = 26;
        }
        return n;
      }, i.prototype.convertTo = function(s2) {
        var u3 = s2.umod(this.m);
        return u3 === s2 ? u3.clone() : u3;
      }, i.prototype.convertFrom = function(s2) {
        var u3 = s2.clone();
        return u3.red = null, u3;
      }, f2.mont = function(s2) {
        return new a3(s2);
      };
      function a3(h3) {
        i.call(this, h3), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f2(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o(a3, i), a3.prototype.convertTo = function(s2) {
        return this.imod(s2.ushln(this.shift));
      }, a3.prototype.convertFrom = function(s2) {
        var u3 = this.imod(s2.mul(this.rinv));
        return u3.red = null, u3;
      }, a3.prototype.imul = function(s2, u3) {
        if (s2.isZero() || u3.isZero())
          return s2.words[0] = 0, s2.length = 1, s2;
        var c2 = s2.imul(u3), b3 = c2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), l2 = c2.isub(b3).iushrn(this.shift), n = l2;
        return l2.cmp(this.m) >= 0 ? n = l2.isub(this.m) : l2.cmpn(0) < 0 && (n = l2.iadd(this.m)), n._forceRed(this);
      }, a3.prototype.mul = function(s2, u3) {
        if (s2.isZero() || u3.isZero())
          return new f2(0)._forceRed(this);
        var c2 = s2.mul(u3), b3 = c2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), l2 = c2.isub(b3).iushrn(this.shift), n = l2;
        return l2.cmp(this.m) >= 0 ? n = l2.isub(this.m) : l2.cmpn(0) < 0 && (n = l2.iadd(this.m)), n._forceRed(this);
      }, a3.prototype.invm = function(s2) {
        var u3 = this.imod(s2._invmp(this.m).mul(this.r2));
        return u3._forceRed(this);
      };
    })(typeof Tl > "u" || Tl, t2);
  });
  Ws2 = T3((mk, n2) => {
    var Rf = Hs(), nA = on();
    function fA(t) {
      var e = r2(t), r = e.toRed(Rf.mont(t.modulus)).redPow(new Rf(t.publicExponent)).fromRed();
      return { blinder: r, unblinder: e.invm(t.modulus) };
    }
    function r2(t) {
      var e = t.modulus.byteLength(), r;
      do
        r = new Rf(nA(e));
      while (r.cmp(t.modulus) >= 0 || !r.umod(t.prime1) || !r.umod(t.prime2));
      return r;
    }
    function i2(t, e) {
      var r = fA(e), o = e.modulus.byteLength(), f2 = new Rf(t).mul(r.blinder).umod(e.modulus), p3 = f2.toRed(Rf.mont(e.prime1)), m3 = f2.toRed(Rf.mont(e.prime2)), y3 = e.coefficient, M2 = e.prime1, x4 = e.prime2, S3 = p3.redPow(e.exponent1).fromRed(), E4 = m3.redPow(e.exponent2).fromRed(), B3 = S3.isub(E4).imul(y3).umod(M2).imul(x4);
      return E4.iadd(B3).imul(r.unblinder).umod(e.modulus).toArrayLike(Buffer, "be", o);
    }
    i2.getr = r2;
    n2.exports = i2;
  });
  f2 = T3((gk, aA) => {
    aA.exports = { name: "elliptic", version: "6.5.4", description: "EC cryptography", main: "lib/elliptic.js", files: ["lib"], scripts: { lint: "eslint lib test", "lint:fix": "npm run lint -- --fix", unit: "istanbul test _mocha --reporter=spec test/index.js", test: "npm run lint && npm run unit", version: "grunt dist && git add dist/" }, repository: { type: "git", url: "git@github.com:indutny/elliptic" }, keywords: ["EC", "Elliptic", "curve", "Cryptography"], author: "Fedor Indutny <fedor@indutny.com>", license: "MIT", bugs: { url: "https://github.com/indutny/elliptic/issues" }, homepage: "https://github.com/indutny/elliptic", devDependencies: { brfs: "^2.0.2", coveralls: "^3.1.0", eslint: "^7.6.0", grunt: "^1.2.1", "grunt-browserify": "^5.3.0", "grunt-cli": "^1.3.2", "grunt-contrib-connect": "^3.0.0", "grunt-contrib-copy": "^1.0.0", "grunt-contrib-uglify": "^5.0.0", "grunt-mocha-istanbul": "^5.0.2", "grunt-saucelabs": "^9.0.1", istanbul: "^0.4.5", mocha: "^8.0.1" }, dependencies: { "bn.js": "^4.11.9", brorand: "^1.1.0", "hash.js": "^1.0.0", "hmac-drbg": "^1.0.1", inherits: "^2.0.4", "minimalistic-assert": "^1.0.1", "minimalistic-crypto-utils": "^1.0.1" } };
  });
  ri = T3((a22, kl) => {
    (function(t, e) {
      function r(v2, i) {
        if (!v2)
          throw new Error(i || "Assertion failed");
      }
      function o(v2, i) {
        v2.super_ = i;
        var a3 = function() {};
        a3.prototype = i.prototype, v2.prototype = new a3, v2.prototype.constructor = v2;
      }
      function f3(v2, i, a3) {
        if (f3.isBN(v2))
          return v2;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v2 !== null && ((i === "le" || i === "be") && (a3 = i, i = 10), this._init(v2 || 0, i || 10, a3 || "be"));
      }
      typeof t == "object" ? t.exports = f3 : e.BN = f3, f3.BN = f3, f3.wordSize = 26;
      var p3;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p3 = window.Buffer : p3 = ji().Buffer;
      } catch {}
      f3.isBN = function(i) {
        return i instanceof f3 ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f3.wordSize && Array.isArray(i.words);
      }, f3.max = function(i, a3) {
        return i.cmp(a3) > 0 ? i : a3;
      }, f3.min = function(i, a3) {
        return i.cmp(a3) < 0 ? i : a3;
      }, f3.prototype._init = function(i, a3, h3) {
        if (typeof i == "number")
          return this._initNumber(i, a3, h3);
        if (typeof i == "object")
          return this._initArray(i, a3, h3);
        a3 === "hex" && (a3 = 16), r(a3 === (a3 | 0) && a3 >= 2 && a3 <= 36), i = i.toString().replace(/\s+/g, "");
        var s2 = 0;
        i[0] === "-" && (s2++, this.negative = 1), s2 < i.length && (a3 === 16 ? this._parseHex(i, s2, h3) : (this._parseBase(i, a3, s2), h3 === "le" && this._initArray(this.toArray(), a3, h3)));
      }, f3.prototype._initNumber = function(i, a3, h3) {
        i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h3 === "le" && this._initArray(this.toArray(), a3, h3);
      }, f3.prototype._initArray = function(i, a3, h3) {
        if (r(typeof i.length == "number"), i.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3, c2, b3 = 0;
        if (h3 === "be")
          for (s2 = i.length - 1, u3 = 0;s2 >= 0; s2 -= 3)
            c2 = i[s2] | i[s2 - 1] << 8 | i[s2 - 2] << 16, this.words[u3] |= c2 << b3 & 67108863, this.words[u3 + 1] = c2 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        else if (h3 === "le")
          for (s2 = 0, u3 = 0;s2 < i.length; s2 += 3)
            c2 = i[s2] | i[s2 + 1] << 8 | i[s2 + 2] << 16, this.words[u3] |= c2 << b3 & 67108863, this.words[u3 + 1] = c2 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        return this.strip();
      };
      function m3(v2, i) {
        var a3 = v2.charCodeAt(i);
        return a3 >= 65 && a3 <= 70 ? a3 - 55 : a3 >= 97 && a3 <= 102 ? a3 - 87 : a3 - 48 & 15;
      }
      function y3(v2, i, a3) {
        var h3 = m3(v2, a3);
        return a3 - 1 >= i && (h3 |= m3(v2, a3 - 1) << 4), h3;
      }
      f3.prototype._parseHex = function(i, a3, h3) {
        this.length = Math.ceil((i.length - a3) / 6), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3 = 0, c2 = 0, b3;
        if (h3 === "be")
          for (s2 = i.length - 1;s2 >= a3; s2 -= 2)
            b3 = y3(i, a3, s2) << u3, this.words[c2] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c2 += 1, this.words[c2] |= b3 >>> 26) : u3 += 8;
        else {
          var l2 = i.length - a3;
          for (s2 = l2 % 2 === 0 ? a3 + 1 : a3;s2 < i.length; s2 += 2)
            b3 = y3(i, a3, s2) << u3, this.words[c2] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c2 += 1, this.words[c2] |= b3 >>> 26) : u3 += 8;
        }
        this.strip();
      };
      function M2(v2, i, a3, h3) {
        for (var s2 = 0, u3 = Math.min(v2.length, a3), c2 = i;c2 < u3; c2++) {
          var b3 = v2.charCodeAt(c2) - 48;
          s2 *= h3, b3 >= 49 ? s2 += b3 - 49 + 10 : b3 >= 17 ? s2 += b3 - 17 + 10 : s2 += b3;
        }
        return s2;
      }
      f3.prototype._parseBase = function(i, a3, h3) {
        this.words = [0], this.length = 1;
        for (var s2 = 0, u3 = 1;u3 <= 67108863; u3 *= a3)
          s2++;
        s2--, u3 = u3 / a3 | 0;
        for (var c2 = i.length - h3, b3 = c2 % s2, l2 = Math.min(c2, c2 - b3) + h3, n = 0, d3 = h3;d3 < l2; d3 += s2)
          n = M2(i, d3, d3 + s2, a3), this.imuln(u3), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        if (b3 !== 0) {
          var w = 1;
          for (n = M2(i, d3, i.length, a3), d3 = 0;d3 < b3; d3++)
            w *= a3;
          this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        }
        this.strip();
      }, f3.prototype.copy = function(i) {
        i.words = new Array(this.length);
        for (var a3 = 0;a3 < this.length; a3++)
          i.words[a3] = this.words[a3];
        i.length = this.length, i.negative = this.negative, i.red = this.red;
      }, f3.prototype.clone = function() {
        var i = new f3(null);
        return this.copy(i), i;
      }, f3.prototype._expand = function(i) {
        for (;this.length < i; )
          this.words[this.length++] = 0;
        return this;
      }, f3.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f3.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f3.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E4 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f3.prototype.toString = function(i, a3) {
        i = i || 10, a3 = a3 | 0 || 1;
        var h3;
        if (i === 16 || i === "hex") {
          h3 = "";
          for (var s2 = 0, u3 = 0, c2 = 0;c2 < this.length; c2++) {
            var b3 = this.words[c2], l2 = ((b3 << s2 | u3) & 16777215).toString(16);
            u3 = b3 >>> 24 - s2 & 16777215, u3 !== 0 || c2 !== this.length - 1 ? h3 = x4[6 - l2.length] + l2 + h3 : h3 = l2 + h3, s2 += 2, s2 >= 26 && (s2 -= 26, c2--);
          }
          for (u3 !== 0 && (h3 = u3.toString(16) + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        if (i === (i | 0) && i >= 2 && i <= 36) {
          var n = S3[i], d3 = E4[i];
          h3 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g3 = w.modn(d3).toString(i);
            w = w.idivn(d3), w.isZero() ? h3 = g3 + h3 : h3 = x4[n - g3.length] + g3 + h3;
          }
          for (this.isZero() && (h3 = "0" + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        r(false, "Base should be between 2 and 36");
      }, f3.prototype.toNumber = function() {
        var i = this.words[0];
        return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
      }, f3.prototype.toJSON = function() {
        return this.toString(16);
      }, f3.prototype.toBuffer = function(i, a3) {
        return r(typeof p3 < "u"), this.toArrayLike(p3, i, a3);
      }, f3.prototype.toArray = function(i, a3) {
        return this.toArrayLike(Array, i, a3);
      }, f3.prototype.toArrayLike = function(i, a3, h3) {
        var s2 = this.byteLength(), u3 = h3 || Math.max(1, s2);
        r(s2 <= u3, "byte array longer than desired length"), r(u3 > 0, "Requested array length <= 0"), this.strip();
        var c2 = a3 === "le", b3 = new i(u3), l2, n, d3 = this.clone();
        if (c2) {
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[n] = l2;
          for (;n < u3; n++)
            b3[n] = 0;
        } else {
          for (n = 0;n < u3 - s2; n++)
            b3[n] = 0;
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[u3 - n - 1] = l2;
        }
        return b3;
      }, Math.clz32 ? f3.prototype._countBits = function(i) {
        return 32 - Math.clz32(i);
      } : f3.prototype._countBits = function(i) {
        var a3 = i, h3 = 0;
        return a3 >= 4096 && (h3 += 13, a3 >>>= 13), a3 >= 64 && (h3 += 7, a3 >>>= 7), a3 >= 8 && (h3 += 4, a3 >>>= 4), a3 >= 2 && (h3 += 2, a3 >>>= 2), h3 + a3;
      }, f3.prototype._zeroBits = function(i) {
        if (i === 0)
          return 26;
        var a3 = i, h3 = 0;
        return (a3 & 8191) === 0 && (h3 += 13, a3 >>>= 13), (a3 & 127) === 0 && (h3 += 7, a3 >>>= 7), (a3 & 15) === 0 && (h3 += 4, a3 >>>= 4), (a3 & 3) === 0 && (h3 += 2, a3 >>>= 2), (a3 & 1) === 0 && h3++, h3;
      }, f3.prototype.bitLength = function() {
        var i = this.words[this.length - 1], a3 = this._countBits(i);
        return (this.length - 1) * 26 + a3;
      };
      function B3(v2) {
        for (var i = new Array(v2.bitLength()), a3 = 0;a3 < i.length; a3++) {
          var h3 = a3 / 26 | 0, s2 = a3 % 26;
          i[a3] = (v2.words[h3] & 1 << s2) >>> s2;
        }
        return i;
      }
      f3.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i = 0, a3 = 0;a3 < this.length; a3++) {
          var h3 = this._zeroBits(this.words[a3]);
          if (i += h3, h3 !== 26)
            break;
        }
        return i;
      }, f3.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f3.prototype.toTwos = function(i) {
        return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
      }, f3.prototype.fromTwos = function(i) {
        return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
      }, f3.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f3.prototype.neg = function() {
        return this.clone().ineg();
      }, f3.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f3.prototype.iuor = function(i) {
        for (;this.length < i.length; )
          this.words[this.length++] = 0;
        for (var a3 = 0;a3 < i.length; a3++)
          this.words[a3] = this.words[a3] | i.words[a3];
        return this.strip();
      }, f3.prototype.ior = function(i) {
        return r((this.negative | i.negative) === 0), this.iuor(i);
      }, f3.prototype.or = function(i) {
        return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
      }, f3.prototype.uor = function(i) {
        return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
      }, f3.prototype.iuand = function(i) {
        var a3;
        this.length > i.length ? a3 = i : a3 = this;
        for (var h3 = 0;h3 < a3.length; h3++)
          this.words[h3] = this.words[h3] & i.words[h3];
        return this.length = a3.length, this.strip();
      }, f3.prototype.iand = function(i) {
        return r((this.negative | i.negative) === 0), this.iuand(i);
      }, f3.prototype.and = function(i) {
        return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
      }, f3.prototype.uand = function(i) {
        return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
      }, f3.prototype.iuxor = function(i) {
        var a3, h3;
        this.length > i.length ? (a3 = this, h3 = i) : (a3 = i, h3 = this);
        for (var s2 = 0;s2 < h3.length; s2++)
          this.words[s2] = a3.words[s2] ^ h3.words[s2];
        if (this !== a3)
          for (;s2 < a3.length; s2++)
            this.words[s2] = a3.words[s2];
        return this.length = a3.length, this.strip();
      }, f3.prototype.ixor = function(i) {
        return r((this.negative | i.negative) === 0), this.iuxor(i);
      }, f3.prototype.xor = function(i) {
        return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
      }, f3.prototype.uxor = function(i) {
        return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
      }, f3.prototype.inotn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = Math.ceil(i / 26) | 0, h3 = i % 26;
        this._expand(a3), h3 > 0 && a3--;
        for (var s2 = 0;s2 < a3; s2++)
          this.words[s2] = ~this.words[s2] & 67108863;
        return h3 > 0 && (this.words[s2] = ~this.words[s2] & 67108863 >> 26 - h3), this.strip();
      }, f3.prototype.notn = function(i) {
        return this.clone().inotn(i);
      }, f3.prototype.setn = function(i, a3) {
        r(typeof i == "number" && i >= 0);
        var h3 = i / 26 | 0, s2 = i % 26;
        return this._expand(h3 + 1), a3 ? this.words[h3] = this.words[h3] | 1 << s2 : this.words[h3] = this.words[h3] & ~(1 << s2), this.strip();
      }, f3.prototype.iadd = function(i) {
        var a3;
        if (this.negative !== 0 && i.negative === 0)
          return this.negative = 0, a3 = this.isub(i), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i.negative !== 0)
          return i.negative = 0, a3 = this.isub(i), i.negative = 1, a3._normSign();
        var h3, s2;
        this.length > i.length ? (h3 = this, s2 = i) : (h3 = i, s2 = this);
        for (var u3 = 0, c2 = 0;c2 < s2.length; c2++)
          a3 = (h3.words[c2] | 0) + (s2.words[c2] | 0) + u3, this.words[c2] = a3 & 67108863, u3 = a3 >>> 26;
        for (;u3 !== 0 && c2 < h3.length; c2++)
          a3 = (h3.words[c2] | 0) + u3, this.words[c2] = a3 & 67108863, u3 = a3 >>> 26;
        if (this.length = h3.length, u3 !== 0)
          this.words[this.length] = u3, this.length++;
        else if (h3 !== this)
          for (;c2 < h3.length; c2++)
            this.words[c2] = h3.words[c2];
        return this;
      }, f3.prototype.add = function(i) {
        var a3;
        return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a3 = this.sub(i), i.negative ^= 1, a3) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a3 = i.sub(this), this.negative = 1, a3) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
      }, f3.prototype.isub = function(i) {
        if (i.negative !== 0) {
          i.negative = 0;
          var a3 = this.iadd(i);
          return i.negative = 1, a3._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
        var h3 = this.cmp(i);
        if (h3 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s2, u3;
        h3 > 0 ? (s2 = this, u3 = i) : (s2 = i, u3 = this);
        for (var c2 = 0, b3 = 0;b3 < u3.length; b3++)
          a3 = (s2.words[b3] | 0) - (u3.words[b3] | 0) + c2, c2 = a3 >> 26, this.words[b3] = a3 & 67108863;
        for (;c2 !== 0 && b3 < s2.length; b3++)
          a3 = (s2.words[b3] | 0) + c2, c2 = a3 >> 26, this.words[b3] = a3 & 67108863;
        if (c2 === 0 && b3 < s2.length && s2 !== this)
          for (;b3 < s2.length; b3++)
            this.words[b3] = s2.words[b3];
        return this.length = Math.max(this.length, b3), s2 !== this && (this.negative = 1), this.strip();
      }, f3.prototype.sub = function(i) {
        return this.clone().isub(i);
      };
      function q2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative;
        var h3 = v2.length + i.length | 0;
        a3.length = h3, h3 = h3 - 1 | 0;
        var s2 = v2.words[0] | 0, u3 = i.words[0] | 0, c2 = s2 * u3, b3 = c2 & 67108863, l2 = c2 / 67108864 | 0;
        a3.words[0] = b3;
        for (var n = 1;n < h3; n++) {
          for (var d3 = l2 >>> 26, w = l2 & 67108863, g3 = Math.min(n, i.length - 1), _3 = Math.max(0, n - v2.length + 1);_3 <= g3; _3++) {
            var A2 = n - _3 | 0;
            s2 = v2.words[A2] | 0, u3 = i.words[_3] | 0, c2 = s2 * u3 + w, d3 += c2 / 67108864 | 0, w = c2 & 67108863;
          }
          a3.words[n] = w | 0, l2 = d3 | 0;
        }
        return l2 !== 0 ? a3.words[n] = l2 | 0 : a3.length--, a3.strip();
      }
      var L3 = function(i, a3, h3) {
        var s2 = i.words, u3 = a3.words, c2 = h3.words, b3 = 0, l2, n, d3, w = s2[0] | 0, g3 = w & 8191, _3 = w >>> 13, A2 = s2[1] | 0, R2 = A2 & 8191, I3 = A2 >>> 13, Me = s2[2] | 0, k3 = Me & 8191, D2 = Me >>> 13, nt2 = s2[3] | 0, C = nt2 & 8191, O4 = nt2 >>> 13, vt = s2[4] | 0, F = vt & 8191, U4 = vt >>> 13, bt2 = s2[5] | 0, z = bt2 & 8191, H2 = bt2 >>> 13, mt2 = s2[6] | 0, W = mt2 & 8191, K2 = mt2 >>> 13, gt4 = s2[7] | 0, j3 = gt4 & 8191, Z2 = gt4 >>> 13, yt2 = s2[8] | 0, V3 = yt2 & 8191, $2 = yt2 >>> 13, wt2 = s2[9] | 0, G3 = wt2 & 8191, Y2 = wt2 >>> 13, Mt = u3[0] | 0, X3 = Mt & 8191, J2 = Mt >>> 13, _t3 = u3[1] | 0, Q2 = _t3 & 8191, ee = _t3 >>> 13, xt = u3[2] | 0, te = xt & 8191, re = xt >>> 13, St = u3[3] | 0, ie2 = St & 8191, ne2 = St >>> 13, Et = u3[4] | 0, fe = Et & 8191, ae = Et >>> 13, At2 = u3[5] | 0, oe = At2 & 8191, se = At2 >>> 13, Rt = u3[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt2 = u3[7] | 0, le = Bt2 & 8191, de = Bt2 >>> 13, qt = u3[8] | 0, ce2 = qt & 8191, pe = qt >>> 13, It = u3[9] | 0, ve = It & 8191, be2 = It >>> 13;
        h3.negative = i.negative ^ a3.negative, h3.length = 19, l2 = Math.imul(g3, X3), n = Math.imul(g3, J2), n = n + Math.imul(_3, X3) | 0, d3 = Math.imul(_3, J2);
        var ft = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l2 = Math.imul(R2, X3), n = Math.imul(R2, J2), n = n + Math.imul(I3, X3) | 0, d3 = Math.imul(I3, J2), l2 = l2 + Math.imul(g3, Q2) | 0, n = n + Math.imul(g3, ee) | 0, n = n + Math.imul(_3, Q2) | 0, d3 = d3 + Math.imul(_3, ee) | 0;
        var Be = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l2 = Math.imul(k3, X3), n = Math.imul(k3, J2), n = n + Math.imul(D2, X3) | 0, d3 = Math.imul(D2, J2), l2 = l2 + Math.imul(R2, Q2) | 0, n = n + Math.imul(R2, ee) | 0, n = n + Math.imul(I3, Q2) | 0, d3 = d3 + Math.imul(I3, ee) | 0, l2 = l2 + Math.imul(g3, te) | 0, n = n + Math.imul(g3, re) | 0, n = n + Math.imul(_3, te) | 0, d3 = d3 + Math.imul(_3, re) | 0;
        var qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l2 = Math.imul(C, X3), n = Math.imul(C, J2), n = n + Math.imul(O4, X3) | 0, d3 = Math.imul(O4, J2), l2 = l2 + Math.imul(k3, Q2) | 0, n = n + Math.imul(k3, ee) | 0, n = n + Math.imul(D2, Q2) | 0, d3 = d3 + Math.imul(D2, ee) | 0, l2 = l2 + Math.imul(R2, te) | 0, n = n + Math.imul(R2, re) | 0, n = n + Math.imul(I3, te) | 0, d3 = d3 + Math.imul(I3, re) | 0, l2 = l2 + Math.imul(g3, ie2) | 0, n = n + Math.imul(g3, ne2) | 0, n = n + Math.imul(_3, ie2) | 0, d3 = d3 + Math.imul(_3, ne2) | 0;
        var ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l2 = Math.imul(F, X3), n = Math.imul(F, J2), n = n + Math.imul(U4, X3) | 0, d3 = Math.imul(U4, J2), l2 = l2 + Math.imul(C, Q2) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O4, Q2) | 0, d3 = d3 + Math.imul(O4, ee) | 0, l2 = l2 + Math.imul(k3, te) | 0, n = n + Math.imul(k3, re) | 0, n = n + Math.imul(D2, te) | 0, d3 = d3 + Math.imul(D2, re) | 0, l2 = l2 + Math.imul(R2, ie2) | 0, n = n + Math.imul(R2, ne2) | 0, n = n + Math.imul(I3, ie2) | 0, d3 = d3 + Math.imul(I3, ne2) | 0, l2 = l2 + Math.imul(g3, fe) | 0, n = n + Math.imul(g3, ae) | 0, n = n + Math.imul(_3, fe) | 0, d3 = d3 + Math.imul(_3, ae) | 0;
        var He2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (He2 >>> 26) | 0, He2 &= 67108863, l2 = Math.imul(z, X3), n = Math.imul(z, J2), n = n + Math.imul(H2, X3) | 0, d3 = Math.imul(H2, J2), l2 = l2 + Math.imul(F, Q2) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U4, Q2) | 0, d3 = d3 + Math.imul(U4, ee) | 0, l2 = l2 + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O4, te) | 0, d3 = d3 + Math.imul(O4, re) | 0, l2 = l2 + Math.imul(k3, ie2) | 0, n = n + Math.imul(k3, ne2) | 0, n = n + Math.imul(D2, ie2) | 0, d3 = d3 + Math.imul(D2, ne2) | 0, l2 = l2 + Math.imul(R2, fe) | 0, n = n + Math.imul(R2, ae) | 0, n = n + Math.imul(I3, fe) | 0, d3 = d3 + Math.imul(I3, ae) | 0, l2 = l2 + Math.imul(g3, oe) | 0, n = n + Math.imul(g3, se) | 0, n = n + Math.imul(_3, oe) | 0, d3 = d3 + Math.imul(_3, se) | 0;
        var We = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l2 = Math.imul(W, X3), n = Math.imul(W, J2), n = n + Math.imul(K2, X3) | 0, d3 = Math.imul(K2, J2), l2 = l2 + Math.imul(z, Q2) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H2, Q2) | 0, d3 = d3 + Math.imul(H2, ee) | 0, l2 = l2 + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U4, te) | 0, d3 = d3 + Math.imul(U4, re) | 0, l2 = l2 + Math.imul(C, ie2) | 0, n = n + Math.imul(C, ne2) | 0, n = n + Math.imul(O4, ie2) | 0, d3 = d3 + Math.imul(O4, ne2) | 0, l2 = l2 + Math.imul(k3, fe) | 0, n = n + Math.imul(k3, ae) | 0, n = n + Math.imul(D2, fe) | 0, d3 = d3 + Math.imul(D2, ae) | 0, l2 = l2 + Math.imul(R2, oe) | 0, n = n + Math.imul(R2, se) | 0, n = n + Math.imul(I3, oe) | 0, d3 = d3 + Math.imul(I3, se) | 0, l2 = l2 + Math.imul(g3, he) | 0, n = n + Math.imul(g3, ue) | 0, n = n + Math.imul(_3, he) | 0, d3 = d3 + Math.imul(_3, ue) | 0;
        var Ke = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l2 = Math.imul(j3, X3), n = Math.imul(j3, J2), n = n + Math.imul(Z2, X3) | 0, d3 = Math.imul(Z2, J2), l2 = l2 + Math.imul(W, Q2) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K2, Q2) | 0, d3 = d3 + Math.imul(K2, ee) | 0, l2 = l2 + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H2, te) | 0, d3 = d3 + Math.imul(H2, re) | 0, l2 = l2 + Math.imul(F, ie2) | 0, n = n + Math.imul(F, ne2) | 0, n = n + Math.imul(U4, ie2) | 0, d3 = d3 + Math.imul(U4, ne2) | 0, l2 = l2 + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O4, fe) | 0, d3 = d3 + Math.imul(O4, ae) | 0, l2 = l2 + Math.imul(k3, oe) | 0, n = n + Math.imul(k3, se) | 0, n = n + Math.imul(D2, oe) | 0, d3 = d3 + Math.imul(D2, se) | 0, l2 = l2 + Math.imul(R2, he) | 0, n = n + Math.imul(R2, ue) | 0, n = n + Math.imul(I3, he) | 0, d3 = d3 + Math.imul(I3, ue) | 0, l2 = l2 + Math.imul(g3, le) | 0, n = n + Math.imul(g3, de) | 0, n = n + Math.imul(_3, le) | 0, d3 = d3 + Math.imul(_3, de) | 0;
        var je = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l2 = Math.imul(V3, X3), n = Math.imul(V3, J2), n = n + Math.imul($2, X3) | 0, d3 = Math.imul($2, J2), l2 = l2 + Math.imul(j3, Q2) | 0, n = n + Math.imul(j3, ee) | 0, n = n + Math.imul(Z2, Q2) | 0, d3 = d3 + Math.imul(Z2, ee) | 0, l2 = l2 + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K2, te) | 0, d3 = d3 + Math.imul(K2, re) | 0, l2 = l2 + Math.imul(z, ie2) | 0, n = n + Math.imul(z, ne2) | 0, n = n + Math.imul(H2, ie2) | 0, d3 = d3 + Math.imul(H2, ne2) | 0, l2 = l2 + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U4, fe) | 0, d3 = d3 + Math.imul(U4, ae) | 0, l2 = l2 + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O4, oe) | 0, d3 = d3 + Math.imul(O4, se) | 0, l2 = l2 + Math.imul(k3, he) | 0, n = n + Math.imul(k3, ue) | 0, n = n + Math.imul(D2, he) | 0, d3 = d3 + Math.imul(D2, ue) | 0, l2 = l2 + Math.imul(R2, le) | 0, n = n + Math.imul(R2, de) | 0, n = n + Math.imul(I3, le) | 0, d3 = d3 + Math.imul(I3, de) | 0, l2 = l2 + Math.imul(g3, ce2) | 0, n = n + Math.imul(g3, pe) | 0, n = n + Math.imul(_3, ce2) | 0, d3 = d3 + Math.imul(_3, pe) | 0;
        var Ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l2 = Math.imul(G3, X3), n = Math.imul(G3, J2), n = n + Math.imul(Y2, X3) | 0, d3 = Math.imul(Y2, J2), l2 = l2 + Math.imul(V3, Q2) | 0, n = n + Math.imul(V3, ee) | 0, n = n + Math.imul($2, Q2) | 0, d3 = d3 + Math.imul($2, ee) | 0, l2 = l2 + Math.imul(j3, te) | 0, n = n + Math.imul(j3, re) | 0, n = n + Math.imul(Z2, te) | 0, d3 = d3 + Math.imul(Z2, re) | 0, l2 = l2 + Math.imul(W, ie2) | 0, n = n + Math.imul(W, ne2) | 0, n = n + Math.imul(K2, ie2) | 0, d3 = d3 + Math.imul(K2, ne2) | 0, l2 = l2 + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H2, fe) | 0, d3 = d3 + Math.imul(H2, ae) | 0, l2 = l2 + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U4, oe) | 0, d3 = d3 + Math.imul(U4, se) | 0, l2 = l2 + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O4, he) | 0, d3 = d3 + Math.imul(O4, ue) | 0, l2 = l2 + Math.imul(k3, le) | 0, n = n + Math.imul(k3, de) | 0, n = n + Math.imul(D2, le) | 0, d3 = d3 + Math.imul(D2, de) | 0, l2 = l2 + Math.imul(R2, ce2) | 0, n = n + Math.imul(R2, pe) | 0, n = n + Math.imul(I3, ce2) | 0, d3 = d3 + Math.imul(I3, pe) | 0, l2 = l2 + Math.imul(g3, ve) | 0, n = n + Math.imul(g3, be2) | 0, n = n + Math.imul(_3, ve) | 0, d3 = d3 + Math.imul(_3, be2) | 0;
        var Ve = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l2 = Math.imul(G3, Q2), n = Math.imul(G3, ee), n = n + Math.imul(Y2, Q2) | 0, d3 = Math.imul(Y2, ee), l2 = l2 + Math.imul(V3, te) | 0, n = n + Math.imul(V3, re) | 0, n = n + Math.imul($2, te) | 0, d3 = d3 + Math.imul($2, re) | 0, l2 = l2 + Math.imul(j3, ie2) | 0, n = n + Math.imul(j3, ne2) | 0, n = n + Math.imul(Z2, ie2) | 0, d3 = d3 + Math.imul(Z2, ne2) | 0, l2 = l2 + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K2, fe) | 0, d3 = d3 + Math.imul(K2, ae) | 0, l2 = l2 + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H2, oe) | 0, d3 = d3 + Math.imul(H2, se) | 0, l2 = l2 + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U4, he) | 0, d3 = d3 + Math.imul(U4, ue) | 0, l2 = l2 + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O4, le) | 0, d3 = d3 + Math.imul(O4, de) | 0, l2 = l2 + Math.imul(k3, ce2) | 0, n = n + Math.imul(k3, pe) | 0, n = n + Math.imul(D2, ce2) | 0, d3 = d3 + Math.imul(D2, pe) | 0, l2 = l2 + Math.imul(R2, ve) | 0, n = n + Math.imul(R2, be2) | 0, n = n + Math.imul(I3, ve) | 0, d3 = d3 + Math.imul(I3, be2) | 0;
        var $e2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + ($e2 >>> 26) | 0, $e2 &= 67108863, l2 = Math.imul(G3, te), n = Math.imul(G3, re), n = n + Math.imul(Y2, te) | 0, d3 = Math.imul(Y2, re), l2 = l2 + Math.imul(V3, ie2) | 0, n = n + Math.imul(V3, ne2) | 0, n = n + Math.imul($2, ie2) | 0, d3 = d3 + Math.imul($2, ne2) | 0, l2 = l2 + Math.imul(j3, fe) | 0, n = n + Math.imul(j3, ae) | 0, n = n + Math.imul(Z2, fe) | 0, d3 = d3 + Math.imul(Z2, ae) | 0, l2 = l2 + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K2, oe) | 0, d3 = d3 + Math.imul(K2, se) | 0, l2 = l2 + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H2, he) | 0, d3 = d3 + Math.imul(H2, ue) | 0, l2 = l2 + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U4, le) | 0, d3 = d3 + Math.imul(U4, de) | 0, l2 = l2 + Math.imul(C, ce2) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O4, ce2) | 0, d3 = d3 + Math.imul(O4, pe) | 0, l2 = l2 + Math.imul(k3, ve) | 0, n = n + Math.imul(k3, be2) | 0, n = n + Math.imul(D2, ve) | 0, d3 = d3 + Math.imul(D2, be2) | 0;
        var Ge2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ge2 >>> 26) | 0, Ge2 &= 67108863, l2 = Math.imul(G3, ie2), n = Math.imul(G3, ne2), n = n + Math.imul(Y2, ie2) | 0, d3 = Math.imul(Y2, ne2), l2 = l2 + Math.imul(V3, fe) | 0, n = n + Math.imul(V3, ae) | 0, n = n + Math.imul($2, fe) | 0, d3 = d3 + Math.imul($2, ae) | 0, l2 = l2 + Math.imul(j3, oe) | 0, n = n + Math.imul(j3, se) | 0, n = n + Math.imul(Z2, oe) | 0, d3 = d3 + Math.imul(Z2, se) | 0, l2 = l2 + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K2, he) | 0, d3 = d3 + Math.imul(K2, ue) | 0, l2 = l2 + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H2, le) | 0, d3 = d3 + Math.imul(H2, de) | 0, l2 = l2 + Math.imul(F, ce2) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U4, ce2) | 0, d3 = d3 + Math.imul(U4, pe) | 0, l2 = l2 + Math.imul(C, ve) | 0, n = n + Math.imul(C, be2) | 0, n = n + Math.imul(O4, ve) | 0, d3 = d3 + Math.imul(O4, be2) | 0;
        var Ye = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l2 = Math.imul(G3, fe), n = Math.imul(G3, ae), n = n + Math.imul(Y2, fe) | 0, d3 = Math.imul(Y2, ae), l2 = l2 + Math.imul(V3, oe) | 0, n = n + Math.imul(V3, se) | 0, n = n + Math.imul($2, oe) | 0, d3 = d3 + Math.imul($2, se) | 0, l2 = l2 + Math.imul(j3, he) | 0, n = n + Math.imul(j3, ue) | 0, n = n + Math.imul(Z2, he) | 0, d3 = d3 + Math.imul(Z2, ue) | 0, l2 = l2 + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K2, le) | 0, d3 = d3 + Math.imul(K2, de) | 0, l2 = l2 + Math.imul(z, ce2) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H2, ce2) | 0, d3 = d3 + Math.imul(H2, pe) | 0, l2 = l2 + Math.imul(F, ve) | 0, n = n + Math.imul(F, be2) | 0, n = n + Math.imul(U4, ve) | 0, d3 = d3 + Math.imul(U4, be2) | 0;
        var Xe2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Xe2 >>> 26) | 0, Xe2 &= 67108863, l2 = Math.imul(G3, oe), n = Math.imul(G3, se), n = n + Math.imul(Y2, oe) | 0, d3 = Math.imul(Y2, se), l2 = l2 + Math.imul(V3, he) | 0, n = n + Math.imul(V3, ue) | 0, n = n + Math.imul($2, he) | 0, d3 = d3 + Math.imul($2, ue) | 0, l2 = l2 + Math.imul(j3, le) | 0, n = n + Math.imul(j3, de) | 0, n = n + Math.imul(Z2, le) | 0, d3 = d3 + Math.imul(Z2, de) | 0, l2 = l2 + Math.imul(W, ce2) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K2, ce2) | 0, d3 = d3 + Math.imul(K2, pe) | 0, l2 = l2 + Math.imul(z, ve) | 0, n = n + Math.imul(z, be2) | 0, n = n + Math.imul(H2, ve) | 0, d3 = d3 + Math.imul(H2, be2) | 0;
        var Je2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Je2 >>> 26) | 0, Je2 &= 67108863, l2 = Math.imul(G3, he), n = Math.imul(G3, ue), n = n + Math.imul(Y2, he) | 0, d3 = Math.imul(Y2, ue), l2 = l2 + Math.imul(V3, le) | 0, n = n + Math.imul(V3, de) | 0, n = n + Math.imul($2, le) | 0, d3 = d3 + Math.imul($2, de) | 0, l2 = l2 + Math.imul(j3, ce2) | 0, n = n + Math.imul(j3, pe) | 0, n = n + Math.imul(Z2, ce2) | 0, d3 = d3 + Math.imul(Z2, pe) | 0, l2 = l2 + Math.imul(W, ve) | 0, n = n + Math.imul(W, be2) | 0, n = n + Math.imul(K2, ve) | 0, d3 = d3 + Math.imul(K2, be2) | 0;
        var Qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l2 = Math.imul(G3, le), n = Math.imul(G3, de), n = n + Math.imul(Y2, le) | 0, d3 = Math.imul(Y2, de), l2 = l2 + Math.imul(V3, ce2) | 0, n = n + Math.imul(V3, pe) | 0, n = n + Math.imul($2, ce2) | 0, d3 = d3 + Math.imul($2, pe) | 0, l2 = l2 + Math.imul(j3, ve) | 0, n = n + Math.imul(j3, be2) | 0, n = n + Math.imul(Z2, ve) | 0, d3 = d3 + Math.imul(Z2, be2) | 0;
        var et2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (et2 >>> 26) | 0, et2 &= 67108863, l2 = Math.imul(G3, ce2), n = Math.imul(G3, pe), n = n + Math.imul(Y2, ce2) | 0, d3 = Math.imul(Y2, pe), l2 = l2 + Math.imul(V3, ve) | 0, n = n + Math.imul(V3, be2) | 0, n = n + Math.imul($2, ve) | 0, d3 = d3 + Math.imul($2, be2) | 0;
        var tt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (tt2 >>> 26) | 0, tt2 &= 67108863, l2 = Math.imul(G3, ve), n = Math.imul(G3, be2), n = n + Math.imul(Y2, ve) | 0, d3 = Math.imul(Y2, be2);
        var rt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        return b3 = (d3 + (n >>> 13) | 0) + (rt2 >>> 26) | 0, rt2 &= 67108863, c2[0] = ft, c2[1] = Be, c2[2] = qe, c2[3] = ze, c2[4] = He2, c2[5] = We, c2[6] = Ke, c2[7] = je, c2[8] = Ze, c2[9] = Ve, c2[10] = $e2, c2[11] = Ge2, c2[12] = Ye, c2[13] = Xe2, c2[14] = Je2, c2[15] = Qe, c2[16] = et2, c2[17] = tt2, c2[18] = rt2, b3 !== 0 && (c2[19] = b3, h3.length++), h3;
      };
      Math.imul || (L3 = q2);
      function ge2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative, a3.length = v2.length + i.length;
        for (var h3 = 0, s2 = 0, u3 = 0;u3 < a3.length - 1; u3++) {
          var c2 = s2;
          s2 = 0;
          for (var b3 = h3 & 67108863, l2 = Math.min(u3, i.length - 1), n = Math.max(0, u3 - v2.length + 1);n <= l2; n++) {
            var d3 = u3 - n, w = v2.words[d3] | 0, g3 = i.words[n] | 0, _3 = w * g3, A2 = _3 & 67108863;
            c2 = c2 + (_3 / 67108864 | 0) | 0, A2 = A2 + b3 | 0, b3 = A2 & 67108863, c2 = c2 + (A2 >>> 26) | 0, s2 += c2 >>> 26, c2 &= 67108863;
          }
          a3.words[u3] = b3, h3 = c2, c2 = s2;
        }
        return h3 !== 0 ? a3.words[u3] = h3 : a3.length--, a3.strip();
      }
      function _e(v2, i, a3) {
        var h3 = new N3;
        return h3.mulp(v2, i, a3);
      }
      f3.prototype.mulTo = function(i, a3) {
        var h3, s2 = this.length + i.length;
        return this.length === 10 && i.length === 10 ? h3 = L3(this, i, a3) : s2 < 63 ? h3 = q2(this, i, a3) : s2 < 1024 ? h3 = ge2(this, i, a3) : h3 = _e(this, i, a3), h3;
      };
      function N3(v2, i) {
        this.x = v2, this.y = i;
      }
      N3.prototype.makeRBT = function(i) {
        for (var a3 = new Array(i), h3 = f3.prototype._countBits(i) - 1, s2 = 0;s2 < i; s2++)
          a3[s2] = this.revBin(s2, h3, i);
        return a3;
      }, N3.prototype.revBin = function(i, a3, h3) {
        if (i === 0 || i === h3 - 1)
          return i;
        for (var s2 = 0, u3 = 0;u3 < a3; u3++)
          s2 |= (i & 1) << a3 - u3 - 1, i >>= 1;
        return s2;
      }, N3.prototype.permute = function(i, a3, h3, s2, u3, c2) {
        for (var b3 = 0;b3 < c2; b3++)
          s2[b3] = a3[i[b3]], u3[b3] = h3[i[b3]];
      }, N3.prototype.transform = function(i, a3, h3, s2, u3, c2) {
        this.permute(c2, i, a3, h3, s2, u3);
        for (var b3 = 1;b3 < u3; b3 <<= 1)
          for (var l2 = b3 << 1, n = Math.cos(2 * Math.PI / l2), d3 = Math.sin(2 * Math.PI / l2), w = 0;w < u3; w += l2)
            for (var g3 = n, _3 = d3, A2 = 0;A2 < b3; A2++) {
              var R2 = h3[w + A2], I3 = s2[w + A2], Me = h3[w + A2 + b3], k3 = s2[w + A2 + b3], D2 = g3 * Me - _3 * k3;
              k3 = g3 * k3 + _3 * Me, Me = D2, h3[w + A2] = R2 + Me, s2[w + A2] = I3 + k3, h3[w + A2 + b3] = R2 - Me, s2[w + A2 + b3] = I3 - k3, A2 !== l2 && (D2 = n * g3 - d3 * _3, _3 = n * _3 + d3 * g3, g3 = D2);
            }
      }, N3.prototype.guessLen13b = function(i, a3) {
        var h3 = Math.max(a3, i) | 1, s2 = h3 & 1, u3 = 0;
        for (h3 = h3 / 2 | 0;h3; h3 = h3 >>> 1)
          u3++;
        return 1 << u3 + 1 + s2;
      }, N3.prototype.conjugate = function(i, a3, h3) {
        if (!(h3 <= 1))
          for (var s2 = 0;s2 < h3 / 2; s2++) {
            var u3 = i[s2];
            i[s2] = i[h3 - s2 - 1], i[h3 - s2 - 1] = u3, u3 = a3[s2], a3[s2] = -a3[h3 - s2 - 1], a3[h3 - s2 - 1] = -u3;
          }
      }, N3.prototype.normalize13b = function(i, a3) {
        for (var h3 = 0, s2 = 0;s2 < a3 / 2; s2++) {
          var u3 = Math.round(i[2 * s2 + 1] / a3) * 8192 + Math.round(i[2 * s2] / a3) + h3;
          i[s2] = u3 & 67108863, u3 < 67108864 ? h3 = 0 : h3 = u3 / 67108864 | 0;
        }
        return i;
      }, N3.prototype.convert13b = function(i, a3, h3, s2) {
        for (var u3 = 0, c2 = 0;c2 < a3; c2++)
          u3 = u3 + (i[c2] | 0), h3[2 * c2] = u3 & 8191, u3 = u3 >>> 13, h3[2 * c2 + 1] = u3 & 8191, u3 = u3 >>> 13;
        for (c2 = 2 * a3;c2 < s2; ++c2)
          h3[c2] = 0;
        r(u3 === 0), r((u3 & -8192) === 0);
      }, N3.prototype.stub = function(i) {
        for (var a3 = new Array(i), h3 = 0;h3 < i; h3++)
          a3[h3] = 0;
        return a3;
      }, N3.prototype.mulp = function(i, a3, h3) {
        var s2 = 2 * this.guessLen13b(i.length, a3.length), u3 = this.makeRBT(s2), c2 = this.stub(s2), b3 = new Array(s2), l2 = new Array(s2), n = new Array(s2), d3 = new Array(s2), w = new Array(s2), g3 = new Array(s2), _3 = h3.words;
        _3.length = s2, this.convert13b(i.words, i.length, b3, s2), this.convert13b(a3.words, a3.length, d3, s2), this.transform(b3, c2, l2, n, s2, u3), this.transform(d3, c2, w, g3, s2, u3);
        for (var A2 = 0;A2 < s2; A2++) {
          var R2 = l2[A2] * w[A2] - n[A2] * g3[A2];
          n[A2] = l2[A2] * g3[A2] + n[A2] * w[A2], l2[A2] = R2;
        }
        return this.conjugate(l2, n, s2), this.transform(l2, n, _3, c2, s2, u3), this.conjugate(_3, c2, s2), this.normalize13b(_3, s2), h3.negative = i.negative ^ a3.negative, h3.length = i.length + a3.length, h3.strip();
      }, f3.prototype.mul = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), this.mulTo(i, a3);
      }, f3.prototype.mulf = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), _e(this, i, a3);
      }, f3.prototype.imul = function(i) {
        return this.clone().mulTo(i, this);
      }, f3.prototype.imuln = function(i) {
        r(typeof i == "number"), r(i < 67108864);
        for (var a3 = 0, h3 = 0;h3 < this.length; h3++) {
          var s2 = (this.words[h3] | 0) * i, u3 = (s2 & 67108863) + (a3 & 67108863);
          a3 >>= 26, a3 += s2 / 67108864 | 0, a3 += u3 >>> 26, this.words[h3] = u3 & 67108863;
        }
        return a3 !== 0 && (this.words[h3] = a3, this.length++), this;
      }, f3.prototype.muln = function(i) {
        return this.clone().imuln(i);
      }, f3.prototype.sqr = function() {
        return this.mul(this);
      }, f3.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f3.prototype.pow = function(i) {
        var a3 = B3(i);
        if (a3.length === 0)
          return new f3(1);
        for (var h3 = this, s2 = 0;s2 < a3.length && a3[s2] === 0; s2++, h3 = h3.sqr())
          ;
        if (++s2 < a3.length)
          for (var u3 = h3.sqr();s2 < a3.length; s2++, u3 = u3.sqr())
            a3[s2] !== 0 && (h3 = h3.mul(u3));
        return h3;
      }, f3.prototype.iushln = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 67108863 >>> 26 - a3 << 26 - a3, u3;
        if (a3 !== 0) {
          var c2 = 0;
          for (u3 = 0;u3 < this.length; u3++) {
            var b3 = this.words[u3] & s2, l2 = (this.words[u3] | 0) - b3 << a3;
            this.words[u3] = l2 | c2, c2 = b3 >>> 26 - a3;
          }
          c2 && (this.words[u3] = c2, this.length++);
        }
        if (h3 !== 0) {
          for (u3 = this.length - 1;u3 >= 0; u3--)
            this.words[u3 + h3] = this.words[u3];
          for (u3 = 0;u3 < h3; u3++)
            this.words[u3] = 0;
          this.length += h3;
        }
        return this.strip();
      }, f3.prototype.ishln = function(i) {
        return r(this.negative === 0), this.iushln(i);
      }, f3.prototype.iushrn = function(i, a3, h3) {
        r(typeof i == "number" && i >= 0);
        var s2;
        a3 ? s2 = (a3 - a3 % 26) / 26 : s2 = 0;
        var u3 = i % 26, c2 = Math.min((i - u3) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u3 << u3, l2 = h3;
        if (s2 -= c2, s2 = Math.max(0, s2), l2) {
          for (var n = 0;n < c2; n++)
            l2.words[n] = this.words[n];
          l2.length = c2;
        }
        if (c2 !== 0)
          if (this.length > c2)
            for (this.length -= c2, n = 0;n < this.length; n++)
              this.words[n] = this.words[n + c2];
          else
            this.words[0] = 0, this.length = 1;
        var d3 = 0;
        for (n = this.length - 1;n >= 0 && (d3 !== 0 || n >= s2); n--) {
          var w = this.words[n] | 0;
          this.words[n] = d3 << 26 - u3 | w >>> u3, d3 = w & b3;
        }
        return l2 && d3 !== 0 && (l2.words[l2.length++] = d3), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f3.prototype.ishrn = function(i, a3, h3) {
        return r(this.negative === 0), this.iushrn(i, a3, h3);
      }, f3.prototype.shln = function(i) {
        return this.clone().ishln(i);
      }, f3.prototype.ushln = function(i) {
        return this.clone().iushln(i);
      }, f3.prototype.shrn = function(i) {
        return this.clone().ishrn(i);
      }, f3.prototype.ushrn = function(i) {
        return this.clone().iushrn(i);
      }, f3.prototype.testn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return false;
        var u3 = this.words[h3];
        return !!(u3 & s2);
      }, f3.prototype.imaskn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26;
        if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h3)
          return this;
        if (a3 !== 0 && h3++, this.length = Math.min(h3, this.length), a3 !== 0) {
          var s2 = 67108863 ^ 67108863 >>> a3 << a3;
          this.words[this.length - 1] &= s2;
        }
        return this.strip();
      }, f3.prototype.maskn = function(i) {
        return this.clone().imaskn(i);
      }, f3.prototype.iaddn = function(i) {
        return r(typeof i == "number"), r(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
      }, f3.prototype._iaddn = function(i) {
        this.words[0] += i;
        for (var a3 = 0;a3 < this.length && this.words[a3] >= 67108864; a3++)
          this.words[a3] -= 67108864, a3 === this.length - 1 ? this.words[a3 + 1] = 1 : this.words[a3 + 1]++;
        return this.length = Math.max(this.length, a3 + 1), this;
      }, f3.prototype.isubn = function(i) {
        if (r(typeof i == "number"), r(i < 67108864), i < 0)
          return this.iaddn(-i);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i), this.negative = 1, this;
        if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a3 = 0;a3 < this.length && this.words[a3] < 0; a3++)
            this.words[a3] += 67108864, this.words[a3 + 1] -= 1;
        return this.strip();
      }, f3.prototype.addn = function(i) {
        return this.clone().iaddn(i);
      }, f3.prototype.subn = function(i) {
        return this.clone().isubn(i);
      }, f3.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f3.prototype.abs = function() {
        return this.clone().iabs();
      }, f3.prototype._ishlnsubmul = function(i, a3, h3) {
        var s2 = i.length + h3, u3;
        this._expand(s2);
        var c2, b3 = 0;
        for (u3 = 0;u3 < i.length; u3++) {
          c2 = (this.words[u3 + h3] | 0) + b3;
          var l2 = (i.words[u3] | 0) * a3;
          c2 -= l2 & 67108863, b3 = (c2 >> 26) - (l2 / 67108864 | 0), this.words[u3 + h3] = c2 & 67108863;
        }
        for (;u3 < this.length - h3; u3++)
          c2 = (this.words[u3 + h3] | 0) + b3, b3 = c2 >> 26, this.words[u3 + h3] = c2 & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r(b3 === -1), b3 = 0, u3 = 0;u3 < this.length; u3++)
          c2 = -(this.words[u3] | 0) + b3, b3 = c2 >> 26, this.words[u3] = c2 & 67108863;
        return this.negative = 1, this.strip();
      }, f3.prototype._wordDiv = function(i, a3) {
        var h3 = this.length - i.length, s2 = this.clone(), u3 = i, c2 = u3.words[u3.length - 1] | 0, b3 = this._countBits(c2);
        h3 = 26 - b3, h3 !== 0 && (u3 = u3.ushln(h3), s2.iushln(h3), c2 = u3.words[u3.length - 1] | 0);
        var l2 = s2.length - u3.length, n;
        if (a3 !== "mod") {
          n = new f3(null), n.length = l2 + 1, n.words = new Array(n.length);
          for (var d3 = 0;d3 < n.length; d3++)
            n.words[d3] = 0;
        }
        var w = s2.clone()._ishlnsubmul(u3, 1, l2);
        w.negative === 0 && (s2 = w, n && (n.words[l2] = 1));
        for (var g3 = l2 - 1;g3 >= 0; g3--) {
          var _3 = (s2.words[u3.length + g3] | 0) * 67108864 + (s2.words[u3.length + g3 - 1] | 0);
          for (_3 = Math.min(_3 / c2 | 0, 67108863), s2._ishlnsubmul(u3, _3, g3);s2.negative !== 0; )
            _3--, s2.negative = 0, s2._ishlnsubmul(u3, 1, g3), s2.isZero() || (s2.negative ^= 1);
          n && (n.words[g3] = _3);
        }
        return n && n.strip(), s2.strip(), a3 !== "div" && h3 !== 0 && s2.iushrn(h3), { div: n || null, mod: s2 };
      }, f3.prototype.divmod = function(i, a3, h3) {
        if (r(!i.isZero()), this.isZero())
          return { div: new f3(0), mod: new f3(0) };
        var s2, u3, c2;
        return this.negative !== 0 && i.negative === 0 ? (c2 = this.neg().divmod(i, a3), a3 !== "mod" && (s2 = c2.div.neg()), a3 !== "div" && (u3 = c2.mod.neg(), h3 && u3.negative !== 0 && u3.iadd(i)), { div: s2, mod: u3 }) : this.negative === 0 && i.negative !== 0 ? (c2 = this.divmod(i.neg(), a3), a3 !== "mod" && (s2 = c2.div.neg()), { div: s2, mod: c2.mod }) : (this.negative & i.negative) !== 0 ? (c2 = this.neg().divmod(i.neg(), a3), a3 !== "div" && (u3 = c2.mod.neg(), h3 && u3.negative !== 0 && u3.isub(i)), { div: c2.div, mod: u3 }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f3(0), mod: this } : i.length === 1 ? a3 === "div" ? { div: this.divn(i.words[0]), mod: null } : a3 === "mod" ? { div: null, mod: new f3(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f3(this.modn(i.words[0])) } : this._wordDiv(i, a3);
      }, f3.prototype.div = function(i) {
        return this.divmod(i, "div", false).div;
      }, f3.prototype.mod = function(i) {
        return this.divmod(i, "mod", false).mod;
      }, f3.prototype.umod = function(i) {
        return this.divmod(i, "mod", true).mod;
      }, f3.prototype.divRound = function(i) {
        var a3 = this.divmod(i);
        if (a3.mod.isZero())
          return a3.div;
        var h3 = a3.div.negative !== 0 ? a3.mod.isub(i) : a3.mod, s2 = i.ushrn(1), u3 = i.andln(1), c2 = h3.cmp(s2);
        return c2 < 0 || u3 === 1 && c2 === 0 ? a3.div : a3.div.negative !== 0 ? a3.div.isubn(1) : a3.div.iaddn(1);
      }, f3.prototype.modn = function(i) {
        r(i <= 67108863);
        for (var a3 = (1 << 26) % i, h3 = 0, s2 = this.length - 1;s2 >= 0; s2--)
          h3 = (a3 * h3 + (this.words[s2] | 0)) % i;
        return h3;
      }, f3.prototype.idivn = function(i) {
        r(i <= 67108863);
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = (this.words[h3] | 0) + a3 * 67108864;
          this.words[h3] = s2 / i | 0, a3 = s2 % i;
        }
        return this.strip();
      }, f3.prototype.divn = function(i) {
        return this.clone().idivn(i);
      }, f3.prototype.egcd = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c2 = new f3(0), b3 = new f3(1), l2 = 0;a3.isEven() && h3.isEven(); )
          a3.iushrn(1), h3.iushrn(1), ++l2;
        for (var n = h3.clone(), d3 = a3.clone();!a3.isZero(); ) {
          for (var w = 0, g3 = 1;(a3.words[0] & g3) === 0 && w < 26; ++w, g3 <<= 1)
            ;
          if (w > 0)
            for (a3.iushrn(w);w-- > 0; )
              (s2.isOdd() || u3.isOdd()) && (s2.iadd(n), u3.isub(d3)), s2.iushrn(1), u3.iushrn(1);
          for (var _3 = 0, A2 = 1;(h3.words[0] & A2) === 0 && _3 < 26; ++_3, A2 <<= 1)
            ;
          if (_3 > 0)
            for (h3.iushrn(_3);_3-- > 0; )
              (c2.isOdd() || b3.isOdd()) && (c2.iadd(n), b3.isub(d3)), c2.iushrn(1), b3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(c2), u3.isub(b3)) : (h3.isub(a3), c2.isub(s2), b3.isub(u3));
        }
        return { a: c2, b: b3, gcd: h3.iushln(l2) };
      }, f3.prototype._invmp = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c2 = h3.clone();a3.cmpn(1) > 0 && h3.cmpn(1) > 0; ) {
          for (var b3 = 0, l2 = 1;(a3.words[0] & l2) === 0 && b3 < 26; ++b3, l2 <<= 1)
            ;
          if (b3 > 0)
            for (a3.iushrn(b3);b3-- > 0; )
              s2.isOdd() && s2.iadd(c2), s2.iushrn(1);
          for (var n = 0, d3 = 1;(h3.words[0] & d3) === 0 && n < 26; ++n, d3 <<= 1)
            ;
          if (n > 0)
            for (h3.iushrn(n);n-- > 0; )
              u3.isOdd() && u3.iadd(c2), u3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(u3)) : (h3.isub(a3), u3.isub(s2));
        }
        var w;
        return a3.cmpn(1) === 0 ? w = s2 : w = u3, w.cmpn(0) < 0 && w.iadd(i), w;
      }, f3.prototype.gcd = function(i) {
        if (this.isZero())
          return i.abs();
        if (i.isZero())
          return this.abs();
        var a3 = this.clone(), h3 = i.clone();
        a3.negative = 0, h3.negative = 0;
        for (var s2 = 0;a3.isEven() && h3.isEven(); s2++)
          a3.iushrn(1), h3.iushrn(1);
        do {
          for (;a3.isEven(); )
            a3.iushrn(1);
          for (;h3.isEven(); )
            h3.iushrn(1);
          var u3 = a3.cmp(h3);
          if (u3 < 0) {
            var c2 = a3;
            a3 = h3, h3 = c2;
          } else if (u3 === 0 || h3.cmpn(1) === 0)
            break;
          a3.isub(h3);
        } while (true);
        return h3.iushln(s2);
      }, f3.prototype.invm = function(i) {
        return this.egcd(i).a.umod(i);
      }, f3.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f3.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f3.prototype.andln = function(i) {
        return this.words[0] & i;
      }, f3.prototype.bincn = function(i) {
        r(typeof i == "number");
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return this._expand(h3 + 1), this.words[h3] |= s2, this;
        for (var u3 = s2, c2 = h3;u3 !== 0 && c2 < this.length; c2++) {
          var b3 = this.words[c2] | 0;
          b3 += u3, u3 = b3 >>> 26, b3 &= 67108863, this.words[c2] = b3;
        }
        return u3 !== 0 && (this.words[c2] = u3, this.length++), this;
      }, f3.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f3.prototype.cmpn = function(i) {
        var a3 = i < 0;
        if (this.negative !== 0 && !a3)
          return -1;
        if (this.negative === 0 && a3)
          return 1;
        this.strip();
        var h3;
        if (this.length > 1)
          h3 = 1;
        else {
          a3 && (i = -i), r(i <= 67108863, "Number is too big");
          var s2 = this.words[0] | 0;
          h3 = s2 === i ? 0 : s2 < i ? -1 : 1;
        }
        return this.negative !== 0 ? -h3 | 0 : h3;
      }, f3.prototype.cmp = function(i) {
        if (this.negative !== 0 && i.negative === 0)
          return -1;
        if (this.negative === 0 && i.negative !== 0)
          return 1;
        var a3 = this.ucmp(i);
        return this.negative !== 0 ? -a3 | 0 : a3;
      }, f3.prototype.ucmp = function(i) {
        if (this.length > i.length)
          return 1;
        if (this.length < i.length)
          return -1;
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = this.words[h3] | 0, u3 = i.words[h3] | 0;
          if (s2 !== u3) {
            s2 < u3 ? a3 = -1 : s2 > u3 && (a3 = 1);
            break;
          }
        }
        return a3;
      }, f3.prototype.gtn = function(i) {
        return this.cmpn(i) === 1;
      }, f3.prototype.gt = function(i) {
        return this.cmp(i) === 1;
      }, f3.prototype.gten = function(i) {
        return this.cmpn(i) >= 0;
      }, f3.prototype.gte = function(i) {
        return this.cmp(i) >= 0;
      }, f3.prototype.ltn = function(i) {
        return this.cmpn(i) === -1;
      }, f3.prototype.lt = function(i) {
        return this.cmp(i) === -1;
      }, f3.prototype.lten = function(i) {
        return this.cmpn(i) <= 0;
      }, f3.prototype.lte = function(i) {
        return this.cmp(i) <= 0;
      }, f3.prototype.eqn = function(i) {
        return this.cmpn(i) === 0;
      }, f3.prototype.eq = function(i) {
        return this.cmp(i) === 0;
      }, f3.red = function(i) {
        return new P2(i);
      }, f3.prototype.toRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
      }, f3.prototype.fromRed = function() {
        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f3.prototype._forceRed = function(i) {
        return this.red = i, this;
      }, f3.prototype.forceRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), this._forceRed(i);
      }, f3.prototype.redAdd = function(i) {
        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
      }, f3.prototype.redIAdd = function(i) {
        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
      }, f3.prototype.redSub = function(i) {
        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
      }, f3.prototype.redISub = function(i) {
        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
      }, f3.prototype.redShl = function(i) {
        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
      }, f3.prototype.redMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
      }, f3.prototype.redIMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
      }, f3.prototype.redSqr = function() {
        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f3.prototype.redISqr = function() {
        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f3.prototype.redSqrt = function() {
        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f3.prototype.redInvm = function() {
        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f3.prototype.redNeg = function() {
        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f3.prototype.redPow = function(i) {
        return r(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v2, i) {
        this.name = v2, this.p = new f3(i, 16), this.n = this.p.bitLength(), this.k = new f3(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i = new f3(null);
        return i.words = new Array(Math.ceil(this.n / 13)), i;
      }, ye.prototype.ireduce = function(i) {
        var a3 = i, h3;
        do
          this.split(a3, this.tmp), a3 = this.imulK(a3), a3 = a3.iadd(this.tmp), h3 = a3.bitLength();
        while (h3 > this.n);
        var s2 = h3 < this.n ? -1 : a3.ucmp(this.p);
        return s2 === 0 ? (a3.words[0] = 0, a3.length = 1) : s2 > 0 ? a3.isub(this.p) : a3.strip !== undefined ? a3.strip() : a3._strip(), a3;
      }, ye.prototype.split = function(i, a3) {
        i.iushrn(this.n, 0, a3);
      }, ye.prototype.imulK = function(i) {
        return i.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o(xe, ye), xe.prototype.split = function(i, a3) {
        for (var h3 = 4194303, s2 = Math.min(i.length, 9), u3 = 0;u3 < s2; u3++)
          a3.words[u3] = i.words[u3];
        if (a3.length = s2, i.length <= 9) {
          i.words[0] = 0, i.length = 1;
          return;
        }
        var c2 = i.words[9];
        for (a3.words[a3.length++] = c2 & h3, u3 = 10;u3 < i.length; u3++) {
          var b3 = i.words[u3] | 0;
          i.words[u3 - 10] = (b3 & h3) << 4 | c2 >>> 22, c2 = b3;
        }
        c2 >>>= 22, i.words[u3 - 10] = c2, c2 === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
      }, xe.prototype.imulK = function(i) {
        i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = i.words[h3] | 0;
          a3 += s2 * 977, i.words[h3] = a3 & 67108863, a3 = s2 * 64 + (a3 / 67108864 | 0);
        }
        return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o(Ae, ye), Ae.prototype.imulK = function(i) {
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = (i.words[h3] | 0) * 19 + a3, u3 = s2 & 67108863;
          s2 >>>= 26, i.words[h3] = u3, a3 = s2;
        }
        return a3 !== 0 && (i.words[i.length++] = a3), i;
      }, f3._prime = function(i) {
        if (we[i])
          return we[i];
        var a3;
        if (i === "k256")
          a3 = new xe;
        else if (i === "p224")
          a3 = new Re;
        else if (i === "p192")
          a3 = new Ee;
        else if (i === "p25519")
          a3 = new Ae;
        else
          throw new Error("Unknown prime " + i);
        return we[i] = a3, a3;
      };
      function P2(v2) {
        if (typeof v2 == "string") {
          var i = f3._prime(v2);
          this.m = i.p, this.prime = i;
        } else
          r(v2.gtn(1), "modulus must be greater than 1"), this.m = v2, this.prime = null;
      }
      P2.prototype._verify1 = function(i) {
        r(i.negative === 0, "red works only with positives"), r(i.red, "red works only with red numbers");
      }, P2.prototype._verify2 = function(i, a3) {
        r((i.negative | a3.negative) === 0, "red works only with positives"), r(i.red && i.red === a3.red, "red works only with red numbers");
      }, P2.prototype.imod = function(i) {
        return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
      }, P2.prototype.neg = function(i) {
        return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
      }, P2.prototype.add = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.add(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3._forceRed(this);
      }, P2.prototype.iadd = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.iadd(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3;
      }, P2.prototype.sub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.sub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3._forceRed(this);
      }, P2.prototype.isub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.isub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3;
      }, P2.prototype.shl = function(i, a3) {
        return this._verify1(i), this.imod(i.ushln(a3));
      }, P2.prototype.imul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.imul(a3));
      }, P2.prototype.mul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.mul(a3));
      }, P2.prototype.isqr = function(i) {
        return this.imul(i, i.clone());
      }, P2.prototype.sqr = function(i) {
        return this.mul(i, i);
      }, P2.prototype.sqrt = function(i) {
        if (i.isZero())
          return i.clone();
        var a3 = this.m.andln(3);
        if (r(a3 % 2 === 1), a3 === 3) {
          var h3 = this.m.add(new f3(1)).iushrn(2);
          return this.pow(i, h3);
        }
        for (var s2 = this.m.subn(1), u3 = 0;!s2.isZero() && s2.andln(1) === 0; )
          u3++, s2.iushrn(1);
        r(!s2.isZero());
        var c2 = new f3(1).toRed(this), b3 = c2.redNeg(), l2 = this.m.subn(1).iushrn(1), n = this.m.bitLength();
        for (n = new f3(2 * n * n).toRed(this);this.pow(n, l2).cmp(b3) !== 0; )
          n.redIAdd(b3);
        for (var d3 = this.pow(n, s2), w = this.pow(i, s2.addn(1).iushrn(1)), g3 = this.pow(i, s2), _3 = u3;g3.cmp(c2) !== 0; ) {
          for (var A2 = g3, R2 = 0;A2.cmp(c2) !== 0; R2++)
            A2 = A2.redSqr();
          r(R2 < _3);
          var I3 = this.pow(d3, new f3(1).iushln(_3 - R2 - 1));
          w = w.redMul(I3), d3 = I3.redSqr(), g3 = g3.redMul(d3), _3 = R2;
        }
        return w;
      }, P2.prototype.invm = function(i) {
        var a3 = i._invmp(this.m);
        return a3.negative !== 0 ? (a3.negative = 0, this.imod(a3).redNeg()) : this.imod(a3);
      }, P2.prototype.pow = function(i, a3) {
        if (a3.isZero())
          return new f3(1).toRed(this);
        if (a3.cmpn(1) === 0)
          return i.clone();
        var h3 = 4, s2 = new Array(1 << h3);
        s2[0] = new f3(1).toRed(this), s2[1] = i;
        for (var u3 = 2;u3 < s2.length; u3++)
          s2[u3] = this.mul(s2[u3 - 1], i);
        var c2 = s2[0], b3 = 0, l2 = 0, n = a3.bitLength() % 26;
        for (n === 0 && (n = 26), u3 = a3.length - 1;u3 >= 0; u3--) {
          for (var d3 = a3.words[u3], w = n - 1;w >= 0; w--) {
            var g3 = d3 >> w & 1;
            if (c2 !== s2[0] && (c2 = this.sqr(c2)), g3 === 0 && b3 === 0) {
              l2 = 0;
              continue;
            }
            b3 <<= 1, b3 |= g3, l2++, !(l2 !== h3 && (u3 !== 0 || w !== 0)) && (c2 = this.mul(c2, s2[b3]), l2 = 0, b3 = 0);
          }
          n = 26;
        }
        return c2;
      }, P2.prototype.convertTo = function(i) {
        var a3 = i.umod(this.m);
        return a3 === i ? a3.clone() : a3;
      }, P2.prototype.convertFrom = function(i) {
        var a3 = i.clone();
        return a3.red = null, a3;
      }, f3.mont = function(i) {
        return new Se2(i);
      };
      function Se2(v2) {
        P2.call(this, v2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f3(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o(Se2, P2), Se2.prototype.convertTo = function(i) {
        return this.imod(i.ushln(this.shift));
      }, Se2.prototype.convertFrom = function(i) {
        var a3 = this.imod(i.mul(this.rinv));
        return a3.red = null, a3;
      }, Se2.prototype.imul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return i.words[0] = 0, i.length = 1, i;
        var h3 = i.imul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c2 = u3;
        return u3.cmp(this.m) >= 0 ? c2 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c2 = u3.iadd(this.m)), c2._forceRed(this);
      }, Se2.prototype.mul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return new f3(0)._forceRed(this);
        var h3 = i.mul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c2 = u3;
        return u3.cmp(this.m) >= 0 ? c2 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c2 = u3.iadd(this.m)), c2._forceRed(this);
      }, Se2.prototype.invm = function(i) {
        var a3 = this.imod(i._invmp(this.m).mul(this.r2));
        return a3._forceRed(this);
      };
    })(typeof kl > "u" || kl, a22);
  });
  Ll = T3((h22) => {
    var Ks = h22;
    function oA(t, e) {
      if (Array.isArray(t))
        return t.slice();
      if (!t)
        return [];
      var r = [];
      if (typeof t != "string") {
        for (var o = 0;o < t.length; o++)
          r[o] = t[o] | 0;
        return r;
      }
      if (e === "hex") {
        t = t.replace(/[^a-z0-9]+/ig, ""), t.length % 2 !== 0 && (t = "0" + t);
        for (var o = 0;o < t.length; o += 2)
          r.push(parseInt(t[o] + t[o + 1], 16));
      } else
        for (var o = 0;o < t.length; o++) {
          var f3 = t.charCodeAt(o), p3 = f3 >> 8, m3 = f3 & 255;
          p3 ? r.push(p3, m3) : r.push(m3);
        }
      return r;
    }
    Ks.toArray = oA;
    function o2(t) {
      return t.length === 1 ? "0" + t : t;
    }
    Ks.zero2 = o2;
    function s2(t) {
      for (var e = "", r = 0;r < t.length; r++)
        e += o2(t[r].toString(16));
      return e;
    }
    Ks.toHex = s2;
    Ks.encode = function(e, r) {
      return r === "hex" ? s2(e) : e;
    };
  });
  or2 = T3((u22) => {
    var Pr = u22, sA = ri(), hA = ar(), js2 = Ll();
    Pr.assert = hA;
    Pr.toArray = js2.toArray;
    Pr.zero2 = js2.zero2;
    Pr.toHex = js2.toHex;
    Pr.encode = js2.encode;
    function uA(t, e, r) {
      var o = new Array(Math.max(t.bitLength(), r) + 1);
      o.fill(0);
      for (var f3 = 1 << e + 1, p3 = t.clone(), m3 = 0;m3 < o.length; m3++) {
        var y3, M2 = p3.andln(f3 - 1);
        p3.isOdd() ? (M2 > (f3 >> 1) - 1 ? y3 = (f3 >> 1) - M2 : y3 = M2, p3.isubn(y3)) : y3 = 0, o[m3] = y3, p3.iushrn(1);
      }
      return o;
    }
    Pr.getNAF = uA;
    function lA(t, e) {
      var r = [[], []];
      t = t.clone(), e = e.clone();
      for (var o = 0, f3 = 0, p3;t.cmpn(-o) > 0 || e.cmpn(-f3) > 0; ) {
        var m3 = t.andln(3) + o & 3, y3 = e.andln(3) + f3 & 3;
        m3 === 3 && (m3 = -1), y3 === 3 && (y3 = -1);
        var M2;
        (m3 & 1) === 0 ? M2 = 0 : (p3 = t.andln(7) + o & 7, (p3 === 3 || p3 === 5) && y3 === 2 ? M2 = -m3 : M2 = m3), r[0].push(M2);
        var x4;
        (y3 & 1) === 0 ? x4 = 0 : (p3 = e.andln(7) + f3 & 7, (p3 === 3 || p3 === 5) && m3 === 2 ? x4 = -y3 : x4 = y3), r[1].push(x4), 2 * o === M2 + 1 && (o = 1 - o), 2 * f3 === x4 + 1 && (f3 = 1 - f3), t.iushrn(1), e.iushrn(1);
      }
      return r;
    }
    Pr.getJSF = lA;
    function dA(t, e, r) {
      var o = "_" + e;
      t.prototype[e] = function() {
        return this[o] !== undefined ? this[o] : this[o] = r.call(this);
      };
    }
    Pr.cachedProperty = dA;
    function cA(t) {
      return typeof t == "string" ? Pr.toArray(t, "hex") : t;
    }
    Pr.parseBytes = cA;
    function pA(t) {
      return new sA(t, "hex", "le");
    }
    Pr.intFromLE = pA;
  });
  Oa = T3((Mk, l2) => {
    var Cn = ri(), Ca = or2(), Zs = Ca.getNAF, vA = Ca.getJSF, Vs2 = Ca.assert;
    function Xi(t, e) {
      this.type = t, this.p = new Cn(e.p, 16), this.red = e.prime ? Cn.red(e.prime) : Cn.mont(this.p), this.zero = new Cn(0).toRed(this.red), this.one = new Cn(1).toRed(this.red), this.two = new Cn(2).toRed(this.red), this.n = e.n && new Cn(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
      var r = this.n && this.p.div(this.n);
      !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
    }
    l2.exports = Xi;
    Xi.prototype.point = function() {
      throw new Error("Not implemented");
    };
    Xi.prototype.validate = function() {
      throw new Error("Not implemented");
    };
    Xi.prototype._fixedNafMul = function(e, r) {
      Vs2(e.precomputed);
      var o = e._getDoubles(), f3 = Zs(r, 1, this._bitLength), p3 = (1 << o.step + 1) - (o.step % 2 === 0 ? 2 : 1);
      p3 /= 3;
      var m3 = [], y3, M2;
      for (y3 = 0;y3 < f3.length; y3 += o.step) {
        M2 = 0;
        for (var x4 = y3 + o.step - 1;x4 >= y3; x4--)
          M2 = (M2 << 1) + f3[x4];
        m3.push(M2);
      }
      for (var S3 = this.jpoint(null, null, null), E4 = this.jpoint(null, null, null), B3 = p3;B3 > 0; B3--) {
        for (y3 = 0;y3 < m3.length; y3++)
          M2 = m3[y3], M2 === B3 ? E4 = E4.mixedAdd(o.points[y3]) : M2 === -B3 && (E4 = E4.mixedAdd(o.points[y3].neg()));
        S3 = S3.add(E4);
      }
      return S3.toP();
    };
    Xi.prototype._wnafMul = function(e, r) {
      var o = 4, f3 = e._getNAFPoints(o);
      o = f3.wnd;
      for (var p3 = f3.points, m3 = Zs(r, o, this._bitLength), y3 = this.jpoint(null, null, null), M2 = m3.length - 1;M2 >= 0; M2--) {
        for (var x4 = 0;M2 >= 0 && m3[M2] === 0; M2--)
          x4++;
        if (M2 >= 0 && x4++, y3 = y3.dblp(x4), M2 < 0)
          break;
        var S3 = m3[M2];
        Vs2(S3 !== 0), e.type === "affine" ? S3 > 0 ? y3 = y3.mixedAdd(p3[S3 - 1 >> 1]) : y3 = y3.mixedAdd(p3[-S3 - 1 >> 1].neg()) : S3 > 0 ? y3 = y3.add(p3[S3 - 1 >> 1]) : y3 = y3.add(p3[-S3 - 1 >> 1].neg());
      }
      return e.type === "affine" ? y3.toP() : y3;
    };
    Xi.prototype._wnafMulAdd = function(e, r, o, f3, p3) {
      var m3 = this._wnafT1, y3 = this._wnafT2, M2 = this._wnafT3, x4 = 0, S3, E4, B3;
      for (S3 = 0;S3 < f3; S3++) {
        B3 = r[S3];
        var q2 = B3._getNAFPoints(e);
        m3[S3] = q2.wnd, y3[S3] = q2.points;
      }
      for (S3 = f3 - 1;S3 >= 1; S3 -= 2) {
        var L3 = S3 - 1, ge2 = S3;
        if (m3[L3] !== 1 || m3[ge2] !== 1) {
          M2[L3] = Zs(o[L3], m3[L3], this._bitLength), M2[ge2] = Zs(o[ge2], m3[ge2], this._bitLength), x4 = Math.max(M2[L3].length, x4), x4 = Math.max(M2[ge2].length, x4);
          continue;
        }
        var _e = [r[L3], null, null, r[ge2]];
        r[L3].y.cmp(r[ge2].y) === 0 ? (_e[1] = r[L3].add(r[ge2]), _e[2] = r[L3].toJ().mixedAdd(r[ge2].neg())) : r[L3].y.cmp(r[ge2].y.redNeg()) === 0 ? (_e[1] = r[L3].toJ().mixedAdd(r[ge2]), _e[2] = r[L3].add(r[ge2].neg())) : (_e[1] = r[L3].toJ().mixedAdd(r[ge2]), _e[2] = r[L3].toJ().mixedAdd(r[ge2].neg()));
        var N3 = [-3, -1, -5, -7, 0, 7, 5, 1, 3], we = vA(o[L3], o[ge2]);
        for (x4 = Math.max(we[0].length, x4), M2[L3] = new Array(x4), M2[ge2] = new Array(x4), E4 = 0;E4 < x4; E4++) {
          var ye = we[0][E4] | 0, xe = we[1][E4] | 0;
          M2[L3][E4] = N3[(ye + 1) * 3 + (xe + 1)], M2[ge2][E4] = 0, y3[L3] = _e;
        }
      }
      var Re = this.jpoint(null, null, null), Ee = this._wnafT4;
      for (S3 = x4;S3 >= 0; S3--) {
        for (var Ae = 0;S3 >= 0; ) {
          var P2 = true;
          for (E4 = 0;E4 < f3; E4++)
            Ee[E4] = M2[E4][S3] | 0, Ee[E4] !== 0 && (P2 = false);
          if (!P2)
            break;
          Ae++, S3--;
        }
        if (S3 >= 0 && Ae++, Re = Re.dblp(Ae), S3 < 0)
          break;
        for (E4 = 0;E4 < f3; E4++) {
          var Se2 = Ee[E4];
          Se2 !== 0 && (Se2 > 0 ? B3 = y3[E4][Se2 - 1 >> 1] : Se2 < 0 && (B3 = y3[E4][-Se2 - 1 >> 1].neg()), B3.type === "affine" ? Re = Re.mixedAdd(B3) : Re = Re.add(B3));
        }
      }
      for (S3 = 0;S3 < f3; S3++)
        y3[S3] = null;
      return p3 ? Re : Re.toP();
    };
    function _r(t, e) {
      this.curve = t, this.type = e, this.precomputed = null;
    }
    Xi.BasePoint = _r;
    _r.prototype.eq = function() {
      throw new Error("Not implemented");
    };
    _r.prototype.validate = function() {
      return this.curve.validate(this);
    };
    Xi.prototype.decodePoint = function(e, r) {
      e = Ca.toArray(e, r);
      var o = this.p.byteLength();
      if ((e[0] === 4 || e[0] === 6 || e[0] === 7) && e.length - 1 === 2 * o) {
        e[0] === 6 ? Vs2(e[e.length - 1] % 2 === 0) : e[0] === 7 && Vs2(e[e.length - 1] % 2 === 1);
        var f3 = this.point(e.slice(1, 1 + o), e.slice(1 + o, 1 + 2 * o));
        return f3;
      } else if ((e[0] === 2 || e[0] === 3) && e.length - 1 === o)
        return this.pointFromX(e.slice(1, 1 + o), e[0] === 3);
      throw new Error("Unknown point format");
    };
    _r.prototype.encodeCompressed = function(e) {
      return this.encode(e, true);
    };
    _r.prototype._encode = function(e) {
      var r = this.curve.p.byteLength(), o = this.getX().toArray("be", r);
      return e ? [this.getY().isEven() ? 2 : 3].concat(o) : [4].concat(o, this.getY().toArray("be", r));
    };
    _r.prototype.encode = function(e, r) {
      return Ca.encode(this._encode(r), e);
    };
    _r.prototype.precompute = function(e) {
      if (this.precomputed)
        return this;
      var r = { doubles: null, naf: null, beta: null };
      return r.naf = this._getNAFPoints(8), r.doubles = this._getDoubles(4, e), r.beta = this._getBeta(), this.precomputed = r, this;
    };
    _r.prototype._hasDoubles = function(e) {
      if (!this.precomputed)
        return false;
      var r = this.precomputed.doubles;
      return r ? r.points.length >= Math.ceil((e.bitLength() + 1) / r.step) : false;
    };
    _r.prototype._getDoubles = function(e, r) {
      if (this.precomputed && this.precomputed.doubles)
        return this.precomputed.doubles;
      for (var o = [this], f3 = this, p3 = 0;p3 < r; p3 += e) {
        for (var m3 = 0;m3 < e; m3++)
          f3 = f3.dbl();
        o.push(f3);
      }
      return { step: e, points: o };
    };
    _r.prototype._getNAFPoints = function(e) {
      if (this.precomputed && this.precomputed.naf)
        return this.precomputed.naf;
      for (var r = [this], o = (1 << e) - 1, f3 = o === 1 ? null : this.dbl(), p3 = 1;p3 < o; p3++)
        r[p3] = r[p3 - 1].add(f3);
      return { wnd: e, points: r };
    };
    _r.prototype._getBeta = function() {
      return null;
    };
    _r.prototype.dblp = function(e) {
      for (var r = this, o = 0;o < e; o++)
        r = r.dbl();
      return r;
    };
  });
  c2 = T3((_k, d22) => {
    var bA = or2(), ut2 = ri(), Nl = Ie2(), Bf = Oa(), mA = bA.assert;
    function xr2(t) {
      Bf.call(this, "short", t), this.a = new ut2(t.a, 16).toRed(this.red), this.b = new ut2(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
    }
    Nl(xr2, Bf);
    d22.exports = xr2;
    xr2.prototype._getEndomorphism = function(e) {
      if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
        var r, o;
        if (e.beta)
          r = new ut2(e.beta, 16).toRed(this.red);
        else {
          var f3 = this._getEndoRoots(this.p);
          r = f3[0].cmp(f3[1]) < 0 ? f3[0] : f3[1], r = r.toRed(this.red);
        }
        if (e.lambda)
          o = new ut2(e.lambda, 16);
        else {
          var p3 = this._getEndoRoots(this.n);
          this.g.mul(p3[0]).x.cmp(this.g.x.redMul(r)) === 0 ? o = p3[0] : (o = p3[1], mA(this.g.mul(o).x.cmp(this.g.x.redMul(r)) === 0));
        }
        var m3;
        return e.basis ? m3 = e.basis.map(function(y3) {
          return { a: new ut2(y3.a, 16), b: new ut2(y3.b, 16) };
        }) : m3 = this._getEndoBasis(o), { beta: r, lambda: o, basis: m3 };
      }
    };
    xr2.prototype._getEndoRoots = function(e) {
      var r = e === this.p ? this.red : ut2.mont(e), o = new ut2(2).toRed(r).redInvm(), f3 = o.redNeg(), p3 = new ut2(3).toRed(r).redNeg().redSqrt().redMul(o), m3 = f3.redAdd(p3).fromRed(), y3 = f3.redSub(p3).fromRed();
      return [m3, y3];
    };
    xr2.prototype._getEndoBasis = function(e) {
      for (var r = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), o = e, f3 = this.n.clone(), p3 = new ut2(1), m3 = new ut2(0), y3 = new ut2(0), M2 = new ut2(1), x4, S3, E4, B3, q2, L3, ge2, _e = 0, N3, we;o.cmpn(0) !== 0; ) {
        var ye = f3.div(o);
        N3 = f3.sub(ye.mul(o)), we = y3.sub(ye.mul(p3));
        var xe = M2.sub(ye.mul(m3));
        if (!E4 && N3.cmp(r) < 0)
          x4 = ge2.neg(), S3 = p3, E4 = N3.neg(), B3 = we;
        else if (E4 && ++_e === 2)
          break;
        ge2 = N3, f3 = o, o = N3, y3 = p3, p3 = we, M2 = m3, m3 = xe;
      }
      q2 = N3.neg(), L3 = we;
      var Re = E4.sqr().add(B3.sqr()), Ee = q2.sqr().add(L3.sqr());
      return Ee.cmp(Re) >= 0 && (q2 = x4, L3 = S3), E4.negative && (E4 = E4.neg(), B3 = B3.neg()), q2.negative && (q2 = q2.neg(), L3 = L3.neg()), [{ a: E4, b: B3 }, { a: q2, b: L3 }];
    };
    xr2.prototype._endoSplit = function(e) {
      var r = this.endo.basis, o = r[0], f3 = r[1], p3 = f3.b.mul(e).divRound(this.n), m3 = o.b.neg().mul(e).divRound(this.n), y3 = p3.mul(o.a), M2 = m3.mul(f3.a), x4 = p3.mul(o.b), S3 = m3.mul(f3.b), E4 = e.sub(y3).sub(M2), B3 = x4.add(S3).neg();
      return { k1: E4, k2: B3 };
    };
    xr2.prototype.pointFromX = function(e, r) {
      e = new ut2(e, 16), e.red || (e = e.toRed(this.red));
      var o = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b), f3 = o.redSqrt();
      if (f3.redSqr().redSub(o).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var p3 = f3.fromRed().isOdd();
      return (r && !p3 || !r && p3) && (f3 = f3.redNeg()), this.point(e, f3);
    };
    xr2.prototype.validate = function(e) {
      if (e.inf)
        return true;
      var { x: r, y: o } = e, f3 = this.a.redMul(r), p3 = r.redSqr().redMul(r).redIAdd(f3).redIAdd(this.b);
      return o.redSqr().redISub(p3).cmpn(0) === 0;
    };
    xr2.prototype._endoWnafMulAdd = function(e, r, o) {
      for (var f3 = this._endoWnafT1, p3 = this._endoWnafT2, m3 = 0;m3 < e.length; m3++) {
        var y3 = this._endoSplit(r[m3]), M2 = e[m3], x4 = M2._getBeta();
        y3.k1.negative && (y3.k1.ineg(), M2 = M2.neg(true)), y3.k2.negative && (y3.k2.ineg(), x4 = x4.neg(true)), f3[m3 * 2] = M2, f3[m3 * 2 + 1] = x4, p3[m3 * 2] = y3.k1, p3[m3 * 2 + 1] = y3.k2;
      }
      for (var S3 = this._wnafMulAdd(1, f3, p3, m3 * 2, o), E4 = 0;E4 < m3 * 2; E4++)
        f3[E4] = null, p3[E4] = null;
      return S3;
    };
    function Ct(t, e, r, o) {
      Bf.BasePoint.call(this, t, "affine"), e === null && r === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new ut2(e, 16), this.y = new ut2(r, 16), o && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
    }
    Nl(Ct, Bf.BasePoint);
    xr2.prototype.point = function(e, r, o) {
      return new Ct(this, e, r, o);
    };
    xr2.prototype.pointFromJSON = function(e, r) {
      return Ct.fromJSON(this, e, r);
    };
    Ct.prototype._getBeta = function() {
      if (!!this.curve.endo) {
        var e = this.precomputed;
        if (e && e.beta)
          return e.beta;
        var r = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
        if (e) {
          var o = this.curve, f3 = function(p3) {
            return o.point(p3.x.redMul(o.endo.beta), p3.y);
          };
          e.beta = r, r.precomputed = { beta: null, naf: e.naf && { wnd: e.naf.wnd, points: e.naf.points.map(f3) }, doubles: e.doubles && { step: e.doubles.step, points: e.doubles.points.map(f3) } };
        }
        return r;
      }
    };
    Ct.prototype.toJSON = function() {
      return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
    };
    Ct.fromJSON = function(e, r, o) {
      typeof r == "string" && (r = JSON.parse(r));
      var f3 = e.point(r[0], r[1], o);
      if (!r[2])
        return f3;
      function p3(y3) {
        return e.point(y3[0], y3[1], o);
      }
      var m3 = r[2];
      return f3.precomputed = { beta: null, doubles: m3.doubles && { step: m3.doubles.step, points: [f3].concat(m3.doubles.points.map(p3)) }, naf: m3.naf && { wnd: m3.naf.wnd, points: [f3].concat(m3.naf.points.map(p3)) } }, f3;
    };
    Ct.prototype.inspect = function() {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    };
    Ct.prototype.isInfinity = function() {
      return this.inf;
    };
    Ct.prototype.add = function(e) {
      if (this.inf)
        return e;
      if (e.inf)
        return this;
      if (this.eq(e))
        return this.dbl();
      if (this.neg().eq(e))
        return this.curve.point(null, null);
      if (this.x.cmp(e.x) === 0)
        return this.curve.point(null, null);
      var r = this.y.redSub(e.y);
      r.cmpn(0) !== 0 && (r = r.redMul(this.x.redSub(e.x).redInvm()));
      var o = r.redSqr().redISub(this.x).redISub(e.x), f3 = r.redMul(this.x.redSub(o)).redISub(this.y);
      return this.curve.point(o, f3);
    };
    Ct.prototype.dbl = function() {
      if (this.inf)
        return this;
      var e = this.y.redAdd(this.y);
      if (e.cmpn(0) === 0)
        return this.curve.point(null, null);
      var r = this.curve.a, o = this.x.redSqr(), f3 = e.redInvm(), p3 = o.redAdd(o).redIAdd(o).redIAdd(r).redMul(f3), m3 = p3.redSqr().redISub(this.x.redAdd(this.x)), y3 = p3.redMul(this.x.redSub(m3)).redISub(this.y);
      return this.curve.point(m3, y3);
    };
    Ct.prototype.getX = function() {
      return this.x.fromRed();
    };
    Ct.prototype.getY = function() {
      return this.y.fromRed();
    };
    Ct.prototype.mul = function(e) {
      return e = new ut2(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e);
    };
    Ct.prototype.mulAdd = function(e, r, o) {
      var f3 = [this, r], p3 = [e, o];
      return this.curve.endo ? this.curve._endoWnafMulAdd(f3, p3) : this.curve._wnafMulAdd(1, f3, p3, 2);
    };
    Ct.prototype.jmulAdd = function(e, r, o) {
      var f3 = [this, r], p3 = [e, o];
      return this.curve.endo ? this.curve._endoWnafMulAdd(f3, p3, true) : this.curve._wnafMulAdd(1, f3, p3, 2, true);
    };
    Ct.prototype.eq = function(e) {
      return this === e || this.inf === e.inf && (this.inf || this.x.cmp(e.x) === 0 && this.y.cmp(e.y) === 0);
    };
    Ct.prototype.neg = function(e) {
      if (this.inf)
        return this;
      var r = this.curve.point(this.x, this.y.redNeg());
      if (e && this.precomputed) {
        var o = this.precomputed, f3 = function(p3) {
          return p3.neg();
        };
        r.precomputed = { naf: o.naf && { wnd: o.naf.wnd, points: o.naf.points.map(f3) }, doubles: o.doubles && { step: o.doubles.step, points: o.doubles.points.map(f3) } };
      }
      return r;
    };
    Ct.prototype.toJ = function() {
      if (this.inf)
        return this.curve.jpoint(null, null, null);
      var e = this.curve.jpoint(this.x, this.y, this.curve.one);
      return e;
    };
    function Wt(t, e, r, o) {
      Bf.BasePoint.call(this, t, "jacobian"), e === null && r === null && o === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new ut2(0)) : (this.x = new ut2(e, 16), this.y = new ut2(r, 16), this.z = new ut2(o, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
    }
    Nl(Wt, Bf.BasePoint);
    xr2.prototype.jpoint = function(e, r, o) {
      return new Wt(this, e, r, o);
    };
    Wt.prototype.toP = function() {
      if (this.isInfinity())
        return this.curve.point(null, null);
      var e = this.z.redInvm(), r = e.redSqr(), o = this.x.redMul(r), f3 = this.y.redMul(r).redMul(e);
      return this.curve.point(o, f3);
    };
    Wt.prototype.neg = function() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    };
    Wt.prototype.add = function(e) {
      if (this.isInfinity())
        return e;
      if (e.isInfinity())
        return this;
      var r = e.z.redSqr(), o = this.z.redSqr(), f3 = this.x.redMul(r), p3 = e.x.redMul(o), m3 = this.y.redMul(r.redMul(e.z)), y3 = e.y.redMul(o.redMul(this.z)), M2 = f3.redSub(p3), x4 = m3.redSub(y3);
      if (M2.cmpn(0) === 0)
        return x4.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
      var S3 = M2.redSqr(), E4 = S3.redMul(M2), B3 = f3.redMul(S3), q2 = x4.redSqr().redIAdd(E4).redISub(B3).redISub(B3), L3 = x4.redMul(B3.redISub(q2)).redISub(m3.redMul(E4)), ge2 = this.z.redMul(e.z).redMul(M2);
      return this.curve.jpoint(q2, L3, ge2);
    };
    Wt.prototype.mixedAdd = function(e) {
      if (this.isInfinity())
        return e.toJ();
      if (e.isInfinity())
        return this;
      var r = this.z.redSqr(), o = this.x, f3 = e.x.redMul(r), p3 = this.y, m3 = e.y.redMul(r).redMul(this.z), y3 = o.redSub(f3), M2 = p3.redSub(m3);
      if (y3.cmpn(0) === 0)
        return M2.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
      var x4 = y3.redSqr(), S3 = x4.redMul(y3), E4 = o.redMul(x4), B3 = M2.redSqr().redIAdd(S3).redISub(E4).redISub(E4), q2 = M2.redMul(E4.redISub(B3)).redISub(p3.redMul(S3)), L3 = this.z.redMul(y3);
      return this.curve.jpoint(B3, q2, L3);
    };
    Wt.prototype.dblp = function(e) {
      if (e === 0)
        return this;
      if (this.isInfinity())
        return this;
      if (!e)
        return this.dbl();
      var r;
      if (this.curve.zeroA || this.curve.threeA) {
        var o = this;
        for (r = 0;r < e; r++)
          o = o.dbl();
        return o;
      }
      var f3 = this.curve.a, p3 = this.curve.tinv, m3 = this.x, y3 = this.y, M2 = this.z, x4 = M2.redSqr().redSqr(), S3 = y3.redAdd(y3);
      for (r = 0;r < e; r++) {
        var E4 = m3.redSqr(), B3 = S3.redSqr(), q2 = B3.redSqr(), L3 = E4.redAdd(E4).redIAdd(E4).redIAdd(f3.redMul(x4)), ge2 = m3.redMul(B3), _e = L3.redSqr().redISub(ge2.redAdd(ge2)), N3 = ge2.redISub(_e), we = L3.redMul(N3);
        we = we.redIAdd(we).redISub(q2);
        var ye = S3.redMul(M2);
        r + 1 < e && (x4 = x4.redMul(q2)), m3 = _e, M2 = ye, S3 = we;
      }
      return this.curve.jpoint(m3, S3.redMul(p3), M2);
    };
    Wt.prototype.dbl = function() {
      return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
    };
    Wt.prototype._zeroDbl = function() {
      var e, r, o;
      if (this.zOne) {
        var f3 = this.x.redSqr(), p3 = this.y.redSqr(), m3 = p3.redSqr(), y3 = this.x.redAdd(p3).redSqr().redISub(f3).redISub(m3);
        y3 = y3.redIAdd(y3);
        var M2 = f3.redAdd(f3).redIAdd(f3), x4 = M2.redSqr().redISub(y3).redISub(y3), S3 = m3.redIAdd(m3);
        S3 = S3.redIAdd(S3), S3 = S3.redIAdd(S3), e = x4, r = M2.redMul(y3.redISub(x4)).redISub(S3), o = this.y.redAdd(this.y);
      } else {
        var E4 = this.x.redSqr(), B3 = this.y.redSqr(), q2 = B3.redSqr(), L3 = this.x.redAdd(B3).redSqr().redISub(E4).redISub(q2);
        L3 = L3.redIAdd(L3);
        var ge2 = E4.redAdd(E4).redIAdd(E4), _e = ge2.redSqr(), N3 = q2.redIAdd(q2);
        N3 = N3.redIAdd(N3), N3 = N3.redIAdd(N3), e = _e.redISub(L3).redISub(L3), r = ge2.redMul(L3.redISub(e)).redISub(N3), o = this.y.redMul(this.z), o = o.redIAdd(o);
      }
      return this.curve.jpoint(e, r, o);
    };
    Wt.prototype._threeDbl = function() {
      var e, r, o;
      if (this.zOne) {
        var f3 = this.x.redSqr(), p3 = this.y.redSqr(), m3 = p3.redSqr(), y3 = this.x.redAdd(p3).redSqr().redISub(f3).redISub(m3);
        y3 = y3.redIAdd(y3);
        var M2 = f3.redAdd(f3).redIAdd(f3).redIAdd(this.curve.a), x4 = M2.redSqr().redISub(y3).redISub(y3);
        e = x4;
        var S3 = m3.redIAdd(m3);
        S3 = S3.redIAdd(S3), S3 = S3.redIAdd(S3), r = M2.redMul(y3.redISub(x4)).redISub(S3), o = this.y.redAdd(this.y);
      } else {
        var E4 = this.z.redSqr(), B3 = this.y.redSqr(), q2 = this.x.redMul(B3), L3 = this.x.redSub(E4).redMul(this.x.redAdd(E4));
        L3 = L3.redAdd(L3).redIAdd(L3);
        var ge2 = q2.redIAdd(q2);
        ge2 = ge2.redIAdd(ge2);
        var _e = ge2.redAdd(ge2);
        e = L3.redSqr().redISub(_e), o = this.y.redAdd(this.z).redSqr().redISub(B3).redISub(E4);
        var N3 = B3.redSqr();
        N3 = N3.redIAdd(N3), N3 = N3.redIAdd(N3), N3 = N3.redIAdd(N3), r = L3.redMul(ge2.redISub(e)).redISub(N3);
      }
      return this.curve.jpoint(e, r, o);
    };
    Wt.prototype._dbl = function() {
      var e = this.curve.a, r = this.x, o = this.y, f3 = this.z, p3 = f3.redSqr().redSqr(), m3 = r.redSqr(), y3 = o.redSqr(), M2 = m3.redAdd(m3).redIAdd(m3).redIAdd(e.redMul(p3)), x4 = r.redAdd(r);
      x4 = x4.redIAdd(x4);
      var S3 = x4.redMul(y3), E4 = M2.redSqr().redISub(S3.redAdd(S3)), B3 = S3.redISub(E4), q2 = y3.redSqr();
      q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2);
      var L3 = M2.redMul(B3).redISub(q2), ge2 = o.redAdd(o).redMul(f3);
      return this.curve.jpoint(E4, L3, ge2);
    };
    Wt.prototype.trpl = function() {
      if (!this.curve.zeroA)
        return this.dbl().add(this);
      var e = this.x.redSqr(), r = this.y.redSqr(), o = this.z.redSqr(), f3 = r.redSqr(), p3 = e.redAdd(e).redIAdd(e), m3 = p3.redSqr(), y3 = this.x.redAdd(r).redSqr().redISub(e).redISub(f3);
      y3 = y3.redIAdd(y3), y3 = y3.redAdd(y3).redIAdd(y3), y3 = y3.redISub(m3);
      var M2 = y3.redSqr(), x4 = f3.redIAdd(f3);
      x4 = x4.redIAdd(x4), x4 = x4.redIAdd(x4), x4 = x4.redIAdd(x4);
      var S3 = p3.redIAdd(y3).redSqr().redISub(m3).redISub(M2).redISub(x4), E4 = r.redMul(S3);
      E4 = E4.redIAdd(E4), E4 = E4.redIAdd(E4);
      var B3 = this.x.redMul(M2).redISub(E4);
      B3 = B3.redIAdd(B3), B3 = B3.redIAdd(B3);
      var q2 = this.y.redMul(S3.redMul(x4.redISub(S3)).redISub(y3.redMul(M2)));
      q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2);
      var L3 = this.z.redAdd(y3).redSqr().redISub(o).redISub(M2);
      return this.curve.jpoint(B3, q2, L3);
    };
    Wt.prototype.mul = function(e, r) {
      return e = new ut2(e, r), this.curve._wnafMul(this, e);
    };
    Wt.prototype.eq = function(e) {
      if (e.type === "affine")
        return this.eq(e.toJ());
      if (this === e)
        return true;
      var r = this.z.redSqr(), o = e.z.redSqr();
      if (this.x.redMul(o).redISub(e.x.redMul(r)).cmpn(0) !== 0)
        return false;
      var f3 = r.redMul(this.z), p3 = o.redMul(e.z);
      return this.y.redMul(p3).redISub(e.y.redMul(f3)).cmpn(0) === 0;
    };
    Wt.prototype.eqXToP = function(e) {
      var r = this.z.redSqr(), o = e.toRed(this.curve.red).redMul(r);
      if (this.x.cmp(o) === 0)
        return true;
      for (var f3 = e.clone(), p3 = this.curve.redN.redMul(r);; ) {
        if (f3.iadd(this.curve.n), f3.cmp(this.curve.p) >= 0)
          return false;
        if (o.redIAdd(p3), this.x.cmp(o) === 0)
          return true;
      }
    };
    Wt.prototype.inspect = function() {
      return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    };
    Wt.prototype.isInfinity = function() {
      return this.z.cmpn(0) === 0;
    };
  });
  b22 = T3((xk, v2) => {
    var qf = ri(), p22 = Ie2(), $s = Oa(), gA = or2();
    function If(t) {
      $s.call(this, "mont", t), this.a = new qf(t.a, 16).toRed(this.red), this.b = new qf(t.b, 16).toRed(this.red), this.i4 = new qf(4).toRed(this.red).redInvm(), this.two = new qf(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
    }
    p22(If, $s);
    v2.exports = If;
    If.prototype.validate = function(e) {
      var r = e.normalize().x, o = r.redSqr(), f3 = o.redMul(r).redAdd(o.redMul(this.a)).redAdd(r), p3 = f3.redSqrt();
      return p3.redSqr().cmp(f3) === 0;
    };
    function Ot(t, e, r) {
      $s.BasePoint.call(this, t, "projective"), e === null && r === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new qf(e, 16), this.z = new qf(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
    }
    p22(Ot, $s.BasePoint);
    If.prototype.decodePoint = function(e, r) {
      return this.point(gA.toArray(e, r), 1);
    };
    If.prototype.point = function(e, r) {
      return new Ot(this, e, r);
    };
    If.prototype.pointFromJSON = function(e) {
      return Ot.fromJSON(this, e);
    };
    Ot.prototype.precompute = function() {};
    Ot.prototype._encode = function() {
      return this.getX().toArray("be", this.curve.p.byteLength());
    };
    Ot.fromJSON = function(e, r) {
      return new Ot(e, r[0], r[1] || e.one);
    };
    Ot.prototype.inspect = function() {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Ot.prototype.isInfinity = function() {
      return this.z.cmpn(0) === 0;
    };
    Ot.prototype.dbl = function() {
      var e = this.x.redAdd(this.z), r = e.redSqr(), o = this.x.redSub(this.z), f3 = o.redSqr(), p3 = r.redSub(f3), m3 = r.redMul(f3), y3 = p3.redMul(f3.redAdd(this.curve.a24.redMul(p3)));
      return this.curve.point(m3, y3);
    };
    Ot.prototype.add = function() {
      throw new Error("Not supported on Montgomery curve");
    };
    Ot.prototype.diffAdd = function(e, r) {
      var o = this.x.redAdd(this.z), f3 = this.x.redSub(this.z), p3 = e.x.redAdd(e.z), m3 = e.x.redSub(e.z), y3 = m3.redMul(o), M2 = p3.redMul(f3), x4 = r.z.redMul(y3.redAdd(M2).redSqr()), S3 = r.x.redMul(y3.redISub(M2).redSqr());
      return this.curve.point(x4, S3);
    };
    Ot.prototype.mul = function(e) {
      for (var r = e.clone(), o = this, f3 = this.curve.point(null, null), p3 = this, m3 = [];r.cmpn(0) !== 0; r.iushrn(1))
        m3.push(r.andln(1));
      for (var y3 = m3.length - 1;y3 >= 0; y3--)
        m3[y3] === 0 ? (o = o.diffAdd(f3, p3), f3 = f3.dbl()) : (f3 = o.diffAdd(f3, p3), o = o.dbl());
      return f3;
    };
    Ot.prototype.mulAdd = function() {
      throw new Error("Not supported on Montgomery curve");
    };
    Ot.prototype.jumlAdd = function() {
      throw new Error("Not supported on Montgomery curve");
    };
    Ot.prototype.eq = function(e) {
      return this.getX().cmp(e.getX()) === 0;
    };
    Ot.prototype.normalize = function() {
      return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
    };
    Ot.prototype.getX = function() {
      return this.normalize(), this.x.fromRed();
    };
  });
  y22 = T3((Sk, g22) => {
    var yA = or2(), Ai = ri(), m22 = Ie2(), Gs2 = Oa(), wA = yA.assert;
    function ii2(t) {
      this.twisted = (t.a | 0) !== 1, this.mOneA = this.twisted && (t.a | 0) === -1, this.extended = this.mOneA, Gs2.call(this, "edwards", t), this.a = new Ai(t.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new Ai(t.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new Ai(t.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), wA(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (t.c | 0) === 1;
    }
    m22(ii2, Gs2);
    g22.exports = ii2;
    ii2.prototype._mulA = function(e) {
      return this.mOneA ? e.redNeg() : this.a.redMul(e);
    };
    ii2.prototype._mulC = function(e) {
      return this.oneC ? e : this.c.redMul(e);
    };
    ii2.prototype.jpoint = function(e, r, o, f3) {
      return this.point(e, r, o, f3);
    };
    ii2.prototype.pointFromX = function(e, r) {
      e = new Ai(e, 16), e.red || (e = e.toRed(this.red));
      var o = e.redSqr(), f3 = this.c2.redSub(this.a.redMul(o)), p3 = this.one.redSub(this.c2.redMul(this.d).redMul(o)), m3 = f3.redMul(p3.redInvm()), y3 = m3.redSqrt();
      if (y3.redSqr().redSub(m3).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var M2 = y3.fromRed().isOdd();
      return (r && !M2 || !r && M2) && (y3 = y3.redNeg()), this.point(e, y3);
    };
    ii2.prototype.pointFromY = function(e, r) {
      e = new Ai(e, 16), e.red || (e = e.toRed(this.red));
      var o = e.redSqr(), f3 = o.redSub(this.c2), p3 = o.redMul(this.d).redMul(this.c2).redSub(this.a), m3 = f3.redMul(p3.redInvm());
      if (m3.cmp(this.zero) === 0) {
        if (r)
          throw new Error("invalid point");
        return this.point(this.zero, e);
      }
      var y3 = m3.redSqrt();
      if (y3.redSqr().redSub(m3).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      return y3.fromRed().isOdd() !== r && (y3 = y3.redNeg()), this.point(y3, e);
    };
    ii2.prototype.validate = function(e) {
      if (e.isInfinity())
        return true;
      e.normalize();
      var r = e.x.redSqr(), o = e.y.redSqr(), f3 = r.redMul(this.a).redAdd(o), p3 = this.c2.redMul(this.one.redAdd(this.d.redMul(r).redMul(o)));
      return f3.cmp(p3) === 0;
    };
    function at(t, e, r, o, f3) {
      Gs2.BasePoint.call(this, t, "projective"), e === null && r === null && o === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new Ai(e, 16), this.y = new Ai(r, 16), this.z = o ? new Ai(o, 16) : this.curve.one, this.t = f3 && new Ai(f3, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
    }
    m22(at, Gs2.BasePoint);
    ii2.prototype.pointFromJSON = function(e) {
      return at.fromJSON(this, e);
    };
    ii2.prototype.point = function(e, r, o, f3) {
      return new at(this, e, r, o, f3);
    };
    at.fromJSON = function(e, r) {
      return new at(e, r[0], r[1], r[2]);
    };
    at.prototype.inspect = function() {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    at.prototype.isInfinity = function() {
      return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
    };
    at.prototype._extDbl = function() {
      var e = this.x.redSqr(), r = this.y.redSqr(), o = this.z.redSqr();
      o = o.redIAdd(o);
      var f3 = this.curve._mulA(e), p3 = this.x.redAdd(this.y).redSqr().redISub(e).redISub(r), m3 = f3.redAdd(r), y3 = m3.redSub(o), M2 = f3.redSub(r), x4 = p3.redMul(y3), S3 = m3.redMul(M2), E4 = p3.redMul(M2), B3 = y3.redMul(m3);
      return this.curve.point(x4, S3, B3, E4);
    };
    at.prototype._projDbl = function() {
      var e = this.x.redAdd(this.y).redSqr(), r = this.x.redSqr(), o = this.y.redSqr(), f3, p3, m3, y3, M2, x4;
      if (this.curve.twisted) {
        y3 = this.curve._mulA(r);
        var S3 = y3.redAdd(o);
        this.zOne ? (f3 = e.redSub(r).redSub(o).redMul(S3.redSub(this.curve.two)), p3 = S3.redMul(y3.redSub(o)), m3 = S3.redSqr().redSub(S3).redSub(S3)) : (M2 = this.z.redSqr(), x4 = S3.redSub(M2).redISub(M2), f3 = e.redSub(r).redISub(o).redMul(x4), p3 = S3.redMul(y3.redSub(o)), m3 = S3.redMul(x4));
      } else
        y3 = r.redAdd(o), M2 = this.curve._mulC(this.z).redSqr(), x4 = y3.redSub(M2).redSub(M2), f3 = this.curve._mulC(e.redISub(y3)).redMul(x4), p3 = this.curve._mulC(y3).redMul(r.redISub(o)), m3 = y3.redMul(x4);
      return this.curve.point(f3, p3, m3);
    };
    at.prototype.dbl = function() {
      return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
    };
    at.prototype._extAdd = function(e) {
      var r = this.y.redSub(this.x).redMul(e.y.redSub(e.x)), o = this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)), f3 = this.t.redMul(this.curve.dd).redMul(e.t), p3 = this.z.redMul(e.z.redAdd(e.z)), m3 = o.redSub(r), y3 = p3.redSub(f3), M2 = p3.redAdd(f3), x4 = o.redAdd(r), S3 = m3.redMul(y3), E4 = M2.redMul(x4), B3 = m3.redMul(x4), q2 = y3.redMul(M2);
      return this.curve.point(S3, E4, q2, B3);
    };
    at.prototype._projAdd = function(e) {
      var r = this.z.redMul(e.z), o = r.redSqr(), f3 = this.x.redMul(e.x), p3 = this.y.redMul(e.y), m3 = this.curve.d.redMul(f3).redMul(p3), y3 = o.redSub(m3), M2 = o.redAdd(m3), x4 = this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(f3).redISub(p3), S3 = r.redMul(y3).redMul(x4), E4, B3;
      return this.curve.twisted ? (E4 = r.redMul(M2).redMul(p3.redSub(this.curve._mulA(f3))), B3 = y3.redMul(M2)) : (E4 = r.redMul(M2).redMul(p3.redSub(f3)), B3 = this.curve._mulC(y3).redMul(M2)), this.curve.point(S3, E4, B3);
    };
    at.prototype.add = function(e) {
      return this.isInfinity() ? e : e.isInfinity() ? this : this.curve.extended ? this._extAdd(e) : this._projAdd(e);
    };
    at.prototype.mul = function(e) {
      return this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve._wnafMul(this, e);
    };
    at.prototype.mulAdd = function(e, r, o) {
      return this.curve._wnafMulAdd(1, [this, r], [e, o], 2, false);
    };
    at.prototype.jmulAdd = function(e, r, o) {
      return this.curve._wnafMulAdd(1, [this, r], [e, o], 2, true);
    };
    at.prototype.normalize = function() {
      if (this.zOne)
        return this;
      var e = this.z.redInvm();
      return this.x = this.x.redMul(e), this.y = this.y.redMul(e), this.t && (this.t = this.t.redMul(e)), this.z = this.curve.one, this.zOne = true, this;
    };
    at.prototype.neg = function() {
      return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
    };
    at.prototype.getX = function() {
      return this.normalize(), this.x.fromRed();
    };
    at.prototype.getY = function() {
      return this.normalize(), this.y.fromRed();
    };
    at.prototype.eq = function(e) {
      return this === e || this.getX().cmp(e.getX()) === 0 && this.getY().cmp(e.getY()) === 0;
    };
    at.prototype.eqXToP = function(e) {
      var r = e.toRed(this.curve.red).redMul(this.z);
      if (this.x.cmp(r) === 0)
        return true;
      for (var o = e.clone(), f3 = this.curve.redN.redMul(this.z);; ) {
        if (o.iadd(this.curve.n), o.cmp(this.curve.p) >= 0)
          return false;
        if (r.redIAdd(f3), this.x.cmp(r) === 0)
          return true;
      }
    };
    at.prototype.toP = at.prototype.normalize;
    at.prototype.mixedAdd = at.prototype.add;
  });
  Dl = T3((w2) => {
    var Ys = w2;
    Ys.base = Oa();
    Ys.short = c2();
    Ys.mont = b22();
    Ys.edwards = y22();
  });
  Cr = T3((it2) => {
    var MA = ar(), _A = Ie2();
    it2.inherits = _A;
    function xA(t, e) {
      return (t.charCodeAt(e) & 64512) !== 55296 || e < 0 || e + 1 >= t.length ? false : (t.charCodeAt(e + 1) & 64512) === 56320;
    }
    function SA(t, e) {
      if (Array.isArray(t))
        return t.slice();
      if (!t)
        return [];
      var r = [];
      if (typeof t == "string")
        if (e) {
          if (e === "hex")
            for (t = t.replace(/[^a-z0-9]+/ig, ""), t.length % 2 !== 0 && (t = "0" + t), f3 = 0;f3 < t.length; f3 += 2)
              r.push(parseInt(t[f3] + t[f3 + 1], 16));
        } else
          for (var o = 0, f3 = 0;f3 < t.length; f3++) {
            var p3 = t.charCodeAt(f3);
            p3 < 128 ? r[o++] = p3 : p3 < 2048 ? (r[o++] = p3 >> 6 | 192, r[o++] = p3 & 63 | 128) : xA(t, f3) ? (p3 = 65536 + ((p3 & 1023) << 10) + (t.charCodeAt(++f3) & 1023), r[o++] = p3 >> 18 | 240, r[o++] = p3 >> 12 & 63 | 128, r[o++] = p3 >> 6 & 63 | 128, r[o++] = p3 & 63 | 128) : (r[o++] = p3 >> 12 | 224, r[o++] = p3 >> 6 & 63 | 128, r[o++] = p3 & 63 | 128);
          }
      else
        for (f3 = 0;f3 < t.length; f3++)
          r[f3] = t[f3] | 0;
      return r;
    }
    it2.toArray = SA;
    function EA(t) {
      for (var e = "", r = 0;r < t.length; r++)
        e += _22(t[r].toString(16));
      return e;
    }
    it2.toHex = EA;
    function M2(t) {
      var e = t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (t & 255) << 24;
      return e >>> 0;
    }
    it2.htonl = M2;
    function AA(t, e) {
      for (var r = "", o = 0;o < t.length; o++) {
        var f3 = t[o];
        e === "little" && (f3 = M2(f3)), r += x22(f3.toString(16));
      }
      return r;
    }
    it2.toHex32 = AA;
    function _22(t) {
      return t.length === 1 ? "0" + t : t;
    }
    it2.zero2 = _22;
    function x22(t) {
      return t.length === 7 ? "0" + t : t.length === 6 ? "00" + t : t.length === 5 ? "000" + t : t.length === 4 ? "0000" + t : t.length === 3 ? "00000" + t : t.length === 2 ? "000000" + t : t.length === 1 ? "0000000" + t : t;
    }
    it2.zero8 = x22;
    function RA(t, e, r, o) {
      var f3 = r - e;
      MA(f3 % 4 === 0);
      for (var p3 = new Array(f3 / 4), m3 = 0, y3 = e;m3 < p3.length; m3++, y3 += 4) {
        var M3;
        o === "big" ? M3 = t[y3] << 24 | t[y3 + 1] << 16 | t[y3 + 2] << 8 | t[y3 + 3] : M3 = t[y3 + 3] << 24 | t[y3 + 2] << 16 | t[y3 + 1] << 8 | t[y3], p3[m3] = M3 >>> 0;
      }
      return p3;
    }
    it2.join32 = RA;
    function BA(t, e) {
      for (var r = new Array(t.length * 4), o = 0, f3 = 0;o < t.length; o++, f3 += 4) {
        var p3 = t[o];
        e === "big" ? (r[f3] = p3 >>> 24, r[f3 + 1] = p3 >>> 16 & 255, r[f3 + 2] = p3 >>> 8 & 255, r[f3 + 3] = p3 & 255) : (r[f3 + 3] = p3 >>> 24, r[f3 + 2] = p3 >>> 16 & 255, r[f3 + 1] = p3 >>> 8 & 255, r[f3] = p3 & 255);
      }
      return r;
    }
    it2.split32 = BA;
    function qA(t, e) {
      return t >>> e | t << 32 - e;
    }
    it2.rotr32 = qA;
    function IA(t, e) {
      return t << e | t >>> 32 - e;
    }
    it2.rotl32 = IA;
    function TA(t, e) {
      return t + e >>> 0;
    }
    it2.sum32 = TA;
    function kA(t, e, r) {
      return t + e + r >>> 0;
    }
    it2.sum32_3 = kA;
    function LA(t, e, r, o) {
      return t + e + r + o >>> 0;
    }
    it2.sum32_4 = LA;
    function NA(t, e, r, o, f3) {
      return t + e + r + o + f3 >>> 0;
    }
    it2.sum32_5 = NA;
    function DA(t, e, r, o) {
      var f3 = t[e], p3 = t[e + 1], m3 = o + p3 >>> 0, y3 = (m3 < o ? 1 : 0) + r + f3;
      t[e] = y3 >>> 0, t[e + 1] = m3;
    }
    it2.sum64 = DA;
    function PA(t, e, r, o) {
      var f3 = e + o >>> 0, p3 = (f3 < e ? 1 : 0) + t + r;
      return p3 >>> 0;
    }
    it2.sum64_hi = PA;
    function CA(t, e, r, o) {
      var f3 = e + o;
      return f3 >>> 0;
    }
    it2.sum64_lo = CA;
    function OA(t, e, r, o, f3, p3, m3, y3) {
      var M3 = 0, x4 = e;
      x4 = x4 + o >>> 0, M3 += x4 < e ? 1 : 0, x4 = x4 + p3 >>> 0, M3 += x4 < p3 ? 1 : 0, x4 = x4 + y3 >>> 0, M3 += x4 < y3 ? 1 : 0;
      var S3 = t + r + f3 + m3 + M3;
      return S3 >>> 0;
    }
    it2.sum64_4_hi = OA;
    function FA(t, e, r, o, f3, p3, m3, y3) {
      var M3 = e + o + p3 + y3;
      return M3 >>> 0;
    }
    it2.sum64_4_lo = FA;
    function UA(t, e, r, o, f3, p3, m3, y3, M3, x4) {
      var S3 = 0, E4 = e;
      E4 = E4 + o >>> 0, S3 += E4 < e ? 1 : 0, E4 = E4 + p3 >>> 0, S3 += E4 < p3 ? 1 : 0, E4 = E4 + y3 >>> 0, S3 += E4 < y3 ? 1 : 0, E4 = E4 + x4 >>> 0, S3 += E4 < x4 ? 1 : 0;
      var B3 = t + r + f3 + m3 + M3 + S3;
      return B3 >>> 0;
    }
    it2.sum64_5_hi = UA;
    function zA(t, e, r, o, f3, p3, m3, y3, M3, x4) {
      var S3 = e + o + p3 + y3 + x4;
      return S3 >>> 0;
    }
    it2.sum64_5_lo = zA;
    function HA(t, e, r) {
      var o = e << 32 - r | t >>> r;
      return o >>> 0;
    }
    it2.rotr64_hi = HA;
    function WA(t, e, r) {
      var o = t << 32 - r | e >>> r;
      return o >>> 0;
    }
    it2.rotr64_lo = WA;
    function KA(t, e, r) {
      return t >>> r;
    }
    it2.shr64_hi = KA;
    function jA(t, e, r) {
      var o = t << 32 - r | e >>> r;
      return o >>> 0;
    }
    it2.shr64_lo = jA;
  });
  Tf = T3((E22) => {
    var S22 = Cr(), ZA = ar();
    function Xs() {
      this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
    }
    E22.BlockHash = Xs;
    Xs.prototype.update = function(e, r) {
      if (e = S22.toArray(e, r), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
        e = this.pending;
        var o = e.length % this._delta8;
        this.pending = e.slice(e.length - o, e.length), this.pending.length === 0 && (this.pending = null), e = S22.join32(e, 0, e.length - o, this.endian);
        for (var f3 = 0;f3 < e.length; f3 += this._delta32)
          this._update(e, f3, f3 + this._delta32);
      }
      return this;
    };
    Xs.prototype.digest = function(e) {
      return this.update(this._pad()), ZA(this.pending === null), this._digest(e);
    };
    Xs.prototype._pad = function() {
      var e = this.pendingTotal, r = this._delta8, o = r - (e + this.padLength) % r, f3 = new Array(o + this.padLength);
      f3[0] = 128;
      for (var p3 = 1;p3 < o; p3++)
        f3[p3] = 0;
      if (e <<= 3, this.endian === "big") {
        for (var m3 = 8;m3 < this.padLength; m3++)
          f3[p3++] = 0;
        f3[p3++] = 0, f3[p3++] = 0, f3[p3++] = 0, f3[p3++] = 0, f3[p3++] = e >>> 24 & 255, f3[p3++] = e >>> 16 & 255, f3[p3++] = e >>> 8 & 255, f3[p3++] = e & 255;
      } else
        for (f3[p3++] = e & 255, f3[p3++] = e >>> 8 & 255, f3[p3++] = e >>> 16 & 255, f3[p3++] = e >>> 24 & 255, f3[p3++] = 0, f3[p3++] = 0, f3[p3++] = 0, f3[p3++] = 0, m3 = 8;m3 < this.padLength; m3++)
          f3[p3++] = 0;
      return f3;
    };
  });
  Pl = T3((Ri) => {
    var VA = Cr(), ni = VA.rotr32;
    function $A(t, e, r, o) {
      if (t === 0)
        return A2(e, r, o);
      if (t === 1 || t === 3)
        return B22(e, r, o);
      if (t === 2)
        return R2(e, r, o);
    }
    Ri.ft_1 = $A;
    function A2(t, e, r) {
      return t & e ^ ~t & r;
    }
    Ri.ch32 = A2;
    function R2(t, e, r) {
      return t & e ^ t & r ^ e & r;
    }
    Ri.maj32 = R2;
    function B22(t, e, r) {
      return t ^ e ^ r;
    }
    Ri.p32 = B22;
    function GA(t) {
      return ni(t, 2) ^ ni(t, 13) ^ ni(t, 22);
    }
    Ri.s0_256 = GA;
    function YA(t) {
      return ni(t, 6) ^ ni(t, 11) ^ ni(t, 25);
    }
    Ri.s1_256 = YA;
    function XA(t) {
      return ni(t, 7) ^ ni(t, 18) ^ t >>> 3;
    }
    Ri.g0_256 = XA;
    function JA(t) {
      return ni(t, 17) ^ ni(t, 19) ^ t >>> 10;
    }
    Ri.g1_256 = JA;
  });
  T22 = T3((qk, I22) => {
    var kf = Cr(), QA = Tf(), eR = Pl(), Cl = kf.rotl32, Fa = kf.sum32, tR = kf.sum32_5, rR = eR.ft_1, q2 = QA.BlockHash, iR = [1518500249, 1859775393, 2400959708, 3395469782];
    function fi() {
      if (!(this instanceof fi))
        return new fi;
      q2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
    }
    kf.inherits(fi, q2);
    I22.exports = fi;
    fi.blockSize = 512;
    fi.outSize = 160;
    fi.hmacStrength = 80;
    fi.padLength = 64;
    fi.prototype._update = function(e, r) {
      for (var o = this.W, f3 = 0;f3 < 16; f3++)
        o[f3] = e[r + f3];
      for (;f3 < o.length; f3++)
        o[f3] = Cl(o[f3 - 3] ^ o[f3 - 8] ^ o[f3 - 14] ^ o[f3 - 16], 1);
      var p3 = this.h[0], m3 = this.h[1], y3 = this.h[2], M2 = this.h[3], x4 = this.h[4];
      for (f3 = 0;f3 < o.length; f3++) {
        var S3 = ~~(f3 / 20), E4 = tR(Cl(p3, 5), rR(S3, m3, y3, M2), x4, o[f3], iR[S3]);
        x4 = M2, M2 = y3, y3 = Cl(m3, 30), m3 = p3, p3 = E4;
      }
      this.h[0] = Fa(this.h[0], p3), this.h[1] = Fa(this.h[1], m3), this.h[2] = Fa(this.h[2], y3), this.h[3] = Fa(this.h[3], M2), this.h[4] = Fa(this.h[4], x4);
    };
    fi.prototype._digest = function(e) {
      return e === "hex" ? kf.toHex32(this.h, "big") : kf.split32(this.h, "big");
    };
  });
  Ol = T3((Ik, L22) => {
    var Lf = Cr(), nR = Tf(), Nf = Pl(), fR = ar(), Or = Lf.sum32, aR = Lf.sum32_4, oR = Lf.sum32_5, sR = Nf.ch32, hR = Nf.maj32, uR = Nf.s0_256, lR = Nf.s1_256, dR = Nf.g0_256, cR = Nf.g1_256, k22 = nR.BlockHash, pR = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
    function ai() {
      if (!(this instanceof ai))
        return new ai;
      k22.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = pR, this.W = new Array(64);
    }
    Lf.inherits(ai, k22);
    L22.exports = ai;
    ai.blockSize = 512;
    ai.outSize = 256;
    ai.hmacStrength = 192;
    ai.padLength = 64;
    ai.prototype._update = function(e, r) {
      for (var o = this.W, f3 = 0;f3 < 16; f3++)
        o[f3] = e[r + f3];
      for (;f3 < o.length; f3++)
        o[f3] = aR(cR(o[f3 - 2]), o[f3 - 7], dR(o[f3 - 15]), o[f3 - 16]);
      var p3 = this.h[0], m3 = this.h[1], y3 = this.h[2], M2 = this.h[3], x4 = this.h[4], S3 = this.h[5], E4 = this.h[6], B3 = this.h[7];
      for (fR(this.k.length === o.length), f3 = 0;f3 < o.length; f3++) {
        var q2 = oR(B3, lR(x4), sR(x4, S3, E4), this.k[f3], o[f3]), L3 = Or(uR(p3), hR(p3, m3, y3));
        B3 = E4, E4 = S3, S3 = x4, x4 = Or(M2, q2), M2 = y3, y3 = m3, m3 = p3, p3 = Or(q2, L3);
      }
      this.h[0] = Or(this.h[0], p3), this.h[1] = Or(this.h[1], m3), this.h[2] = Or(this.h[2], y3), this.h[3] = Or(this.h[3], M2), this.h[4] = Or(this.h[4], x4), this.h[5] = Or(this.h[5], S3), this.h[6] = Or(this.h[6], E4), this.h[7] = Or(this.h[7], B3);
    };
    ai.prototype._digest = function(e) {
      return e === "hex" ? Lf.toHex32(this.h, "big") : Lf.split32(this.h, "big");
    };
  });
  P2 = T3((Tk, D2) => {
    var Fl = Cr(), N22 = Ol();
    function Bi2() {
      if (!(this instanceof Bi2))
        return new Bi2;
      N22.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
    }
    Fl.inherits(Bi2, N22);
    D2.exports = Bi2;
    Bi2.blockSize = 512;
    Bi2.outSize = 224;
    Bi2.hmacStrength = 192;
    Bi2.padLength = 64;
    Bi2.prototype._digest = function(e) {
      return e === "hex" ? Fl.toHex32(this.h.slice(0, 7), "big") : Fl.split32(this.h.slice(0, 7), "big");
    };
  });
  Hl = T3((kk, U22) => {
    var rr2 = Cr(), vR = Tf(), bR = ar(), oi = rr2.rotr64_hi, si = rr2.rotr64_lo, C2 = rr2.shr64_hi, O22 = rr2.shr64_lo, Ji = rr2.sum64, Ul = rr2.sum64_hi, zl = rr2.sum64_lo, mR = rr2.sum64_4_hi, gR = rr2.sum64_4_lo, yR = rr2.sum64_5_hi, wR = rr2.sum64_5_lo, F2 = vR.BlockHash, MR = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
    function Fr() {
      if (!(this instanceof Fr))
        return new Fr;
      F2.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = MR, this.W = new Array(160);
    }
    rr2.inherits(Fr, F2);
    U22.exports = Fr;
    Fr.blockSize = 1024;
    Fr.outSize = 512;
    Fr.hmacStrength = 192;
    Fr.padLength = 128;
    Fr.prototype._prepareBlock = function(e, r) {
      for (var o = this.W, f3 = 0;f3 < 32; f3++)
        o[f3] = e[r + f3];
      for (;f3 < o.length; f3 += 2) {
        var p3 = kR(o[f3 - 4], o[f3 - 3]), m3 = LR(o[f3 - 4], o[f3 - 3]), y3 = o[f3 - 14], M2 = o[f3 - 13], x4 = IR(o[f3 - 30], o[f3 - 29]), S3 = TR(o[f3 - 30], o[f3 - 29]), E4 = o[f3 - 32], B3 = o[f3 - 31];
        o[f3] = mR(p3, m3, y3, M2, x4, S3, E4, B3), o[f3 + 1] = gR(p3, m3, y3, M2, x4, S3, E4, B3);
      }
    };
    Fr.prototype._update = function(e, r) {
      this._prepareBlock(e, r);
      var o = this.W, f3 = this.h[0], p3 = this.h[1], m3 = this.h[2], y3 = this.h[3], M2 = this.h[4], x4 = this.h[5], S3 = this.h[6], E4 = this.h[7], B3 = this.h[8], q2 = this.h[9], L3 = this.h[10], ge2 = this.h[11], _e = this.h[12], N3 = this.h[13], we = this.h[14], ye = this.h[15];
      bR(this.k.length === o.length);
      for (var xe = 0;xe < o.length; xe += 2) {
        var Re = we, Ee = ye, Ae = BR(B3, q2), P3 = qR(B3, q2), Se2 = _R(B3, q2, L3, ge2, _e, N3), v2 = xR(B3, q2, L3, ge2, _e, N3), i = this.k[xe], a3 = this.k[xe + 1], h3 = o[xe], s2 = o[xe + 1], u3 = yR(Re, Ee, Ae, P3, Se2, v2, i, a3, h3, s2), c3 = wR(Re, Ee, Ae, P3, Se2, v2, i, a3, h3, s2);
        Re = AR(f3, p3), Ee = RR(f3, p3), Ae = SR(f3, p3, m3, y3, M2, x4), P3 = ER(f3, p3, m3, y3, M2, x4);
        var b3 = Ul(Re, Ee, Ae, P3), l2 = zl(Re, Ee, Ae, P3);
        we = _e, ye = N3, _e = L3, N3 = ge2, L3 = B3, ge2 = q2, B3 = Ul(S3, E4, u3, c3), q2 = zl(E4, E4, u3, c3), S3 = M2, E4 = x4, M2 = m3, x4 = y3, m3 = f3, y3 = p3, f3 = Ul(u3, c3, b3, l2), p3 = zl(u3, c3, b3, l2);
      }
      Ji(this.h, 0, f3, p3), Ji(this.h, 2, m3, y3), Ji(this.h, 4, M2, x4), Ji(this.h, 6, S3, E4), Ji(this.h, 8, B3, q2), Ji(this.h, 10, L3, ge2), Ji(this.h, 12, _e, N3), Ji(this.h, 14, we, ye);
    };
    Fr.prototype._digest = function(e) {
      return e === "hex" ? rr2.toHex32(this.h, "big") : rr2.split32(this.h, "big");
    };
    function _R(t, e, r, o, f3) {
      var p3 = t & r ^ ~t & f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function xR(t, e, r, o, f3, p3) {
      var m3 = e & o ^ ~e & p3;
      return m3 < 0 && (m3 += 4294967296), m3;
    }
    function SR(t, e, r, o, f3) {
      var p3 = t & r ^ t & f3 ^ r & f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function ER(t, e, r, o, f3, p3) {
      var m3 = e & o ^ e & p3 ^ o & p3;
      return m3 < 0 && (m3 += 4294967296), m3;
    }
    function AR(t, e) {
      var r = oi(t, e, 28), o = oi(e, t, 2), f3 = oi(e, t, 7), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function RR(t, e) {
      var r = si(t, e, 28), o = si(e, t, 2), f3 = si(e, t, 7), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function BR(t, e) {
      var r = oi(t, e, 14), o = oi(t, e, 18), f3 = oi(e, t, 9), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function qR(t, e) {
      var r = si(t, e, 14), o = si(t, e, 18), f3 = si(e, t, 9), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function IR(t, e) {
      var r = oi(t, e, 1), o = oi(t, e, 8), f3 = C2(t, e, 7), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function TR(t, e) {
      var r = si(t, e, 1), o = si(t, e, 8), f3 = O22(t, e, 7), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function kR(t, e) {
      var r = oi(t, e, 19), o = oi(e, t, 29), f3 = C2(t, e, 6), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
    function LR(t, e) {
      var r = si(t, e, 19), o = si(e, t, 29), f3 = O22(t, e, 6), p3 = r ^ o ^ f3;
      return p3 < 0 && (p3 += 4294967296), p3;
    }
  });
  W2 = T3((Lk, H2) => {
    var Wl = Cr(), z2 = Hl();
    function qi() {
      if (!(this instanceof qi))
        return new qi;
      z2.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
    }
    Wl.inherits(qi, z2);
    H2.exports = qi;
    qi.blockSize = 1024;
    qi.outSize = 384;
    qi.hmacStrength = 192;
    qi.padLength = 128;
    qi.prototype._digest = function(e) {
      return e === "hex" ? Wl.toHex32(this.h.slice(0, 12), "big") : Wl.split32(this.h.slice(0, 12), "big");
    };
  });
  K2 = T3((Df) => {
    Df.sha1 = T22();
    Df.sha224 = P2();
    Df.sha256 = Ol();
    Df.sha384 = W2();
    Df.sha512 = Hl();
  });
  Y2 = T3((G22) => {
    var On = Cr(), NR = Tf(), Js = On.rotl32, j22 = On.sum32, Ua = On.sum32_3, Z2 = On.sum32_4, $2 = NR.BlockHash;
    function hi() {
      if (!(this instanceof hi))
        return new hi;
      $2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
    }
    On.inherits(hi, $2);
    G22.ripemd160 = hi;
    hi.blockSize = 512;
    hi.outSize = 160;
    hi.hmacStrength = 192;
    hi.padLength = 64;
    hi.prototype._update = function(e, r) {
      for (var o = this.h[0], f3 = this.h[1], p3 = this.h[2], m3 = this.h[3], y3 = this.h[4], M2 = o, x4 = f3, S3 = p3, E4 = m3, B3 = y3, q2 = 0;q2 < 80; q2++) {
        var L3 = j22(Js(Z2(o, V22(q2, f3, p3, m3), e[CR[q2] + r], DR(q2)), FR[q2]), y3);
        o = y3, y3 = m3, m3 = Js(p3, 10), p3 = f3, f3 = L3, L3 = j22(Js(Z2(M2, V22(79 - q2, x4, S3, E4), e[OR[q2] + r], PR(q2)), UR[q2]), B3), M2 = B3, B3 = E4, E4 = Js(S3, 10), S3 = x4, x4 = L3;
      }
      L3 = Ua(this.h[1], p3, E4), this.h[1] = Ua(this.h[2], m3, B3), this.h[2] = Ua(this.h[3], y3, M2), this.h[3] = Ua(this.h[4], o, x4), this.h[4] = Ua(this.h[0], f3, S3), this.h[0] = L3;
    };
    hi.prototype._digest = function(e) {
      return e === "hex" ? On.toHex32(this.h, "little") : On.split32(this.h, "little");
    };
    function V22(t, e, r, o) {
      return t <= 15 ? e ^ r ^ o : t <= 31 ? e & r | ~e & o : t <= 47 ? (e | ~r) ^ o : t <= 63 ? e & o | r & ~o : e ^ (r | ~o);
    }
    function DR(t) {
      return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838;
    }
    function PR(t) {
      return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0;
    }
    var CR = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], OR = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], FR = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], UR = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
  });
  J2 = T3((Pk, X22) => {
    var zR = Cr(), HR = ar();
    function Pf(t, e, r) {
      if (!(this instanceof Pf))
        return new Pf(t, e, r);
      this.Hash = t, this.blockSize = t.blockSize / 8, this.outSize = t.outSize / 8, this.inner = null, this.outer = null, this._init(zR.toArray(e, r));
    }
    X22.exports = Pf;
    Pf.prototype._init = function(e) {
      e.length > this.blockSize && (e = new this.Hash().update(e).digest()), HR(e.length <= this.blockSize);
      for (var r = e.length;r < this.blockSize; r++)
        e.push(0);
      for (r = 0;r < e.length; r++)
        e[r] ^= 54;
      for (this.inner = new this.Hash().update(e), r = 0;r < e.length; r++)
        e[r] ^= 106;
      this.outer = new this.Hash().update(e);
    };
    Pf.prototype.update = function(e, r) {
      return this.inner.update(e, r), this;
    };
    Pf.prototype.digest = function(e) {
      return this.outer.update(this.inner.digest()), this.outer.digest(e);
    };
  });
  Qs2 = T3((Q2) => {
    var Kt = Q2;
    Kt.utils = Cr();
    Kt.common = Tf();
    Kt.sha = K2();
    Kt.ripemd = Y2();
    Kt.hmac = J2();
    Kt.sha1 = Kt.sha.sha1;
    Kt.sha256 = Kt.sha.sha256;
    Kt.sha224 = Kt.sha.sha224;
    Kt.sha384 = Kt.sha.sha384;
    Kt.sha512 = Kt.sha.sha512;
    Kt.ripemd160 = Kt.ripemd.ripemd160;
  });
  ty = T3((Ok, ey) => {
    ey.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } };
  });
  e0 = T3((ny) => {
    var jl = ny, Qi = Qs2(), Kl = Dl(), WR = or2(), ry = WR.assert;
    function iy(t) {
      t.type === "short" ? this.curve = new Kl.short(t) : t.type === "edwards" ? this.curve = new Kl.edwards(t) : this.curve = new Kl.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, ry(this.g.validate(), "Invalid curve"), ry(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    jl.PresetCurve = iy;
    function en(t, e) {
      Object.defineProperty(jl, t, { configurable: true, enumerable: true, get: function() {
        var r = new iy(e);
        return Object.defineProperty(jl, t, { configurable: true, enumerable: true, value: r }), r;
      } });
    }
    en("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: Qi.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] });
    en("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: Qi.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] });
    en("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: Qi.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] });
    en("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: Qi.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] });
    en("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: Qi.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] });
    en("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: Qi.sha256, gRed: false, g: ["9"] });
    en("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: Qi.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
    var Zl;
    try {
      Zl = ty();
    } catch {
      Zl = undefined;
    }
    en("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: Qi.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", Zl] });
  });
  oy = T3((Uk, ay) => {
    var KR = Qs2(), Fn = Ll(), fy = ar();
    function tn(t) {
      if (!(this instanceof tn))
        return new tn(t);
      this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
      var e = Fn.toArray(t.entropy, t.entropyEnc || "hex"), r = Fn.toArray(t.nonce, t.nonceEnc || "hex"), o = Fn.toArray(t.pers, t.persEnc || "hex");
      fy(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, o);
    }
    ay.exports = tn;
    tn.prototype._init = function(e, r, o) {
      var f3 = e.concat(r).concat(o);
      this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
      for (var p3 = 0;p3 < this.V.length; p3++)
        this.K[p3] = 0, this.V[p3] = 1;
      this._update(f3), this._reseed = 1, this.reseedInterval = 281474976710656;
    };
    tn.prototype._hmac = function() {
      return new KR.hmac(this.hash, this.K);
    };
    tn.prototype._update = function(e) {
      var r = this._hmac().update(this.V).update([0]);
      e && (r = r.update(e)), this.K = r.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest());
    };
    tn.prototype.reseed = function(e, r, o, f3) {
      typeof r != "string" && (f3 = o, o = r, r = null), e = Fn.toArray(e, r), o = Fn.toArray(o, f3), fy(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e.concat(o || [])), this._reseed = 1;
    };
    tn.prototype.generate = function(e, r, o, f3) {
      if (this._reseed > this.reseedInterval)
        throw new Error("Reseed is required");
      typeof r != "string" && (f3 = o, o = r, r = null), o && (o = Fn.toArray(o, f3 || "hex"), this._update(o));
      for (var p3 = [];p3.length < e; )
        this.V = this._hmac().update(this.V).digest(), p3 = p3.concat(this.V);
      var m3 = p3.slice(0, e);
      return this._update(o), this._reseed++, Fn.encode(m3, r);
    };
  });
  hy = T3((zk, sy) => {
    var jR = ri(), ZR = or2(), Vl = ZR.assert;
    function Gt(t, e) {
      this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc);
    }
    sy.exports = Gt;
    Gt.fromPublic = function(e, r, o) {
      return r instanceof Gt ? r : new Gt(e, { pub: r, pubEnc: o });
    };
    Gt.fromPrivate = function(e, r, o) {
      return r instanceof Gt ? r : new Gt(e, { priv: r, privEnc: o });
    };
    Gt.prototype.validate = function() {
      var e = this.getPublic();
      return e.isInfinity() ? { result: false, reason: "Invalid public key" } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
    };
    Gt.prototype.getPublic = function(e, r) {
      return typeof e == "string" && (r = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r ? this.pub.encode(r, e) : this.pub;
    };
    Gt.prototype.getPrivate = function(e) {
      return e === "hex" ? this.priv.toString(16, 2) : this.priv;
    };
    Gt.prototype._importPrivate = function(e, r) {
      this.priv = new jR(e, r || 16), this.priv = this.priv.umod(this.ec.curve.n);
    };
    Gt.prototype._importPublic = function(e, r) {
      if (e.x || e.y) {
        this.ec.curve.type === "mont" ? Vl(e.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && Vl(e.x && e.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e.x, e.y);
        return;
      }
      this.pub = this.ec.curve.decodePoint(e, r);
    };
    Gt.prototype.derive = function(e) {
      return e.validate() || Vl(e.validate(), "public point not validated"), e.mul(this.priv).getX();
    };
    Gt.prototype.sign = function(e, r, o) {
      return this.ec.sign(e, this, r, o);
    };
    Gt.prototype.verify = function(e, r) {
      return this.ec.verify(e, r, this);
    };
    Gt.prototype.inspect = function() {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
  });
  dy = T3((Hk, ly) => {
    var t0 = ri(), Yl = or2(), VR = Yl.assert;
    function r0(t, e) {
      if (t instanceof r0)
        return t;
      this._importDER(t, e) || (VR(t.r && t.s, "Signature without r or s"), this.r = new t0(t.r, 16), this.s = new t0(t.s, 16), t.recoveryParam === undefined ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam);
    }
    ly.exports = r0;
    function $R() {
      this.place = 0;
    }
    function $l(t, e) {
      var r = t[e.place++];
      if (!(r & 128))
        return r;
      var o = r & 15;
      if (o === 0 || o > 4)
        return false;
      for (var f3 = 0, p3 = 0, m3 = e.place;p3 < o; p3++, m3++)
        f3 <<= 8, f3 |= t[m3], f3 >>>= 0;
      return f3 <= 127 ? false : (e.place = m3, f3);
    }
    function uy(t) {
      for (var e = 0, r = t.length - 1;!t[e] && !(t[e + 1] & 128) && e < r; )
        e++;
      return e === 0 ? t : t.slice(e);
    }
    r0.prototype._importDER = function(e, r) {
      e = Yl.toArray(e, r);
      var o = new $R;
      if (e[o.place++] !== 48)
        return false;
      var f3 = $l(e, o);
      if (f3 === false || f3 + o.place !== e.length || e[o.place++] !== 2)
        return false;
      var p3 = $l(e, o);
      if (p3 === false)
        return false;
      var m3 = e.slice(o.place, p3 + o.place);
      if (o.place += p3, e[o.place++] !== 2)
        return false;
      var y3 = $l(e, o);
      if (y3 === false || e.length !== y3 + o.place)
        return false;
      var M2 = e.slice(o.place, y3 + o.place);
      if (m3[0] === 0)
        if (m3[1] & 128)
          m3 = m3.slice(1);
        else
          return false;
      if (M2[0] === 0)
        if (M2[1] & 128)
          M2 = M2.slice(1);
        else
          return false;
      return this.r = new t0(m3), this.s = new t0(M2), this.recoveryParam = null, true;
    };
    function Gl(t, e) {
      if (e < 128) {
        t.push(e);
        return;
      }
      var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
      for (t.push(r | 128);--r; )
        t.push(e >>> (r << 3) & 255);
      t.push(e);
    }
    r0.prototype.toDER = function(e) {
      var r = this.r.toArray(), o = this.s.toArray();
      for (r[0] & 128 && (r = [0].concat(r)), o[0] & 128 && (o = [0].concat(o)), r = uy(r), o = uy(o);!o[0] && !(o[1] & 128); )
        o = o.slice(1);
      var f3 = [2];
      Gl(f3, r.length), f3 = f3.concat(r), f3.push(2), Gl(f3, o.length);
      var p3 = f3.concat(o), m3 = [48];
      return Gl(m3, p3.length), m3 = m3.concat(p3), Yl.encode(m3, e);
    };
  });
  by = T3((Wk, vy) => {
    var Un3 = ri(), cy = oy(), GR = or2(), Xl = e0(), YR = Es2(), py = GR.assert, Jl = hy(), i0 = dy();
    function Sr2(t) {
      if (!(this instanceof Sr2))
        return new Sr2(t);
      typeof t == "string" && (py(Object.prototype.hasOwnProperty.call(Xl, t), "Unknown curve " + t), t = Xl[t]), t instanceof Xl.PresetCurve && (t = { curve: t }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash;
    }
    vy.exports = Sr2;
    Sr2.prototype.keyPair = function(e) {
      return new Jl(this, e);
    };
    Sr2.prototype.keyFromPrivate = function(e, r) {
      return Jl.fromPrivate(this, e, r);
    };
    Sr2.prototype.keyFromPublic = function(e, r) {
      return Jl.fromPublic(this, e, r);
    };
    Sr2.prototype.genKeyPair = function(e) {
      e || (e = {});
      for (var r = new cy({ hash: this.hash, pers: e.pers, persEnc: e.persEnc || "utf8", entropy: e.entropy || YR(this.hash.hmacStrength), entropyEnc: e.entropy && e.entropyEnc || "utf8", nonce: this.n.toArray() }), o = this.n.byteLength(), f3 = this.n.sub(new Un3(2));; ) {
        var p3 = new Un3(r.generate(o));
        if (!(p3.cmp(f3) > 0))
          return p3.iaddn(1), this.keyFromPrivate(p3);
      }
    };
    Sr2.prototype._truncateToN = function(e, r) {
      var o = e.byteLength() * 8 - this.n.bitLength();
      return o > 0 && (e = e.ushrn(o)), !r && e.cmp(this.n) >= 0 ? e.sub(this.n) : e;
    };
    Sr2.prototype.sign = function(e, r, o, f3) {
      typeof o == "object" && (f3 = o, o = null), f3 || (f3 = {}), r = this.keyFromPrivate(r, o), e = this._truncateToN(new Un3(e, 16));
      for (var p3 = this.n.byteLength(), m3 = r.getPrivate().toArray("be", p3), y3 = e.toArray("be", p3), M2 = new cy({ hash: this.hash, entropy: m3, nonce: y3, pers: f3.pers, persEnc: f3.persEnc || "utf8" }), x4 = this.n.sub(new Un3(1)), S3 = 0;; S3++) {
        var E4 = f3.k ? f3.k(S3) : new Un3(M2.generate(this.n.byteLength()));
        if (E4 = this._truncateToN(E4, true), !(E4.cmpn(1) <= 0 || E4.cmp(x4) >= 0)) {
          var B3 = this.g.mul(E4);
          if (!B3.isInfinity()) {
            var q2 = B3.getX(), L3 = q2.umod(this.n);
            if (L3.cmpn(0) !== 0) {
              var ge2 = E4.invm(this.n).mul(L3.mul(r.getPrivate()).iadd(e));
              if (ge2 = ge2.umod(this.n), ge2.cmpn(0) !== 0) {
                var _e = (B3.getY().isOdd() ? 1 : 0) | (q2.cmp(L3) !== 0 ? 2 : 0);
                return f3.canonical && ge2.cmp(this.nh) > 0 && (ge2 = this.n.sub(ge2), _e ^= 1), new i0({ r: L3, s: ge2, recoveryParam: _e });
              }
            }
          }
        }
      }
    };
    Sr2.prototype.verify = function(e, r, o, f3) {
      e = this._truncateToN(new Un3(e, 16)), o = this.keyFromPublic(o, f3), r = new i0(r, "hex");
      var { r: p3, s: m3 } = r;
      if (p3.cmpn(1) < 0 || p3.cmp(this.n) >= 0 || m3.cmpn(1) < 0 || m3.cmp(this.n) >= 0)
        return false;
      var y3 = m3.invm(this.n), M2 = y3.mul(e).umod(this.n), x4 = y3.mul(p3).umod(this.n), S3;
      return this.curve._maxwellTrick ? (S3 = this.g.jmulAdd(M2, o.getPublic(), x4), S3.isInfinity() ? false : S3.eqXToP(p3)) : (S3 = this.g.mulAdd(M2, o.getPublic(), x4), S3.isInfinity() ? false : S3.getX().umod(this.n).cmp(p3) === 0);
    };
    Sr2.prototype.recoverPubKey = function(t, e, r, o) {
      py((3 & r) === r, "The recovery param is more than two bits"), e = new i0(e, o);
      var f3 = this.n, p3 = new Un3(t), m3 = e.r, y3 = e.s, M2 = r & 1, x4 = r >> 1;
      if (m3.cmp(this.curve.p.umod(this.curve.n)) >= 0 && x4)
        throw new Error("Unable to find sencond key candinate");
      x4 ? m3 = this.curve.pointFromX(m3.add(this.curve.n), M2) : m3 = this.curve.pointFromX(m3, M2);
      var S3 = e.r.invm(f3), E4 = f3.sub(p3).mul(S3).umod(f3), B3 = y3.mul(S3).umod(f3);
      return this.g.mulAdd(E4, m3, B3);
    };
    Sr2.prototype.getKeyRecoveryParam = function(t, e, r, o) {
      if (e = new i0(e, o), e.recoveryParam !== null)
        return e.recoveryParam;
      for (var f3 = 0;f3 < 4; f3++) {
        var p3;
        try {
          p3 = this.recoverPubKey(t, e, f3);
        } catch {
          continue;
        }
        if (p3.eq(r))
          return f3;
      }
      throw new Error("Unable to find valid recovery factor");
    };
  });
  wy = T3((Kk, yy) => {
    var za = or2(), gy = za.assert, my = za.parseBytes, Cf = za.cachedProperty;
    function Ft(t, e) {
      this.eddsa = t, this._secret = my(e.secret), t.isPoint(e.pub) ? this._pub = e.pub : this._pubBytes = my(e.pub);
    }
    Ft.fromPublic = function(e, r) {
      return r instanceof Ft ? r : new Ft(e, { pub: r });
    };
    Ft.fromSecret = function(e, r) {
      return r instanceof Ft ? r : new Ft(e, { secret: r });
    };
    Ft.prototype.secret = function() {
      return this._secret;
    };
    Cf(Ft, "pubBytes", function() {
      return this.eddsa.encodePoint(this.pub());
    });
    Cf(Ft, "pub", function() {
      return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
    });
    Cf(Ft, "privBytes", function() {
      var e = this.eddsa, r = this.hash(), o = e.encodingLength - 1, f3 = r.slice(0, e.encodingLength);
      return f3[0] &= 248, f3[o] &= 127, f3[o] |= 64, f3;
    });
    Cf(Ft, "priv", function() {
      return this.eddsa.decodeInt(this.privBytes());
    });
    Cf(Ft, "hash", function() {
      return this.eddsa.hash().update(this.secret()).digest();
    });
    Cf(Ft, "messagePrefix", function() {
      return this.hash().slice(this.eddsa.encodingLength);
    });
    Ft.prototype.sign = function(e) {
      return gy(this._secret, "KeyPair can only verify"), this.eddsa.sign(e, this);
    };
    Ft.prototype.verify = function(e, r) {
      return this.eddsa.verify(e, r, this);
    };
    Ft.prototype.getSecret = function(e) {
      return gy(this._secret, "KeyPair is public only"), za.encode(this.secret(), e);
    };
    Ft.prototype.getPublic = function(e) {
      return za.encode(this.pubBytes(), e);
    };
    yy.exports = Ft;
  });
  _y = T3((jk, My) => {
    var XR = ri(), n0 = or2(), JR = n0.assert, f0 = n0.cachedProperty, QR = n0.parseBytes;
    function zn(t, e) {
      this.eddsa = t, typeof e != "object" && (e = QR(e)), Array.isArray(e) && (e = { R: e.slice(0, t.encodingLength), S: e.slice(t.encodingLength) }), JR(e.R && e.S, "Signature without R or S"), t.isPoint(e.R) && (this._R = e.R), e.S instanceof XR && (this._S = e.S), this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded, this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded;
    }
    f0(zn, "S", function() {
      return this.eddsa.decodeInt(this.Sencoded());
    });
    f0(zn, "R", function() {
      return this.eddsa.decodePoint(this.Rencoded());
    });
    f0(zn, "Rencoded", function() {
      return this.eddsa.encodePoint(this.R());
    });
    f0(zn, "Sencoded", function() {
      return this.eddsa.encodeInt(this.S());
    });
    zn.prototype.toBytes = function() {
      return this.Rencoded().concat(this.Sencoded());
    };
    zn.prototype.toHex = function() {
      return n0.encode(this.toBytes(), "hex").toUpperCase();
    };
    My.exports = zn;
  });
  Ry = T3((Zk, Ay) => {
    var eB = Qs2(), tB = e0(), Of = or2(), rB = Of.assert, Sy = Of.parseBytes, Ey = wy(), xy = _y();
    function ir(t) {
      if (rB(t === "ed25519", "only tested with ed25519 so far"), !(this instanceof ir))
        return new ir(t);
      t = tB[t].curve, this.curve = t, this.g = t.g, this.g.precompute(t.n.bitLength() + 1), this.pointClass = t.point().constructor, this.encodingLength = Math.ceil(t.n.bitLength() / 8), this.hash = eB.sha512;
    }
    Ay.exports = ir;
    ir.prototype.sign = function(e, r) {
      e = Sy(e);
      var o = this.keyFromSecret(r), f3 = this.hashInt(o.messagePrefix(), e), p3 = this.g.mul(f3), m3 = this.encodePoint(p3), y3 = this.hashInt(m3, o.pubBytes(), e).mul(o.priv()), M2 = f3.add(y3).umod(this.curve.n);
      return this.makeSignature({ R: p3, S: M2, Rencoded: m3 });
    };
    ir.prototype.verify = function(e, r, o) {
      e = Sy(e), r = this.makeSignature(r);
      var f3 = this.keyFromPublic(o), p3 = this.hashInt(r.Rencoded(), f3.pubBytes(), e), m3 = this.g.mul(r.S()), y3 = r.R().add(f3.pub().mul(p3));
      return y3.eq(m3);
    };
    ir.prototype.hashInt = function() {
      for (var e = this.hash(), r = 0;r < arguments.length; r++)
        e.update(arguments[r]);
      return Of.intFromLE(e.digest()).umod(this.curve.n);
    };
    ir.prototype.keyFromPublic = function(e) {
      return Ey.fromPublic(this, e);
    };
    ir.prototype.keyFromSecret = function(e) {
      return Ey.fromSecret(this, e);
    };
    ir.prototype.makeSignature = function(e) {
      return e instanceof xy ? e : new xy(this, e);
    };
    ir.prototype.encodePoint = function(e) {
      var r = e.getY().toArray("le", this.encodingLength);
      return r[this.encodingLength - 1] |= e.getX().isOdd() ? 128 : 0, r;
    };
    ir.prototype.decodePoint = function(e) {
      e = Of.parseBytes(e);
      var r = e.length - 1, o = e.slice(0, r).concat(e[r] & -129), f3 = (e[r] & 128) !== 0, p3 = Of.intFromLE(o);
      return this.curve.pointFromY(p3, f3);
    };
    ir.prototype.encodeInt = function(e) {
      return e.toArray("le", this.encodingLength);
    };
    ir.prototype.decodeInt = function(e) {
      return Of.intFromLE(e);
    };
    ir.prototype.isPoint = function(e) {
      return e instanceof this.pointClass;
    };
  });
  a0 = T3((By) => {
    var Hn = By;
    Hn.version = f2().version;
    Hn.utils = or2();
    Hn.rand = Es2();
    Hn.curve = Dl();
    Hn.curves = e0();
    Hn.ec = by();
    Hn.eddsa = Ry();
  });
  ed = T3((qy, Ql) => {
    (function(t, e) {
      function r(v2, i) {
        if (!v2)
          throw new Error(i || "Assertion failed");
      }
      function o(v2, i) {
        v2.super_ = i;
        var a3 = function() {};
        a3.prototype = i.prototype, v2.prototype = new a3, v2.prototype.constructor = v2;
      }
      function f3(v2, i, a3) {
        if (f3.isBN(v2))
          return v2;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v2 !== null && ((i === "le" || i === "be") && (a3 = i, i = 10), this._init(v2 || 0, i || 10, a3 || "be"));
      }
      typeof t == "object" ? t.exports = f3 : e.BN = f3, f3.BN = f3, f3.wordSize = 26;
      var p3;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p3 = window.Buffer : p3 = ji().Buffer;
      } catch {}
      f3.isBN = function(i) {
        return i instanceof f3 ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f3.wordSize && Array.isArray(i.words);
      }, f3.max = function(i, a3) {
        return i.cmp(a3) > 0 ? i : a3;
      }, f3.min = function(i, a3) {
        return i.cmp(a3) < 0 ? i : a3;
      }, f3.prototype._init = function(i, a3, h3) {
        if (typeof i == "number")
          return this._initNumber(i, a3, h3);
        if (typeof i == "object")
          return this._initArray(i, a3, h3);
        a3 === "hex" && (a3 = 16), r(a3 === (a3 | 0) && a3 >= 2 && a3 <= 36), i = i.toString().replace(/\s+/g, "");
        var s2 = 0;
        i[0] === "-" && (s2++, this.negative = 1), s2 < i.length && (a3 === 16 ? this._parseHex(i, s2, h3) : (this._parseBase(i, a3, s2), h3 === "le" && this._initArray(this.toArray(), a3, h3)));
      }, f3.prototype._initNumber = function(i, a3, h3) {
        i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h3 === "le" && this._initArray(this.toArray(), a3, h3);
      }, f3.prototype._initArray = function(i, a3, h3) {
        if (r(typeof i.length == "number"), i.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3, c3, b3 = 0;
        if (h3 === "be")
          for (s2 = i.length - 1, u3 = 0;s2 >= 0; s2 -= 3)
            c3 = i[s2] | i[s2 - 1] << 8 | i[s2 - 2] << 16, this.words[u3] |= c3 << b3 & 67108863, this.words[u3 + 1] = c3 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        else if (h3 === "le")
          for (s2 = 0, u3 = 0;s2 < i.length; s2 += 3)
            c3 = i[s2] | i[s2 + 1] << 8 | i[s2 + 2] << 16, this.words[u3] |= c3 << b3 & 67108863, this.words[u3 + 1] = c3 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        return this.strip();
      };
      function m3(v2, i) {
        var a3 = v2.charCodeAt(i);
        return a3 >= 65 && a3 <= 70 ? a3 - 55 : a3 >= 97 && a3 <= 102 ? a3 - 87 : a3 - 48 & 15;
      }
      function y3(v2, i, a3) {
        var h3 = m3(v2, a3);
        return a3 - 1 >= i && (h3 |= m3(v2, a3 - 1) << 4), h3;
      }
      f3.prototype._parseHex = function(i, a3, h3) {
        this.length = Math.ceil((i.length - a3) / 6), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3 = 0, c3 = 0, b3;
        if (h3 === "be")
          for (s2 = i.length - 1;s2 >= a3; s2 -= 2)
            b3 = y3(i, a3, s2) << u3, this.words[c3] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c3 += 1, this.words[c3] |= b3 >>> 26) : u3 += 8;
        else {
          var l2 = i.length - a3;
          for (s2 = l2 % 2 === 0 ? a3 + 1 : a3;s2 < i.length; s2 += 2)
            b3 = y3(i, a3, s2) << u3, this.words[c3] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c3 += 1, this.words[c3] |= b3 >>> 26) : u3 += 8;
        }
        this.strip();
      };
      function M2(v2, i, a3, h3) {
        for (var s2 = 0, u3 = Math.min(v2.length, a3), c3 = i;c3 < u3; c3++) {
          var b3 = v2.charCodeAt(c3) - 48;
          s2 *= h3, b3 >= 49 ? s2 += b3 - 49 + 10 : b3 >= 17 ? s2 += b3 - 17 + 10 : s2 += b3;
        }
        return s2;
      }
      f3.prototype._parseBase = function(i, a3, h3) {
        this.words = [0], this.length = 1;
        for (var s2 = 0, u3 = 1;u3 <= 67108863; u3 *= a3)
          s2++;
        s2--, u3 = u3 / a3 | 0;
        for (var c3 = i.length - h3, b3 = c3 % s2, l2 = Math.min(c3, c3 - b3) + h3, n = 0, d3 = h3;d3 < l2; d3 += s2)
          n = M2(i, d3, d3 + s2, a3), this.imuln(u3), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        if (b3 !== 0) {
          var w = 1;
          for (n = M2(i, d3, i.length, a3), d3 = 0;d3 < b3; d3++)
            w *= a3;
          this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        }
        this.strip();
      }, f3.prototype.copy = function(i) {
        i.words = new Array(this.length);
        for (var a3 = 0;a3 < this.length; a3++)
          i.words[a3] = this.words[a3];
        i.length = this.length, i.negative = this.negative, i.red = this.red;
      }, f3.prototype.clone = function() {
        var i = new f3(null);
        return this.copy(i), i;
      }, f3.prototype._expand = function(i) {
        for (;this.length < i; )
          this.words[this.length++] = 0;
        return this;
      }, f3.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f3.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f3.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E4 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f3.prototype.toString = function(i, a3) {
        i = i || 10, a3 = a3 | 0 || 1;
        var h3;
        if (i === 16 || i === "hex") {
          h3 = "";
          for (var s2 = 0, u3 = 0, c3 = 0;c3 < this.length; c3++) {
            var b3 = this.words[c3], l2 = ((b3 << s2 | u3) & 16777215).toString(16);
            u3 = b3 >>> 24 - s2 & 16777215, u3 !== 0 || c3 !== this.length - 1 ? h3 = x4[6 - l2.length] + l2 + h3 : h3 = l2 + h3, s2 += 2, s2 >= 26 && (s2 -= 26, c3--);
          }
          for (u3 !== 0 && (h3 = u3.toString(16) + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        if (i === (i | 0) && i >= 2 && i <= 36) {
          var n = S3[i], d3 = E4[i];
          h3 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g3 = w.modn(d3).toString(i);
            w = w.idivn(d3), w.isZero() ? h3 = g3 + h3 : h3 = x4[n - g3.length] + g3 + h3;
          }
          for (this.isZero() && (h3 = "0" + h3);h3.length % a3 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        r(false, "Base should be between 2 and 36");
      }, f3.prototype.toNumber = function() {
        var i = this.words[0];
        return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
      }, f3.prototype.toJSON = function() {
        return this.toString(16);
      }, f3.prototype.toBuffer = function(i, a3) {
        return r(typeof p3 < "u"), this.toArrayLike(p3, i, a3);
      }, f3.prototype.toArray = function(i, a3) {
        return this.toArrayLike(Array, i, a3);
      }, f3.prototype.toArrayLike = function(i, a3, h3) {
        var s2 = this.byteLength(), u3 = h3 || Math.max(1, s2);
        r(s2 <= u3, "byte array longer than desired length"), r(u3 > 0, "Requested array length <= 0"), this.strip();
        var c3 = a3 === "le", b3 = new i(u3), l2, n, d3 = this.clone();
        if (c3) {
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[n] = l2;
          for (;n < u3; n++)
            b3[n] = 0;
        } else {
          for (n = 0;n < u3 - s2; n++)
            b3[n] = 0;
          for (n = 0;!d3.isZero(); n++)
            l2 = d3.andln(255), d3.iushrn(8), b3[u3 - n - 1] = l2;
        }
        return b3;
      }, Math.clz32 ? f3.prototype._countBits = function(i) {
        return 32 - Math.clz32(i);
      } : f3.prototype._countBits = function(i) {
        var a3 = i, h3 = 0;
        return a3 >= 4096 && (h3 += 13, a3 >>>= 13), a3 >= 64 && (h3 += 7, a3 >>>= 7), a3 >= 8 && (h3 += 4, a3 >>>= 4), a3 >= 2 && (h3 += 2, a3 >>>= 2), h3 + a3;
      }, f3.prototype._zeroBits = function(i) {
        if (i === 0)
          return 26;
        var a3 = i, h3 = 0;
        return (a3 & 8191) === 0 && (h3 += 13, a3 >>>= 13), (a3 & 127) === 0 && (h3 += 7, a3 >>>= 7), (a3 & 15) === 0 && (h3 += 4, a3 >>>= 4), (a3 & 3) === 0 && (h3 += 2, a3 >>>= 2), (a3 & 1) === 0 && h3++, h3;
      }, f3.prototype.bitLength = function() {
        var i = this.words[this.length - 1], a3 = this._countBits(i);
        return (this.length - 1) * 26 + a3;
      };
      function B3(v2) {
        for (var i = new Array(v2.bitLength()), a3 = 0;a3 < i.length; a3++) {
          var h3 = a3 / 26 | 0, s2 = a3 % 26;
          i[a3] = (v2.words[h3] & 1 << s2) >>> s2;
        }
        return i;
      }
      f3.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i = 0, a3 = 0;a3 < this.length; a3++) {
          var h3 = this._zeroBits(this.words[a3]);
          if (i += h3, h3 !== 26)
            break;
        }
        return i;
      }, f3.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f3.prototype.toTwos = function(i) {
        return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
      }, f3.prototype.fromTwos = function(i) {
        return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
      }, f3.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f3.prototype.neg = function() {
        return this.clone().ineg();
      }, f3.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f3.prototype.iuor = function(i) {
        for (;this.length < i.length; )
          this.words[this.length++] = 0;
        for (var a3 = 0;a3 < i.length; a3++)
          this.words[a3] = this.words[a3] | i.words[a3];
        return this.strip();
      }, f3.prototype.ior = function(i) {
        return r((this.negative | i.negative) === 0), this.iuor(i);
      }, f3.prototype.or = function(i) {
        return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
      }, f3.prototype.uor = function(i) {
        return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
      }, f3.prototype.iuand = function(i) {
        var a3;
        this.length > i.length ? a3 = i : a3 = this;
        for (var h3 = 0;h3 < a3.length; h3++)
          this.words[h3] = this.words[h3] & i.words[h3];
        return this.length = a3.length, this.strip();
      }, f3.prototype.iand = function(i) {
        return r((this.negative | i.negative) === 0), this.iuand(i);
      }, f3.prototype.and = function(i) {
        return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
      }, f3.prototype.uand = function(i) {
        return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
      }, f3.prototype.iuxor = function(i) {
        var a3, h3;
        this.length > i.length ? (a3 = this, h3 = i) : (a3 = i, h3 = this);
        for (var s2 = 0;s2 < h3.length; s2++)
          this.words[s2] = a3.words[s2] ^ h3.words[s2];
        if (this !== a3)
          for (;s2 < a3.length; s2++)
            this.words[s2] = a3.words[s2];
        return this.length = a3.length, this.strip();
      }, f3.prototype.ixor = function(i) {
        return r((this.negative | i.negative) === 0), this.iuxor(i);
      }, f3.prototype.xor = function(i) {
        return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
      }, f3.prototype.uxor = function(i) {
        return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
      }, f3.prototype.inotn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = Math.ceil(i / 26) | 0, h3 = i % 26;
        this._expand(a3), h3 > 0 && a3--;
        for (var s2 = 0;s2 < a3; s2++)
          this.words[s2] = ~this.words[s2] & 67108863;
        return h3 > 0 && (this.words[s2] = ~this.words[s2] & 67108863 >> 26 - h3), this.strip();
      }, f3.prototype.notn = function(i) {
        return this.clone().inotn(i);
      }, f3.prototype.setn = function(i, a3) {
        r(typeof i == "number" && i >= 0);
        var h3 = i / 26 | 0, s2 = i % 26;
        return this._expand(h3 + 1), a3 ? this.words[h3] = this.words[h3] | 1 << s2 : this.words[h3] = this.words[h3] & ~(1 << s2), this.strip();
      }, f3.prototype.iadd = function(i) {
        var a3;
        if (this.negative !== 0 && i.negative === 0)
          return this.negative = 0, a3 = this.isub(i), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i.negative !== 0)
          return i.negative = 0, a3 = this.isub(i), i.negative = 1, a3._normSign();
        var h3, s2;
        this.length > i.length ? (h3 = this, s2 = i) : (h3 = i, s2 = this);
        for (var u3 = 0, c3 = 0;c3 < s2.length; c3++)
          a3 = (h3.words[c3] | 0) + (s2.words[c3] | 0) + u3, this.words[c3] = a3 & 67108863, u3 = a3 >>> 26;
        for (;u3 !== 0 && c3 < h3.length; c3++)
          a3 = (h3.words[c3] | 0) + u3, this.words[c3] = a3 & 67108863, u3 = a3 >>> 26;
        if (this.length = h3.length, u3 !== 0)
          this.words[this.length] = u3, this.length++;
        else if (h3 !== this)
          for (;c3 < h3.length; c3++)
            this.words[c3] = h3.words[c3];
        return this;
      }, f3.prototype.add = function(i) {
        var a3;
        return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a3 = this.sub(i), i.negative ^= 1, a3) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a3 = i.sub(this), this.negative = 1, a3) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
      }, f3.prototype.isub = function(i) {
        if (i.negative !== 0) {
          i.negative = 0;
          var a3 = this.iadd(i);
          return i.negative = 1, a3._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
        var h3 = this.cmp(i);
        if (h3 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s2, u3;
        h3 > 0 ? (s2 = this, u3 = i) : (s2 = i, u3 = this);
        for (var c3 = 0, b3 = 0;b3 < u3.length; b3++)
          a3 = (s2.words[b3] | 0) - (u3.words[b3] | 0) + c3, c3 = a3 >> 26, this.words[b3] = a3 & 67108863;
        for (;c3 !== 0 && b3 < s2.length; b3++)
          a3 = (s2.words[b3] | 0) + c3, c3 = a3 >> 26, this.words[b3] = a3 & 67108863;
        if (c3 === 0 && b3 < s2.length && s2 !== this)
          for (;b3 < s2.length; b3++)
            this.words[b3] = s2.words[b3];
        return this.length = Math.max(this.length, b3), s2 !== this && (this.negative = 1), this.strip();
      }, f3.prototype.sub = function(i) {
        return this.clone().isub(i);
      };
      function q2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative;
        var h3 = v2.length + i.length | 0;
        a3.length = h3, h3 = h3 - 1 | 0;
        var s2 = v2.words[0] | 0, u3 = i.words[0] | 0, c3 = s2 * u3, b3 = c3 & 67108863, l2 = c3 / 67108864 | 0;
        a3.words[0] = b3;
        for (var n = 1;n < h3; n++) {
          for (var d3 = l2 >>> 26, w = l2 & 67108863, g3 = Math.min(n, i.length - 1), _3 = Math.max(0, n - v2.length + 1);_3 <= g3; _3++) {
            var A2 = n - _3 | 0;
            s2 = v2.words[A2] | 0, u3 = i.words[_3] | 0, c3 = s2 * u3 + w, d3 += c3 / 67108864 | 0, w = c3 & 67108863;
          }
          a3.words[n] = w | 0, l2 = d3 | 0;
        }
        return l2 !== 0 ? a3.words[n] = l2 | 0 : a3.length--, a3.strip();
      }
      var L3 = function(i, a3, h3) {
        var s2 = i.words, u3 = a3.words, c3 = h3.words, b3 = 0, l2, n, d3, w = s2[0] | 0, g3 = w & 8191, _3 = w >>> 13, A2 = s2[1] | 0, R2 = A2 & 8191, I3 = A2 >>> 13, Me = s2[2] | 0, k3 = Me & 8191, D2 = Me >>> 13, nt2 = s2[3] | 0, C = nt2 & 8191, O4 = nt2 >>> 13, vt = s2[4] | 0, F = vt & 8191, U4 = vt >>> 13, bt2 = s2[5] | 0, z = bt2 & 8191, H2 = bt2 >>> 13, mt2 = s2[6] | 0, W = mt2 & 8191, K3 = mt2 >>> 13, gt4 = s2[7] | 0, j3 = gt4 & 8191, Z2 = gt4 >>> 13, yt2 = s2[8] | 0, V3 = yt2 & 8191, $2 = yt2 >>> 13, wt2 = s2[9] | 0, G3 = wt2 & 8191, Y3 = wt2 >>> 13, Mt = u3[0] | 0, X3 = Mt & 8191, J3 = Mt >>> 13, _t3 = u3[1] | 0, Q2 = _t3 & 8191, ee = _t3 >>> 13, xt = u3[2] | 0, te = xt & 8191, re = xt >>> 13, St = u3[3] | 0, ie2 = St & 8191, ne2 = St >>> 13, Et = u3[4] | 0, fe = Et & 8191, ae = Et >>> 13, At2 = u3[5] | 0, oe = At2 & 8191, se = At2 >>> 13, Rt = u3[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt2 = u3[7] | 0, le = Bt2 & 8191, de = Bt2 >>> 13, qt = u3[8] | 0, ce2 = qt & 8191, pe = qt >>> 13, It = u3[9] | 0, ve = It & 8191, be2 = It >>> 13;
        h3.negative = i.negative ^ a3.negative, h3.length = 19, l2 = Math.imul(g3, X3), n = Math.imul(g3, J3), n = n + Math.imul(_3, X3) | 0, d3 = Math.imul(_3, J3);
        var ft = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l2 = Math.imul(R2, X3), n = Math.imul(R2, J3), n = n + Math.imul(I3, X3) | 0, d3 = Math.imul(I3, J3), l2 = l2 + Math.imul(g3, Q2) | 0, n = n + Math.imul(g3, ee) | 0, n = n + Math.imul(_3, Q2) | 0, d3 = d3 + Math.imul(_3, ee) | 0;
        var Be = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l2 = Math.imul(k3, X3), n = Math.imul(k3, J3), n = n + Math.imul(D2, X3) | 0, d3 = Math.imul(D2, J3), l2 = l2 + Math.imul(R2, Q2) | 0, n = n + Math.imul(R2, ee) | 0, n = n + Math.imul(I3, Q2) | 0, d3 = d3 + Math.imul(I3, ee) | 0, l2 = l2 + Math.imul(g3, te) | 0, n = n + Math.imul(g3, re) | 0, n = n + Math.imul(_3, te) | 0, d3 = d3 + Math.imul(_3, re) | 0;
        var qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l2 = Math.imul(C, X3), n = Math.imul(C, J3), n = n + Math.imul(O4, X3) | 0, d3 = Math.imul(O4, J3), l2 = l2 + Math.imul(k3, Q2) | 0, n = n + Math.imul(k3, ee) | 0, n = n + Math.imul(D2, Q2) | 0, d3 = d3 + Math.imul(D2, ee) | 0, l2 = l2 + Math.imul(R2, te) | 0, n = n + Math.imul(R2, re) | 0, n = n + Math.imul(I3, te) | 0, d3 = d3 + Math.imul(I3, re) | 0, l2 = l2 + Math.imul(g3, ie2) | 0, n = n + Math.imul(g3, ne2) | 0, n = n + Math.imul(_3, ie2) | 0, d3 = d3 + Math.imul(_3, ne2) | 0;
        var ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l2 = Math.imul(F, X3), n = Math.imul(F, J3), n = n + Math.imul(U4, X3) | 0, d3 = Math.imul(U4, J3), l2 = l2 + Math.imul(C, Q2) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O4, Q2) | 0, d3 = d3 + Math.imul(O4, ee) | 0, l2 = l2 + Math.imul(k3, te) | 0, n = n + Math.imul(k3, re) | 0, n = n + Math.imul(D2, te) | 0, d3 = d3 + Math.imul(D2, re) | 0, l2 = l2 + Math.imul(R2, ie2) | 0, n = n + Math.imul(R2, ne2) | 0, n = n + Math.imul(I3, ie2) | 0, d3 = d3 + Math.imul(I3, ne2) | 0, l2 = l2 + Math.imul(g3, fe) | 0, n = n + Math.imul(g3, ae) | 0, n = n + Math.imul(_3, fe) | 0, d3 = d3 + Math.imul(_3, ae) | 0;
        var He2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (He2 >>> 26) | 0, He2 &= 67108863, l2 = Math.imul(z, X3), n = Math.imul(z, J3), n = n + Math.imul(H2, X3) | 0, d3 = Math.imul(H2, J3), l2 = l2 + Math.imul(F, Q2) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U4, Q2) | 0, d3 = d3 + Math.imul(U4, ee) | 0, l2 = l2 + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O4, te) | 0, d3 = d3 + Math.imul(O4, re) | 0, l2 = l2 + Math.imul(k3, ie2) | 0, n = n + Math.imul(k3, ne2) | 0, n = n + Math.imul(D2, ie2) | 0, d3 = d3 + Math.imul(D2, ne2) | 0, l2 = l2 + Math.imul(R2, fe) | 0, n = n + Math.imul(R2, ae) | 0, n = n + Math.imul(I3, fe) | 0, d3 = d3 + Math.imul(I3, ae) | 0, l2 = l2 + Math.imul(g3, oe) | 0, n = n + Math.imul(g3, se) | 0, n = n + Math.imul(_3, oe) | 0, d3 = d3 + Math.imul(_3, se) | 0;
        var We = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l2 = Math.imul(W, X3), n = Math.imul(W, J3), n = n + Math.imul(K3, X3) | 0, d3 = Math.imul(K3, J3), l2 = l2 + Math.imul(z, Q2) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H2, Q2) | 0, d3 = d3 + Math.imul(H2, ee) | 0, l2 = l2 + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U4, te) | 0, d3 = d3 + Math.imul(U4, re) | 0, l2 = l2 + Math.imul(C, ie2) | 0, n = n + Math.imul(C, ne2) | 0, n = n + Math.imul(O4, ie2) | 0, d3 = d3 + Math.imul(O4, ne2) | 0, l2 = l2 + Math.imul(k3, fe) | 0, n = n + Math.imul(k3, ae) | 0, n = n + Math.imul(D2, fe) | 0, d3 = d3 + Math.imul(D2, ae) | 0, l2 = l2 + Math.imul(R2, oe) | 0, n = n + Math.imul(R2, se) | 0, n = n + Math.imul(I3, oe) | 0, d3 = d3 + Math.imul(I3, se) | 0, l2 = l2 + Math.imul(g3, he) | 0, n = n + Math.imul(g3, ue) | 0, n = n + Math.imul(_3, he) | 0, d3 = d3 + Math.imul(_3, ue) | 0;
        var Ke = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l2 = Math.imul(j3, X3), n = Math.imul(j3, J3), n = n + Math.imul(Z2, X3) | 0, d3 = Math.imul(Z2, J3), l2 = l2 + Math.imul(W, Q2) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K3, Q2) | 0, d3 = d3 + Math.imul(K3, ee) | 0, l2 = l2 + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H2, te) | 0, d3 = d3 + Math.imul(H2, re) | 0, l2 = l2 + Math.imul(F, ie2) | 0, n = n + Math.imul(F, ne2) | 0, n = n + Math.imul(U4, ie2) | 0, d3 = d3 + Math.imul(U4, ne2) | 0, l2 = l2 + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O4, fe) | 0, d3 = d3 + Math.imul(O4, ae) | 0, l2 = l2 + Math.imul(k3, oe) | 0, n = n + Math.imul(k3, se) | 0, n = n + Math.imul(D2, oe) | 0, d3 = d3 + Math.imul(D2, se) | 0, l2 = l2 + Math.imul(R2, he) | 0, n = n + Math.imul(R2, ue) | 0, n = n + Math.imul(I3, he) | 0, d3 = d3 + Math.imul(I3, ue) | 0, l2 = l2 + Math.imul(g3, le) | 0, n = n + Math.imul(g3, de) | 0, n = n + Math.imul(_3, le) | 0, d3 = d3 + Math.imul(_3, de) | 0;
        var je = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l2 = Math.imul(V3, X3), n = Math.imul(V3, J3), n = n + Math.imul($2, X3) | 0, d3 = Math.imul($2, J3), l2 = l2 + Math.imul(j3, Q2) | 0, n = n + Math.imul(j3, ee) | 0, n = n + Math.imul(Z2, Q2) | 0, d3 = d3 + Math.imul(Z2, ee) | 0, l2 = l2 + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K3, te) | 0, d3 = d3 + Math.imul(K3, re) | 0, l2 = l2 + Math.imul(z, ie2) | 0, n = n + Math.imul(z, ne2) | 0, n = n + Math.imul(H2, ie2) | 0, d3 = d3 + Math.imul(H2, ne2) | 0, l2 = l2 + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U4, fe) | 0, d3 = d3 + Math.imul(U4, ae) | 0, l2 = l2 + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O4, oe) | 0, d3 = d3 + Math.imul(O4, se) | 0, l2 = l2 + Math.imul(k3, he) | 0, n = n + Math.imul(k3, ue) | 0, n = n + Math.imul(D2, he) | 0, d3 = d3 + Math.imul(D2, ue) | 0, l2 = l2 + Math.imul(R2, le) | 0, n = n + Math.imul(R2, de) | 0, n = n + Math.imul(I3, le) | 0, d3 = d3 + Math.imul(I3, de) | 0, l2 = l2 + Math.imul(g3, ce2) | 0, n = n + Math.imul(g3, pe) | 0, n = n + Math.imul(_3, ce2) | 0, d3 = d3 + Math.imul(_3, pe) | 0;
        var Ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l2 = Math.imul(G3, X3), n = Math.imul(G3, J3), n = n + Math.imul(Y3, X3) | 0, d3 = Math.imul(Y3, J3), l2 = l2 + Math.imul(V3, Q2) | 0, n = n + Math.imul(V3, ee) | 0, n = n + Math.imul($2, Q2) | 0, d3 = d3 + Math.imul($2, ee) | 0, l2 = l2 + Math.imul(j3, te) | 0, n = n + Math.imul(j3, re) | 0, n = n + Math.imul(Z2, te) | 0, d3 = d3 + Math.imul(Z2, re) | 0, l2 = l2 + Math.imul(W, ie2) | 0, n = n + Math.imul(W, ne2) | 0, n = n + Math.imul(K3, ie2) | 0, d3 = d3 + Math.imul(K3, ne2) | 0, l2 = l2 + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H2, fe) | 0, d3 = d3 + Math.imul(H2, ae) | 0, l2 = l2 + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U4, oe) | 0, d3 = d3 + Math.imul(U4, se) | 0, l2 = l2 + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O4, he) | 0, d3 = d3 + Math.imul(O4, ue) | 0, l2 = l2 + Math.imul(k3, le) | 0, n = n + Math.imul(k3, de) | 0, n = n + Math.imul(D2, le) | 0, d3 = d3 + Math.imul(D2, de) | 0, l2 = l2 + Math.imul(R2, ce2) | 0, n = n + Math.imul(R2, pe) | 0, n = n + Math.imul(I3, ce2) | 0, d3 = d3 + Math.imul(I3, pe) | 0, l2 = l2 + Math.imul(g3, ve) | 0, n = n + Math.imul(g3, be2) | 0, n = n + Math.imul(_3, ve) | 0, d3 = d3 + Math.imul(_3, be2) | 0;
        var Ve = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l2 = Math.imul(G3, Q2), n = Math.imul(G3, ee), n = n + Math.imul(Y3, Q2) | 0, d3 = Math.imul(Y3, ee), l2 = l2 + Math.imul(V3, te) | 0, n = n + Math.imul(V3, re) | 0, n = n + Math.imul($2, te) | 0, d3 = d3 + Math.imul($2, re) | 0, l2 = l2 + Math.imul(j3, ie2) | 0, n = n + Math.imul(j3, ne2) | 0, n = n + Math.imul(Z2, ie2) | 0, d3 = d3 + Math.imul(Z2, ne2) | 0, l2 = l2 + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K3, fe) | 0, d3 = d3 + Math.imul(K3, ae) | 0, l2 = l2 + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H2, oe) | 0, d3 = d3 + Math.imul(H2, se) | 0, l2 = l2 + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U4, he) | 0, d3 = d3 + Math.imul(U4, ue) | 0, l2 = l2 + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O4, le) | 0, d3 = d3 + Math.imul(O4, de) | 0, l2 = l2 + Math.imul(k3, ce2) | 0, n = n + Math.imul(k3, pe) | 0, n = n + Math.imul(D2, ce2) | 0, d3 = d3 + Math.imul(D2, pe) | 0, l2 = l2 + Math.imul(R2, ve) | 0, n = n + Math.imul(R2, be2) | 0, n = n + Math.imul(I3, ve) | 0, d3 = d3 + Math.imul(I3, be2) | 0;
        var $e2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + ($e2 >>> 26) | 0, $e2 &= 67108863, l2 = Math.imul(G3, te), n = Math.imul(G3, re), n = n + Math.imul(Y3, te) | 0, d3 = Math.imul(Y3, re), l2 = l2 + Math.imul(V3, ie2) | 0, n = n + Math.imul(V3, ne2) | 0, n = n + Math.imul($2, ie2) | 0, d3 = d3 + Math.imul($2, ne2) | 0, l2 = l2 + Math.imul(j3, fe) | 0, n = n + Math.imul(j3, ae) | 0, n = n + Math.imul(Z2, fe) | 0, d3 = d3 + Math.imul(Z2, ae) | 0, l2 = l2 + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K3, oe) | 0, d3 = d3 + Math.imul(K3, se) | 0, l2 = l2 + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H2, he) | 0, d3 = d3 + Math.imul(H2, ue) | 0, l2 = l2 + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U4, le) | 0, d3 = d3 + Math.imul(U4, de) | 0, l2 = l2 + Math.imul(C, ce2) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O4, ce2) | 0, d3 = d3 + Math.imul(O4, pe) | 0, l2 = l2 + Math.imul(k3, ve) | 0, n = n + Math.imul(k3, be2) | 0, n = n + Math.imul(D2, ve) | 0, d3 = d3 + Math.imul(D2, be2) | 0;
        var Ge2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ge2 >>> 26) | 0, Ge2 &= 67108863, l2 = Math.imul(G3, ie2), n = Math.imul(G3, ne2), n = n + Math.imul(Y3, ie2) | 0, d3 = Math.imul(Y3, ne2), l2 = l2 + Math.imul(V3, fe) | 0, n = n + Math.imul(V3, ae) | 0, n = n + Math.imul($2, fe) | 0, d3 = d3 + Math.imul($2, ae) | 0, l2 = l2 + Math.imul(j3, oe) | 0, n = n + Math.imul(j3, se) | 0, n = n + Math.imul(Z2, oe) | 0, d3 = d3 + Math.imul(Z2, se) | 0, l2 = l2 + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K3, he) | 0, d3 = d3 + Math.imul(K3, ue) | 0, l2 = l2 + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H2, le) | 0, d3 = d3 + Math.imul(H2, de) | 0, l2 = l2 + Math.imul(F, ce2) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U4, ce2) | 0, d3 = d3 + Math.imul(U4, pe) | 0, l2 = l2 + Math.imul(C, ve) | 0, n = n + Math.imul(C, be2) | 0, n = n + Math.imul(O4, ve) | 0, d3 = d3 + Math.imul(O4, be2) | 0;
        var Ye = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l2 = Math.imul(G3, fe), n = Math.imul(G3, ae), n = n + Math.imul(Y3, fe) | 0, d3 = Math.imul(Y3, ae), l2 = l2 + Math.imul(V3, oe) | 0, n = n + Math.imul(V3, se) | 0, n = n + Math.imul($2, oe) | 0, d3 = d3 + Math.imul($2, se) | 0, l2 = l2 + Math.imul(j3, he) | 0, n = n + Math.imul(j3, ue) | 0, n = n + Math.imul(Z2, he) | 0, d3 = d3 + Math.imul(Z2, ue) | 0, l2 = l2 + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K3, le) | 0, d3 = d3 + Math.imul(K3, de) | 0, l2 = l2 + Math.imul(z, ce2) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H2, ce2) | 0, d3 = d3 + Math.imul(H2, pe) | 0, l2 = l2 + Math.imul(F, ve) | 0, n = n + Math.imul(F, be2) | 0, n = n + Math.imul(U4, ve) | 0, d3 = d3 + Math.imul(U4, be2) | 0;
        var Xe2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Xe2 >>> 26) | 0, Xe2 &= 67108863, l2 = Math.imul(G3, oe), n = Math.imul(G3, se), n = n + Math.imul(Y3, oe) | 0, d3 = Math.imul(Y3, se), l2 = l2 + Math.imul(V3, he) | 0, n = n + Math.imul(V3, ue) | 0, n = n + Math.imul($2, he) | 0, d3 = d3 + Math.imul($2, ue) | 0, l2 = l2 + Math.imul(j3, le) | 0, n = n + Math.imul(j3, de) | 0, n = n + Math.imul(Z2, le) | 0, d3 = d3 + Math.imul(Z2, de) | 0, l2 = l2 + Math.imul(W, ce2) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K3, ce2) | 0, d3 = d3 + Math.imul(K3, pe) | 0, l2 = l2 + Math.imul(z, ve) | 0, n = n + Math.imul(z, be2) | 0, n = n + Math.imul(H2, ve) | 0, d3 = d3 + Math.imul(H2, be2) | 0;
        var Je2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Je2 >>> 26) | 0, Je2 &= 67108863, l2 = Math.imul(G3, he), n = Math.imul(G3, ue), n = n + Math.imul(Y3, he) | 0, d3 = Math.imul(Y3, ue), l2 = l2 + Math.imul(V3, le) | 0, n = n + Math.imul(V3, de) | 0, n = n + Math.imul($2, le) | 0, d3 = d3 + Math.imul($2, de) | 0, l2 = l2 + Math.imul(j3, ce2) | 0, n = n + Math.imul(j3, pe) | 0, n = n + Math.imul(Z2, ce2) | 0, d3 = d3 + Math.imul(Z2, pe) | 0, l2 = l2 + Math.imul(W, ve) | 0, n = n + Math.imul(W, be2) | 0, n = n + Math.imul(K3, ve) | 0, d3 = d3 + Math.imul(K3, be2) | 0;
        var Qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l2 = Math.imul(G3, le), n = Math.imul(G3, de), n = n + Math.imul(Y3, le) | 0, d3 = Math.imul(Y3, de), l2 = l2 + Math.imul(V3, ce2) | 0, n = n + Math.imul(V3, pe) | 0, n = n + Math.imul($2, ce2) | 0, d3 = d3 + Math.imul($2, pe) | 0, l2 = l2 + Math.imul(j3, ve) | 0, n = n + Math.imul(j3, be2) | 0, n = n + Math.imul(Z2, ve) | 0, d3 = d3 + Math.imul(Z2, be2) | 0;
        var et2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (et2 >>> 26) | 0, et2 &= 67108863, l2 = Math.imul(G3, ce2), n = Math.imul(G3, pe), n = n + Math.imul(Y3, ce2) | 0, d3 = Math.imul(Y3, pe), l2 = l2 + Math.imul(V3, ve) | 0, n = n + Math.imul(V3, be2) | 0, n = n + Math.imul($2, ve) | 0, d3 = d3 + Math.imul($2, be2) | 0;
        var tt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d3 + (n >>> 13) | 0) + (tt2 >>> 26) | 0, tt2 &= 67108863, l2 = Math.imul(G3, ve), n = Math.imul(G3, be2), n = n + Math.imul(Y3, ve) | 0, d3 = Math.imul(Y3, be2);
        var rt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        return b3 = (d3 + (n >>> 13) | 0) + (rt2 >>> 26) | 0, rt2 &= 67108863, c3[0] = ft, c3[1] = Be, c3[2] = qe, c3[3] = ze, c3[4] = He2, c3[5] = We, c3[6] = Ke, c3[7] = je, c3[8] = Ze, c3[9] = Ve, c3[10] = $e2, c3[11] = Ge2, c3[12] = Ye, c3[13] = Xe2, c3[14] = Je2, c3[15] = Qe, c3[16] = et2, c3[17] = tt2, c3[18] = rt2, b3 !== 0 && (c3[19] = b3, h3.length++), h3;
      };
      Math.imul || (L3 = q2);
      function ge2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative, a3.length = v2.length + i.length;
        for (var h3 = 0, s2 = 0, u3 = 0;u3 < a3.length - 1; u3++) {
          var c3 = s2;
          s2 = 0;
          for (var b3 = h3 & 67108863, l2 = Math.min(u3, i.length - 1), n = Math.max(0, u3 - v2.length + 1);n <= l2; n++) {
            var d3 = u3 - n, w = v2.words[d3] | 0, g3 = i.words[n] | 0, _3 = w * g3, A2 = _3 & 67108863;
            c3 = c3 + (_3 / 67108864 | 0) | 0, A2 = A2 + b3 | 0, b3 = A2 & 67108863, c3 = c3 + (A2 >>> 26) | 0, s2 += c3 >>> 26, c3 &= 67108863;
          }
          a3.words[u3] = b3, h3 = c3, c3 = s2;
        }
        return h3 !== 0 ? a3.words[u3] = h3 : a3.length--, a3.strip();
      }
      function _e(v2, i, a3) {
        var h3 = new N3;
        return h3.mulp(v2, i, a3);
      }
      f3.prototype.mulTo = function(i, a3) {
        var h3, s2 = this.length + i.length;
        return this.length === 10 && i.length === 10 ? h3 = L3(this, i, a3) : s2 < 63 ? h3 = q2(this, i, a3) : s2 < 1024 ? h3 = ge2(this, i, a3) : h3 = _e(this, i, a3), h3;
      };
      function N3(v2, i) {
        this.x = v2, this.y = i;
      }
      N3.prototype.makeRBT = function(i) {
        for (var a3 = new Array(i), h3 = f3.prototype._countBits(i) - 1, s2 = 0;s2 < i; s2++)
          a3[s2] = this.revBin(s2, h3, i);
        return a3;
      }, N3.prototype.revBin = function(i, a3, h3) {
        if (i === 0 || i === h3 - 1)
          return i;
        for (var s2 = 0, u3 = 0;u3 < a3; u3++)
          s2 |= (i & 1) << a3 - u3 - 1, i >>= 1;
        return s2;
      }, N3.prototype.permute = function(i, a3, h3, s2, u3, c3) {
        for (var b3 = 0;b3 < c3; b3++)
          s2[b3] = a3[i[b3]], u3[b3] = h3[i[b3]];
      }, N3.prototype.transform = function(i, a3, h3, s2, u3, c3) {
        this.permute(c3, i, a3, h3, s2, u3);
        for (var b3 = 1;b3 < u3; b3 <<= 1)
          for (var l2 = b3 << 1, n = Math.cos(2 * Math.PI / l2), d3 = Math.sin(2 * Math.PI / l2), w = 0;w < u3; w += l2)
            for (var g3 = n, _3 = d3, A2 = 0;A2 < b3; A2++) {
              var R2 = h3[w + A2], I3 = s2[w + A2], Me = h3[w + A2 + b3], k3 = s2[w + A2 + b3], D2 = g3 * Me - _3 * k3;
              k3 = g3 * k3 + _3 * Me, Me = D2, h3[w + A2] = R2 + Me, s2[w + A2] = I3 + k3, h3[w + A2 + b3] = R2 - Me, s2[w + A2 + b3] = I3 - k3, A2 !== l2 && (D2 = n * g3 - d3 * _3, _3 = n * _3 + d3 * g3, g3 = D2);
            }
      }, N3.prototype.guessLen13b = function(i, a3) {
        var h3 = Math.max(a3, i) | 1, s2 = h3 & 1, u3 = 0;
        for (h3 = h3 / 2 | 0;h3; h3 = h3 >>> 1)
          u3++;
        return 1 << u3 + 1 + s2;
      }, N3.prototype.conjugate = function(i, a3, h3) {
        if (!(h3 <= 1))
          for (var s2 = 0;s2 < h3 / 2; s2++) {
            var u3 = i[s2];
            i[s2] = i[h3 - s2 - 1], i[h3 - s2 - 1] = u3, u3 = a3[s2], a3[s2] = -a3[h3 - s2 - 1], a3[h3 - s2 - 1] = -u3;
          }
      }, N3.prototype.normalize13b = function(i, a3) {
        for (var h3 = 0, s2 = 0;s2 < a3 / 2; s2++) {
          var u3 = Math.round(i[2 * s2 + 1] / a3) * 8192 + Math.round(i[2 * s2] / a3) + h3;
          i[s2] = u3 & 67108863, u3 < 67108864 ? h3 = 0 : h3 = u3 / 67108864 | 0;
        }
        return i;
      }, N3.prototype.convert13b = function(i, a3, h3, s2) {
        for (var u3 = 0, c3 = 0;c3 < a3; c3++)
          u3 = u3 + (i[c3] | 0), h3[2 * c3] = u3 & 8191, u3 = u3 >>> 13, h3[2 * c3 + 1] = u3 & 8191, u3 = u3 >>> 13;
        for (c3 = 2 * a3;c3 < s2; ++c3)
          h3[c3] = 0;
        r(u3 === 0), r((u3 & -8192) === 0);
      }, N3.prototype.stub = function(i) {
        for (var a3 = new Array(i), h3 = 0;h3 < i; h3++)
          a3[h3] = 0;
        return a3;
      }, N3.prototype.mulp = function(i, a3, h3) {
        var s2 = 2 * this.guessLen13b(i.length, a3.length), u3 = this.makeRBT(s2), c3 = this.stub(s2), b3 = new Array(s2), l2 = new Array(s2), n = new Array(s2), d3 = new Array(s2), w = new Array(s2), g3 = new Array(s2), _3 = h3.words;
        _3.length = s2, this.convert13b(i.words, i.length, b3, s2), this.convert13b(a3.words, a3.length, d3, s2), this.transform(b3, c3, l2, n, s2, u3), this.transform(d3, c3, w, g3, s2, u3);
        for (var A2 = 0;A2 < s2; A2++) {
          var R2 = l2[A2] * w[A2] - n[A2] * g3[A2];
          n[A2] = l2[A2] * g3[A2] + n[A2] * w[A2], l2[A2] = R2;
        }
        return this.conjugate(l2, n, s2), this.transform(l2, n, _3, c3, s2, u3), this.conjugate(_3, c3, s2), this.normalize13b(_3, s2), h3.negative = i.negative ^ a3.negative, h3.length = i.length + a3.length, h3.strip();
      }, f3.prototype.mul = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), this.mulTo(i, a3);
      }, f3.prototype.mulf = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), _e(this, i, a3);
      }, f3.prototype.imul = function(i) {
        return this.clone().mulTo(i, this);
      }, f3.prototype.imuln = function(i) {
        r(typeof i == "number"), r(i < 67108864);
        for (var a3 = 0, h3 = 0;h3 < this.length; h3++) {
          var s2 = (this.words[h3] | 0) * i, u3 = (s2 & 67108863) + (a3 & 67108863);
          a3 >>= 26, a3 += s2 / 67108864 | 0, a3 += u3 >>> 26, this.words[h3] = u3 & 67108863;
        }
        return a3 !== 0 && (this.words[h3] = a3, this.length++), this;
      }, f3.prototype.muln = function(i) {
        return this.clone().imuln(i);
      }, f3.prototype.sqr = function() {
        return this.mul(this);
      }, f3.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f3.prototype.pow = function(i) {
        var a3 = B3(i);
        if (a3.length === 0)
          return new f3(1);
        for (var h3 = this, s2 = 0;s2 < a3.length && a3[s2] === 0; s2++, h3 = h3.sqr())
          ;
        if (++s2 < a3.length)
          for (var u3 = h3.sqr();s2 < a3.length; s2++, u3 = u3.sqr())
            a3[s2] !== 0 && (h3 = h3.mul(u3));
        return h3;
      }, f3.prototype.iushln = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 67108863 >>> 26 - a3 << 26 - a3, u3;
        if (a3 !== 0) {
          var c3 = 0;
          for (u3 = 0;u3 < this.length; u3++) {
            var b3 = this.words[u3] & s2, l2 = (this.words[u3] | 0) - b3 << a3;
            this.words[u3] = l2 | c3, c3 = b3 >>> 26 - a3;
          }
          c3 && (this.words[u3] = c3, this.length++);
        }
        if (h3 !== 0) {
          for (u3 = this.length - 1;u3 >= 0; u3--)
            this.words[u3 + h3] = this.words[u3];
          for (u3 = 0;u3 < h3; u3++)
            this.words[u3] = 0;
          this.length += h3;
        }
        return this.strip();
      }, f3.prototype.ishln = function(i) {
        return r(this.negative === 0), this.iushln(i);
      }, f3.prototype.iushrn = function(i, a3, h3) {
        r(typeof i == "number" && i >= 0);
        var s2;
        a3 ? s2 = (a3 - a3 % 26) / 26 : s2 = 0;
        var u3 = i % 26, c3 = Math.min((i - u3) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u3 << u3, l2 = h3;
        if (s2 -= c3, s2 = Math.max(0, s2), l2) {
          for (var n = 0;n < c3; n++)
            l2.words[n] = this.words[n];
          l2.length = c3;
        }
        if (c3 !== 0)
          if (this.length > c3)
            for (this.length -= c3, n = 0;n < this.length; n++)
              this.words[n] = this.words[n + c3];
          else
            this.words[0] = 0, this.length = 1;
        var d3 = 0;
        for (n = this.length - 1;n >= 0 && (d3 !== 0 || n >= s2); n--) {
          var w = this.words[n] | 0;
          this.words[n] = d3 << 26 - u3 | w >>> u3, d3 = w & b3;
        }
        return l2 && d3 !== 0 && (l2.words[l2.length++] = d3), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f3.prototype.ishrn = function(i, a3, h3) {
        return r(this.negative === 0), this.iushrn(i, a3, h3);
      }, f3.prototype.shln = function(i) {
        return this.clone().ishln(i);
      }, f3.prototype.ushln = function(i) {
        return this.clone().iushln(i);
      }, f3.prototype.shrn = function(i) {
        return this.clone().ishrn(i);
      }, f3.prototype.ushrn = function(i) {
        return this.clone().iushrn(i);
      }, f3.prototype.testn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return false;
        var u3 = this.words[h3];
        return !!(u3 & s2);
      }, f3.prototype.imaskn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h3 = (i - a3) / 26;
        if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h3)
          return this;
        if (a3 !== 0 && h3++, this.length = Math.min(h3, this.length), a3 !== 0) {
          var s2 = 67108863 ^ 67108863 >>> a3 << a3;
          this.words[this.length - 1] &= s2;
        }
        return this.strip();
      }, f3.prototype.maskn = function(i) {
        return this.clone().imaskn(i);
      }, f3.prototype.iaddn = function(i) {
        return r(typeof i == "number"), r(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
      }, f3.prototype._iaddn = function(i) {
        this.words[0] += i;
        for (var a3 = 0;a3 < this.length && this.words[a3] >= 67108864; a3++)
          this.words[a3] -= 67108864, a3 === this.length - 1 ? this.words[a3 + 1] = 1 : this.words[a3 + 1]++;
        return this.length = Math.max(this.length, a3 + 1), this;
      }, f3.prototype.isubn = function(i) {
        if (r(typeof i == "number"), r(i < 67108864), i < 0)
          return this.iaddn(-i);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i), this.negative = 1, this;
        if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a3 = 0;a3 < this.length && this.words[a3] < 0; a3++)
            this.words[a3] += 67108864, this.words[a3 + 1] -= 1;
        return this.strip();
      }, f3.prototype.addn = function(i) {
        return this.clone().iaddn(i);
      }, f3.prototype.subn = function(i) {
        return this.clone().isubn(i);
      }, f3.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f3.prototype.abs = function() {
        return this.clone().iabs();
      }, f3.prototype._ishlnsubmul = function(i, a3, h3) {
        var s2 = i.length + h3, u3;
        this._expand(s2);
        var c3, b3 = 0;
        for (u3 = 0;u3 < i.length; u3++) {
          c3 = (this.words[u3 + h3] | 0) + b3;
          var l2 = (i.words[u3] | 0) * a3;
          c3 -= l2 & 67108863, b3 = (c3 >> 26) - (l2 / 67108864 | 0), this.words[u3 + h3] = c3 & 67108863;
        }
        for (;u3 < this.length - h3; u3++)
          c3 = (this.words[u3 + h3] | 0) + b3, b3 = c3 >> 26, this.words[u3 + h3] = c3 & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r(b3 === -1), b3 = 0, u3 = 0;u3 < this.length; u3++)
          c3 = -(this.words[u3] | 0) + b3, b3 = c3 >> 26, this.words[u3] = c3 & 67108863;
        return this.negative = 1, this.strip();
      }, f3.prototype._wordDiv = function(i, a3) {
        var h3 = this.length - i.length, s2 = this.clone(), u3 = i, c3 = u3.words[u3.length - 1] | 0, b3 = this._countBits(c3);
        h3 = 26 - b3, h3 !== 0 && (u3 = u3.ushln(h3), s2.iushln(h3), c3 = u3.words[u3.length - 1] | 0);
        var l2 = s2.length - u3.length, n;
        if (a3 !== "mod") {
          n = new f3(null), n.length = l2 + 1, n.words = new Array(n.length);
          for (var d3 = 0;d3 < n.length; d3++)
            n.words[d3] = 0;
        }
        var w = s2.clone()._ishlnsubmul(u3, 1, l2);
        w.negative === 0 && (s2 = w, n && (n.words[l2] = 1));
        for (var g3 = l2 - 1;g3 >= 0; g3--) {
          var _3 = (s2.words[u3.length + g3] | 0) * 67108864 + (s2.words[u3.length + g3 - 1] | 0);
          for (_3 = Math.min(_3 / c3 | 0, 67108863), s2._ishlnsubmul(u3, _3, g3);s2.negative !== 0; )
            _3--, s2.negative = 0, s2._ishlnsubmul(u3, 1, g3), s2.isZero() || (s2.negative ^= 1);
          n && (n.words[g3] = _3);
        }
        return n && n.strip(), s2.strip(), a3 !== "div" && h3 !== 0 && s2.iushrn(h3), { div: n || null, mod: s2 };
      }, f3.prototype.divmod = function(i, a3, h3) {
        if (r(!i.isZero()), this.isZero())
          return { div: new f3(0), mod: new f3(0) };
        var s2, u3, c3;
        return this.negative !== 0 && i.negative === 0 ? (c3 = this.neg().divmod(i, a3), a3 !== "mod" && (s2 = c3.div.neg()), a3 !== "div" && (u3 = c3.mod.neg(), h3 && u3.negative !== 0 && u3.iadd(i)), { div: s2, mod: u3 }) : this.negative === 0 && i.negative !== 0 ? (c3 = this.divmod(i.neg(), a3), a3 !== "mod" && (s2 = c3.div.neg()), { div: s2, mod: c3.mod }) : (this.negative & i.negative) !== 0 ? (c3 = this.neg().divmod(i.neg(), a3), a3 !== "div" && (u3 = c3.mod.neg(), h3 && u3.negative !== 0 && u3.isub(i)), { div: c3.div, mod: u3 }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f3(0), mod: this } : i.length === 1 ? a3 === "div" ? { div: this.divn(i.words[0]), mod: null } : a3 === "mod" ? { div: null, mod: new f3(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f3(this.modn(i.words[0])) } : this._wordDiv(i, a3);
      }, f3.prototype.div = function(i) {
        return this.divmod(i, "div", false).div;
      }, f3.prototype.mod = function(i) {
        return this.divmod(i, "mod", false).mod;
      }, f3.prototype.umod = function(i) {
        return this.divmod(i, "mod", true).mod;
      }, f3.prototype.divRound = function(i) {
        var a3 = this.divmod(i);
        if (a3.mod.isZero())
          return a3.div;
        var h3 = a3.div.negative !== 0 ? a3.mod.isub(i) : a3.mod, s2 = i.ushrn(1), u3 = i.andln(1), c3 = h3.cmp(s2);
        return c3 < 0 || u3 === 1 && c3 === 0 ? a3.div : a3.div.negative !== 0 ? a3.div.isubn(1) : a3.div.iaddn(1);
      }, f3.prototype.modn = function(i) {
        r(i <= 67108863);
        for (var a3 = (1 << 26) % i, h3 = 0, s2 = this.length - 1;s2 >= 0; s2--)
          h3 = (a3 * h3 + (this.words[s2] | 0)) % i;
        return h3;
      }, f3.prototype.idivn = function(i) {
        r(i <= 67108863);
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = (this.words[h3] | 0) + a3 * 67108864;
          this.words[h3] = s2 / i | 0, a3 = s2 % i;
        }
        return this.strip();
      }, f3.prototype.divn = function(i) {
        return this.clone().idivn(i);
      }, f3.prototype.egcd = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c3 = new f3(0), b3 = new f3(1), l2 = 0;a3.isEven() && h3.isEven(); )
          a3.iushrn(1), h3.iushrn(1), ++l2;
        for (var n = h3.clone(), d3 = a3.clone();!a3.isZero(); ) {
          for (var w = 0, g3 = 1;(a3.words[0] & g3) === 0 && w < 26; ++w, g3 <<= 1)
            ;
          if (w > 0)
            for (a3.iushrn(w);w-- > 0; )
              (s2.isOdd() || u3.isOdd()) && (s2.iadd(n), u3.isub(d3)), s2.iushrn(1), u3.iushrn(1);
          for (var _3 = 0, A2 = 1;(h3.words[0] & A2) === 0 && _3 < 26; ++_3, A2 <<= 1)
            ;
          if (_3 > 0)
            for (h3.iushrn(_3);_3-- > 0; )
              (c3.isOdd() || b3.isOdd()) && (c3.iadd(n), b3.isub(d3)), c3.iushrn(1), b3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(c3), u3.isub(b3)) : (h3.isub(a3), c3.isub(s2), b3.isub(u3));
        }
        return { a: c3, b: b3, gcd: h3.iushln(l2) };
      }, f3.prototype._invmp = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h3 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c3 = h3.clone();a3.cmpn(1) > 0 && h3.cmpn(1) > 0; ) {
          for (var b3 = 0, l2 = 1;(a3.words[0] & l2) === 0 && b3 < 26; ++b3, l2 <<= 1)
            ;
          if (b3 > 0)
            for (a3.iushrn(b3);b3-- > 0; )
              s2.isOdd() && s2.iadd(c3), s2.iushrn(1);
          for (var n = 0, d3 = 1;(h3.words[0] & d3) === 0 && n < 26; ++n, d3 <<= 1)
            ;
          if (n > 0)
            for (h3.iushrn(n);n-- > 0; )
              u3.isOdd() && u3.iadd(c3), u3.iushrn(1);
          a3.cmp(h3) >= 0 ? (a3.isub(h3), s2.isub(u3)) : (h3.isub(a3), u3.isub(s2));
        }
        var w;
        return a3.cmpn(1) === 0 ? w = s2 : w = u3, w.cmpn(0) < 0 && w.iadd(i), w;
      }, f3.prototype.gcd = function(i) {
        if (this.isZero())
          return i.abs();
        if (i.isZero())
          return this.abs();
        var a3 = this.clone(), h3 = i.clone();
        a3.negative = 0, h3.negative = 0;
        for (var s2 = 0;a3.isEven() && h3.isEven(); s2++)
          a3.iushrn(1), h3.iushrn(1);
        do {
          for (;a3.isEven(); )
            a3.iushrn(1);
          for (;h3.isEven(); )
            h3.iushrn(1);
          var u3 = a3.cmp(h3);
          if (u3 < 0) {
            var c3 = a3;
            a3 = h3, h3 = c3;
          } else if (u3 === 0 || h3.cmpn(1) === 0)
            break;
          a3.isub(h3);
        } while (true);
        return h3.iushln(s2);
      }, f3.prototype.invm = function(i) {
        return this.egcd(i).a.umod(i);
      }, f3.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f3.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f3.prototype.andln = function(i) {
        return this.words[0] & i;
      }, f3.prototype.bincn = function(i) {
        r(typeof i == "number");
        var a3 = i % 26, h3 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h3)
          return this._expand(h3 + 1), this.words[h3] |= s2, this;
        for (var u3 = s2, c3 = h3;u3 !== 0 && c3 < this.length; c3++) {
          var b3 = this.words[c3] | 0;
          b3 += u3, u3 = b3 >>> 26, b3 &= 67108863, this.words[c3] = b3;
        }
        return u3 !== 0 && (this.words[c3] = u3, this.length++), this;
      }, f3.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f3.prototype.cmpn = function(i) {
        var a3 = i < 0;
        if (this.negative !== 0 && !a3)
          return -1;
        if (this.negative === 0 && a3)
          return 1;
        this.strip();
        var h3;
        if (this.length > 1)
          h3 = 1;
        else {
          a3 && (i = -i), r(i <= 67108863, "Number is too big");
          var s2 = this.words[0] | 0;
          h3 = s2 === i ? 0 : s2 < i ? -1 : 1;
        }
        return this.negative !== 0 ? -h3 | 0 : h3;
      }, f3.prototype.cmp = function(i) {
        if (this.negative !== 0 && i.negative === 0)
          return -1;
        if (this.negative === 0 && i.negative !== 0)
          return 1;
        var a3 = this.ucmp(i);
        return this.negative !== 0 ? -a3 | 0 : a3;
      }, f3.prototype.ucmp = function(i) {
        if (this.length > i.length)
          return 1;
        if (this.length < i.length)
          return -1;
        for (var a3 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s2 = this.words[h3] | 0, u3 = i.words[h3] | 0;
          if (s2 !== u3) {
            s2 < u3 ? a3 = -1 : s2 > u3 && (a3 = 1);
            break;
          }
        }
        return a3;
      }, f3.prototype.gtn = function(i) {
        return this.cmpn(i) === 1;
      }, f3.prototype.gt = function(i) {
        return this.cmp(i) === 1;
      }, f3.prototype.gten = function(i) {
        return this.cmpn(i) >= 0;
      }, f3.prototype.gte = function(i) {
        return this.cmp(i) >= 0;
      }, f3.prototype.ltn = function(i) {
        return this.cmpn(i) === -1;
      }, f3.prototype.lt = function(i) {
        return this.cmp(i) === -1;
      }, f3.prototype.lten = function(i) {
        return this.cmpn(i) <= 0;
      }, f3.prototype.lte = function(i) {
        return this.cmp(i) <= 0;
      }, f3.prototype.eqn = function(i) {
        return this.cmpn(i) === 0;
      }, f3.prototype.eq = function(i) {
        return this.cmp(i) === 0;
      }, f3.red = function(i) {
        return new P3(i);
      }, f3.prototype.toRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
      }, f3.prototype.fromRed = function() {
        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f3.prototype._forceRed = function(i) {
        return this.red = i, this;
      }, f3.prototype.forceRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), this._forceRed(i);
      }, f3.prototype.redAdd = function(i) {
        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
      }, f3.prototype.redIAdd = function(i) {
        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
      }, f3.prototype.redSub = function(i) {
        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
      }, f3.prototype.redISub = function(i) {
        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
      }, f3.prototype.redShl = function(i) {
        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
      }, f3.prototype.redMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
      }, f3.prototype.redIMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
      }, f3.prototype.redSqr = function() {
        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f3.prototype.redISqr = function() {
        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f3.prototype.redSqrt = function() {
        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f3.prototype.redInvm = function() {
        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f3.prototype.redNeg = function() {
        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f3.prototype.redPow = function(i) {
        return r(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v2, i) {
        this.name = v2, this.p = new f3(i, 16), this.n = this.p.bitLength(), this.k = new f3(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i = new f3(null);
        return i.words = new Array(Math.ceil(this.n / 13)), i;
      }, ye.prototype.ireduce = function(i) {
        var a3 = i, h3;
        do
          this.split(a3, this.tmp), a3 = this.imulK(a3), a3 = a3.iadd(this.tmp), h3 = a3.bitLength();
        while (h3 > this.n);
        var s2 = h3 < this.n ? -1 : a3.ucmp(this.p);
        return s2 === 0 ? (a3.words[0] = 0, a3.length = 1) : s2 > 0 ? a3.isub(this.p) : a3.strip !== undefined ? a3.strip() : a3._strip(), a3;
      }, ye.prototype.split = function(i, a3) {
        i.iushrn(this.n, 0, a3);
      }, ye.prototype.imulK = function(i) {
        return i.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o(xe, ye), xe.prototype.split = function(i, a3) {
        for (var h3 = 4194303, s2 = Math.min(i.length, 9), u3 = 0;u3 < s2; u3++)
          a3.words[u3] = i.words[u3];
        if (a3.length = s2, i.length <= 9) {
          i.words[0] = 0, i.length = 1;
          return;
        }
        var c3 = i.words[9];
        for (a3.words[a3.length++] = c3 & h3, u3 = 10;u3 < i.length; u3++) {
          var b3 = i.words[u3] | 0;
          i.words[u3 - 10] = (b3 & h3) << 4 | c3 >>> 22, c3 = b3;
        }
        c3 >>>= 22, i.words[u3 - 10] = c3, c3 === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
      }, xe.prototype.imulK = function(i) {
        i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = i.words[h3] | 0;
          a3 += s2 * 977, i.words[h3] = a3 & 67108863, a3 = s2 * 64 + (a3 / 67108864 | 0);
        }
        return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o(Ae, ye), Ae.prototype.imulK = function(i) {
        for (var a3 = 0, h3 = 0;h3 < i.length; h3++) {
          var s2 = (i.words[h3] | 0) * 19 + a3, u3 = s2 & 67108863;
          s2 >>>= 26, i.words[h3] = u3, a3 = s2;
        }
        return a3 !== 0 && (i.words[i.length++] = a3), i;
      }, f3._prime = function(i) {
        if (we[i])
          return we[i];
        var a3;
        if (i === "k256")
          a3 = new xe;
        else if (i === "p224")
          a3 = new Re;
        else if (i === "p192")
          a3 = new Ee;
        else if (i === "p25519")
          a3 = new Ae;
        else
          throw new Error("Unknown prime " + i);
        return we[i] = a3, a3;
      };
      function P3(v2) {
        if (typeof v2 == "string") {
          var i = f3._prime(v2);
          this.m = i.p, this.prime = i;
        } else
          r(v2.gtn(1), "modulus must be greater than 1"), this.m = v2, this.prime = null;
      }
      P3.prototype._verify1 = function(i) {
        r(i.negative === 0, "red works only with positives"), r(i.red, "red works only with red numbers");
      }, P3.prototype._verify2 = function(i, a3) {
        r((i.negative | a3.negative) === 0, "red works only with positives"), r(i.red && i.red === a3.red, "red works only with red numbers");
      }, P3.prototype.imod = function(i) {
        return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
      }, P3.prototype.neg = function(i) {
        return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
      }, P3.prototype.add = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.add(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3._forceRed(this);
      }, P3.prototype.iadd = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.iadd(a3);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3;
      }, P3.prototype.sub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.sub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3._forceRed(this);
      }, P3.prototype.isub = function(i, a3) {
        this._verify2(i, a3);
        var h3 = i.isub(a3);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3;
      }, P3.prototype.shl = function(i, a3) {
        return this._verify1(i), this.imod(i.ushln(a3));
      }, P3.prototype.imul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.imul(a3));
      }, P3.prototype.mul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.mul(a3));
      }, P3.prototype.isqr = function(i) {
        return this.imul(i, i.clone());
      }, P3.prototype.sqr = function(i) {
        return this.mul(i, i);
      }, P3.prototype.sqrt = function(i) {
        if (i.isZero())
          return i.clone();
        var a3 = this.m.andln(3);
        if (r(a3 % 2 === 1), a3 === 3) {
          var h3 = this.m.add(new f3(1)).iushrn(2);
          return this.pow(i, h3);
        }
        for (var s2 = this.m.subn(1), u3 = 0;!s2.isZero() && s2.andln(1) === 0; )
          u3++, s2.iushrn(1);
        r(!s2.isZero());
        var c3 = new f3(1).toRed(this), b3 = c3.redNeg(), l2 = this.m.subn(1).iushrn(1), n = this.m.bitLength();
        for (n = new f3(2 * n * n).toRed(this);this.pow(n, l2).cmp(b3) !== 0; )
          n.redIAdd(b3);
        for (var d3 = this.pow(n, s2), w = this.pow(i, s2.addn(1).iushrn(1)), g3 = this.pow(i, s2), _3 = u3;g3.cmp(c3) !== 0; ) {
          for (var A2 = g3, R2 = 0;A2.cmp(c3) !== 0; R2++)
            A2 = A2.redSqr();
          r(R2 < _3);
          var I3 = this.pow(d3, new f3(1).iushln(_3 - R2 - 1));
          w = w.redMul(I3), d3 = I3.redSqr(), g3 = g3.redMul(d3), _3 = R2;
        }
        return w;
      }, P3.prototype.invm = function(i) {
        var a3 = i._invmp(this.m);
        return a3.negative !== 0 ? (a3.negative = 0, this.imod(a3).redNeg()) : this.imod(a3);
      }, P3.prototype.pow = function(i, a3) {
        if (a3.isZero())
          return new f3(1).toRed(this);
        if (a3.cmpn(1) === 0)
          return i.clone();
        var h3 = 4, s2 = new Array(1 << h3);
        s2[0] = new f3(1).toRed(this), s2[1] = i;
        for (var u3 = 2;u3 < s2.length; u3++)
          s2[u3] = this.mul(s2[u3 - 1], i);
        var c3 = s2[0], b3 = 0, l2 = 0, n = a3.bitLength() % 26;
        for (n === 0 && (n = 26), u3 = a3.length - 1;u3 >= 0; u3--) {
          for (var d3 = a3.words[u3], w = n - 1;w >= 0; w--) {
            var g3 = d3 >> w & 1;
            if (c3 !== s2[0] && (c3 = this.sqr(c3)), g3 === 0 && b3 === 0) {
              l2 = 0;
              continue;
            }
            b3 <<= 1, b3 |= g3, l2++, !(l2 !== h3 && (u3 !== 0 || w !== 0)) && (c3 = this.mul(c3, s2[b3]), l2 = 0, b3 = 0);
          }
          n = 26;
        }
        return c3;
      }, P3.prototype.convertTo = function(i) {
        var a3 = i.umod(this.m);
        return a3 === i ? a3.clone() : a3;
      }, P3.prototype.convertFrom = function(i) {
        var a3 = i.clone();
        return a3.red = null, a3;
      }, f3.mont = function(i) {
        return new Se2(i);
      };
      function Se2(v2) {
        P3.call(this, v2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f3(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o(Se2, P3), Se2.prototype.convertTo = function(i) {
        return this.imod(i.ushln(this.shift));
      }, Se2.prototype.convertFrom = function(i) {
        var a3 = this.imod(i.mul(this.rinv));
        return a3.red = null, a3;
      }, Se2.prototype.imul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return i.words[0] = 0, i.length = 1, i;
        var h3 = i.imul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c3 = u3;
        return u3.cmp(this.m) >= 0 ? c3 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c3 = u3.iadd(this.m)), c3._forceRed(this);
      }, Se2.prototype.mul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return new f3(0)._forceRed(this);
        var h3 = i.mul(a3), s2 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h3.isub(s2).iushrn(this.shift), c3 = u3;
        return u3.cmp(this.m) >= 0 ? c3 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c3 = u3.iadd(this.m)), c3._forceRed(this);
      }, Se2.prototype.invm = function(i) {
        var a3 = this.imod(i._invmp(this.m).mul(this.r2));
        return a3._forceRed(this);
      };
    })(typeof Ql > "u" || Ql, qy);
  });
  s0 = T3(($k, Iy) => {
    var o0 = Ut(), Ff = o0.Buffer, Er2 = {}, Ar;
    for (Ar in o0)
      !o0.hasOwnProperty(Ar) || Ar === "SlowBuffer" || Ar === "Buffer" || (Er2[Ar] = o0[Ar]);
    var Uf = Er2.Buffer = {};
    for (Ar in Ff)
      !Ff.hasOwnProperty(Ar) || Ar === "allocUnsafe" || Ar === "allocUnsafeSlow" || (Uf[Ar] = Ff[Ar]);
    Er2.Buffer.prototype = Ff.prototype;
    (!Uf.from || Uf.from === Uint8Array.from) && (Uf.from = function(t, e, r) {
      if (typeof t == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof t);
      if (t && typeof t.length > "u")
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
      return Ff(t, e, r);
    });
    Uf.alloc || (Uf.alloc = function(t, e, r) {
      if (typeof t != "number")
        throw new TypeError('The "size" argument must be of type number. Received type ' + typeof t);
      if (t < 0 || t >= 2 * (1 << 30))
        throw new RangeError('The value "' + t + '" is invalid for option "size"');
      var o = Ff(t);
      return !e || e.length === 0 ? o.fill(0) : typeof r == "string" ? o.fill(e, r) : o.fill(e), o;
    });
    if (!Er2.kStringMaxLength)
      try {
        Er2.kStringMaxLength = process.binding("buffer").kStringMaxLength;
      } catch {}
    Er2.constants || (Er2.constants = { MAX_LENGTH: Er2.kMaxLength }, Er2.kStringMaxLength && (Er2.constants.MAX_STRING_LENGTH = Er2.kStringMaxLength));
    Iy.exports = Er2;
  });
  h0 = T3((Ty) => {
    var iB = Ie2();
    function Rr(t) {
      this._reporterState = { obj: null, path: [], options: t || {}, errors: [] };
    }
    Ty.Reporter = Rr;
    Rr.prototype.isError = function(e) {
      return e instanceof zf;
    };
    Rr.prototype.save = function() {
      let e = this._reporterState;
      return { obj: e.obj, pathLen: e.path.length };
    };
    Rr.prototype.restore = function(e) {
      let r = this._reporterState;
      r.obj = e.obj, r.path = r.path.slice(0, e.pathLen);
    };
    Rr.prototype.enterKey = function(e) {
      return this._reporterState.path.push(e);
    };
    Rr.prototype.exitKey = function(e) {
      let r = this._reporterState;
      r.path = r.path.slice(0, e - 1);
    };
    Rr.prototype.leaveKey = function(e, r, o) {
      let f3 = this._reporterState;
      this.exitKey(e), f3.obj !== null && (f3.obj[r] = o);
    };
    Rr.prototype.path = function() {
      return this._reporterState.path.join("/");
    };
    Rr.prototype.enterObject = function() {
      let e = this._reporterState, r = e.obj;
      return e.obj = {}, r;
    };
    Rr.prototype.leaveObject = function(e) {
      let r = this._reporterState, o = r.obj;
      return r.obj = e, o;
    };
    Rr.prototype.error = function(e) {
      let r, o = this._reporterState, f3 = e instanceof zf;
      if (f3 ? r = e : r = new zf(o.path.map(function(p3) {
        return "[" + JSON.stringify(p3) + "]";
      }).join(""), e.message || e, e.stack), !o.options.partial)
        throw r;
      return f3 || o.errors.push(r), r;
    };
    Rr.prototype.wrapResult = function(e) {
      let r = this._reporterState;
      return r.options.partial ? { result: this.isError(e) ? null : e, errors: r.errors } : e;
    };
    function zf(t, e) {
      this.path = t, this.rethrow(e);
    }
    iB(zf, Error);
    zf.prototype.rethrow = function(e) {
      if (this.message = e + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, zf), !this.stack)
        try {
          throw new Error(this.message);
        } catch (r) {
          this.stack = r.stack;
        }
      return this;
    };
  });
  Kf = T3((td) => {
    var nB = Ie2(), u0 = h0().Reporter, Hf = s0().Buffer;
    function Br(t, e) {
      if (u0.call(this, e), !Hf.isBuffer(t)) {
        this.error("Input not Buffer");
        return;
      }
      this.base = t, this.offset = 0, this.length = t.length;
    }
    nB(Br, u0);
    td.DecoderBuffer = Br;
    Br.isDecoderBuffer = function(e) {
      return e instanceof Br ? true : typeof e == "object" && Hf.isBuffer(e.base) && e.constructor.name === "DecoderBuffer" && typeof e.offset == "number" && typeof e.length == "number" && typeof e.save == "function" && typeof e.restore == "function" && typeof e.isEmpty == "function" && typeof e.readUInt8 == "function" && typeof e.skip == "function" && typeof e.raw == "function";
    };
    Br.prototype.save = function() {
      return { offset: this.offset, reporter: u0.prototype.save.call(this) };
    };
    Br.prototype.restore = function(e) {
      let r = new Br(this.base);
      return r.offset = e.offset, r.length = this.offset, this.offset = e.offset, u0.prototype.restore.call(this, e.reporter), r;
    };
    Br.prototype.isEmpty = function() {
      return this.offset === this.length;
    };
    Br.prototype.readUInt8 = function(e) {
      return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(e || "DecoderBuffer overrun");
    };
    Br.prototype.skip = function(e, r) {
      if (!(this.offset + e <= this.length))
        return this.error(r || "DecoderBuffer overrun");
      let o = new Br(this.base);
      return o._reporterState = this._reporterState, o.offset = this.offset, o.length = this.offset + e, this.offset += e, o;
    };
    Br.prototype.raw = function(e) {
      return this.base.slice(e ? e.offset : this.offset, this.length);
    };
    function Wf(t, e) {
      if (Array.isArray(t))
        this.length = 0, this.value = t.map(function(r) {
          return Wf.isEncoderBuffer(r) || (r = new Wf(r, e)), this.length += r.length, r;
        }, this);
      else if (typeof t == "number") {
        if (!(0 <= t && t <= 255))
          return e.error("non-byte EncoderBuffer value");
        this.value = t, this.length = 1;
      } else if (typeof t == "string")
        this.value = t, this.length = Hf.byteLength(t);
      else if (Hf.isBuffer(t))
        this.value = t, this.length = t.length;
      else
        return e.error("Unsupported type: " + typeof t);
    }
    td.EncoderBuffer = Wf;
    Wf.isEncoderBuffer = function(e) {
      return e instanceof Wf ? true : typeof e == "object" && e.constructor.name === "EncoderBuffer" && typeof e.length == "number" && typeof e.join == "function";
    };
    Wf.prototype.join = function(e, r) {
      return e || (e = Hf.alloc(this.length)), r || (r = 0), this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(o) {
        o.join(e, r), r += o.length;
      }) : (typeof this.value == "number" ? e[r] = this.value : typeof this.value == "string" ? e.write(this.value, r) : Hf.isBuffer(this.value) && this.value.copy(e, r), r += this.length)), e;
    };
  });
  l0 = T3((Xk, Ly) => {
    var fB = h0().Reporter, aB = Kf().EncoderBuffer, oB = Kf().DecoderBuffer, Jt2 = ar(), ky = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"], sB = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(ky), hB = ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"];
    function Ue(t, e, r) {
      let o = {};
      this._baseState = o, o.name = r, o.enc = t, o.parent = e || null, o.children = null, o.tag = null, o.args = null, o.reverseArgs = null, o.choice = null, o.optional = false, o.any = false, o.obj = false, o.use = null, o.useDecoder = null, o.key = null, o.default = null, o.explicit = null, o.implicit = null, o.contains = null, o.parent || (o.children = [], this._wrap());
    }
    Ly.exports = Ue;
    var uB = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
    Ue.prototype.clone = function() {
      let e = this._baseState, r = {};
      uB.forEach(function(f3) {
        r[f3] = e[f3];
      });
      let o = new this.constructor(r.parent);
      return o._baseState = r, o;
    };
    Ue.prototype._wrap = function() {
      let e = this._baseState;
      sB.forEach(function(r) {
        this[r] = function() {
          let f3 = new this.constructor(this);
          return e.children.push(f3), f3[r].apply(f3, arguments);
        };
      }, this);
    };
    Ue.prototype._init = function(e) {
      let r = this._baseState;
      Jt2(r.parent === null), e.call(this), r.children = r.children.filter(function(o) {
        return o._baseState.parent === this;
      }, this), Jt2.equal(r.children.length, 1, "Root node can have only one child");
    };
    Ue.prototype._useArgs = function(e) {
      let r = this._baseState, o = e.filter(function(f3) {
        return f3 instanceof this.constructor;
      }, this);
      e = e.filter(function(f3) {
        return !(f3 instanceof this.constructor);
      }, this), o.length !== 0 && (Jt2(r.children === null), r.children = o, o.forEach(function(f3) {
        f3._baseState.parent = this;
      }, this)), e.length !== 0 && (Jt2(r.args === null), r.args = e, r.reverseArgs = e.map(function(f3) {
        if (typeof f3 != "object" || f3.constructor !== Object)
          return f3;
        let p3 = {};
        return Object.keys(f3).forEach(function(m3) {
          m3 == (m3 | 0) && (m3 |= 0);
          let y3 = f3[m3];
          p3[y3] = m3;
        }), p3;
      }));
    };
    hB.forEach(function(t) {
      Ue.prototype[t] = function() {
        let r = this._baseState;
        throw new Error(t + " not implemented for encoding: " + r.enc);
      };
    });
    ky.forEach(function(t) {
      Ue.prototype[t] = function() {
        let r = this._baseState, o = Array.prototype.slice.call(arguments);
        return Jt2(r.tag === null), r.tag = t, this._useArgs(o), this;
      };
    });
    Ue.prototype.use = function(e) {
      Jt2(e);
      let r = this._baseState;
      return Jt2(r.use === null), r.use = e, this;
    };
    Ue.prototype.optional = function() {
      let e = this._baseState;
      return e.optional = true, this;
    };
    Ue.prototype.def = function(e) {
      let r = this._baseState;
      return Jt2(r.default === null), r.default = e, r.optional = true, this;
    };
    Ue.prototype.explicit = function(e) {
      let r = this._baseState;
      return Jt2(r.explicit === null && r.implicit === null), r.explicit = e, this;
    };
    Ue.prototype.implicit = function(e) {
      let r = this._baseState;
      return Jt2(r.explicit === null && r.implicit === null), r.implicit = e, this;
    };
    Ue.prototype.obj = function() {
      let e = this._baseState, r = Array.prototype.slice.call(arguments);
      return e.obj = true, r.length !== 0 && this._useArgs(r), this;
    };
    Ue.prototype.key = function(e) {
      let r = this._baseState;
      return Jt2(r.key === null), r.key = e, this;
    };
    Ue.prototype.any = function() {
      let e = this._baseState;
      return e.any = true, this;
    };
    Ue.prototype.choice = function(e) {
      let r = this._baseState;
      return Jt2(r.choice === null), r.choice = e, this._useArgs(Object.keys(e).map(function(o) {
        return e[o];
      })), this;
    };
    Ue.prototype.contains = function(e) {
      let r = this._baseState;
      return Jt2(r.use === null), r.contains = e, this;
    };
    Ue.prototype._decode = function(e, r) {
      let o = this._baseState;
      if (o.parent === null)
        return e.wrapResult(o.children[0]._decode(e, r));
      let f3 = o.default, p3 = true, m3 = null;
      if (o.key !== null && (m3 = e.enterKey(o.key)), o.optional) {
        let M2 = null;
        if (o.explicit !== null ? M2 = o.explicit : o.implicit !== null ? M2 = o.implicit : o.tag !== null && (M2 = o.tag), M2 === null && !o.any) {
          let x4 = e.save();
          try {
            o.choice === null ? this._decodeGeneric(o.tag, e, r) : this._decodeChoice(e, r), p3 = true;
          } catch {
            p3 = false;
          }
          e.restore(x4);
        } else if (p3 = this._peekTag(e, M2, o.any), e.isError(p3))
          return p3;
      }
      let y3;
      if (o.obj && p3 && (y3 = e.enterObject()), p3) {
        if (o.explicit !== null) {
          let x4 = this._decodeTag(e, o.explicit);
          if (e.isError(x4))
            return x4;
          e = x4;
        }
        let M2 = e.offset;
        if (o.use === null && o.choice === null) {
          let x4;
          o.any && (x4 = e.save());
          let S3 = this._decodeTag(e, o.implicit !== null ? o.implicit : o.tag, o.any);
          if (e.isError(S3))
            return S3;
          o.any ? f3 = e.raw(x4) : e = S3;
        }
        if (r && r.track && o.tag !== null && r.track(e.path(), M2, e.length, "tagged"), r && r.track && o.tag !== null && r.track(e.path(), e.offset, e.length, "content"), o.any || (o.choice === null ? f3 = this._decodeGeneric(o.tag, e, r) : f3 = this._decodeChoice(e, r)), e.isError(f3))
          return f3;
        if (!o.any && o.choice === null && o.children !== null && o.children.forEach(function(S3) {
          S3._decode(e, r);
        }), o.contains && (o.tag === "octstr" || o.tag === "bitstr")) {
          let x4 = new oB(f3);
          f3 = this._getUse(o.contains, e._reporterState.obj)._decode(x4, r);
        }
      }
      return o.obj && p3 && (f3 = e.leaveObject(y3)), o.key !== null && (f3 !== null || p3 === true) ? e.leaveKey(m3, o.key, f3) : m3 !== null && e.exitKey(m3), f3;
    };
    Ue.prototype._decodeGeneric = function(e, r, o) {
      let f3 = this._baseState;
      return e === "seq" || e === "set" ? null : e === "seqof" || e === "setof" ? this._decodeList(r, e, f3.args[0], o) : /str$/.test(e) ? this._decodeStr(r, e, o) : e === "objid" && f3.args ? this._decodeObjid(r, f3.args[0], f3.args[1], o) : e === "objid" ? this._decodeObjid(r, null, null, o) : e === "gentime" || e === "utctime" ? this._decodeTime(r, e, o) : e === "null_" ? this._decodeNull(r, o) : e === "bool" ? this._decodeBool(r, o) : e === "objDesc" ? this._decodeStr(r, e, o) : e === "int" || e === "enum" ? this._decodeInt(r, f3.args && f3.args[0], o) : f3.use !== null ? this._getUse(f3.use, r._reporterState.obj)._decode(r, o) : r.error("unknown tag: " + e);
    };
    Ue.prototype._getUse = function(e, r) {
      let o = this._baseState;
      return o.useDecoder = this._use(e, r), Jt2(o.useDecoder._baseState.parent === null), o.useDecoder = o.useDecoder._baseState.children[0], o.implicit !== o.useDecoder._baseState.implicit && (o.useDecoder = o.useDecoder.clone(), o.useDecoder._baseState.implicit = o.implicit), o.useDecoder;
    };
    Ue.prototype._decodeChoice = function(e, r) {
      let o = this._baseState, f3 = null, p3 = false;
      return Object.keys(o.choice).some(function(m3) {
        let y3 = e.save(), M2 = o.choice[m3];
        try {
          let x4 = M2._decode(e, r);
          if (e.isError(x4))
            return false;
          f3 = { type: m3, value: x4 }, p3 = true;
        } catch {
          return e.restore(y3), false;
        }
        return true;
      }, this), p3 ? f3 : e.error("Choice not matched");
    };
    Ue.prototype._createEncoderBuffer = function(e) {
      return new aB(e, this.reporter);
    };
    Ue.prototype._encode = function(e, r, o) {
      let f3 = this._baseState;
      if (f3.default !== null && f3.default === e)
        return;
      let p3 = this._encodeValue(e, r, o);
      if (p3 !== undefined && !this._skipDefault(p3, r, o))
        return p3;
    };
    Ue.prototype._encodeValue = function(e, r, o) {
      let f3 = this._baseState;
      if (f3.parent === null)
        return f3.children[0]._encode(e, r || new fB);
      let p3 = null;
      if (this.reporter = r, f3.optional && e === undefined)
        if (f3.default !== null)
          e = f3.default;
        else
          return;
      let m3 = null, y3 = false;
      if (f3.any)
        p3 = this._createEncoderBuffer(e);
      else if (f3.choice)
        p3 = this._encodeChoice(e, r);
      else if (f3.contains)
        m3 = this._getUse(f3.contains, o)._encode(e, r), y3 = true;
      else if (f3.children)
        m3 = f3.children.map(function(M2) {
          if (M2._baseState.tag === "null_")
            return M2._encode(null, r, e);
          if (M2._baseState.key === null)
            return r.error("Child should have a key");
          let x4 = r.enterKey(M2._baseState.key);
          if (typeof e != "object")
            return r.error("Child expected, but input is not object");
          let S3 = M2._encode(e[M2._baseState.key], r, e);
          return r.leaveKey(x4), S3;
        }, this).filter(function(M2) {
          return M2;
        }), m3 = this._createEncoderBuffer(m3);
      else if (f3.tag === "seqof" || f3.tag === "setof") {
        if (!(f3.args && f3.args.length === 1))
          return r.error("Too many args for : " + f3.tag);
        if (!Array.isArray(e))
          return r.error("seqof/setof, but data is not Array");
        let M2 = this.clone();
        M2._baseState.implicit = null, m3 = this._createEncoderBuffer(e.map(function(x4) {
          let S3 = this._baseState;
          return this._getUse(S3.args[0], e)._encode(x4, r);
        }, M2));
      } else
        f3.use !== null ? p3 = this._getUse(f3.use, o)._encode(e, r) : (m3 = this._encodePrimitive(f3.tag, e), y3 = true);
      if (!f3.any && f3.choice === null) {
        let M2 = f3.implicit !== null ? f3.implicit : f3.tag, x4 = f3.implicit === null ? "universal" : "context";
        M2 === null ? f3.use === null && r.error("Tag could be omitted only for .use()") : f3.use === null && (p3 = this._encodeComposite(M2, y3, x4, m3));
      }
      return f3.explicit !== null && (p3 = this._encodeComposite(f3.explicit, false, "context", p3)), p3;
    };
    Ue.prototype._encodeChoice = function(e, r) {
      let o = this._baseState, f3 = o.choice[e.type];
      return f3 || Jt2(false, e.type + " not found in " + JSON.stringify(Object.keys(o.choice))), f3._encode(e.value, r);
    };
    Ue.prototype._encodePrimitive = function(e, r) {
      let o = this._baseState;
      if (/str$/.test(e))
        return this._encodeStr(r, e);
      if (e === "objid" && o.args)
        return this._encodeObjid(r, o.reverseArgs[0], o.args[1]);
      if (e === "objid")
        return this._encodeObjid(r, null, null);
      if (e === "gentime" || e === "utctime")
        return this._encodeTime(r, e);
      if (e === "null_")
        return this._encodeNull();
      if (e === "int" || e === "enum")
        return this._encodeInt(r, o.args && o.reverseArgs[0]);
      if (e === "bool")
        return this._encodeBool(r);
      if (e === "objDesc")
        return this._encodeStr(r, e);
      throw new Error("Unsupported tag: " + e);
    };
    Ue.prototype._isNumstr = function(e) {
      return /^[0-9 ]*$/.test(e);
    };
    Ue.prototype._isPrintstr = function(e) {
      return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(e);
    };
  });
  d0 = T3((Wn) => {
    function Ny(t) {
      let e = {};
      return Object.keys(t).forEach(function(r) {
        (r | 0) == r && (r = r | 0);
        let o = t[r];
        e[o] = r;
      }), e;
    }
    Wn.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" };
    Wn.tagClassByName = Ny(Wn.tagClass);
    Wn.tag = { 0: "end", 1: "bool", 2: "int", 3: "bitstr", 4: "octstr", 5: "null_", 6: "objid", 7: "objDesc", 8: "external", 9: "real", 10: "enum", 11: "embed", 12: "utf8str", 13: "relativeOid", 16: "seq", 17: "set", 18: "numstr", 19: "printstr", 20: "t61str", 21: "videostr", 22: "ia5str", 23: "utctime", 24: "gentime", 25: "graphstr", 26: "iso646str", 27: "genstr", 28: "unistr", 29: "charstr", 30: "bmpstr" };
    Wn.tagByName = Ny(Wn.tag);
  });
  id = T3((Qk, Cy) => {
    var lB = Ie2(), Ii = s0().Buffer, Dy = l0(), rd = d0();
    function Py(t) {
      this.enc = "der", this.name = t.name, this.entity = t, this.tree = new Ur, this.tree._init(t.body);
    }
    Cy.exports = Py;
    Py.prototype.encode = function(e, r) {
      return this.tree._encode(e, r).join();
    };
    function Ur(t) {
      Dy.call(this, "der", t);
    }
    lB(Ur, Dy);
    Ur.prototype._encodeComposite = function(e, r, o, f3) {
      let p3 = dB(e, r, o, this.reporter);
      if (f3.length < 128) {
        let M2 = Ii.alloc(2);
        return M2[0] = p3, M2[1] = f3.length, this._createEncoderBuffer([M2, f3]);
      }
      let m3 = 1;
      for (let M2 = f3.length;M2 >= 256; M2 >>= 8)
        m3++;
      let y3 = Ii.alloc(1 + 1 + m3);
      y3[0] = p3, y3[1] = 128 | m3;
      for (let M2 = 1 + m3, x4 = f3.length;x4 > 0; M2--, x4 >>= 8)
        y3[M2] = x4 & 255;
      return this._createEncoderBuffer([y3, f3]);
    };
    Ur.prototype._encodeStr = function(e, r) {
      if (r === "bitstr")
        return this._createEncoderBuffer([e.unused | 0, e.data]);
      if (r === "bmpstr") {
        let o = Ii.alloc(e.length * 2);
        for (let f3 = 0;f3 < e.length; f3++)
          o.writeUInt16BE(e.charCodeAt(f3), f3 * 2);
        return this._createEncoderBuffer(o);
      } else
        return r === "numstr" ? this._isNumstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : r === "printstr" ? this._isPrintstr(e) ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(r) ? this._createEncoderBuffer(e) : r === "objDesc" ? this._createEncoderBuffer(e) : this.reporter.error("Encoding of string type: " + r + " unsupported");
    };
    Ur.prototype._encodeObjid = function(e, r, o) {
      if (typeof e == "string") {
        if (!r)
          return this.reporter.error("string objid given, but no values map found");
        if (!r.hasOwnProperty(e))
          return this.reporter.error("objid not found in values map");
        e = r[e].split(/[\s.]+/g);
        for (let y3 = 0;y3 < e.length; y3++)
          e[y3] |= 0;
      } else if (Array.isArray(e)) {
        e = e.slice();
        for (let y3 = 0;y3 < e.length; y3++)
          e[y3] |= 0;
      }
      if (!Array.isArray(e))
        return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(e));
      if (!o) {
        if (e[1] >= 40)
          return this.reporter.error("Second objid identifier OOB");
        e.splice(0, 2, e[0] * 40 + e[1]);
      }
      let f3 = 0;
      for (let y3 = 0;y3 < e.length; y3++) {
        let M2 = e[y3];
        for (f3++;M2 >= 128; M2 >>= 7)
          f3++;
      }
      let p3 = Ii.alloc(f3), m3 = p3.length - 1;
      for (let y3 = e.length - 1;y3 >= 0; y3--) {
        let M2 = e[y3];
        for (p3[m3--] = M2 & 127;(M2 >>= 7) > 0; )
          p3[m3--] = 128 | M2 & 127;
      }
      return this._createEncoderBuffer(p3);
    };
    function qr(t) {
      return t < 10 ? "0" + t : t;
    }
    Ur.prototype._encodeTime = function(e, r) {
      let o, f3 = new Date(e);
      return r === "gentime" ? o = [qr(f3.getUTCFullYear()), qr(f3.getUTCMonth() + 1), qr(f3.getUTCDate()), qr(f3.getUTCHours()), qr(f3.getUTCMinutes()), qr(f3.getUTCSeconds()), "Z"].join("") : r === "utctime" ? o = [qr(f3.getUTCFullYear() % 100), qr(f3.getUTCMonth() + 1), qr(f3.getUTCDate()), qr(f3.getUTCHours()), qr(f3.getUTCMinutes()), qr(f3.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + r + " time is not supported yet"), this._encodeStr(o, "octstr");
    };
    Ur.prototype._encodeNull = function() {
      return this._createEncoderBuffer("");
    };
    Ur.prototype._encodeInt = function(e, r) {
      if (typeof e == "string") {
        if (!r)
          return this.reporter.error("String int or enum given, but no values map");
        if (!r.hasOwnProperty(e))
          return this.reporter.error("Values map doesn't contain: " + JSON.stringify(e));
        e = r[e];
      }
      if (typeof e != "number" && !Ii.isBuffer(e)) {
        let p3 = e.toArray();
        !e.sign && p3[0] & 128 && p3.unshift(0), e = Ii.from(p3);
      }
      if (Ii.isBuffer(e)) {
        let p3 = e.length;
        e.length === 0 && p3++;
        let m3 = Ii.alloc(p3);
        return e.copy(m3), e.length === 0 && (m3[0] = 0), this._createEncoderBuffer(m3);
      }
      if (e < 128)
        return this._createEncoderBuffer(e);
      if (e < 256)
        return this._createEncoderBuffer([0, e]);
      let o = 1;
      for (let p3 = e;p3 >= 256; p3 >>= 8)
        o++;
      let f3 = new Array(o);
      for (let p3 = f3.length - 1;p3 >= 0; p3--)
        f3[p3] = e & 255, e >>= 8;
      return f3[0] & 128 && f3.unshift(0), this._createEncoderBuffer(Ii.from(f3));
    };
    Ur.prototype._encodeBool = function(e) {
      return this._createEncoderBuffer(e ? 255 : 0);
    };
    Ur.prototype._use = function(e, r) {
      return typeof e == "function" && (e = e(r)), e._getEncoder("der").tree;
    };
    Ur.prototype._skipDefault = function(e, r, o) {
      let f3 = this._baseState, p3;
      if (f3.default === null)
        return false;
      let m3 = e.join();
      if (f3.defaultBuffer === undefined && (f3.defaultBuffer = this._encodeValue(f3.default, r, o).join()), m3.length !== f3.defaultBuffer.length)
        return false;
      for (p3 = 0;p3 < m3.length; p3++)
        if (m3[p3] !== f3.defaultBuffer[p3])
          return false;
      return true;
    };
    function dB(t, e, r, o) {
      let f3;
      if (t === "seqof" ? t = "seq" : t === "setof" && (t = "set"), rd.tagByName.hasOwnProperty(t))
        f3 = rd.tagByName[t];
      else if (typeof t == "number" && (t | 0) === t)
        f3 = t;
      else
        return o.error("Unknown tag: " + t);
      return f3 >= 31 ? o.error("Multi-octet tag encoding unsupported") : (e || (f3 |= 32), f3 |= rd.tagClassByName[r || "universal"] << 6, f3);
    }
  });
  Fy = T3((eL, Oy) => {
    var cB = Ie2(), nd = id();
    function fd(t) {
      nd.call(this, t), this.enc = "pem";
    }
    cB(fd, nd);
    Oy.exports = fd;
    fd.prototype.encode = function(e, r) {
      let f3 = nd.prototype.encode.call(this, e).toString("base64"), p3 = ["-----BEGIN " + r.label + "-----"];
      for (let m3 = 0;m3 < f3.length; m3 += 64)
        p3.push(f3.slice(m3, m3 + 64));
      return p3.push("-----END " + r.label + "-----"), p3.join(`
`);
    };
  });
  ad = T3((zy) => {
    var Uy = zy;
    Uy.der = id();
    Uy.pem = Fy();
  });
  sd = T3((rL, Vy) => {
    var pB = Ie2(), vB = ed(), Hy = Kf().DecoderBuffer, Ky = l0(), Wy = d0();
    function jy(t) {
      this.enc = "der", this.name = t.name, this.entity = t, this.tree = new sr, this.tree._init(t.body);
    }
    Vy.exports = jy;
    jy.prototype.decode = function(e, r) {
      return Hy.isDecoderBuffer(e) || (e = new Hy(e, r)), this.tree._decode(e, r);
    };
    function sr(t) {
      Ky.call(this, "der", t);
    }
    pB(sr, Ky);
    sr.prototype._peekTag = function(e, r, o) {
      if (e.isEmpty())
        return false;
      let f3 = e.save(), p3 = od(e, 'Failed to peek tag: "' + r + '"');
      return e.isError(p3) ? p3 : (e.restore(f3), p3.tag === r || p3.tagStr === r || p3.tagStr + "of" === r || o);
    };
    sr.prototype._decodeTag = function(e, r, o) {
      let f3 = od(e, 'Failed to decode tag of "' + r + '"');
      if (e.isError(f3))
        return f3;
      let p3 = Zy(e, f3.primitive, 'Failed to get length of "' + r + '"');
      if (e.isError(p3))
        return p3;
      if (!o && f3.tag !== r && f3.tagStr !== r && f3.tagStr + "of" !== r)
        return e.error('Failed to match tag: "' + r + '"');
      if (f3.primitive || p3 !== null)
        return e.skip(p3, 'Failed to match body of: "' + r + '"');
      let m3 = e.save(), y3 = this._skipUntilEnd(e, 'Failed to skip indefinite length body: "' + this.tag + '"');
      return e.isError(y3) ? y3 : (p3 = e.offset - m3.offset, e.restore(m3), e.skip(p3, 'Failed to match body of: "' + r + '"'));
    };
    sr.prototype._skipUntilEnd = function(e, r) {
      for (;; ) {
        let o = od(e, r);
        if (e.isError(o))
          return o;
        let f3 = Zy(e, o.primitive, r);
        if (e.isError(f3))
          return f3;
        let p3;
        if (o.primitive || f3 !== null ? p3 = e.skip(f3) : p3 = this._skipUntilEnd(e, r), e.isError(p3))
          return p3;
        if (o.tagStr === "end")
          break;
      }
    };
    sr.prototype._decodeList = function(e, r, o, f3) {
      let p3 = [];
      for (;!e.isEmpty(); ) {
        let m3 = this._peekTag(e, "end");
        if (e.isError(m3))
          return m3;
        let y3 = o.decode(e, "der", f3);
        if (e.isError(y3) && m3)
          break;
        p3.push(y3);
      }
      return p3;
    };
    sr.prototype._decodeStr = function(e, r) {
      if (r === "bitstr") {
        let o = e.readUInt8();
        return e.isError(o) ? o : { unused: o, data: e.raw() };
      } else if (r === "bmpstr") {
        let o = e.raw();
        if (o.length % 2 === 1)
          return e.error("Decoding of string type: bmpstr length mismatch");
        let f3 = "";
        for (let p3 = 0;p3 < o.length / 2; p3++)
          f3 += String.fromCharCode(o.readUInt16BE(p3 * 2));
        return f3;
      } else if (r === "numstr") {
        let o = e.raw().toString("ascii");
        return this._isNumstr(o) ? o : e.error("Decoding of string type: numstr unsupported characters");
      } else {
        if (r === "octstr")
          return e.raw();
        if (r === "objDesc")
          return e.raw();
        if (r === "printstr") {
          let o = e.raw().toString("ascii");
          return this._isPrintstr(o) ? o : e.error("Decoding of string type: printstr unsupported characters");
        } else
          return /str$/.test(r) ? e.raw().toString() : e.error("Decoding of string type: " + r + " unsupported");
      }
    };
    sr.prototype._decodeObjid = function(e, r, o) {
      let f3, p3 = [], m3 = 0, y3 = 0;
      for (;!e.isEmpty(); )
        y3 = e.readUInt8(), m3 <<= 7, m3 |= y3 & 127, (y3 & 128) === 0 && (p3.push(m3), m3 = 0);
      y3 & 128 && p3.push(m3);
      let M2 = p3[0] / 40 | 0, x4 = p3[0] % 40;
      if (o ? f3 = p3 : f3 = [M2, x4].concat(p3.slice(1)), r) {
        let S3 = r[f3.join(" ")];
        S3 === undefined && (S3 = r[f3.join(".")]), S3 !== undefined && (f3 = S3);
      }
      return f3;
    };
    sr.prototype._decodeTime = function(e, r) {
      let o = e.raw().toString(), f3, p3, m3, y3, M2, x4;
      if (r === "gentime")
        f3 = o.slice(0, 4) | 0, p3 = o.slice(4, 6) | 0, m3 = o.slice(6, 8) | 0, y3 = o.slice(8, 10) | 0, M2 = o.slice(10, 12) | 0, x4 = o.slice(12, 14) | 0;
      else if (r === "utctime")
        f3 = o.slice(0, 2) | 0, p3 = o.slice(2, 4) | 0, m3 = o.slice(4, 6) | 0, y3 = o.slice(6, 8) | 0, M2 = o.slice(8, 10) | 0, x4 = o.slice(10, 12) | 0, f3 < 70 ? f3 = 2000 + f3 : f3 = 1900 + f3;
      else
        return e.error("Decoding " + r + " time is not supported yet");
      return Date.UTC(f3, p3 - 1, m3, y3, M2, x4, 0);
    };
    sr.prototype._decodeNull = function() {
      return null;
    };
    sr.prototype._decodeBool = function(e) {
      let r = e.readUInt8();
      return e.isError(r) ? r : r !== 0;
    };
    sr.prototype._decodeInt = function(e, r) {
      let o = e.raw(), f3 = new vB(o);
      return r && (f3 = r[f3.toString(10)] || f3), f3;
    };
    sr.prototype._use = function(e, r) {
      return typeof e == "function" && (e = e(r)), e._getDecoder("der").tree;
    };
    function od(t, e) {
      let r = t.readUInt8(e);
      if (t.isError(r))
        return r;
      let o = Wy.tagClass[r >> 6], f3 = (r & 32) === 0;
      if ((r & 31) === 31) {
        let m3 = r;
        for (r = 0;(m3 & 128) === 128; ) {
          if (m3 = t.readUInt8(e), t.isError(m3))
            return m3;
          r <<= 7, r |= m3 & 127;
        }
      } else
        r &= 31;
      let p3 = Wy.tag[r];
      return { cls: o, primitive: f3, tag: r, tagStr: p3 };
    }
    function Zy(t, e, r) {
      let o = t.readUInt8(r);
      if (t.isError(o))
        return o;
      if (!e && o === 128)
        return null;
      if ((o & 128) === 0)
        return o;
      let f3 = o & 127;
      if (f3 > 4)
        return t.error("length octect is too long");
      o = 0;
      for (let p3 = 0;p3 < f3; p3++) {
        o <<= 8;
        let m3 = t.readUInt8(r);
        if (t.isError(m3))
          return m3;
        o |= m3;
      }
      return o;
    }
  });
  Gy = T3((iL, $y) => {
    var bB = Ie2(), mB = s0().Buffer, hd = sd();
    function ud(t) {
      hd.call(this, t), this.enc = "pem";
    }
    bB(ud, hd);
    $y.exports = ud;
    ud.prototype.decode = function(e, r) {
      let o = e.toString().split(/[\r\n]+/g), f3 = r.label.toUpperCase(), p3 = /^-----(BEGIN|END) ([^-]+)-----$/, m3 = -1, y3 = -1;
      for (let S3 = 0;S3 < o.length; S3++) {
        let E4 = o[S3].match(p3);
        if (E4 !== null && E4[2] === f3)
          if (m3 === -1) {
            if (E4[1] !== "BEGIN")
              break;
            m3 = S3;
          } else {
            if (E4[1] !== "END")
              break;
            y3 = S3;
            break;
          }
      }
      if (m3 === -1 || y3 === -1)
        throw new Error("PEM section not found for: " + f3);
      let M2 = o.slice(m3 + 1, y3).join("");
      M2.replace(/[^a-z0-9+/=]+/gi, "");
      let x4 = mB.from(M2, "base64");
      return hd.prototype.decode.call(this, x4, r);
    };
  });
  ld = T3((Xy) => {
    var Yy = Xy;
    Yy.der = sd();
    Yy.pem = Gy();
  });
  Qy = T3((Jy) => {
    var gB = ad(), yB = ld(), wB = Ie2(), MB = Jy;
    MB.define = function(e, r) {
      return new jf(e, r);
    };
    function jf(t, e) {
      this.name = t, this.body = e, this.decoders = {}, this.encoders = {};
    }
    jf.prototype._createNamed = function(e) {
      let r = this.name;
      function o(f3) {
        this._initNamed(f3, r);
      }
      return wB(o, e), o.prototype._initNamed = function(p3, m3) {
        e.call(this, p3, m3);
      }, new o(this);
    };
    jf.prototype._getDecoder = function(e) {
      return e = e || "der", this.decoders.hasOwnProperty(e) || (this.decoders[e] = this._createNamed(yB[e])), this.decoders[e];
    };
    jf.prototype.decode = function(e, r, o) {
      return this._getDecoder(r).decode(e, o);
    };
    jf.prototype._getEncoder = function(e) {
      return e = e || "der", this.encoders.hasOwnProperty(e) || (this.encoders[e] = this._createNamed(gB[e])), this.encoders[e];
    };
    jf.prototype.encode = function(e, r, o) {
      return this._getEncoder(r).encode(e, o);
    };
  });
  t3 = T3((e3) => {
    var c0 = e3;
    c0.Reporter = h0().Reporter;
    c0.DecoderBuffer = Kf().DecoderBuffer;
    c0.EncoderBuffer = Kf().EncoderBuffer;
    c0.Node = l0();
  });
  n3 = T3((i3) => {
    var r3 = i3;
    r3._reverse = function(e) {
      let r = {};
      return Object.keys(e).forEach(function(o) {
        (o | 0) == o && (o = o | 0);
        let f3 = e[o];
        r[f3] = o;
      }), r;
    };
    r3.der = d0();
  });
  dd = T3((f3) => {
    var Zf = f3;
    Zf.bignum = ed();
    Zf.define = Qy().define;
    Zf.base = t3();
    Zf.constants = n3();
    Zf.decoders = ld();
    Zf.encoders = ad();
  });
  h3 = T3((hL, s3) => {
    var zr = dd(), a3 = zr.define("Time", function() {
      this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
    }), _B = zr.define("AttributeTypeValue", function() {
      this.seq().obj(this.key("type").objid(), this.key("value").any());
    }), cd = zr.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
    }), xB = zr.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(cd), this.key("subjectPublicKey").bitstr());
    }), SB = zr.define("RelativeDistinguishedName", function() {
      this.setof(_B);
    }), EB = zr.define("RDNSequence", function() {
      this.seqof(SB);
    }), o3 = zr.define("Name", function() {
      this.choice({ rdnSequence: this.use(EB) });
    }), AB = zr.define("Validity", function() {
      this.seq().obj(this.key("notBefore").use(a3), this.key("notAfter").use(a3));
    }), RB = zr.define("Extension", function() {
      this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
    }), BB = zr.define("TBSCertificate", function() {
      this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(cd), this.key("issuer").use(o3), this.key("validity").use(AB), this.key("subject").use(o3), this.key("subjectPublicKeyInfo").use(xB), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(RB).optional());
    }), qB = zr.define("X509Certificate", function() {
      this.seq().obj(this.key("tbsCertificate").use(BB), this.key("signatureAlgorithm").use(cd), this.key("signatureValue").bitstr());
    });
    s3.exports = qB;
  });
  l3 = T3((Wr) => {
    var Hr = dd();
    Wr.certificate = h3();
    var IB = Hr.define("RSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
    });
    Wr.RSAPrivateKey = IB;
    var TB = Hr.define("RSAPublicKey", function() {
      this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
    });
    Wr.RSAPublicKey = TB;
    var kB = Hr.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(u3), this.key("subjectPublicKey").bitstr());
    });
    Wr.PublicKey = kB;
    var u3 = Hr.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
    }), LB = Hr.define("PrivateKeyInfo", function() {
      this.seq().obj(this.key("version").int(), this.key("algorithm").use(u3), this.key("subjectPrivateKey").octstr());
    });
    Wr.PrivateKey = LB;
    var NB = Hr.define("EncryptedPrivateKeyInfo", function() {
      this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
    });
    Wr.EncryptedPrivateKey = NB;
    var DB = Hr.define("DSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
    });
    Wr.DSAPrivateKey = DB;
    Wr.DSAparam = Hr.define("DSAparam", function() {
      this.int();
    });
    var PB = Hr.define("ECPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(CB), this.key("publicKey").optional().explicit(1).bitstr());
    });
    Wr.ECPrivateKey = PB;
    var CB = Hr.define("ECParameters", function() {
      this.choice({ namedCurve: this.objid() });
    });
    Wr.signature = Hr.define("signature", function() {
      this.seq().obj(this.key("r").int(), this.key("s").int());
    });
  });
  d3 = T3((lL, OB) => {
    OB.exports = { "2.16.840.1.101.3.4.1.1": "aes-128-ecb", "2.16.840.1.101.3.4.1.2": "aes-128-cbc", "2.16.840.1.101.3.4.1.3": "aes-128-ofb", "2.16.840.1.101.3.4.1.4": "aes-128-cfb", "2.16.840.1.101.3.4.1.21": "aes-192-ecb", "2.16.840.1.101.3.4.1.22": "aes-192-cbc", "2.16.840.1.101.3.4.1.23": "aes-192-ofb", "2.16.840.1.101.3.4.1.24": "aes-192-cfb", "2.16.840.1.101.3.4.1.41": "aes-256-ecb", "2.16.840.1.101.3.4.1.42": "aes-256-cbc", "2.16.840.1.101.3.4.1.43": "aes-256-ofb", "2.16.840.1.101.3.4.1.44": "aes-256-cfb" };
  });
  p3 = T3((dL, c3) => {
    var FB = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, UB = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, zB = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, HB = Ba(), WB = Ss(), p0 = Te().Buffer;
    c3.exports = function(t, e) {
      var r = t.toString(), o = r.match(FB), f3;
      if (o) {
        var m3 = "aes" + o[1], y3 = p0.from(o[2], "hex"), M2 = p0.from(o[3].replace(/[\r\n]/g, ""), "base64"), x4 = HB(e, y3.slice(0, 8), parseInt(o[1], 10)).key, S3 = [], E4 = WB.createDecipheriv(m3, x4, y3);
        S3.push(E4.update(M2)), S3.push(E4.final()), f3 = p0.concat(S3);
      } else {
        var p4 = r.match(zB);
        f3 = p0.from(p4[2].replace(/[\r\n]/g, ""), "base64");
      }
      var B3 = r.match(UB)[1];
      return { tag: B3, data: f3 };
    };
  });
  Ha = T3((cL, b3) => {
    var nr = l3(), KB = d3(), jB = p3(), ZB = Ss(), VB = qu(), pd = Te().Buffer;
    b3.exports = v3;
    function v3(t) {
      var e;
      typeof t == "object" && !pd.isBuffer(t) && (e = t.passphrase, t = t.key), typeof t == "string" && (t = pd.from(t));
      var r = jB(t, e), o = r.tag, f3 = r.data, p4, m3;
      switch (o) {
        case "CERTIFICATE":
          m3 = nr.certificate.decode(f3, "der").tbsCertificate.subjectPublicKeyInfo;
        case "PUBLIC KEY":
          switch (m3 || (m3 = nr.PublicKey.decode(f3, "der")), p4 = m3.algorithm.algorithm.join("."), p4) {
            case "1.2.840.113549.1.1.1":
              return nr.RSAPublicKey.decode(m3.subjectPublicKey.data, "der");
            case "1.2.840.10045.2.1":
              return m3.subjectPrivateKey = m3.subjectPublicKey, { type: "ec", data: m3 };
            case "1.2.840.10040.4.1":
              return m3.algorithm.params.pub_key = nr.DSAparam.decode(m3.subjectPublicKey.data, "der"), { type: "dsa", data: m3.algorithm.params };
            default:
              throw new Error("unknown key id " + p4);
          }
        case "ENCRYPTED PRIVATE KEY":
          f3 = nr.EncryptedPrivateKey.decode(f3, "der"), f3 = $B(f3, e);
        case "PRIVATE KEY":
          switch (m3 = nr.PrivateKey.decode(f3, "der"), p4 = m3.algorithm.algorithm.join("."), p4) {
            case "1.2.840.113549.1.1.1":
              return nr.RSAPrivateKey.decode(m3.subjectPrivateKey, "der");
            case "1.2.840.10045.2.1":
              return { curve: m3.algorithm.curve, privateKey: nr.ECPrivateKey.decode(m3.subjectPrivateKey, "der").privateKey };
            case "1.2.840.10040.4.1":
              return m3.algorithm.params.priv_key = nr.DSAparam.decode(m3.subjectPrivateKey, "der"), { type: "dsa", params: m3.algorithm.params };
            default:
              throw new Error("unknown key id " + p4);
          }
        case "RSA PUBLIC KEY":
          return nr.RSAPublicKey.decode(f3, "der");
        case "RSA PRIVATE KEY":
          return nr.RSAPrivateKey.decode(f3, "der");
        case "DSA PRIVATE KEY":
          return { type: "dsa", params: nr.DSAPrivateKey.decode(f3, "der") };
        case "EC PRIVATE KEY":
          return f3 = nr.ECPrivateKey.decode(f3, "der"), { curve: f3.parameters.value, privateKey: f3.privateKey };
        default:
          throw new Error("unknown key type " + o);
      }
    }
    v3.signature = nr.signature;
    function $B(t, e) {
      var r = t.algorithm.decrypt.kde.kdeparams.salt, o = parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), f3 = KB[t.algorithm.decrypt.cipher.algo.join(".")], p4 = t.algorithm.decrypt.cipher.iv, m3 = t.subjectPrivateKey, y3 = parseInt(f3.split("-")[1], 10) / 8, M2 = VB.pbkdf2Sync(e, r, o, y3, "sha1"), x4 = ZB.createDecipheriv(f3, M2, p4), S3 = [];
      return S3.push(x4.update(m3)), S3.push(x4.final()), pd.concat(S3);
    }
  });
  vd = T3((pL, GB) => {
    GB.exports = { "1.3.132.0.10": "secp256k1", "1.3.132.0.33": "p224", "1.2.840.10045.3.1.1": "p192", "1.2.840.10045.3.1.7": "p256", "1.3.132.0.34": "p384", "1.3.132.0.35": "p521" };
  });
  y3 = T3((vL, b0) => {
    var Yt2 = Te().Buffer, Kn = yu(), YB = Ws2(), XB = a0().ec, v0 = Hs(), JB = Ha(), QB = vd();
    function eq2(t, e, r, o, f3) {
      var p4 = JB(e);
      if (p4.curve) {
        if (o !== "ecdsa" && o !== "ecdsa/rsa")
          throw new Error("wrong private key type");
        return tq(t, p4);
      } else if (p4.type === "dsa") {
        if (o !== "dsa")
          throw new Error("wrong private key type");
        return rq(t, p4, r);
      } else if (o !== "rsa" && o !== "ecdsa/rsa")
        throw new Error("wrong private key type");
      t = Yt2.concat([f3, t]);
      for (var m4 = p4.modulus.byteLength(), y4 = [0, 1];t.length + y4.length + 1 < m4; )
        y4.push(255);
      y4.push(0);
      for (var M2 = -1;++M2 < t.length; )
        y4.push(t[M2]);
      var x4 = YB(y4, p4);
      return x4;
    }
    function tq(t, e) {
      var r = QB[e.curve.join(".")];
      if (!r)
        throw new Error("unknown curve " + e.curve.join("."));
      var o = new XB(r), f3 = o.keyFromPrivate(e.privateKey), p4 = f3.sign(t);
      return Yt2.from(p4.toDER());
    }
    function rq(t, e, r) {
      for (var o = e.params.priv_key, f3 = e.params.p, p4 = e.params.q, m4 = e.params.g, y4 = new v0(0), M2, x4 = bd(t, p4).mod(p4), S3 = false, E4 = m3(o, p4, t, r);S3 === false; )
        M2 = g3(p4, E4, r), y4 = fq(m4, M2, f3, p4), S3 = M2.invm(p4).imul(x4.add(o.mul(y4))).mod(p4), S3.cmpn(0) === 0 && (S3 = false, y4 = new v0(0));
      return iq(y4, S3);
    }
    function iq(t, e) {
      t = t.toArray(), e = e.toArray(), t[0] & 128 && (t = [0].concat(t)), e[0] & 128 && (e = [0].concat(e));
      var r = t.length + e.length + 4, o = [48, r, 2, t.length];
      return o = o.concat(t, [2, e.length], e), Yt2.from(o);
    }
    function m3(t, e, r, o) {
      if (t = Yt2.from(t.toArray()), t.length < e.byteLength()) {
        var f3 = Yt2.alloc(e.byteLength() - t.length);
        t = Yt2.concat([f3, t]);
      }
      var p4 = r.length, m4 = nq(r, e), y4 = Yt2.alloc(p4);
      y4.fill(1);
      var M2 = Yt2.alloc(p4);
      return M2 = Kn(o, M2).update(y4).update(Yt2.from([0])).update(t).update(m4).digest(), y4 = Kn(o, M2).update(y4).digest(), M2 = Kn(o, M2).update(y4).update(Yt2.from([1])).update(t).update(m4).digest(), y4 = Kn(o, M2).update(y4).digest(), { k: M2, v: y4 };
    }
    function bd(t, e) {
      var r = new v0(t), o = (t.length << 3) - e.bitLength();
      return o > 0 && r.ishrn(o), r;
    }
    function nq(t, e) {
      t = bd(t, e), t = t.mod(e);
      var r = Yt2.from(t.toArray());
      if (r.length < e.byteLength()) {
        var o = Yt2.alloc(e.byteLength() - r.length);
        r = Yt2.concat([o, r]);
      }
      return r;
    }
    function g3(t, e, r) {
      var o, f3;
      do {
        for (o = Yt2.alloc(0);o.length * 8 < t.bitLength(); )
          e.v = Kn(r, e.k).update(e.v).digest(), o = Yt2.concat([o, e.v]);
        f3 = bd(o, t), e.k = Kn(r, e.k).update(e.v).update(Yt2.from([0])).digest(), e.v = Kn(r, e.k).update(e.v).digest();
      } while (f3.cmp(t) !== -1);
      return f3;
    }
    function fq(t, e, r, o) {
      return t.toRed(v0.mont(r)).redPow(e).fromRed().mod(o);
    }
    b0.exports = eq2;
    b0.exports.getKey = m3;
    b0.exports.makeKey = g3;
  });
  x32 = T3((bL, _3) => {
    var md = Te().Buffer, Wa = Hs(), aq = a0().ec, M3 = Ha(), oq = vd();
    function sq(t, e, r, o, f3) {
      var p4 = M3(r);
      if (p4.type === "ec") {
        if (o !== "ecdsa" && o !== "ecdsa/rsa")
          throw new Error("wrong public key type");
        return hq(t, e, p4);
      } else if (p4.type === "dsa") {
        if (o !== "dsa")
          throw new Error("wrong public key type");
        return uq(t, e, p4);
      } else if (o !== "rsa" && o !== "ecdsa/rsa")
        throw new Error("wrong public key type");
      e = md.concat([f3, e]);
      for (var m3 = p4.modulus.byteLength(), y4 = [1], M2 = 0;e.length + y4.length + 2 < m3; )
        y4.push(255), M2++;
      y4.push(0);
      for (var x4 = -1;++x4 < e.length; )
        y4.push(e[x4]);
      y4 = md.from(y4);
      var S3 = Wa.mont(p4.modulus);
      t = new Wa(t).toRed(S3), t = t.redPow(new Wa(p4.publicExponent)), t = md.from(t.fromRed().toArray());
      var E4 = M2 < 8 ? 1 : 0;
      for (m3 = Math.min(t.length, y4.length), t.length !== y4.length && (E4 = 1), x4 = -1;++x4 < m3; )
        E4 |= t[x4] ^ y4[x4];
      return E4 === 0;
    }
    function hq(t, e, r) {
      var o = oq[r.data.algorithm.curve.join(".")];
      if (!o)
        throw new Error("unknown curve " + r.data.algorithm.curve.join("."));
      var f3 = new aq(o), p4 = r.data.subjectPrivateKey.data;
      return f3.verify(e, t, p4);
    }
    function uq(t, e, r) {
      var o = r.data.p, f3 = r.data.q, p4 = r.data.g, m3 = r.data.pub_key, y4 = M3.signature.decode(t, "der"), M2 = y4.s, x4 = y4.r;
      w3(M2, f3), w3(x4, f3);
      var S3 = Wa.mont(o), E4 = M2.invm(f3), B3 = p4.toRed(S3).redPow(new Wa(e).mul(E4).mod(f3)).fromRed().mul(m3.toRed(S3).redPow(x4.mul(E4).mod(f3)).fromRed()).mod(o).mod(f3);
      return B3.cmp(x4) === 0;
    }
    function w3(t, e) {
      if (t.cmpn(0) <= 0)
        throw new Error("invalid sig");
      if (t.cmp(e) >= e)
        throw new Error("invalid sig");
    }
    _3.exports = sq;
  });
  q3 = T3((mL, B3) => {
    var m0 = Te().Buffer, A3 = bf(), g0 = e2(), R3 = Ie2(), lq = y3(), dq = x32(), jn = wu();
    Object.keys(jn).forEach(function(t) {
      jn[t].id = m0.from(jn[t].id, "hex"), jn[t.toLowerCase()] = jn[t];
    });
    function Ka(t) {
      g0.Writable.call(this);
      var e = jn[t];
      if (!e)
        throw new Error("Unknown message digest");
      this._hashType = e.hash, this._hash = A3(e.hash), this._tag = e.id, this._signType = e.sign;
    }
    R3(Ka, g0.Writable);
    Ka.prototype._write = function(e, r, o) {
      this._hash.update(e), o();
    };
    Ka.prototype.update = function(e, r) {
      return typeof e == "string" && (e = m0.from(e, r)), this._hash.update(e), this;
    };
    Ka.prototype.sign = function(e, r) {
      this.end();
      var o = this._hash.digest(), f3 = lq(o, e, this._hashType, this._signType, this._tag);
      return r ? f3.toString(r) : f3;
    };
    function ja(t) {
      g0.Writable.call(this);
      var e = jn[t];
      if (!e)
        throw new Error("Unknown message digest");
      this._hash = A3(e.hash), this._tag = e.id, this._signType = e.sign;
    }
    R3(ja, g0.Writable);
    ja.prototype._write = function(e, r, o) {
      this._hash.update(e), o();
    };
    ja.prototype.update = function(e, r) {
      return typeof e == "string" && (e = m0.from(e, r)), this._hash.update(e), this;
    };
    ja.prototype.verify = function(e, r, o) {
      typeof r == "string" && (r = m0.from(r, o)), this.end();
      var f3 = this._hash.digest();
      return dq(r, f3, e, this._signType, this._tag);
    };
    function S3(t) {
      return new Ka(t);
    }
    function E32(t) {
      return new ja(t);
    }
    B3.exports = { Sign: S3, Verify: E32, createSign: S3, createVerify: E32 };
  });
  T32 = T3((I3, gd) => {
    (function(t, e) {
      function r(v2, i) {
        if (!v2)
          throw new Error(i || "Assertion failed");
      }
      function o(v2, i) {
        v2.super_ = i;
        var a3 = function() {};
        a3.prototype = i.prototype, v2.prototype = new a3, v2.prototype.constructor = v2;
      }
      function f3(v2, i, a3) {
        if (f3.isBN(v2))
          return v2;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v2 !== null && ((i === "le" || i === "be") && (a3 = i, i = 10), this._init(v2 || 0, i || 10, a3 || "be"));
      }
      typeof t == "object" ? t.exports = f3 : e.BN = f3, f3.BN = f3, f3.wordSize = 26;
      var p4;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p4 = window.Buffer : p4 = ji().Buffer;
      } catch {}
      f3.isBN = function(i) {
        return i instanceof f3 ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f3.wordSize && Array.isArray(i.words);
      }, f3.max = function(i, a3) {
        return i.cmp(a3) > 0 ? i : a3;
      }, f3.min = function(i, a3) {
        return i.cmp(a3) < 0 ? i : a3;
      }, f3.prototype._init = function(i, a3, h4) {
        if (typeof i == "number")
          return this._initNumber(i, a3, h4);
        if (typeof i == "object")
          return this._initArray(i, a3, h4);
        a3 === "hex" && (a3 = 16), r(a3 === (a3 | 0) && a3 >= 2 && a3 <= 36), i = i.toString().replace(/\s+/g, "");
        var s2 = 0;
        i[0] === "-" && (s2++, this.negative = 1), s2 < i.length && (a3 === 16 ? this._parseHex(i, s2, h4) : (this._parseBase(i, a3, s2), h4 === "le" && this._initArray(this.toArray(), a3, h4)));
      }, f3.prototype._initNumber = function(i, a3, h4) {
        i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h4 === "le" && this._initArray(this.toArray(), a3, h4);
      }, f3.prototype._initArray = function(i, a3, h4) {
        if (r(typeof i.length == "number"), i.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3, c3, b3 = 0;
        if (h4 === "be")
          for (s2 = i.length - 1, u3 = 0;s2 >= 0; s2 -= 3)
            c3 = i[s2] | i[s2 - 1] << 8 | i[s2 - 2] << 16, this.words[u3] |= c3 << b3 & 67108863, this.words[u3 + 1] = c3 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        else if (h4 === "le")
          for (s2 = 0, u3 = 0;s2 < i.length; s2 += 3)
            c3 = i[s2] | i[s2 + 1] << 8 | i[s2 + 2] << 16, this.words[u3] |= c3 << b3 & 67108863, this.words[u3 + 1] = c3 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        return this.strip();
      };
      function m3(v2, i) {
        var a3 = v2.charCodeAt(i);
        return a3 >= 65 && a3 <= 70 ? a3 - 55 : a3 >= 97 && a3 <= 102 ? a3 - 87 : a3 - 48 & 15;
      }
      function y4(v2, i, a3) {
        var h4 = m3(v2, a3);
        return a3 - 1 >= i && (h4 |= m3(v2, a3 - 1) << 4), h4;
      }
      f3.prototype._parseHex = function(i, a3, h4) {
        this.length = Math.ceil((i.length - a3) / 6), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3 = 0, c3 = 0, b3;
        if (h4 === "be")
          for (s2 = i.length - 1;s2 >= a3; s2 -= 2)
            b3 = y4(i, a3, s2) << u3, this.words[c3] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c3 += 1, this.words[c3] |= b3 >>> 26) : u3 += 8;
        else {
          var l2 = i.length - a3;
          for (s2 = l2 % 2 === 0 ? a3 + 1 : a3;s2 < i.length; s2 += 2)
            b3 = y4(i, a3, s2) << u3, this.words[c3] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c3 += 1, this.words[c3] |= b3 >>> 26) : u3 += 8;
        }
        this.strip();
      };
      function M2(v2, i, a3, h4) {
        for (var s2 = 0, u3 = Math.min(v2.length, a3), c3 = i;c3 < u3; c3++) {
          var b3 = v2.charCodeAt(c3) - 48;
          s2 *= h4, b3 >= 49 ? s2 += b3 - 49 + 10 : b3 >= 17 ? s2 += b3 - 17 + 10 : s2 += b3;
        }
        return s2;
      }
      f3.prototype._parseBase = function(i, a3, h4) {
        this.words = [0], this.length = 1;
        for (var s2 = 0, u3 = 1;u3 <= 67108863; u3 *= a3)
          s2++;
        s2--, u3 = u3 / a3 | 0;
        for (var c3 = i.length - h4, b3 = c3 % s2, l2 = Math.min(c3, c3 - b3) + h4, n = 0, d4 = h4;d4 < l2; d4 += s2)
          n = M2(i, d4, d4 + s2, a3), this.imuln(u3), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        if (b3 !== 0) {
          var w = 1;
          for (n = M2(i, d4, i.length, a3), d4 = 0;d4 < b3; d4++)
            w *= a3;
          this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        }
        this.strip();
      }, f3.prototype.copy = function(i) {
        i.words = new Array(this.length);
        for (var a3 = 0;a3 < this.length; a3++)
          i.words[a3] = this.words[a3];
        i.length = this.length, i.negative = this.negative, i.red = this.red;
      }, f3.prototype.clone = function() {
        var i = new f3(null);
        return this.copy(i), i;
      }, f3.prototype._expand = function(i) {
        for (;this.length < i; )
          this.words[this.length++] = 0;
        return this;
      }, f3.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f3.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f3.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E4 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f3.prototype.toString = function(i, a3) {
        i = i || 10, a3 = a3 | 0 || 1;
        var h4;
        if (i === 16 || i === "hex") {
          h4 = "";
          for (var s2 = 0, u3 = 0, c3 = 0;c3 < this.length; c3++) {
            var b3 = this.words[c3], l2 = ((b3 << s2 | u3) & 16777215).toString(16);
            u3 = b3 >>> 24 - s2 & 16777215, u3 !== 0 || c3 !== this.length - 1 ? h4 = x4[6 - l2.length] + l2 + h4 : h4 = l2 + h4, s2 += 2, s2 >= 26 && (s2 -= 26, c3--);
          }
          for (u3 !== 0 && (h4 = u3.toString(16) + h4);h4.length % a3 !== 0; )
            h4 = "0" + h4;
          return this.negative !== 0 && (h4 = "-" + h4), h4;
        }
        if (i === (i | 0) && i >= 2 && i <= 36) {
          var n = S3[i], d4 = E4[i];
          h4 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g3 = w.modn(d4).toString(i);
            w = w.idivn(d4), w.isZero() ? h4 = g3 + h4 : h4 = x4[n - g3.length] + g3 + h4;
          }
          for (this.isZero() && (h4 = "0" + h4);h4.length % a3 !== 0; )
            h4 = "0" + h4;
          return this.negative !== 0 && (h4 = "-" + h4), h4;
        }
        r(false, "Base should be between 2 and 36");
      }, f3.prototype.toNumber = function() {
        var i = this.words[0];
        return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
      }, f3.prototype.toJSON = function() {
        return this.toString(16);
      }, f3.prototype.toBuffer = function(i, a3) {
        return r(typeof p4 < "u"), this.toArrayLike(p4, i, a3);
      }, f3.prototype.toArray = function(i, a3) {
        return this.toArrayLike(Array, i, a3);
      }, f3.prototype.toArrayLike = function(i, a3, h4) {
        var s2 = this.byteLength(), u3 = h4 || Math.max(1, s2);
        r(s2 <= u3, "byte array longer than desired length"), r(u3 > 0, "Requested array length <= 0"), this.strip();
        var c3 = a3 === "le", b3 = new i(u3), l2, n, d4 = this.clone();
        if (c3) {
          for (n = 0;!d4.isZero(); n++)
            l2 = d4.andln(255), d4.iushrn(8), b3[n] = l2;
          for (;n < u3; n++)
            b3[n] = 0;
        } else {
          for (n = 0;n < u3 - s2; n++)
            b3[n] = 0;
          for (n = 0;!d4.isZero(); n++)
            l2 = d4.andln(255), d4.iushrn(8), b3[u3 - n - 1] = l2;
        }
        return b3;
      }, Math.clz32 ? f3.prototype._countBits = function(i) {
        return 32 - Math.clz32(i);
      } : f3.prototype._countBits = function(i) {
        var a3 = i, h4 = 0;
        return a3 >= 4096 && (h4 += 13, a3 >>>= 13), a3 >= 64 && (h4 += 7, a3 >>>= 7), a3 >= 8 && (h4 += 4, a3 >>>= 4), a3 >= 2 && (h4 += 2, a3 >>>= 2), h4 + a3;
      }, f3.prototype._zeroBits = function(i) {
        if (i === 0)
          return 26;
        var a3 = i, h4 = 0;
        return (a3 & 8191) === 0 && (h4 += 13, a3 >>>= 13), (a3 & 127) === 0 && (h4 += 7, a3 >>>= 7), (a3 & 15) === 0 && (h4 += 4, a3 >>>= 4), (a3 & 3) === 0 && (h4 += 2, a3 >>>= 2), (a3 & 1) === 0 && h4++, h4;
      }, f3.prototype.bitLength = function() {
        var i = this.words[this.length - 1], a3 = this._countBits(i);
        return (this.length - 1) * 26 + a3;
      };
      function B3(v2) {
        for (var i = new Array(v2.bitLength()), a3 = 0;a3 < i.length; a3++) {
          var h4 = a3 / 26 | 0, s2 = a3 % 26;
          i[a3] = (v2.words[h4] & 1 << s2) >>> s2;
        }
        return i;
      }
      f3.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i = 0, a3 = 0;a3 < this.length; a3++) {
          var h4 = this._zeroBits(this.words[a3]);
          if (i += h4, h4 !== 26)
            break;
        }
        return i;
      }, f3.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f3.prototype.toTwos = function(i) {
        return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
      }, f3.prototype.fromTwos = function(i) {
        return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
      }, f3.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f3.prototype.neg = function() {
        return this.clone().ineg();
      }, f3.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f3.prototype.iuor = function(i) {
        for (;this.length < i.length; )
          this.words[this.length++] = 0;
        for (var a3 = 0;a3 < i.length; a3++)
          this.words[a3] = this.words[a3] | i.words[a3];
        return this.strip();
      }, f3.prototype.ior = function(i) {
        return r((this.negative | i.negative) === 0), this.iuor(i);
      }, f3.prototype.or = function(i) {
        return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
      }, f3.prototype.uor = function(i) {
        return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
      }, f3.prototype.iuand = function(i) {
        var a3;
        this.length > i.length ? a3 = i : a3 = this;
        for (var h4 = 0;h4 < a3.length; h4++)
          this.words[h4] = this.words[h4] & i.words[h4];
        return this.length = a3.length, this.strip();
      }, f3.prototype.iand = function(i) {
        return r((this.negative | i.negative) === 0), this.iuand(i);
      }, f3.prototype.and = function(i) {
        return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
      }, f3.prototype.uand = function(i) {
        return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
      }, f3.prototype.iuxor = function(i) {
        var a3, h4;
        this.length > i.length ? (a3 = this, h4 = i) : (a3 = i, h4 = this);
        for (var s2 = 0;s2 < h4.length; s2++)
          this.words[s2] = a3.words[s2] ^ h4.words[s2];
        if (this !== a3)
          for (;s2 < a3.length; s2++)
            this.words[s2] = a3.words[s2];
        return this.length = a3.length, this.strip();
      }, f3.prototype.ixor = function(i) {
        return r((this.negative | i.negative) === 0), this.iuxor(i);
      }, f3.prototype.xor = function(i) {
        return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
      }, f3.prototype.uxor = function(i) {
        return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
      }, f3.prototype.inotn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = Math.ceil(i / 26) | 0, h4 = i % 26;
        this._expand(a3), h4 > 0 && a3--;
        for (var s2 = 0;s2 < a3; s2++)
          this.words[s2] = ~this.words[s2] & 67108863;
        return h4 > 0 && (this.words[s2] = ~this.words[s2] & 67108863 >> 26 - h4), this.strip();
      }, f3.prototype.notn = function(i) {
        return this.clone().inotn(i);
      }, f3.prototype.setn = function(i, a3) {
        r(typeof i == "number" && i >= 0);
        var h4 = i / 26 | 0, s2 = i % 26;
        return this._expand(h4 + 1), a3 ? this.words[h4] = this.words[h4] | 1 << s2 : this.words[h4] = this.words[h4] & ~(1 << s2), this.strip();
      }, f3.prototype.iadd = function(i) {
        var a3;
        if (this.negative !== 0 && i.negative === 0)
          return this.negative = 0, a3 = this.isub(i), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i.negative !== 0)
          return i.negative = 0, a3 = this.isub(i), i.negative = 1, a3._normSign();
        var h4, s2;
        this.length > i.length ? (h4 = this, s2 = i) : (h4 = i, s2 = this);
        for (var u3 = 0, c3 = 0;c3 < s2.length; c3++)
          a3 = (h4.words[c3] | 0) + (s2.words[c3] | 0) + u3, this.words[c3] = a3 & 67108863, u3 = a3 >>> 26;
        for (;u3 !== 0 && c3 < h4.length; c3++)
          a3 = (h4.words[c3] | 0) + u3, this.words[c3] = a3 & 67108863, u3 = a3 >>> 26;
        if (this.length = h4.length, u3 !== 0)
          this.words[this.length] = u3, this.length++;
        else if (h4 !== this)
          for (;c3 < h4.length; c3++)
            this.words[c3] = h4.words[c3];
        return this;
      }, f3.prototype.add = function(i) {
        var a3;
        return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a3 = this.sub(i), i.negative ^= 1, a3) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a3 = i.sub(this), this.negative = 1, a3) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
      }, f3.prototype.isub = function(i) {
        if (i.negative !== 0) {
          i.negative = 0;
          var a3 = this.iadd(i);
          return i.negative = 1, a3._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
        var h4 = this.cmp(i);
        if (h4 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s2, u3;
        h4 > 0 ? (s2 = this, u3 = i) : (s2 = i, u3 = this);
        for (var c3 = 0, b3 = 0;b3 < u3.length; b3++)
          a3 = (s2.words[b3] | 0) - (u3.words[b3] | 0) + c3, c3 = a3 >> 26, this.words[b3] = a3 & 67108863;
        for (;c3 !== 0 && b3 < s2.length; b3++)
          a3 = (s2.words[b3] | 0) + c3, c3 = a3 >> 26, this.words[b3] = a3 & 67108863;
        if (c3 === 0 && b3 < s2.length && s2 !== this)
          for (;b3 < s2.length; b3++)
            this.words[b3] = s2.words[b3];
        return this.length = Math.max(this.length, b3), s2 !== this && (this.negative = 1), this.strip();
      }, f3.prototype.sub = function(i) {
        return this.clone().isub(i);
      };
      function q2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative;
        var h4 = v2.length + i.length | 0;
        a3.length = h4, h4 = h4 - 1 | 0;
        var s2 = v2.words[0] | 0, u3 = i.words[0] | 0, c3 = s2 * u3, b3 = c3 & 67108863, l2 = c3 / 67108864 | 0;
        a3.words[0] = b3;
        for (var n = 1;n < h4; n++) {
          for (var d4 = l2 >>> 26, w = l2 & 67108863, g3 = Math.min(n, i.length - 1), _3 = Math.max(0, n - v2.length + 1);_3 <= g3; _3++) {
            var A2 = n - _3 | 0;
            s2 = v2.words[A2] | 0, u3 = i.words[_3] | 0, c3 = s2 * u3 + w, d4 += c3 / 67108864 | 0, w = c3 & 67108863;
          }
          a3.words[n] = w | 0, l2 = d4 | 0;
        }
        return l2 !== 0 ? a3.words[n] = l2 | 0 : a3.length--, a3.strip();
      }
      var L3 = function(i, a3, h4) {
        var s2 = i.words, u3 = a3.words, c3 = h4.words, b3 = 0, l2, n, d4, w = s2[0] | 0, g3 = w & 8191, _3 = w >>> 13, A2 = s2[1] | 0, R2 = A2 & 8191, I4 = A2 >>> 13, Me = s2[2] | 0, k3 = Me & 8191, D2 = Me >>> 13, nt2 = s2[3] | 0, C = nt2 & 8191, O4 = nt2 >>> 13, vt = s2[4] | 0, F = vt & 8191, U4 = vt >>> 13, bt2 = s2[5] | 0, z = bt2 & 8191, H2 = bt2 >>> 13, mt2 = s2[6] | 0, W = mt2 & 8191, K3 = mt2 >>> 13, gt4 = s2[7] | 0, j3 = gt4 & 8191, Z2 = gt4 >>> 13, yt2 = s2[8] | 0, V3 = yt2 & 8191, $2 = yt2 >>> 13, wt2 = s2[9] | 0, G3 = wt2 & 8191, Y3 = wt2 >>> 13, Mt = u3[0] | 0, X3 = Mt & 8191, J3 = Mt >>> 13, _t3 = u3[1] | 0, Q2 = _t3 & 8191, ee = _t3 >>> 13, xt = u3[2] | 0, te = xt & 8191, re = xt >>> 13, St = u3[3] | 0, ie2 = St & 8191, ne2 = St >>> 13, Et = u3[4] | 0, fe = Et & 8191, ae = Et >>> 13, At2 = u3[5] | 0, oe = At2 & 8191, se = At2 >>> 13, Rt = u3[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt2 = u3[7] | 0, le = Bt2 & 8191, de = Bt2 >>> 13, qt = u3[8] | 0, ce2 = qt & 8191, pe = qt >>> 13, It = u3[9] | 0, ve = It & 8191, be2 = It >>> 13;
        h4.negative = i.negative ^ a3.negative, h4.length = 19, l2 = Math.imul(g3, X3), n = Math.imul(g3, J3), n = n + Math.imul(_3, X3) | 0, d4 = Math.imul(_3, J3);
        var ft = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l2 = Math.imul(R2, X3), n = Math.imul(R2, J3), n = n + Math.imul(I4, X3) | 0, d4 = Math.imul(I4, J3), l2 = l2 + Math.imul(g3, Q2) | 0, n = n + Math.imul(g3, ee) | 0, n = n + Math.imul(_3, Q2) | 0, d4 = d4 + Math.imul(_3, ee) | 0;
        var Be = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l2 = Math.imul(k3, X3), n = Math.imul(k3, J3), n = n + Math.imul(D2, X3) | 0, d4 = Math.imul(D2, J3), l2 = l2 + Math.imul(R2, Q2) | 0, n = n + Math.imul(R2, ee) | 0, n = n + Math.imul(I4, Q2) | 0, d4 = d4 + Math.imul(I4, ee) | 0, l2 = l2 + Math.imul(g3, te) | 0, n = n + Math.imul(g3, re) | 0, n = n + Math.imul(_3, te) | 0, d4 = d4 + Math.imul(_3, re) | 0;
        var qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l2 = Math.imul(C, X3), n = Math.imul(C, J3), n = n + Math.imul(O4, X3) | 0, d4 = Math.imul(O4, J3), l2 = l2 + Math.imul(k3, Q2) | 0, n = n + Math.imul(k3, ee) | 0, n = n + Math.imul(D2, Q2) | 0, d4 = d4 + Math.imul(D2, ee) | 0, l2 = l2 + Math.imul(R2, te) | 0, n = n + Math.imul(R2, re) | 0, n = n + Math.imul(I4, te) | 0, d4 = d4 + Math.imul(I4, re) | 0, l2 = l2 + Math.imul(g3, ie2) | 0, n = n + Math.imul(g3, ne2) | 0, n = n + Math.imul(_3, ie2) | 0, d4 = d4 + Math.imul(_3, ne2) | 0;
        var ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l2 = Math.imul(F, X3), n = Math.imul(F, J3), n = n + Math.imul(U4, X3) | 0, d4 = Math.imul(U4, J3), l2 = l2 + Math.imul(C, Q2) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O4, Q2) | 0, d4 = d4 + Math.imul(O4, ee) | 0, l2 = l2 + Math.imul(k3, te) | 0, n = n + Math.imul(k3, re) | 0, n = n + Math.imul(D2, te) | 0, d4 = d4 + Math.imul(D2, re) | 0, l2 = l2 + Math.imul(R2, ie2) | 0, n = n + Math.imul(R2, ne2) | 0, n = n + Math.imul(I4, ie2) | 0, d4 = d4 + Math.imul(I4, ne2) | 0, l2 = l2 + Math.imul(g3, fe) | 0, n = n + Math.imul(g3, ae) | 0, n = n + Math.imul(_3, fe) | 0, d4 = d4 + Math.imul(_3, ae) | 0;
        var He2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (He2 >>> 26) | 0, He2 &= 67108863, l2 = Math.imul(z, X3), n = Math.imul(z, J3), n = n + Math.imul(H2, X3) | 0, d4 = Math.imul(H2, J3), l2 = l2 + Math.imul(F, Q2) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U4, Q2) | 0, d4 = d4 + Math.imul(U4, ee) | 0, l2 = l2 + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O4, te) | 0, d4 = d4 + Math.imul(O4, re) | 0, l2 = l2 + Math.imul(k3, ie2) | 0, n = n + Math.imul(k3, ne2) | 0, n = n + Math.imul(D2, ie2) | 0, d4 = d4 + Math.imul(D2, ne2) | 0, l2 = l2 + Math.imul(R2, fe) | 0, n = n + Math.imul(R2, ae) | 0, n = n + Math.imul(I4, fe) | 0, d4 = d4 + Math.imul(I4, ae) | 0, l2 = l2 + Math.imul(g3, oe) | 0, n = n + Math.imul(g3, se) | 0, n = n + Math.imul(_3, oe) | 0, d4 = d4 + Math.imul(_3, se) | 0;
        var We = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l2 = Math.imul(W, X3), n = Math.imul(W, J3), n = n + Math.imul(K3, X3) | 0, d4 = Math.imul(K3, J3), l2 = l2 + Math.imul(z, Q2) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H2, Q2) | 0, d4 = d4 + Math.imul(H2, ee) | 0, l2 = l2 + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U4, te) | 0, d4 = d4 + Math.imul(U4, re) | 0, l2 = l2 + Math.imul(C, ie2) | 0, n = n + Math.imul(C, ne2) | 0, n = n + Math.imul(O4, ie2) | 0, d4 = d4 + Math.imul(O4, ne2) | 0, l2 = l2 + Math.imul(k3, fe) | 0, n = n + Math.imul(k3, ae) | 0, n = n + Math.imul(D2, fe) | 0, d4 = d4 + Math.imul(D2, ae) | 0, l2 = l2 + Math.imul(R2, oe) | 0, n = n + Math.imul(R2, se) | 0, n = n + Math.imul(I4, oe) | 0, d4 = d4 + Math.imul(I4, se) | 0, l2 = l2 + Math.imul(g3, he) | 0, n = n + Math.imul(g3, ue) | 0, n = n + Math.imul(_3, he) | 0, d4 = d4 + Math.imul(_3, ue) | 0;
        var Ke = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l2 = Math.imul(j3, X3), n = Math.imul(j3, J3), n = n + Math.imul(Z2, X3) | 0, d4 = Math.imul(Z2, J3), l2 = l2 + Math.imul(W, Q2) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K3, Q2) | 0, d4 = d4 + Math.imul(K3, ee) | 0, l2 = l2 + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H2, te) | 0, d4 = d4 + Math.imul(H2, re) | 0, l2 = l2 + Math.imul(F, ie2) | 0, n = n + Math.imul(F, ne2) | 0, n = n + Math.imul(U4, ie2) | 0, d4 = d4 + Math.imul(U4, ne2) | 0, l2 = l2 + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O4, fe) | 0, d4 = d4 + Math.imul(O4, ae) | 0, l2 = l2 + Math.imul(k3, oe) | 0, n = n + Math.imul(k3, se) | 0, n = n + Math.imul(D2, oe) | 0, d4 = d4 + Math.imul(D2, se) | 0, l2 = l2 + Math.imul(R2, he) | 0, n = n + Math.imul(R2, ue) | 0, n = n + Math.imul(I4, he) | 0, d4 = d4 + Math.imul(I4, ue) | 0, l2 = l2 + Math.imul(g3, le) | 0, n = n + Math.imul(g3, de) | 0, n = n + Math.imul(_3, le) | 0, d4 = d4 + Math.imul(_3, de) | 0;
        var je = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l2 = Math.imul(V3, X3), n = Math.imul(V3, J3), n = n + Math.imul($2, X3) | 0, d4 = Math.imul($2, J3), l2 = l2 + Math.imul(j3, Q2) | 0, n = n + Math.imul(j3, ee) | 0, n = n + Math.imul(Z2, Q2) | 0, d4 = d4 + Math.imul(Z2, ee) | 0, l2 = l2 + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K3, te) | 0, d4 = d4 + Math.imul(K3, re) | 0, l2 = l2 + Math.imul(z, ie2) | 0, n = n + Math.imul(z, ne2) | 0, n = n + Math.imul(H2, ie2) | 0, d4 = d4 + Math.imul(H2, ne2) | 0, l2 = l2 + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U4, fe) | 0, d4 = d4 + Math.imul(U4, ae) | 0, l2 = l2 + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O4, oe) | 0, d4 = d4 + Math.imul(O4, se) | 0, l2 = l2 + Math.imul(k3, he) | 0, n = n + Math.imul(k3, ue) | 0, n = n + Math.imul(D2, he) | 0, d4 = d4 + Math.imul(D2, ue) | 0, l2 = l2 + Math.imul(R2, le) | 0, n = n + Math.imul(R2, de) | 0, n = n + Math.imul(I4, le) | 0, d4 = d4 + Math.imul(I4, de) | 0, l2 = l2 + Math.imul(g3, ce2) | 0, n = n + Math.imul(g3, pe) | 0, n = n + Math.imul(_3, ce2) | 0, d4 = d4 + Math.imul(_3, pe) | 0;
        var Ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l2 = Math.imul(G3, X3), n = Math.imul(G3, J3), n = n + Math.imul(Y3, X3) | 0, d4 = Math.imul(Y3, J3), l2 = l2 + Math.imul(V3, Q2) | 0, n = n + Math.imul(V3, ee) | 0, n = n + Math.imul($2, Q2) | 0, d4 = d4 + Math.imul($2, ee) | 0, l2 = l2 + Math.imul(j3, te) | 0, n = n + Math.imul(j3, re) | 0, n = n + Math.imul(Z2, te) | 0, d4 = d4 + Math.imul(Z2, re) | 0, l2 = l2 + Math.imul(W, ie2) | 0, n = n + Math.imul(W, ne2) | 0, n = n + Math.imul(K3, ie2) | 0, d4 = d4 + Math.imul(K3, ne2) | 0, l2 = l2 + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H2, fe) | 0, d4 = d4 + Math.imul(H2, ae) | 0, l2 = l2 + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U4, oe) | 0, d4 = d4 + Math.imul(U4, se) | 0, l2 = l2 + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O4, he) | 0, d4 = d4 + Math.imul(O4, ue) | 0, l2 = l2 + Math.imul(k3, le) | 0, n = n + Math.imul(k3, de) | 0, n = n + Math.imul(D2, le) | 0, d4 = d4 + Math.imul(D2, de) | 0, l2 = l2 + Math.imul(R2, ce2) | 0, n = n + Math.imul(R2, pe) | 0, n = n + Math.imul(I4, ce2) | 0, d4 = d4 + Math.imul(I4, pe) | 0, l2 = l2 + Math.imul(g3, ve) | 0, n = n + Math.imul(g3, be2) | 0, n = n + Math.imul(_3, ve) | 0, d4 = d4 + Math.imul(_3, be2) | 0;
        var Ve = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l2 = Math.imul(G3, Q2), n = Math.imul(G3, ee), n = n + Math.imul(Y3, Q2) | 0, d4 = Math.imul(Y3, ee), l2 = l2 + Math.imul(V3, te) | 0, n = n + Math.imul(V3, re) | 0, n = n + Math.imul($2, te) | 0, d4 = d4 + Math.imul($2, re) | 0, l2 = l2 + Math.imul(j3, ie2) | 0, n = n + Math.imul(j3, ne2) | 0, n = n + Math.imul(Z2, ie2) | 0, d4 = d4 + Math.imul(Z2, ne2) | 0, l2 = l2 + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K3, fe) | 0, d4 = d4 + Math.imul(K3, ae) | 0, l2 = l2 + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H2, oe) | 0, d4 = d4 + Math.imul(H2, se) | 0, l2 = l2 + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U4, he) | 0, d4 = d4 + Math.imul(U4, ue) | 0, l2 = l2 + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O4, le) | 0, d4 = d4 + Math.imul(O4, de) | 0, l2 = l2 + Math.imul(k3, ce2) | 0, n = n + Math.imul(k3, pe) | 0, n = n + Math.imul(D2, ce2) | 0, d4 = d4 + Math.imul(D2, pe) | 0, l2 = l2 + Math.imul(R2, ve) | 0, n = n + Math.imul(R2, be2) | 0, n = n + Math.imul(I4, ve) | 0, d4 = d4 + Math.imul(I4, be2) | 0;
        var $e2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + ($e2 >>> 26) | 0, $e2 &= 67108863, l2 = Math.imul(G3, te), n = Math.imul(G3, re), n = n + Math.imul(Y3, te) | 0, d4 = Math.imul(Y3, re), l2 = l2 + Math.imul(V3, ie2) | 0, n = n + Math.imul(V3, ne2) | 0, n = n + Math.imul($2, ie2) | 0, d4 = d4 + Math.imul($2, ne2) | 0, l2 = l2 + Math.imul(j3, fe) | 0, n = n + Math.imul(j3, ae) | 0, n = n + Math.imul(Z2, fe) | 0, d4 = d4 + Math.imul(Z2, ae) | 0, l2 = l2 + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K3, oe) | 0, d4 = d4 + Math.imul(K3, se) | 0, l2 = l2 + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H2, he) | 0, d4 = d4 + Math.imul(H2, ue) | 0, l2 = l2 + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U4, le) | 0, d4 = d4 + Math.imul(U4, de) | 0, l2 = l2 + Math.imul(C, ce2) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O4, ce2) | 0, d4 = d4 + Math.imul(O4, pe) | 0, l2 = l2 + Math.imul(k3, ve) | 0, n = n + Math.imul(k3, be2) | 0, n = n + Math.imul(D2, ve) | 0, d4 = d4 + Math.imul(D2, be2) | 0;
        var Ge2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ge2 >>> 26) | 0, Ge2 &= 67108863, l2 = Math.imul(G3, ie2), n = Math.imul(G3, ne2), n = n + Math.imul(Y3, ie2) | 0, d4 = Math.imul(Y3, ne2), l2 = l2 + Math.imul(V3, fe) | 0, n = n + Math.imul(V3, ae) | 0, n = n + Math.imul($2, fe) | 0, d4 = d4 + Math.imul($2, ae) | 0, l2 = l2 + Math.imul(j3, oe) | 0, n = n + Math.imul(j3, se) | 0, n = n + Math.imul(Z2, oe) | 0, d4 = d4 + Math.imul(Z2, se) | 0, l2 = l2 + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K3, he) | 0, d4 = d4 + Math.imul(K3, ue) | 0, l2 = l2 + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H2, le) | 0, d4 = d4 + Math.imul(H2, de) | 0, l2 = l2 + Math.imul(F, ce2) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U4, ce2) | 0, d4 = d4 + Math.imul(U4, pe) | 0, l2 = l2 + Math.imul(C, ve) | 0, n = n + Math.imul(C, be2) | 0, n = n + Math.imul(O4, ve) | 0, d4 = d4 + Math.imul(O4, be2) | 0;
        var Ye = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l2 = Math.imul(G3, fe), n = Math.imul(G3, ae), n = n + Math.imul(Y3, fe) | 0, d4 = Math.imul(Y3, ae), l2 = l2 + Math.imul(V3, oe) | 0, n = n + Math.imul(V3, se) | 0, n = n + Math.imul($2, oe) | 0, d4 = d4 + Math.imul($2, se) | 0, l2 = l2 + Math.imul(j3, he) | 0, n = n + Math.imul(j3, ue) | 0, n = n + Math.imul(Z2, he) | 0, d4 = d4 + Math.imul(Z2, ue) | 0, l2 = l2 + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K3, le) | 0, d4 = d4 + Math.imul(K3, de) | 0, l2 = l2 + Math.imul(z, ce2) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H2, ce2) | 0, d4 = d4 + Math.imul(H2, pe) | 0, l2 = l2 + Math.imul(F, ve) | 0, n = n + Math.imul(F, be2) | 0, n = n + Math.imul(U4, ve) | 0, d4 = d4 + Math.imul(U4, be2) | 0;
        var Xe2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Xe2 >>> 26) | 0, Xe2 &= 67108863, l2 = Math.imul(G3, oe), n = Math.imul(G3, se), n = n + Math.imul(Y3, oe) | 0, d4 = Math.imul(Y3, se), l2 = l2 + Math.imul(V3, he) | 0, n = n + Math.imul(V3, ue) | 0, n = n + Math.imul($2, he) | 0, d4 = d4 + Math.imul($2, ue) | 0, l2 = l2 + Math.imul(j3, le) | 0, n = n + Math.imul(j3, de) | 0, n = n + Math.imul(Z2, le) | 0, d4 = d4 + Math.imul(Z2, de) | 0, l2 = l2 + Math.imul(W, ce2) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K3, ce2) | 0, d4 = d4 + Math.imul(K3, pe) | 0, l2 = l2 + Math.imul(z, ve) | 0, n = n + Math.imul(z, be2) | 0, n = n + Math.imul(H2, ve) | 0, d4 = d4 + Math.imul(H2, be2) | 0;
        var Je2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Je2 >>> 26) | 0, Je2 &= 67108863, l2 = Math.imul(G3, he), n = Math.imul(G3, ue), n = n + Math.imul(Y3, he) | 0, d4 = Math.imul(Y3, ue), l2 = l2 + Math.imul(V3, le) | 0, n = n + Math.imul(V3, de) | 0, n = n + Math.imul($2, le) | 0, d4 = d4 + Math.imul($2, de) | 0, l2 = l2 + Math.imul(j3, ce2) | 0, n = n + Math.imul(j3, pe) | 0, n = n + Math.imul(Z2, ce2) | 0, d4 = d4 + Math.imul(Z2, pe) | 0, l2 = l2 + Math.imul(W, ve) | 0, n = n + Math.imul(W, be2) | 0, n = n + Math.imul(K3, ve) | 0, d4 = d4 + Math.imul(K3, be2) | 0;
        var Qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l2 = Math.imul(G3, le), n = Math.imul(G3, de), n = n + Math.imul(Y3, le) | 0, d4 = Math.imul(Y3, de), l2 = l2 + Math.imul(V3, ce2) | 0, n = n + Math.imul(V3, pe) | 0, n = n + Math.imul($2, ce2) | 0, d4 = d4 + Math.imul($2, pe) | 0, l2 = l2 + Math.imul(j3, ve) | 0, n = n + Math.imul(j3, be2) | 0, n = n + Math.imul(Z2, ve) | 0, d4 = d4 + Math.imul(Z2, be2) | 0;
        var et2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (et2 >>> 26) | 0, et2 &= 67108863, l2 = Math.imul(G3, ce2), n = Math.imul(G3, pe), n = n + Math.imul(Y3, ce2) | 0, d4 = Math.imul(Y3, pe), l2 = l2 + Math.imul(V3, ve) | 0, n = n + Math.imul(V3, be2) | 0, n = n + Math.imul($2, ve) | 0, d4 = d4 + Math.imul($2, be2) | 0;
        var tt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (tt2 >>> 26) | 0, tt2 &= 67108863, l2 = Math.imul(G3, ve), n = Math.imul(G3, be2), n = n + Math.imul(Y3, ve) | 0, d4 = Math.imul(Y3, be2);
        var rt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        return b3 = (d4 + (n >>> 13) | 0) + (rt2 >>> 26) | 0, rt2 &= 67108863, c3[0] = ft, c3[1] = Be, c3[2] = qe, c3[3] = ze, c3[4] = He2, c3[5] = We, c3[6] = Ke, c3[7] = je, c3[8] = Ze, c3[9] = Ve, c3[10] = $e2, c3[11] = Ge2, c3[12] = Ye, c3[13] = Xe2, c3[14] = Je2, c3[15] = Qe, c3[16] = et2, c3[17] = tt2, c3[18] = rt2, b3 !== 0 && (c3[19] = b3, h4.length++), h4;
      };
      Math.imul || (L3 = q2);
      function ge2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative, a3.length = v2.length + i.length;
        for (var h4 = 0, s2 = 0, u3 = 0;u3 < a3.length - 1; u3++) {
          var c3 = s2;
          s2 = 0;
          for (var b3 = h4 & 67108863, l2 = Math.min(u3, i.length - 1), n = Math.max(0, u3 - v2.length + 1);n <= l2; n++) {
            var d4 = u3 - n, w = v2.words[d4] | 0, g3 = i.words[n] | 0, _3 = w * g3, A2 = _3 & 67108863;
            c3 = c3 + (_3 / 67108864 | 0) | 0, A2 = A2 + b3 | 0, b3 = A2 & 67108863, c3 = c3 + (A2 >>> 26) | 0, s2 += c3 >>> 26, c3 &= 67108863;
          }
          a3.words[u3] = b3, h4 = c3, c3 = s2;
        }
        return h4 !== 0 ? a3.words[u3] = h4 : a3.length--, a3.strip();
      }
      function _e(v2, i, a3) {
        var h4 = new N3;
        return h4.mulp(v2, i, a3);
      }
      f3.prototype.mulTo = function(i, a3) {
        var h4, s2 = this.length + i.length;
        return this.length === 10 && i.length === 10 ? h4 = L3(this, i, a3) : s2 < 63 ? h4 = q2(this, i, a3) : s2 < 1024 ? h4 = ge2(this, i, a3) : h4 = _e(this, i, a3), h4;
      };
      function N3(v2, i) {
        this.x = v2, this.y = i;
      }
      N3.prototype.makeRBT = function(i) {
        for (var a3 = new Array(i), h4 = f3.prototype._countBits(i) - 1, s2 = 0;s2 < i; s2++)
          a3[s2] = this.revBin(s2, h4, i);
        return a3;
      }, N3.prototype.revBin = function(i, a3, h4) {
        if (i === 0 || i === h4 - 1)
          return i;
        for (var s2 = 0, u3 = 0;u3 < a3; u3++)
          s2 |= (i & 1) << a3 - u3 - 1, i >>= 1;
        return s2;
      }, N3.prototype.permute = function(i, a3, h4, s2, u3, c3) {
        for (var b3 = 0;b3 < c3; b3++)
          s2[b3] = a3[i[b3]], u3[b3] = h4[i[b3]];
      }, N3.prototype.transform = function(i, a3, h4, s2, u3, c3) {
        this.permute(c3, i, a3, h4, s2, u3);
        for (var b3 = 1;b3 < u3; b3 <<= 1)
          for (var l2 = b3 << 1, n = Math.cos(2 * Math.PI / l2), d4 = Math.sin(2 * Math.PI / l2), w = 0;w < u3; w += l2)
            for (var g3 = n, _3 = d4, A2 = 0;A2 < b3; A2++) {
              var R2 = h4[w + A2], I4 = s2[w + A2], Me = h4[w + A2 + b3], k3 = s2[w + A2 + b3], D2 = g3 * Me - _3 * k3;
              k3 = g3 * k3 + _3 * Me, Me = D2, h4[w + A2] = R2 + Me, s2[w + A2] = I4 + k3, h4[w + A2 + b3] = R2 - Me, s2[w + A2 + b3] = I4 - k3, A2 !== l2 && (D2 = n * g3 - d4 * _3, _3 = n * _3 + d4 * g3, g3 = D2);
            }
      }, N3.prototype.guessLen13b = function(i, a3) {
        var h4 = Math.max(a3, i) | 1, s2 = h4 & 1, u3 = 0;
        for (h4 = h4 / 2 | 0;h4; h4 = h4 >>> 1)
          u3++;
        return 1 << u3 + 1 + s2;
      }, N3.prototype.conjugate = function(i, a3, h4) {
        if (!(h4 <= 1))
          for (var s2 = 0;s2 < h4 / 2; s2++) {
            var u3 = i[s2];
            i[s2] = i[h4 - s2 - 1], i[h4 - s2 - 1] = u3, u3 = a3[s2], a3[s2] = -a3[h4 - s2 - 1], a3[h4 - s2 - 1] = -u3;
          }
      }, N3.prototype.normalize13b = function(i, a3) {
        for (var h4 = 0, s2 = 0;s2 < a3 / 2; s2++) {
          var u3 = Math.round(i[2 * s2 + 1] / a3) * 8192 + Math.round(i[2 * s2] / a3) + h4;
          i[s2] = u3 & 67108863, u3 < 67108864 ? h4 = 0 : h4 = u3 / 67108864 | 0;
        }
        return i;
      }, N3.prototype.convert13b = function(i, a3, h4, s2) {
        for (var u3 = 0, c3 = 0;c3 < a3; c3++)
          u3 = u3 + (i[c3] | 0), h4[2 * c3] = u3 & 8191, u3 = u3 >>> 13, h4[2 * c3 + 1] = u3 & 8191, u3 = u3 >>> 13;
        for (c3 = 2 * a3;c3 < s2; ++c3)
          h4[c3] = 0;
        r(u3 === 0), r((u3 & -8192) === 0);
      }, N3.prototype.stub = function(i) {
        for (var a3 = new Array(i), h4 = 0;h4 < i; h4++)
          a3[h4] = 0;
        return a3;
      }, N3.prototype.mulp = function(i, a3, h4) {
        var s2 = 2 * this.guessLen13b(i.length, a3.length), u3 = this.makeRBT(s2), c3 = this.stub(s2), b3 = new Array(s2), l2 = new Array(s2), n = new Array(s2), d4 = new Array(s2), w = new Array(s2), g3 = new Array(s2), _3 = h4.words;
        _3.length = s2, this.convert13b(i.words, i.length, b3, s2), this.convert13b(a3.words, a3.length, d4, s2), this.transform(b3, c3, l2, n, s2, u3), this.transform(d4, c3, w, g3, s2, u3);
        for (var A2 = 0;A2 < s2; A2++) {
          var R2 = l2[A2] * w[A2] - n[A2] * g3[A2];
          n[A2] = l2[A2] * g3[A2] + n[A2] * w[A2], l2[A2] = R2;
        }
        return this.conjugate(l2, n, s2), this.transform(l2, n, _3, c3, s2, u3), this.conjugate(_3, c3, s2), this.normalize13b(_3, s2), h4.negative = i.negative ^ a3.negative, h4.length = i.length + a3.length, h4.strip();
      }, f3.prototype.mul = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), this.mulTo(i, a3);
      }, f3.prototype.mulf = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), _e(this, i, a3);
      }, f3.prototype.imul = function(i) {
        return this.clone().mulTo(i, this);
      }, f3.prototype.imuln = function(i) {
        r(typeof i == "number"), r(i < 67108864);
        for (var a3 = 0, h4 = 0;h4 < this.length; h4++) {
          var s2 = (this.words[h4] | 0) * i, u3 = (s2 & 67108863) + (a3 & 67108863);
          a3 >>= 26, a3 += s2 / 67108864 | 0, a3 += u3 >>> 26, this.words[h4] = u3 & 67108863;
        }
        return a3 !== 0 && (this.words[h4] = a3, this.length++), this;
      }, f3.prototype.muln = function(i) {
        return this.clone().imuln(i);
      }, f3.prototype.sqr = function() {
        return this.mul(this);
      }, f3.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f3.prototype.pow = function(i) {
        var a3 = B3(i);
        if (a3.length === 0)
          return new f3(1);
        for (var h4 = this, s2 = 0;s2 < a3.length && a3[s2] === 0; s2++, h4 = h4.sqr())
          ;
        if (++s2 < a3.length)
          for (var u3 = h4.sqr();s2 < a3.length; s2++, u3 = u3.sqr())
            a3[s2] !== 0 && (h4 = h4.mul(u3));
        return h4;
      }, f3.prototype.iushln = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h4 = (i - a3) / 26, s2 = 67108863 >>> 26 - a3 << 26 - a3, u3;
        if (a3 !== 0) {
          var c3 = 0;
          for (u3 = 0;u3 < this.length; u3++) {
            var b3 = this.words[u3] & s2, l2 = (this.words[u3] | 0) - b3 << a3;
            this.words[u3] = l2 | c3, c3 = b3 >>> 26 - a3;
          }
          c3 && (this.words[u3] = c3, this.length++);
        }
        if (h4 !== 0) {
          for (u3 = this.length - 1;u3 >= 0; u3--)
            this.words[u3 + h4] = this.words[u3];
          for (u3 = 0;u3 < h4; u3++)
            this.words[u3] = 0;
          this.length += h4;
        }
        return this.strip();
      }, f3.prototype.ishln = function(i) {
        return r(this.negative === 0), this.iushln(i);
      }, f3.prototype.iushrn = function(i, a3, h4) {
        r(typeof i == "number" && i >= 0);
        var s2;
        a3 ? s2 = (a3 - a3 % 26) / 26 : s2 = 0;
        var u3 = i % 26, c3 = Math.min((i - u3) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u3 << u3, l2 = h4;
        if (s2 -= c3, s2 = Math.max(0, s2), l2) {
          for (var n = 0;n < c3; n++)
            l2.words[n] = this.words[n];
          l2.length = c3;
        }
        if (c3 !== 0)
          if (this.length > c3)
            for (this.length -= c3, n = 0;n < this.length; n++)
              this.words[n] = this.words[n + c3];
          else
            this.words[0] = 0, this.length = 1;
        var d4 = 0;
        for (n = this.length - 1;n >= 0 && (d4 !== 0 || n >= s2); n--) {
          var w = this.words[n] | 0;
          this.words[n] = d4 << 26 - u3 | w >>> u3, d4 = w & b3;
        }
        return l2 && d4 !== 0 && (l2.words[l2.length++] = d4), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f3.prototype.ishrn = function(i, a3, h4) {
        return r(this.negative === 0), this.iushrn(i, a3, h4);
      }, f3.prototype.shln = function(i) {
        return this.clone().ishln(i);
      }, f3.prototype.ushln = function(i) {
        return this.clone().iushln(i);
      }, f3.prototype.shrn = function(i) {
        return this.clone().ishrn(i);
      }, f3.prototype.ushrn = function(i) {
        return this.clone().iushrn(i);
      }, f3.prototype.testn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h4 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h4)
          return false;
        var u3 = this.words[h4];
        return !!(u3 & s2);
      }, f3.prototype.imaskn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h4 = (i - a3) / 26;
        if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h4)
          return this;
        if (a3 !== 0 && h4++, this.length = Math.min(h4, this.length), a3 !== 0) {
          var s2 = 67108863 ^ 67108863 >>> a3 << a3;
          this.words[this.length - 1] &= s2;
        }
        return this.strip();
      }, f3.prototype.maskn = function(i) {
        return this.clone().imaskn(i);
      }, f3.prototype.iaddn = function(i) {
        return r(typeof i == "number"), r(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
      }, f3.prototype._iaddn = function(i) {
        this.words[0] += i;
        for (var a3 = 0;a3 < this.length && this.words[a3] >= 67108864; a3++)
          this.words[a3] -= 67108864, a3 === this.length - 1 ? this.words[a3 + 1] = 1 : this.words[a3 + 1]++;
        return this.length = Math.max(this.length, a3 + 1), this;
      }, f3.prototype.isubn = function(i) {
        if (r(typeof i == "number"), r(i < 67108864), i < 0)
          return this.iaddn(-i);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i), this.negative = 1, this;
        if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a3 = 0;a3 < this.length && this.words[a3] < 0; a3++)
            this.words[a3] += 67108864, this.words[a3 + 1] -= 1;
        return this.strip();
      }, f3.prototype.addn = function(i) {
        return this.clone().iaddn(i);
      }, f3.prototype.subn = function(i) {
        return this.clone().isubn(i);
      }, f3.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f3.prototype.abs = function() {
        return this.clone().iabs();
      }, f3.prototype._ishlnsubmul = function(i, a3, h4) {
        var s2 = i.length + h4, u3;
        this._expand(s2);
        var c3, b3 = 0;
        for (u3 = 0;u3 < i.length; u3++) {
          c3 = (this.words[u3 + h4] | 0) + b3;
          var l2 = (i.words[u3] | 0) * a3;
          c3 -= l2 & 67108863, b3 = (c3 >> 26) - (l2 / 67108864 | 0), this.words[u3 + h4] = c3 & 67108863;
        }
        for (;u3 < this.length - h4; u3++)
          c3 = (this.words[u3 + h4] | 0) + b3, b3 = c3 >> 26, this.words[u3 + h4] = c3 & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r(b3 === -1), b3 = 0, u3 = 0;u3 < this.length; u3++)
          c3 = -(this.words[u3] | 0) + b3, b3 = c3 >> 26, this.words[u3] = c3 & 67108863;
        return this.negative = 1, this.strip();
      }, f3.prototype._wordDiv = function(i, a3) {
        var h4 = this.length - i.length, s2 = this.clone(), u3 = i, c3 = u3.words[u3.length - 1] | 0, b3 = this._countBits(c3);
        h4 = 26 - b3, h4 !== 0 && (u3 = u3.ushln(h4), s2.iushln(h4), c3 = u3.words[u3.length - 1] | 0);
        var l2 = s2.length - u3.length, n;
        if (a3 !== "mod") {
          n = new f3(null), n.length = l2 + 1, n.words = new Array(n.length);
          for (var d4 = 0;d4 < n.length; d4++)
            n.words[d4] = 0;
        }
        var w = s2.clone()._ishlnsubmul(u3, 1, l2);
        w.negative === 0 && (s2 = w, n && (n.words[l2] = 1));
        for (var g3 = l2 - 1;g3 >= 0; g3--) {
          var _3 = (s2.words[u3.length + g3] | 0) * 67108864 + (s2.words[u3.length + g3 - 1] | 0);
          for (_3 = Math.min(_3 / c3 | 0, 67108863), s2._ishlnsubmul(u3, _3, g3);s2.negative !== 0; )
            _3--, s2.negative = 0, s2._ishlnsubmul(u3, 1, g3), s2.isZero() || (s2.negative ^= 1);
          n && (n.words[g3] = _3);
        }
        return n && n.strip(), s2.strip(), a3 !== "div" && h4 !== 0 && s2.iushrn(h4), { div: n || null, mod: s2 };
      }, f3.prototype.divmod = function(i, a3, h4) {
        if (r(!i.isZero()), this.isZero())
          return { div: new f3(0), mod: new f3(0) };
        var s2, u3, c3;
        return this.negative !== 0 && i.negative === 0 ? (c3 = this.neg().divmod(i, a3), a3 !== "mod" && (s2 = c3.div.neg()), a3 !== "div" && (u3 = c3.mod.neg(), h4 && u3.negative !== 0 && u3.iadd(i)), { div: s2, mod: u3 }) : this.negative === 0 && i.negative !== 0 ? (c3 = this.divmod(i.neg(), a3), a3 !== "mod" && (s2 = c3.div.neg()), { div: s2, mod: c3.mod }) : (this.negative & i.negative) !== 0 ? (c3 = this.neg().divmod(i.neg(), a3), a3 !== "div" && (u3 = c3.mod.neg(), h4 && u3.negative !== 0 && u3.isub(i)), { div: c3.div, mod: u3 }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f3(0), mod: this } : i.length === 1 ? a3 === "div" ? { div: this.divn(i.words[0]), mod: null } : a3 === "mod" ? { div: null, mod: new f3(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f3(this.modn(i.words[0])) } : this._wordDiv(i, a3);
      }, f3.prototype.div = function(i) {
        return this.divmod(i, "div", false).div;
      }, f3.prototype.mod = function(i) {
        return this.divmod(i, "mod", false).mod;
      }, f3.prototype.umod = function(i) {
        return this.divmod(i, "mod", true).mod;
      }, f3.prototype.divRound = function(i) {
        var a3 = this.divmod(i);
        if (a3.mod.isZero())
          return a3.div;
        var h4 = a3.div.negative !== 0 ? a3.mod.isub(i) : a3.mod, s2 = i.ushrn(1), u3 = i.andln(1), c3 = h4.cmp(s2);
        return c3 < 0 || u3 === 1 && c3 === 0 ? a3.div : a3.div.negative !== 0 ? a3.div.isubn(1) : a3.div.iaddn(1);
      }, f3.prototype.modn = function(i) {
        r(i <= 67108863);
        for (var a3 = (1 << 26) % i, h4 = 0, s2 = this.length - 1;s2 >= 0; s2--)
          h4 = (a3 * h4 + (this.words[s2] | 0)) % i;
        return h4;
      }, f3.prototype.idivn = function(i) {
        r(i <= 67108863);
        for (var a3 = 0, h4 = this.length - 1;h4 >= 0; h4--) {
          var s2 = (this.words[h4] | 0) + a3 * 67108864;
          this.words[h4] = s2 / i | 0, a3 = s2 % i;
        }
        return this.strip();
      }, f3.prototype.divn = function(i) {
        return this.clone().idivn(i);
      }, f3.prototype.egcd = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h4 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c3 = new f3(0), b3 = new f3(1), l2 = 0;a3.isEven() && h4.isEven(); )
          a3.iushrn(1), h4.iushrn(1), ++l2;
        for (var n = h4.clone(), d4 = a3.clone();!a3.isZero(); ) {
          for (var w = 0, g3 = 1;(a3.words[0] & g3) === 0 && w < 26; ++w, g3 <<= 1)
            ;
          if (w > 0)
            for (a3.iushrn(w);w-- > 0; )
              (s2.isOdd() || u3.isOdd()) && (s2.iadd(n), u3.isub(d4)), s2.iushrn(1), u3.iushrn(1);
          for (var _3 = 0, A2 = 1;(h4.words[0] & A2) === 0 && _3 < 26; ++_3, A2 <<= 1)
            ;
          if (_3 > 0)
            for (h4.iushrn(_3);_3-- > 0; )
              (c3.isOdd() || b3.isOdd()) && (c3.iadd(n), b3.isub(d4)), c3.iushrn(1), b3.iushrn(1);
          a3.cmp(h4) >= 0 ? (a3.isub(h4), s2.isub(c3), u3.isub(b3)) : (h4.isub(a3), c3.isub(s2), b3.isub(u3));
        }
        return { a: c3, b: b3, gcd: h4.iushln(l2) };
      }, f3.prototype._invmp = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h4 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c3 = h4.clone();a3.cmpn(1) > 0 && h4.cmpn(1) > 0; ) {
          for (var b3 = 0, l2 = 1;(a3.words[0] & l2) === 0 && b3 < 26; ++b3, l2 <<= 1)
            ;
          if (b3 > 0)
            for (a3.iushrn(b3);b3-- > 0; )
              s2.isOdd() && s2.iadd(c3), s2.iushrn(1);
          for (var n = 0, d4 = 1;(h4.words[0] & d4) === 0 && n < 26; ++n, d4 <<= 1)
            ;
          if (n > 0)
            for (h4.iushrn(n);n-- > 0; )
              u3.isOdd() && u3.iadd(c3), u3.iushrn(1);
          a3.cmp(h4) >= 0 ? (a3.isub(h4), s2.isub(u3)) : (h4.isub(a3), u3.isub(s2));
        }
        var w;
        return a3.cmpn(1) === 0 ? w = s2 : w = u3, w.cmpn(0) < 0 && w.iadd(i), w;
      }, f3.prototype.gcd = function(i) {
        if (this.isZero())
          return i.abs();
        if (i.isZero())
          return this.abs();
        var a3 = this.clone(), h4 = i.clone();
        a3.negative = 0, h4.negative = 0;
        for (var s2 = 0;a3.isEven() && h4.isEven(); s2++)
          a3.iushrn(1), h4.iushrn(1);
        do {
          for (;a3.isEven(); )
            a3.iushrn(1);
          for (;h4.isEven(); )
            h4.iushrn(1);
          var u3 = a3.cmp(h4);
          if (u3 < 0) {
            var c3 = a3;
            a3 = h4, h4 = c3;
          } else if (u3 === 0 || h4.cmpn(1) === 0)
            break;
          a3.isub(h4);
        } while (true);
        return h4.iushln(s2);
      }, f3.prototype.invm = function(i) {
        return this.egcd(i).a.umod(i);
      }, f3.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f3.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f3.prototype.andln = function(i) {
        return this.words[0] & i;
      }, f3.prototype.bincn = function(i) {
        r(typeof i == "number");
        var a3 = i % 26, h4 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h4)
          return this._expand(h4 + 1), this.words[h4] |= s2, this;
        for (var u3 = s2, c3 = h4;u3 !== 0 && c3 < this.length; c3++) {
          var b3 = this.words[c3] | 0;
          b3 += u3, u3 = b3 >>> 26, b3 &= 67108863, this.words[c3] = b3;
        }
        return u3 !== 0 && (this.words[c3] = u3, this.length++), this;
      }, f3.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f3.prototype.cmpn = function(i) {
        var a3 = i < 0;
        if (this.negative !== 0 && !a3)
          return -1;
        if (this.negative === 0 && a3)
          return 1;
        this.strip();
        var h4;
        if (this.length > 1)
          h4 = 1;
        else {
          a3 && (i = -i), r(i <= 67108863, "Number is too big");
          var s2 = this.words[0] | 0;
          h4 = s2 === i ? 0 : s2 < i ? -1 : 1;
        }
        return this.negative !== 0 ? -h4 | 0 : h4;
      }, f3.prototype.cmp = function(i) {
        if (this.negative !== 0 && i.negative === 0)
          return -1;
        if (this.negative === 0 && i.negative !== 0)
          return 1;
        var a3 = this.ucmp(i);
        return this.negative !== 0 ? -a3 | 0 : a3;
      }, f3.prototype.ucmp = function(i) {
        if (this.length > i.length)
          return 1;
        if (this.length < i.length)
          return -1;
        for (var a3 = 0, h4 = this.length - 1;h4 >= 0; h4--) {
          var s2 = this.words[h4] | 0, u3 = i.words[h4] | 0;
          if (s2 !== u3) {
            s2 < u3 ? a3 = -1 : s2 > u3 && (a3 = 1);
            break;
          }
        }
        return a3;
      }, f3.prototype.gtn = function(i) {
        return this.cmpn(i) === 1;
      }, f3.prototype.gt = function(i) {
        return this.cmp(i) === 1;
      }, f3.prototype.gten = function(i) {
        return this.cmpn(i) >= 0;
      }, f3.prototype.gte = function(i) {
        return this.cmp(i) >= 0;
      }, f3.prototype.ltn = function(i) {
        return this.cmpn(i) === -1;
      }, f3.prototype.lt = function(i) {
        return this.cmp(i) === -1;
      }, f3.prototype.lten = function(i) {
        return this.cmpn(i) <= 0;
      }, f3.prototype.lte = function(i) {
        return this.cmp(i) <= 0;
      }, f3.prototype.eqn = function(i) {
        return this.cmpn(i) === 0;
      }, f3.prototype.eq = function(i) {
        return this.cmp(i) === 0;
      }, f3.red = function(i) {
        return new P3(i);
      }, f3.prototype.toRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
      }, f3.prototype.fromRed = function() {
        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f3.prototype._forceRed = function(i) {
        return this.red = i, this;
      }, f3.prototype.forceRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), this._forceRed(i);
      }, f3.prototype.redAdd = function(i) {
        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
      }, f3.prototype.redIAdd = function(i) {
        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
      }, f3.prototype.redSub = function(i) {
        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
      }, f3.prototype.redISub = function(i) {
        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
      }, f3.prototype.redShl = function(i) {
        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
      }, f3.prototype.redMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
      }, f3.prototype.redIMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
      }, f3.prototype.redSqr = function() {
        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f3.prototype.redISqr = function() {
        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f3.prototype.redSqrt = function() {
        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f3.prototype.redInvm = function() {
        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f3.prototype.redNeg = function() {
        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f3.prototype.redPow = function(i) {
        return r(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v2, i) {
        this.name = v2, this.p = new f3(i, 16), this.n = this.p.bitLength(), this.k = new f3(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i = new f3(null);
        return i.words = new Array(Math.ceil(this.n / 13)), i;
      }, ye.prototype.ireduce = function(i) {
        var a3 = i, h4;
        do
          this.split(a3, this.tmp), a3 = this.imulK(a3), a3 = a3.iadd(this.tmp), h4 = a3.bitLength();
        while (h4 > this.n);
        var s2 = h4 < this.n ? -1 : a3.ucmp(this.p);
        return s2 === 0 ? (a3.words[0] = 0, a3.length = 1) : s2 > 0 ? a3.isub(this.p) : a3.strip !== undefined ? a3.strip() : a3._strip(), a3;
      }, ye.prototype.split = function(i, a3) {
        i.iushrn(this.n, 0, a3);
      }, ye.prototype.imulK = function(i) {
        return i.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o(xe, ye), xe.prototype.split = function(i, a3) {
        for (var h4 = 4194303, s2 = Math.min(i.length, 9), u3 = 0;u3 < s2; u3++)
          a3.words[u3] = i.words[u3];
        if (a3.length = s2, i.length <= 9) {
          i.words[0] = 0, i.length = 1;
          return;
        }
        var c3 = i.words[9];
        for (a3.words[a3.length++] = c3 & h4, u3 = 10;u3 < i.length; u3++) {
          var b3 = i.words[u3] | 0;
          i.words[u3 - 10] = (b3 & h4) << 4 | c3 >>> 22, c3 = b3;
        }
        c3 >>>= 22, i.words[u3 - 10] = c3, c3 === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
      }, xe.prototype.imulK = function(i) {
        i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
        for (var a3 = 0, h4 = 0;h4 < i.length; h4++) {
          var s2 = i.words[h4] | 0;
          a3 += s2 * 977, i.words[h4] = a3 & 67108863, a3 = s2 * 64 + (a3 / 67108864 | 0);
        }
        return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o(Ae, ye), Ae.prototype.imulK = function(i) {
        for (var a3 = 0, h4 = 0;h4 < i.length; h4++) {
          var s2 = (i.words[h4] | 0) * 19 + a3, u3 = s2 & 67108863;
          s2 >>>= 26, i.words[h4] = u3, a3 = s2;
        }
        return a3 !== 0 && (i.words[i.length++] = a3), i;
      }, f3._prime = function(i) {
        if (we[i])
          return we[i];
        var a3;
        if (i === "k256")
          a3 = new xe;
        else if (i === "p224")
          a3 = new Re;
        else if (i === "p192")
          a3 = new Ee;
        else if (i === "p25519")
          a3 = new Ae;
        else
          throw new Error("Unknown prime " + i);
        return we[i] = a3, a3;
      };
      function P3(v2) {
        if (typeof v2 == "string") {
          var i = f3._prime(v2);
          this.m = i.p, this.prime = i;
        } else
          r(v2.gtn(1), "modulus must be greater than 1"), this.m = v2, this.prime = null;
      }
      P3.prototype._verify1 = function(i) {
        r(i.negative === 0, "red works only with positives"), r(i.red, "red works only with red numbers");
      }, P3.prototype._verify2 = function(i, a3) {
        r((i.negative | a3.negative) === 0, "red works only with positives"), r(i.red && i.red === a3.red, "red works only with red numbers");
      }, P3.prototype.imod = function(i) {
        return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
      }, P3.prototype.neg = function(i) {
        return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
      }, P3.prototype.add = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.add(a3);
        return h4.cmp(this.m) >= 0 && h4.isub(this.m), h4._forceRed(this);
      }, P3.prototype.iadd = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.iadd(a3);
        return h4.cmp(this.m) >= 0 && h4.isub(this.m), h4;
      }, P3.prototype.sub = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.sub(a3);
        return h4.cmpn(0) < 0 && h4.iadd(this.m), h4._forceRed(this);
      }, P3.prototype.isub = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.isub(a3);
        return h4.cmpn(0) < 0 && h4.iadd(this.m), h4;
      }, P3.prototype.shl = function(i, a3) {
        return this._verify1(i), this.imod(i.ushln(a3));
      }, P3.prototype.imul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.imul(a3));
      }, P3.prototype.mul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.mul(a3));
      }, P3.prototype.isqr = function(i) {
        return this.imul(i, i.clone());
      }, P3.prototype.sqr = function(i) {
        return this.mul(i, i);
      }, P3.prototype.sqrt = function(i) {
        if (i.isZero())
          return i.clone();
        var a3 = this.m.andln(3);
        if (r(a3 % 2 === 1), a3 === 3) {
          var h4 = this.m.add(new f3(1)).iushrn(2);
          return this.pow(i, h4);
        }
        for (var s2 = this.m.subn(1), u3 = 0;!s2.isZero() && s2.andln(1) === 0; )
          u3++, s2.iushrn(1);
        r(!s2.isZero());
        var c3 = new f3(1).toRed(this), b3 = c3.redNeg(), l2 = this.m.subn(1).iushrn(1), n = this.m.bitLength();
        for (n = new f3(2 * n * n).toRed(this);this.pow(n, l2).cmp(b3) !== 0; )
          n.redIAdd(b3);
        for (var d4 = this.pow(n, s2), w = this.pow(i, s2.addn(1).iushrn(1)), g3 = this.pow(i, s2), _3 = u3;g3.cmp(c3) !== 0; ) {
          for (var A2 = g3, R2 = 0;A2.cmp(c3) !== 0; R2++)
            A2 = A2.redSqr();
          r(R2 < _3);
          var I4 = this.pow(d4, new f3(1).iushln(_3 - R2 - 1));
          w = w.redMul(I4), d4 = I4.redSqr(), g3 = g3.redMul(d4), _3 = R2;
        }
        return w;
      }, P3.prototype.invm = function(i) {
        var a3 = i._invmp(this.m);
        return a3.negative !== 0 ? (a3.negative = 0, this.imod(a3).redNeg()) : this.imod(a3);
      }, P3.prototype.pow = function(i, a3) {
        if (a3.isZero())
          return new f3(1).toRed(this);
        if (a3.cmpn(1) === 0)
          return i.clone();
        var h4 = 4, s2 = new Array(1 << h4);
        s2[0] = new f3(1).toRed(this), s2[1] = i;
        for (var u3 = 2;u3 < s2.length; u3++)
          s2[u3] = this.mul(s2[u3 - 1], i);
        var c3 = s2[0], b3 = 0, l2 = 0, n = a3.bitLength() % 26;
        for (n === 0 && (n = 26), u3 = a3.length - 1;u3 >= 0; u3--) {
          for (var d4 = a3.words[u3], w = n - 1;w >= 0; w--) {
            var g3 = d4 >> w & 1;
            if (c3 !== s2[0] && (c3 = this.sqr(c3)), g3 === 0 && b3 === 0) {
              l2 = 0;
              continue;
            }
            b3 <<= 1, b3 |= g3, l2++, !(l2 !== h4 && (u3 !== 0 || w !== 0)) && (c3 = this.mul(c3, s2[b3]), l2 = 0, b3 = 0);
          }
          n = 26;
        }
        return c3;
      }, P3.prototype.convertTo = function(i) {
        var a3 = i.umod(this.m);
        return a3 === i ? a3.clone() : a3;
      }, P3.prototype.convertFrom = function(i) {
        var a3 = i.clone();
        return a3.red = null, a3;
      }, f3.mont = function(i) {
        return new Se2(i);
      };
      function Se2(v2) {
        P3.call(this, v2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f3(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o(Se2, P3), Se2.prototype.convertTo = function(i) {
        return this.imod(i.ushln(this.shift));
      }, Se2.prototype.convertFrom = function(i) {
        var a3 = this.imod(i.mul(this.rinv));
        return a3.red = null, a3;
      }, Se2.prototype.imul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return i.words[0] = 0, i.length = 1, i;
        var h4 = i.imul(a3), s2 = h4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h4.isub(s2).iushrn(this.shift), c3 = u3;
        return u3.cmp(this.m) >= 0 ? c3 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c3 = u3.iadd(this.m)), c3._forceRed(this);
      }, Se2.prototype.mul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return new f3(0)._forceRed(this);
        var h4 = i.mul(a3), s2 = h4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h4.isub(s2).iushrn(this.shift), c3 = u3;
        return u3.cmp(this.m) >= 0 ? c3 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c3 = u3.iadd(this.m)), c3._forceRed(this);
      }, Se2.prototype.invm = function(i) {
        var a3 = this.imod(i._invmp(this.m).mul(this.r2));
        return a3._forceRed(this);
      };
    })(typeof gd > "u" || gd, I3);
  });
  L3 = T3((gL, k3) => {
    var cq = a0(), pq = T32();
    k3.exports = function(e) {
      return new Zn(e);
    };
    var hr = { secp256k1: { name: "secp256k1", byteLength: 32 }, secp224r1: { name: "p224", byteLength: 28 }, prime256v1: { name: "p256", byteLength: 32 }, prime192v1: { name: "p192", byteLength: 24 }, ed25519: { name: "ed25519", byteLength: 32 }, secp384r1: { name: "p384", byteLength: 48 }, secp521r1: { name: "p521", byteLength: 66 } };
    hr.p224 = hr.secp224r1;
    hr.p256 = hr.secp256r1 = hr.prime256v1;
    hr.p192 = hr.secp192r1 = hr.prime192v1;
    hr.p384 = hr.secp384r1;
    hr.p521 = hr.secp521r1;
    function Zn(t) {
      this.curveType = hr[t], this.curveType || (this.curveType = { name: t }), this.curve = new cq.ec(this.curveType.name), this.keys = undefined;
    }
    Zn.prototype.generateKeys = function(t, e) {
      return this.keys = this.curve.genKeyPair(), this.getPublicKey(t, e);
    };
    Zn.prototype.computeSecret = function(t, e, r) {
      e = e || "utf8", Buffer.isBuffer(t) || (t = new Buffer(t, e));
      var o = this.curve.keyFromPublic(t).getPublic(), f3 = o.mul(this.keys.getPrivate()).getX();
      return yd(f3, r, this.curveType.byteLength);
    };
    Zn.prototype.getPublicKey = function(t, e) {
      var r = this.keys.getPublic(e === "compressed", true);
      return e === "hybrid" && (r[r.length - 1] % 2 ? r[0] = 7 : r[0] = 6), yd(r, t);
    };
    Zn.prototype.getPrivateKey = function(t) {
      return yd(this.keys.getPrivate(), t);
    };
    Zn.prototype.setPublicKey = function(t, e) {
      return e = e || "utf8", Buffer.isBuffer(t) || (t = new Buffer(t, e)), this.keys._importPublic(t), this;
    };
    Zn.prototype.setPrivateKey = function(t, e) {
      e = e || "utf8", Buffer.isBuffer(t) || (t = new Buffer(t, e));
      var r = new pq(t);
      return r = r.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(r), this;
    };
    function yd(t, e, r) {
      Array.isArray(t) || (t = t.toArray());
      var o = new Buffer(t);
      if (r && o.length < r) {
        var f3 = new Buffer(r - o.length);
        f3.fill(0), o = Buffer.concat([f3, o]);
      }
      return e ? o.toString(e) : o;
    }
  });
  Md = T3((yL, N3) => {
    var vq = bf(), wd = Te().Buffer;
    N3.exports = function(t, e) {
      for (var r = wd.alloc(0), o = 0, f3;r.length < e; )
        f3 = bq(o++), r = wd.concat([r, vq("sha1").update(t).update(f3).digest()]);
      return r.slice(0, e);
    };
    function bq(t) {
      var e = wd.allocUnsafe(4);
      return e.writeUInt32BE(t, 0), e;
    }
  });
  _d = T3((wL, D3) => {
    D3.exports = function(e, r) {
      for (var o = e.length, f3 = -1;++f3 < o; )
        e[f3] ^= r[f3];
      return e;
    };
  });
  y0 = T3((P3, xd) => {
    (function(t, e) {
      function r(v2, i) {
        if (!v2)
          throw new Error(i || "Assertion failed");
      }
      function o(v2, i) {
        v2.super_ = i;
        var a3 = function() {};
        a3.prototype = i.prototype, v2.prototype = new a3, v2.prototype.constructor = v2;
      }
      function f3(v2, i, a3) {
        if (f3.isBN(v2))
          return v2;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v2 !== null && ((i === "le" || i === "be") && (a3 = i, i = 10), this._init(v2 || 0, i || 10, a3 || "be"));
      }
      typeof t == "object" ? t.exports = f3 : e.BN = f3, f3.BN = f3, f3.wordSize = 26;
      var p4;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p4 = window.Buffer : p4 = ji().Buffer;
      } catch {}
      f3.isBN = function(i) {
        return i instanceof f3 ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f3.wordSize && Array.isArray(i.words);
      }, f3.max = function(i, a3) {
        return i.cmp(a3) > 0 ? i : a3;
      }, f3.min = function(i, a3) {
        return i.cmp(a3) < 0 ? i : a3;
      }, f3.prototype._init = function(i, a3, h4) {
        if (typeof i == "number")
          return this._initNumber(i, a3, h4);
        if (typeof i == "object")
          return this._initArray(i, a3, h4);
        a3 === "hex" && (a3 = 16), r(a3 === (a3 | 0) && a3 >= 2 && a3 <= 36), i = i.toString().replace(/\s+/g, "");
        var s2 = 0;
        i[0] === "-" && (s2++, this.negative = 1), s2 < i.length && (a3 === 16 ? this._parseHex(i, s2, h4) : (this._parseBase(i, a3, s2), h4 === "le" && this._initArray(this.toArray(), a3, h4)));
      }, f3.prototype._initNumber = function(i, a3, h4) {
        i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h4 === "le" && this._initArray(this.toArray(), a3, h4);
      }, f3.prototype._initArray = function(i, a3, h4) {
        if (r(typeof i.length == "number"), i.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3, c3, b3 = 0;
        if (h4 === "be")
          for (s2 = i.length - 1, u3 = 0;s2 >= 0; s2 -= 3)
            c3 = i[s2] | i[s2 - 1] << 8 | i[s2 - 2] << 16, this.words[u3] |= c3 << b3 & 67108863, this.words[u3 + 1] = c3 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        else if (h4 === "le")
          for (s2 = 0, u3 = 0;s2 < i.length; s2 += 3)
            c3 = i[s2] | i[s2 + 1] << 8 | i[s2 + 2] << 16, this.words[u3] |= c3 << b3 & 67108863, this.words[u3 + 1] = c3 >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u3++);
        return this.strip();
      };
      function m3(v2, i) {
        var a3 = v2.charCodeAt(i);
        return a3 >= 65 && a3 <= 70 ? a3 - 55 : a3 >= 97 && a3 <= 102 ? a3 - 87 : a3 - 48 & 15;
      }
      function y4(v2, i, a3) {
        var h4 = m3(v2, a3);
        return a3 - 1 >= i && (h4 |= m3(v2, a3 - 1) << 4), h4;
      }
      f3.prototype._parseHex = function(i, a3, h4) {
        this.length = Math.ceil((i.length - a3) / 6), this.words = new Array(this.length);
        for (var s2 = 0;s2 < this.length; s2++)
          this.words[s2] = 0;
        var u3 = 0, c3 = 0, b3;
        if (h4 === "be")
          for (s2 = i.length - 1;s2 >= a3; s2 -= 2)
            b3 = y4(i, a3, s2) << u3, this.words[c3] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c3 += 1, this.words[c3] |= b3 >>> 26) : u3 += 8;
        else {
          var l2 = i.length - a3;
          for (s2 = l2 % 2 === 0 ? a3 + 1 : a3;s2 < i.length; s2 += 2)
            b3 = y4(i, a3, s2) << u3, this.words[c3] |= b3 & 67108863, u3 >= 18 ? (u3 -= 18, c3 += 1, this.words[c3] |= b3 >>> 26) : u3 += 8;
        }
        this.strip();
      };
      function M2(v2, i, a3, h4) {
        for (var s2 = 0, u3 = Math.min(v2.length, a3), c3 = i;c3 < u3; c3++) {
          var b3 = v2.charCodeAt(c3) - 48;
          s2 *= h4, b3 >= 49 ? s2 += b3 - 49 + 10 : b3 >= 17 ? s2 += b3 - 17 + 10 : s2 += b3;
        }
        return s2;
      }
      f3.prototype._parseBase = function(i, a3, h4) {
        this.words = [0], this.length = 1;
        for (var s2 = 0, u3 = 1;u3 <= 67108863; u3 *= a3)
          s2++;
        s2--, u3 = u3 / a3 | 0;
        for (var c3 = i.length - h4, b3 = c3 % s2, l2 = Math.min(c3, c3 - b3) + h4, n = 0, d4 = h4;d4 < l2; d4 += s2)
          n = M2(i, d4, d4 + s2, a3), this.imuln(u3), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        if (b3 !== 0) {
          var w = 1;
          for (n = M2(i, d4, i.length, a3), d4 = 0;d4 < b3; d4++)
            w *= a3;
          this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
        }
        this.strip();
      }, f3.prototype.copy = function(i) {
        i.words = new Array(this.length);
        for (var a3 = 0;a3 < this.length; a3++)
          i.words[a3] = this.words[a3];
        i.length = this.length, i.negative = this.negative, i.red = this.red;
      }, f3.prototype.clone = function() {
        var i = new f3(null);
        return this.copy(i), i;
      }, f3.prototype._expand = function(i) {
        for (;this.length < i; )
          this.words[this.length++] = 0;
        return this;
      }, f3.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f3.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f3.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x4 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S3 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E4 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f3.prototype.toString = function(i, a3) {
        i = i || 10, a3 = a3 | 0 || 1;
        var h4;
        if (i === 16 || i === "hex") {
          h4 = "";
          for (var s2 = 0, u3 = 0, c3 = 0;c3 < this.length; c3++) {
            var b3 = this.words[c3], l2 = ((b3 << s2 | u3) & 16777215).toString(16);
            u3 = b3 >>> 24 - s2 & 16777215, u3 !== 0 || c3 !== this.length - 1 ? h4 = x4[6 - l2.length] + l2 + h4 : h4 = l2 + h4, s2 += 2, s2 >= 26 && (s2 -= 26, c3--);
          }
          for (u3 !== 0 && (h4 = u3.toString(16) + h4);h4.length % a3 !== 0; )
            h4 = "0" + h4;
          return this.negative !== 0 && (h4 = "-" + h4), h4;
        }
        if (i === (i | 0) && i >= 2 && i <= 36) {
          var n = S3[i], d4 = E4[i];
          h4 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g3 = w.modn(d4).toString(i);
            w = w.idivn(d4), w.isZero() ? h4 = g3 + h4 : h4 = x4[n - g3.length] + g3 + h4;
          }
          for (this.isZero() && (h4 = "0" + h4);h4.length % a3 !== 0; )
            h4 = "0" + h4;
          return this.negative !== 0 && (h4 = "-" + h4), h4;
        }
        r(false, "Base should be between 2 and 36");
      }, f3.prototype.toNumber = function() {
        var i = this.words[0];
        return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
      }, f3.prototype.toJSON = function() {
        return this.toString(16);
      }, f3.prototype.toBuffer = function(i, a3) {
        return r(typeof p4 < "u"), this.toArrayLike(p4, i, a3);
      }, f3.prototype.toArray = function(i, a3) {
        return this.toArrayLike(Array, i, a3);
      }, f3.prototype.toArrayLike = function(i, a3, h4) {
        var s2 = this.byteLength(), u3 = h4 || Math.max(1, s2);
        r(s2 <= u3, "byte array longer than desired length"), r(u3 > 0, "Requested array length <= 0"), this.strip();
        var c3 = a3 === "le", b3 = new i(u3), l2, n, d4 = this.clone();
        if (c3) {
          for (n = 0;!d4.isZero(); n++)
            l2 = d4.andln(255), d4.iushrn(8), b3[n] = l2;
          for (;n < u3; n++)
            b3[n] = 0;
        } else {
          for (n = 0;n < u3 - s2; n++)
            b3[n] = 0;
          for (n = 0;!d4.isZero(); n++)
            l2 = d4.andln(255), d4.iushrn(8), b3[u3 - n - 1] = l2;
        }
        return b3;
      }, Math.clz32 ? f3.prototype._countBits = function(i) {
        return 32 - Math.clz32(i);
      } : f3.prototype._countBits = function(i) {
        var a3 = i, h4 = 0;
        return a3 >= 4096 && (h4 += 13, a3 >>>= 13), a3 >= 64 && (h4 += 7, a3 >>>= 7), a3 >= 8 && (h4 += 4, a3 >>>= 4), a3 >= 2 && (h4 += 2, a3 >>>= 2), h4 + a3;
      }, f3.prototype._zeroBits = function(i) {
        if (i === 0)
          return 26;
        var a3 = i, h4 = 0;
        return (a3 & 8191) === 0 && (h4 += 13, a3 >>>= 13), (a3 & 127) === 0 && (h4 += 7, a3 >>>= 7), (a3 & 15) === 0 && (h4 += 4, a3 >>>= 4), (a3 & 3) === 0 && (h4 += 2, a3 >>>= 2), (a3 & 1) === 0 && h4++, h4;
      }, f3.prototype.bitLength = function() {
        var i = this.words[this.length - 1], a3 = this._countBits(i);
        return (this.length - 1) * 26 + a3;
      };
      function B3(v2) {
        for (var i = new Array(v2.bitLength()), a3 = 0;a3 < i.length; a3++) {
          var h4 = a3 / 26 | 0, s2 = a3 % 26;
          i[a3] = (v2.words[h4] & 1 << s2) >>> s2;
        }
        return i;
      }
      f3.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i = 0, a3 = 0;a3 < this.length; a3++) {
          var h4 = this._zeroBits(this.words[a3]);
          if (i += h4, h4 !== 26)
            break;
        }
        return i;
      }, f3.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f3.prototype.toTwos = function(i) {
        return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
      }, f3.prototype.fromTwos = function(i) {
        return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
      }, f3.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f3.prototype.neg = function() {
        return this.clone().ineg();
      }, f3.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f3.prototype.iuor = function(i) {
        for (;this.length < i.length; )
          this.words[this.length++] = 0;
        for (var a3 = 0;a3 < i.length; a3++)
          this.words[a3] = this.words[a3] | i.words[a3];
        return this.strip();
      }, f3.prototype.ior = function(i) {
        return r((this.negative | i.negative) === 0), this.iuor(i);
      }, f3.prototype.or = function(i) {
        return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
      }, f3.prototype.uor = function(i) {
        return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
      }, f3.prototype.iuand = function(i) {
        var a3;
        this.length > i.length ? a3 = i : a3 = this;
        for (var h4 = 0;h4 < a3.length; h4++)
          this.words[h4] = this.words[h4] & i.words[h4];
        return this.length = a3.length, this.strip();
      }, f3.prototype.iand = function(i) {
        return r((this.negative | i.negative) === 0), this.iuand(i);
      }, f3.prototype.and = function(i) {
        return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
      }, f3.prototype.uand = function(i) {
        return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
      }, f3.prototype.iuxor = function(i) {
        var a3, h4;
        this.length > i.length ? (a3 = this, h4 = i) : (a3 = i, h4 = this);
        for (var s2 = 0;s2 < h4.length; s2++)
          this.words[s2] = a3.words[s2] ^ h4.words[s2];
        if (this !== a3)
          for (;s2 < a3.length; s2++)
            this.words[s2] = a3.words[s2];
        return this.length = a3.length, this.strip();
      }, f3.prototype.ixor = function(i) {
        return r((this.negative | i.negative) === 0), this.iuxor(i);
      }, f3.prototype.xor = function(i) {
        return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
      }, f3.prototype.uxor = function(i) {
        return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
      }, f3.prototype.inotn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = Math.ceil(i / 26) | 0, h4 = i % 26;
        this._expand(a3), h4 > 0 && a3--;
        for (var s2 = 0;s2 < a3; s2++)
          this.words[s2] = ~this.words[s2] & 67108863;
        return h4 > 0 && (this.words[s2] = ~this.words[s2] & 67108863 >> 26 - h4), this.strip();
      }, f3.prototype.notn = function(i) {
        return this.clone().inotn(i);
      }, f3.prototype.setn = function(i, a3) {
        r(typeof i == "number" && i >= 0);
        var h4 = i / 26 | 0, s2 = i % 26;
        return this._expand(h4 + 1), a3 ? this.words[h4] = this.words[h4] | 1 << s2 : this.words[h4] = this.words[h4] & ~(1 << s2), this.strip();
      }, f3.prototype.iadd = function(i) {
        var a3;
        if (this.negative !== 0 && i.negative === 0)
          return this.negative = 0, a3 = this.isub(i), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i.negative !== 0)
          return i.negative = 0, a3 = this.isub(i), i.negative = 1, a3._normSign();
        var h4, s2;
        this.length > i.length ? (h4 = this, s2 = i) : (h4 = i, s2 = this);
        for (var u3 = 0, c3 = 0;c3 < s2.length; c3++)
          a3 = (h4.words[c3] | 0) + (s2.words[c3] | 0) + u3, this.words[c3] = a3 & 67108863, u3 = a3 >>> 26;
        for (;u3 !== 0 && c3 < h4.length; c3++)
          a3 = (h4.words[c3] | 0) + u3, this.words[c3] = a3 & 67108863, u3 = a3 >>> 26;
        if (this.length = h4.length, u3 !== 0)
          this.words[this.length] = u3, this.length++;
        else if (h4 !== this)
          for (;c3 < h4.length; c3++)
            this.words[c3] = h4.words[c3];
        return this;
      }, f3.prototype.add = function(i) {
        var a3;
        return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a3 = this.sub(i), i.negative ^= 1, a3) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a3 = i.sub(this), this.negative = 1, a3) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
      }, f3.prototype.isub = function(i) {
        if (i.negative !== 0) {
          i.negative = 0;
          var a3 = this.iadd(i);
          return i.negative = 1, a3._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
        var h4 = this.cmp(i);
        if (h4 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s2, u3;
        h4 > 0 ? (s2 = this, u3 = i) : (s2 = i, u3 = this);
        for (var c3 = 0, b3 = 0;b3 < u3.length; b3++)
          a3 = (s2.words[b3] | 0) - (u3.words[b3] | 0) + c3, c3 = a3 >> 26, this.words[b3] = a3 & 67108863;
        for (;c3 !== 0 && b3 < s2.length; b3++)
          a3 = (s2.words[b3] | 0) + c3, c3 = a3 >> 26, this.words[b3] = a3 & 67108863;
        if (c3 === 0 && b3 < s2.length && s2 !== this)
          for (;b3 < s2.length; b3++)
            this.words[b3] = s2.words[b3];
        return this.length = Math.max(this.length, b3), s2 !== this && (this.negative = 1), this.strip();
      }, f3.prototype.sub = function(i) {
        return this.clone().isub(i);
      };
      function q2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative;
        var h4 = v2.length + i.length | 0;
        a3.length = h4, h4 = h4 - 1 | 0;
        var s2 = v2.words[0] | 0, u3 = i.words[0] | 0, c3 = s2 * u3, b3 = c3 & 67108863, l2 = c3 / 67108864 | 0;
        a3.words[0] = b3;
        for (var n = 1;n < h4; n++) {
          for (var d4 = l2 >>> 26, w = l2 & 67108863, g3 = Math.min(n, i.length - 1), _3 = Math.max(0, n - v2.length + 1);_3 <= g3; _3++) {
            var A2 = n - _3 | 0;
            s2 = v2.words[A2] | 0, u3 = i.words[_3] | 0, c3 = s2 * u3 + w, d4 += c3 / 67108864 | 0, w = c3 & 67108863;
          }
          a3.words[n] = w | 0, l2 = d4 | 0;
        }
        return l2 !== 0 ? a3.words[n] = l2 | 0 : a3.length--, a3.strip();
      }
      var L4 = function(i, a3, h4) {
        var s2 = i.words, u3 = a3.words, c3 = h4.words, b3 = 0, l2, n, d4, w = s2[0] | 0, g3 = w & 8191, _3 = w >>> 13, A2 = s2[1] | 0, R2 = A2 & 8191, I3 = A2 >>> 13, Me = s2[2] | 0, k3 = Me & 8191, D2 = Me >>> 13, nt2 = s2[3] | 0, C = nt2 & 8191, O4 = nt2 >>> 13, vt = s2[4] | 0, F = vt & 8191, U4 = vt >>> 13, bt2 = s2[5] | 0, z = bt2 & 8191, H2 = bt2 >>> 13, mt2 = s2[6] | 0, W = mt2 & 8191, K3 = mt2 >>> 13, gt4 = s2[7] | 0, j3 = gt4 & 8191, Z2 = gt4 >>> 13, yt2 = s2[8] | 0, V3 = yt2 & 8191, $2 = yt2 >>> 13, wt2 = s2[9] | 0, G3 = wt2 & 8191, Y3 = wt2 >>> 13, Mt = u3[0] | 0, X3 = Mt & 8191, J3 = Mt >>> 13, _t3 = u3[1] | 0, Q2 = _t3 & 8191, ee = _t3 >>> 13, xt = u3[2] | 0, te = xt & 8191, re = xt >>> 13, St = u3[3] | 0, ie2 = St & 8191, ne2 = St >>> 13, Et = u3[4] | 0, fe = Et & 8191, ae = Et >>> 13, At2 = u3[5] | 0, oe = At2 & 8191, se = At2 >>> 13, Rt = u3[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt2 = u3[7] | 0, le = Bt2 & 8191, de = Bt2 >>> 13, qt = u3[8] | 0, ce2 = qt & 8191, pe = qt >>> 13, It = u3[9] | 0, ve = It & 8191, be2 = It >>> 13;
        h4.negative = i.negative ^ a3.negative, h4.length = 19, l2 = Math.imul(g3, X3), n = Math.imul(g3, J3), n = n + Math.imul(_3, X3) | 0, d4 = Math.imul(_3, J3);
        var ft = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l2 = Math.imul(R2, X3), n = Math.imul(R2, J3), n = n + Math.imul(I3, X3) | 0, d4 = Math.imul(I3, J3), l2 = l2 + Math.imul(g3, Q2) | 0, n = n + Math.imul(g3, ee) | 0, n = n + Math.imul(_3, Q2) | 0, d4 = d4 + Math.imul(_3, ee) | 0;
        var Be = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l2 = Math.imul(k3, X3), n = Math.imul(k3, J3), n = n + Math.imul(D2, X3) | 0, d4 = Math.imul(D2, J3), l2 = l2 + Math.imul(R2, Q2) | 0, n = n + Math.imul(R2, ee) | 0, n = n + Math.imul(I3, Q2) | 0, d4 = d4 + Math.imul(I3, ee) | 0, l2 = l2 + Math.imul(g3, te) | 0, n = n + Math.imul(g3, re) | 0, n = n + Math.imul(_3, te) | 0, d4 = d4 + Math.imul(_3, re) | 0;
        var qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l2 = Math.imul(C, X3), n = Math.imul(C, J3), n = n + Math.imul(O4, X3) | 0, d4 = Math.imul(O4, J3), l2 = l2 + Math.imul(k3, Q2) | 0, n = n + Math.imul(k3, ee) | 0, n = n + Math.imul(D2, Q2) | 0, d4 = d4 + Math.imul(D2, ee) | 0, l2 = l2 + Math.imul(R2, te) | 0, n = n + Math.imul(R2, re) | 0, n = n + Math.imul(I3, te) | 0, d4 = d4 + Math.imul(I3, re) | 0, l2 = l2 + Math.imul(g3, ie2) | 0, n = n + Math.imul(g3, ne2) | 0, n = n + Math.imul(_3, ie2) | 0, d4 = d4 + Math.imul(_3, ne2) | 0;
        var ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l2 = Math.imul(F, X3), n = Math.imul(F, J3), n = n + Math.imul(U4, X3) | 0, d4 = Math.imul(U4, J3), l2 = l2 + Math.imul(C, Q2) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O4, Q2) | 0, d4 = d4 + Math.imul(O4, ee) | 0, l2 = l2 + Math.imul(k3, te) | 0, n = n + Math.imul(k3, re) | 0, n = n + Math.imul(D2, te) | 0, d4 = d4 + Math.imul(D2, re) | 0, l2 = l2 + Math.imul(R2, ie2) | 0, n = n + Math.imul(R2, ne2) | 0, n = n + Math.imul(I3, ie2) | 0, d4 = d4 + Math.imul(I3, ne2) | 0, l2 = l2 + Math.imul(g3, fe) | 0, n = n + Math.imul(g3, ae) | 0, n = n + Math.imul(_3, fe) | 0, d4 = d4 + Math.imul(_3, ae) | 0;
        var He2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (He2 >>> 26) | 0, He2 &= 67108863, l2 = Math.imul(z, X3), n = Math.imul(z, J3), n = n + Math.imul(H2, X3) | 0, d4 = Math.imul(H2, J3), l2 = l2 + Math.imul(F, Q2) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U4, Q2) | 0, d4 = d4 + Math.imul(U4, ee) | 0, l2 = l2 + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O4, te) | 0, d4 = d4 + Math.imul(O4, re) | 0, l2 = l2 + Math.imul(k3, ie2) | 0, n = n + Math.imul(k3, ne2) | 0, n = n + Math.imul(D2, ie2) | 0, d4 = d4 + Math.imul(D2, ne2) | 0, l2 = l2 + Math.imul(R2, fe) | 0, n = n + Math.imul(R2, ae) | 0, n = n + Math.imul(I3, fe) | 0, d4 = d4 + Math.imul(I3, ae) | 0, l2 = l2 + Math.imul(g3, oe) | 0, n = n + Math.imul(g3, se) | 0, n = n + Math.imul(_3, oe) | 0, d4 = d4 + Math.imul(_3, se) | 0;
        var We = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l2 = Math.imul(W, X3), n = Math.imul(W, J3), n = n + Math.imul(K3, X3) | 0, d4 = Math.imul(K3, J3), l2 = l2 + Math.imul(z, Q2) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H2, Q2) | 0, d4 = d4 + Math.imul(H2, ee) | 0, l2 = l2 + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U4, te) | 0, d4 = d4 + Math.imul(U4, re) | 0, l2 = l2 + Math.imul(C, ie2) | 0, n = n + Math.imul(C, ne2) | 0, n = n + Math.imul(O4, ie2) | 0, d4 = d4 + Math.imul(O4, ne2) | 0, l2 = l2 + Math.imul(k3, fe) | 0, n = n + Math.imul(k3, ae) | 0, n = n + Math.imul(D2, fe) | 0, d4 = d4 + Math.imul(D2, ae) | 0, l2 = l2 + Math.imul(R2, oe) | 0, n = n + Math.imul(R2, se) | 0, n = n + Math.imul(I3, oe) | 0, d4 = d4 + Math.imul(I3, se) | 0, l2 = l2 + Math.imul(g3, he) | 0, n = n + Math.imul(g3, ue) | 0, n = n + Math.imul(_3, he) | 0, d4 = d4 + Math.imul(_3, ue) | 0;
        var Ke = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l2 = Math.imul(j3, X3), n = Math.imul(j3, J3), n = n + Math.imul(Z2, X3) | 0, d4 = Math.imul(Z2, J3), l2 = l2 + Math.imul(W, Q2) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K3, Q2) | 0, d4 = d4 + Math.imul(K3, ee) | 0, l2 = l2 + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H2, te) | 0, d4 = d4 + Math.imul(H2, re) | 0, l2 = l2 + Math.imul(F, ie2) | 0, n = n + Math.imul(F, ne2) | 0, n = n + Math.imul(U4, ie2) | 0, d4 = d4 + Math.imul(U4, ne2) | 0, l2 = l2 + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O4, fe) | 0, d4 = d4 + Math.imul(O4, ae) | 0, l2 = l2 + Math.imul(k3, oe) | 0, n = n + Math.imul(k3, se) | 0, n = n + Math.imul(D2, oe) | 0, d4 = d4 + Math.imul(D2, se) | 0, l2 = l2 + Math.imul(R2, he) | 0, n = n + Math.imul(R2, ue) | 0, n = n + Math.imul(I3, he) | 0, d4 = d4 + Math.imul(I3, ue) | 0, l2 = l2 + Math.imul(g3, le) | 0, n = n + Math.imul(g3, de) | 0, n = n + Math.imul(_3, le) | 0, d4 = d4 + Math.imul(_3, de) | 0;
        var je = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l2 = Math.imul(V3, X3), n = Math.imul(V3, J3), n = n + Math.imul($2, X3) | 0, d4 = Math.imul($2, J3), l2 = l2 + Math.imul(j3, Q2) | 0, n = n + Math.imul(j3, ee) | 0, n = n + Math.imul(Z2, Q2) | 0, d4 = d4 + Math.imul(Z2, ee) | 0, l2 = l2 + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K3, te) | 0, d4 = d4 + Math.imul(K3, re) | 0, l2 = l2 + Math.imul(z, ie2) | 0, n = n + Math.imul(z, ne2) | 0, n = n + Math.imul(H2, ie2) | 0, d4 = d4 + Math.imul(H2, ne2) | 0, l2 = l2 + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U4, fe) | 0, d4 = d4 + Math.imul(U4, ae) | 0, l2 = l2 + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O4, oe) | 0, d4 = d4 + Math.imul(O4, se) | 0, l2 = l2 + Math.imul(k3, he) | 0, n = n + Math.imul(k3, ue) | 0, n = n + Math.imul(D2, he) | 0, d4 = d4 + Math.imul(D2, ue) | 0, l2 = l2 + Math.imul(R2, le) | 0, n = n + Math.imul(R2, de) | 0, n = n + Math.imul(I3, le) | 0, d4 = d4 + Math.imul(I3, de) | 0, l2 = l2 + Math.imul(g3, ce2) | 0, n = n + Math.imul(g3, pe) | 0, n = n + Math.imul(_3, ce2) | 0, d4 = d4 + Math.imul(_3, pe) | 0;
        var Ze = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l2 = Math.imul(G3, X3), n = Math.imul(G3, J3), n = n + Math.imul(Y3, X3) | 0, d4 = Math.imul(Y3, J3), l2 = l2 + Math.imul(V3, Q2) | 0, n = n + Math.imul(V3, ee) | 0, n = n + Math.imul($2, Q2) | 0, d4 = d4 + Math.imul($2, ee) | 0, l2 = l2 + Math.imul(j3, te) | 0, n = n + Math.imul(j3, re) | 0, n = n + Math.imul(Z2, te) | 0, d4 = d4 + Math.imul(Z2, re) | 0, l2 = l2 + Math.imul(W, ie2) | 0, n = n + Math.imul(W, ne2) | 0, n = n + Math.imul(K3, ie2) | 0, d4 = d4 + Math.imul(K3, ne2) | 0, l2 = l2 + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H2, fe) | 0, d4 = d4 + Math.imul(H2, ae) | 0, l2 = l2 + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U4, oe) | 0, d4 = d4 + Math.imul(U4, se) | 0, l2 = l2 + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O4, he) | 0, d4 = d4 + Math.imul(O4, ue) | 0, l2 = l2 + Math.imul(k3, le) | 0, n = n + Math.imul(k3, de) | 0, n = n + Math.imul(D2, le) | 0, d4 = d4 + Math.imul(D2, de) | 0, l2 = l2 + Math.imul(R2, ce2) | 0, n = n + Math.imul(R2, pe) | 0, n = n + Math.imul(I3, ce2) | 0, d4 = d4 + Math.imul(I3, pe) | 0, l2 = l2 + Math.imul(g3, ve) | 0, n = n + Math.imul(g3, be2) | 0, n = n + Math.imul(_3, ve) | 0, d4 = d4 + Math.imul(_3, be2) | 0;
        var Ve = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l2 = Math.imul(G3, Q2), n = Math.imul(G3, ee), n = n + Math.imul(Y3, Q2) | 0, d4 = Math.imul(Y3, ee), l2 = l2 + Math.imul(V3, te) | 0, n = n + Math.imul(V3, re) | 0, n = n + Math.imul($2, te) | 0, d4 = d4 + Math.imul($2, re) | 0, l2 = l2 + Math.imul(j3, ie2) | 0, n = n + Math.imul(j3, ne2) | 0, n = n + Math.imul(Z2, ie2) | 0, d4 = d4 + Math.imul(Z2, ne2) | 0, l2 = l2 + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K3, fe) | 0, d4 = d4 + Math.imul(K3, ae) | 0, l2 = l2 + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H2, oe) | 0, d4 = d4 + Math.imul(H2, se) | 0, l2 = l2 + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U4, he) | 0, d4 = d4 + Math.imul(U4, ue) | 0, l2 = l2 + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O4, le) | 0, d4 = d4 + Math.imul(O4, de) | 0, l2 = l2 + Math.imul(k3, ce2) | 0, n = n + Math.imul(k3, pe) | 0, n = n + Math.imul(D2, ce2) | 0, d4 = d4 + Math.imul(D2, pe) | 0, l2 = l2 + Math.imul(R2, ve) | 0, n = n + Math.imul(R2, be2) | 0, n = n + Math.imul(I3, ve) | 0, d4 = d4 + Math.imul(I3, be2) | 0;
        var $e2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + ($e2 >>> 26) | 0, $e2 &= 67108863, l2 = Math.imul(G3, te), n = Math.imul(G3, re), n = n + Math.imul(Y3, te) | 0, d4 = Math.imul(Y3, re), l2 = l2 + Math.imul(V3, ie2) | 0, n = n + Math.imul(V3, ne2) | 0, n = n + Math.imul($2, ie2) | 0, d4 = d4 + Math.imul($2, ne2) | 0, l2 = l2 + Math.imul(j3, fe) | 0, n = n + Math.imul(j3, ae) | 0, n = n + Math.imul(Z2, fe) | 0, d4 = d4 + Math.imul(Z2, ae) | 0, l2 = l2 + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K3, oe) | 0, d4 = d4 + Math.imul(K3, se) | 0, l2 = l2 + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H2, he) | 0, d4 = d4 + Math.imul(H2, ue) | 0, l2 = l2 + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U4, le) | 0, d4 = d4 + Math.imul(U4, de) | 0, l2 = l2 + Math.imul(C, ce2) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O4, ce2) | 0, d4 = d4 + Math.imul(O4, pe) | 0, l2 = l2 + Math.imul(k3, ve) | 0, n = n + Math.imul(k3, be2) | 0, n = n + Math.imul(D2, ve) | 0, d4 = d4 + Math.imul(D2, be2) | 0;
        var Ge2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ge2 >>> 26) | 0, Ge2 &= 67108863, l2 = Math.imul(G3, ie2), n = Math.imul(G3, ne2), n = n + Math.imul(Y3, ie2) | 0, d4 = Math.imul(Y3, ne2), l2 = l2 + Math.imul(V3, fe) | 0, n = n + Math.imul(V3, ae) | 0, n = n + Math.imul($2, fe) | 0, d4 = d4 + Math.imul($2, ae) | 0, l2 = l2 + Math.imul(j3, oe) | 0, n = n + Math.imul(j3, se) | 0, n = n + Math.imul(Z2, oe) | 0, d4 = d4 + Math.imul(Z2, se) | 0, l2 = l2 + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K3, he) | 0, d4 = d4 + Math.imul(K3, ue) | 0, l2 = l2 + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H2, le) | 0, d4 = d4 + Math.imul(H2, de) | 0, l2 = l2 + Math.imul(F, ce2) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U4, ce2) | 0, d4 = d4 + Math.imul(U4, pe) | 0, l2 = l2 + Math.imul(C, ve) | 0, n = n + Math.imul(C, be2) | 0, n = n + Math.imul(O4, ve) | 0, d4 = d4 + Math.imul(O4, be2) | 0;
        var Ye = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l2 = Math.imul(G3, fe), n = Math.imul(G3, ae), n = n + Math.imul(Y3, fe) | 0, d4 = Math.imul(Y3, ae), l2 = l2 + Math.imul(V3, oe) | 0, n = n + Math.imul(V3, se) | 0, n = n + Math.imul($2, oe) | 0, d4 = d4 + Math.imul($2, se) | 0, l2 = l2 + Math.imul(j3, he) | 0, n = n + Math.imul(j3, ue) | 0, n = n + Math.imul(Z2, he) | 0, d4 = d4 + Math.imul(Z2, ue) | 0, l2 = l2 + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K3, le) | 0, d4 = d4 + Math.imul(K3, de) | 0, l2 = l2 + Math.imul(z, ce2) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H2, ce2) | 0, d4 = d4 + Math.imul(H2, pe) | 0, l2 = l2 + Math.imul(F, ve) | 0, n = n + Math.imul(F, be2) | 0, n = n + Math.imul(U4, ve) | 0, d4 = d4 + Math.imul(U4, be2) | 0;
        var Xe2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Xe2 >>> 26) | 0, Xe2 &= 67108863, l2 = Math.imul(G3, oe), n = Math.imul(G3, se), n = n + Math.imul(Y3, oe) | 0, d4 = Math.imul(Y3, se), l2 = l2 + Math.imul(V3, he) | 0, n = n + Math.imul(V3, ue) | 0, n = n + Math.imul($2, he) | 0, d4 = d4 + Math.imul($2, ue) | 0, l2 = l2 + Math.imul(j3, le) | 0, n = n + Math.imul(j3, de) | 0, n = n + Math.imul(Z2, le) | 0, d4 = d4 + Math.imul(Z2, de) | 0, l2 = l2 + Math.imul(W, ce2) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K3, ce2) | 0, d4 = d4 + Math.imul(K3, pe) | 0, l2 = l2 + Math.imul(z, ve) | 0, n = n + Math.imul(z, be2) | 0, n = n + Math.imul(H2, ve) | 0, d4 = d4 + Math.imul(H2, be2) | 0;
        var Je2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Je2 >>> 26) | 0, Je2 &= 67108863, l2 = Math.imul(G3, he), n = Math.imul(G3, ue), n = n + Math.imul(Y3, he) | 0, d4 = Math.imul(Y3, ue), l2 = l2 + Math.imul(V3, le) | 0, n = n + Math.imul(V3, de) | 0, n = n + Math.imul($2, le) | 0, d4 = d4 + Math.imul($2, de) | 0, l2 = l2 + Math.imul(j3, ce2) | 0, n = n + Math.imul(j3, pe) | 0, n = n + Math.imul(Z2, ce2) | 0, d4 = d4 + Math.imul(Z2, pe) | 0, l2 = l2 + Math.imul(W, ve) | 0, n = n + Math.imul(W, be2) | 0, n = n + Math.imul(K3, ve) | 0, d4 = d4 + Math.imul(K3, be2) | 0;
        var Qe = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l2 = Math.imul(G3, le), n = Math.imul(G3, de), n = n + Math.imul(Y3, le) | 0, d4 = Math.imul(Y3, de), l2 = l2 + Math.imul(V3, ce2) | 0, n = n + Math.imul(V3, pe) | 0, n = n + Math.imul($2, ce2) | 0, d4 = d4 + Math.imul($2, pe) | 0, l2 = l2 + Math.imul(j3, ve) | 0, n = n + Math.imul(j3, be2) | 0, n = n + Math.imul(Z2, ve) | 0, d4 = d4 + Math.imul(Z2, be2) | 0;
        var et2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (et2 >>> 26) | 0, et2 &= 67108863, l2 = Math.imul(G3, ce2), n = Math.imul(G3, pe), n = n + Math.imul(Y3, ce2) | 0, d4 = Math.imul(Y3, pe), l2 = l2 + Math.imul(V3, ve) | 0, n = n + Math.imul(V3, be2) | 0, n = n + Math.imul($2, ve) | 0, d4 = d4 + Math.imul($2, be2) | 0;
        var tt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        b3 = (d4 + (n >>> 13) | 0) + (tt2 >>> 26) | 0, tt2 &= 67108863, l2 = Math.imul(G3, ve), n = Math.imul(G3, be2), n = n + Math.imul(Y3, ve) | 0, d4 = Math.imul(Y3, be2);
        var rt2 = (b3 + l2 | 0) + ((n & 8191) << 13) | 0;
        return b3 = (d4 + (n >>> 13) | 0) + (rt2 >>> 26) | 0, rt2 &= 67108863, c3[0] = ft, c3[1] = Be, c3[2] = qe, c3[3] = ze, c3[4] = He2, c3[5] = We, c3[6] = Ke, c3[7] = je, c3[8] = Ze, c3[9] = Ve, c3[10] = $e2, c3[11] = Ge2, c3[12] = Ye, c3[13] = Xe2, c3[14] = Je2, c3[15] = Qe, c3[16] = et2, c3[17] = tt2, c3[18] = rt2, b3 !== 0 && (c3[19] = b3, h4.length++), h4;
      };
      Math.imul || (L4 = q2);
      function ge2(v2, i, a3) {
        a3.negative = i.negative ^ v2.negative, a3.length = v2.length + i.length;
        for (var h4 = 0, s2 = 0, u3 = 0;u3 < a3.length - 1; u3++) {
          var c3 = s2;
          s2 = 0;
          for (var b3 = h4 & 67108863, l2 = Math.min(u3, i.length - 1), n = Math.max(0, u3 - v2.length + 1);n <= l2; n++) {
            var d4 = u3 - n, w = v2.words[d4] | 0, g3 = i.words[n] | 0, _3 = w * g3, A2 = _3 & 67108863;
            c3 = c3 + (_3 / 67108864 | 0) | 0, A2 = A2 + b3 | 0, b3 = A2 & 67108863, c3 = c3 + (A2 >>> 26) | 0, s2 += c3 >>> 26, c3 &= 67108863;
          }
          a3.words[u3] = b3, h4 = c3, c3 = s2;
        }
        return h4 !== 0 ? a3.words[u3] = h4 : a3.length--, a3.strip();
      }
      function _e(v2, i, a3) {
        var h4 = new N3;
        return h4.mulp(v2, i, a3);
      }
      f3.prototype.mulTo = function(i, a3) {
        var h4, s2 = this.length + i.length;
        return this.length === 10 && i.length === 10 ? h4 = L4(this, i, a3) : s2 < 63 ? h4 = q2(this, i, a3) : s2 < 1024 ? h4 = ge2(this, i, a3) : h4 = _e(this, i, a3), h4;
      };
      function N3(v2, i) {
        this.x = v2, this.y = i;
      }
      N3.prototype.makeRBT = function(i) {
        for (var a3 = new Array(i), h4 = f3.prototype._countBits(i) - 1, s2 = 0;s2 < i; s2++)
          a3[s2] = this.revBin(s2, h4, i);
        return a3;
      }, N3.prototype.revBin = function(i, a3, h4) {
        if (i === 0 || i === h4 - 1)
          return i;
        for (var s2 = 0, u3 = 0;u3 < a3; u3++)
          s2 |= (i & 1) << a3 - u3 - 1, i >>= 1;
        return s2;
      }, N3.prototype.permute = function(i, a3, h4, s2, u3, c3) {
        for (var b3 = 0;b3 < c3; b3++)
          s2[b3] = a3[i[b3]], u3[b3] = h4[i[b3]];
      }, N3.prototype.transform = function(i, a3, h4, s2, u3, c3) {
        this.permute(c3, i, a3, h4, s2, u3);
        for (var b3 = 1;b3 < u3; b3 <<= 1)
          for (var l2 = b3 << 1, n = Math.cos(2 * Math.PI / l2), d4 = Math.sin(2 * Math.PI / l2), w = 0;w < u3; w += l2)
            for (var g3 = n, _3 = d4, A2 = 0;A2 < b3; A2++) {
              var R2 = h4[w + A2], I3 = s2[w + A2], Me = h4[w + A2 + b3], k3 = s2[w + A2 + b3], D2 = g3 * Me - _3 * k3;
              k3 = g3 * k3 + _3 * Me, Me = D2, h4[w + A2] = R2 + Me, s2[w + A2] = I3 + k3, h4[w + A2 + b3] = R2 - Me, s2[w + A2 + b3] = I3 - k3, A2 !== l2 && (D2 = n * g3 - d4 * _3, _3 = n * _3 + d4 * g3, g3 = D2);
            }
      }, N3.prototype.guessLen13b = function(i, a3) {
        var h4 = Math.max(a3, i) | 1, s2 = h4 & 1, u3 = 0;
        for (h4 = h4 / 2 | 0;h4; h4 = h4 >>> 1)
          u3++;
        return 1 << u3 + 1 + s2;
      }, N3.prototype.conjugate = function(i, a3, h4) {
        if (!(h4 <= 1))
          for (var s2 = 0;s2 < h4 / 2; s2++) {
            var u3 = i[s2];
            i[s2] = i[h4 - s2 - 1], i[h4 - s2 - 1] = u3, u3 = a3[s2], a3[s2] = -a3[h4 - s2 - 1], a3[h4 - s2 - 1] = -u3;
          }
      }, N3.prototype.normalize13b = function(i, a3) {
        for (var h4 = 0, s2 = 0;s2 < a3 / 2; s2++) {
          var u3 = Math.round(i[2 * s2 + 1] / a3) * 8192 + Math.round(i[2 * s2] / a3) + h4;
          i[s2] = u3 & 67108863, u3 < 67108864 ? h4 = 0 : h4 = u3 / 67108864 | 0;
        }
        return i;
      }, N3.prototype.convert13b = function(i, a3, h4, s2) {
        for (var u3 = 0, c3 = 0;c3 < a3; c3++)
          u3 = u3 + (i[c3] | 0), h4[2 * c3] = u3 & 8191, u3 = u3 >>> 13, h4[2 * c3 + 1] = u3 & 8191, u3 = u3 >>> 13;
        for (c3 = 2 * a3;c3 < s2; ++c3)
          h4[c3] = 0;
        r(u3 === 0), r((u3 & -8192) === 0);
      }, N3.prototype.stub = function(i) {
        for (var a3 = new Array(i), h4 = 0;h4 < i; h4++)
          a3[h4] = 0;
        return a3;
      }, N3.prototype.mulp = function(i, a3, h4) {
        var s2 = 2 * this.guessLen13b(i.length, a3.length), u3 = this.makeRBT(s2), c3 = this.stub(s2), b3 = new Array(s2), l2 = new Array(s2), n = new Array(s2), d4 = new Array(s2), w = new Array(s2), g3 = new Array(s2), _3 = h4.words;
        _3.length = s2, this.convert13b(i.words, i.length, b3, s2), this.convert13b(a3.words, a3.length, d4, s2), this.transform(b3, c3, l2, n, s2, u3), this.transform(d4, c3, w, g3, s2, u3);
        for (var A2 = 0;A2 < s2; A2++) {
          var R2 = l2[A2] * w[A2] - n[A2] * g3[A2];
          n[A2] = l2[A2] * g3[A2] + n[A2] * w[A2], l2[A2] = R2;
        }
        return this.conjugate(l2, n, s2), this.transform(l2, n, _3, c3, s2, u3), this.conjugate(_3, c3, s2), this.normalize13b(_3, s2), h4.negative = i.negative ^ a3.negative, h4.length = i.length + a3.length, h4.strip();
      }, f3.prototype.mul = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), this.mulTo(i, a3);
      }, f3.prototype.mulf = function(i) {
        var a3 = new f3(null);
        return a3.words = new Array(this.length + i.length), _e(this, i, a3);
      }, f3.prototype.imul = function(i) {
        return this.clone().mulTo(i, this);
      }, f3.prototype.imuln = function(i) {
        r(typeof i == "number"), r(i < 67108864);
        for (var a3 = 0, h4 = 0;h4 < this.length; h4++) {
          var s2 = (this.words[h4] | 0) * i, u3 = (s2 & 67108863) + (a3 & 67108863);
          a3 >>= 26, a3 += s2 / 67108864 | 0, a3 += u3 >>> 26, this.words[h4] = u3 & 67108863;
        }
        return a3 !== 0 && (this.words[h4] = a3, this.length++), this;
      }, f3.prototype.muln = function(i) {
        return this.clone().imuln(i);
      }, f3.prototype.sqr = function() {
        return this.mul(this);
      }, f3.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f3.prototype.pow = function(i) {
        var a3 = B3(i);
        if (a3.length === 0)
          return new f3(1);
        for (var h4 = this, s2 = 0;s2 < a3.length && a3[s2] === 0; s2++, h4 = h4.sqr())
          ;
        if (++s2 < a3.length)
          for (var u3 = h4.sqr();s2 < a3.length; s2++, u3 = u3.sqr())
            a3[s2] !== 0 && (h4 = h4.mul(u3));
        return h4;
      }, f3.prototype.iushln = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h4 = (i - a3) / 26, s2 = 67108863 >>> 26 - a3 << 26 - a3, u3;
        if (a3 !== 0) {
          var c3 = 0;
          for (u3 = 0;u3 < this.length; u3++) {
            var b3 = this.words[u3] & s2, l2 = (this.words[u3] | 0) - b3 << a3;
            this.words[u3] = l2 | c3, c3 = b3 >>> 26 - a3;
          }
          c3 && (this.words[u3] = c3, this.length++);
        }
        if (h4 !== 0) {
          for (u3 = this.length - 1;u3 >= 0; u3--)
            this.words[u3 + h4] = this.words[u3];
          for (u3 = 0;u3 < h4; u3++)
            this.words[u3] = 0;
          this.length += h4;
        }
        return this.strip();
      }, f3.prototype.ishln = function(i) {
        return r(this.negative === 0), this.iushln(i);
      }, f3.prototype.iushrn = function(i, a3, h4) {
        r(typeof i == "number" && i >= 0);
        var s2;
        a3 ? s2 = (a3 - a3 % 26) / 26 : s2 = 0;
        var u3 = i % 26, c3 = Math.min((i - u3) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u3 << u3, l2 = h4;
        if (s2 -= c3, s2 = Math.max(0, s2), l2) {
          for (var n = 0;n < c3; n++)
            l2.words[n] = this.words[n];
          l2.length = c3;
        }
        if (c3 !== 0)
          if (this.length > c3)
            for (this.length -= c3, n = 0;n < this.length; n++)
              this.words[n] = this.words[n + c3];
          else
            this.words[0] = 0, this.length = 1;
        var d4 = 0;
        for (n = this.length - 1;n >= 0 && (d4 !== 0 || n >= s2); n--) {
          var w = this.words[n] | 0;
          this.words[n] = d4 << 26 - u3 | w >>> u3, d4 = w & b3;
        }
        return l2 && d4 !== 0 && (l2.words[l2.length++] = d4), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f3.prototype.ishrn = function(i, a3, h4) {
        return r(this.negative === 0), this.iushrn(i, a3, h4);
      }, f3.prototype.shln = function(i) {
        return this.clone().ishln(i);
      }, f3.prototype.ushln = function(i) {
        return this.clone().iushln(i);
      }, f3.prototype.shrn = function(i) {
        return this.clone().ishrn(i);
      }, f3.prototype.ushrn = function(i) {
        return this.clone().iushrn(i);
      }, f3.prototype.testn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h4 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h4)
          return false;
        var u3 = this.words[h4];
        return !!(u3 & s2);
      }, f3.prototype.imaskn = function(i) {
        r(typeof i == "number" && i >= 0);
        var a3 = i % 26, h4 = (i - a3) / 26;
        if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h4)
          return this;
        if (a3 !== 0 && h4++, this.length = Math.min(h4, this.length), a3 !== 0) {
          var s2 = 67108863 ^ 67108863 >>> a3 << a3;
          this.words[this.length - 1] &= s2;
        }
        return this.strip();
      }, f3.prototype.maskn = function(i) {
        return this.clone().imaskn(i);
      }, f3.prototype.iaddn = function(i) {
        return r(typeof i == "number"), r(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
      }, f3.prototype._iaddn = function(i) {
        this.words[0] += i;
        for (var a3 = 0;a3 < this.length && this.words[a3] >= 67108864; a3++)
          this.words[a3] -= 67108864, a3 === this.length - 1 ? this.words[a3 + 1] = 1 : this.words[a3 + 1]++;
        return this.length = Math.max(this.length, a3 + 1), this;
      }, f3.prototype.isubn = function(i) {
        if (r(typeof i == "number"), r(i < 67108864), i < 0)
          return this.iaddn(-i);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i), this.negative = 1, this;
        if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a3 = 0;a3 < this.length && this.words[a3] < 0; a3++)
            this.words[a3] += 67108864, this.words[a3 + 1] -= 1;
        return this.strip();
      }, f3.prototype.addn = function(i) {
        return this.clone().iaddn(i);
      }, f3.prototype.subn = function(i) {
        return this.clone().isubn(i);
      }, f3.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f3.prototype.abs = function() {
        return this.clone().iabs();
      }, f3.prototype._ishlnsubmul = function(i, a3, h4) {
        var s2 = i.length + h4, u3;
        this._expand(s2);
        var c3, b3 = 0;
        for (u3 = 0;u3 < i.length; u3++) {
          c3 = (this.words[u3 + h4] | 0) + b3;
          var l2 = (i.words[u3] | 0) * a3;
          c3 -= l2 & 67108863, b3 = (c3 >> 26) - (l2 / 67108864 | 0), this.words[u3 + h4] = c3 & 67108863;
        }
        for (;u3 < this.length - h4; u3++)
          c3 = (this.words[u3 + h4] | 0) + b3, b3 = c3 >> 26, this.words[u3 + h4] = c3 & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r(b3 === -1), b3 = 0, u3 = 0;u3 < this.length; u3++)
          c3 = -(this.words[u3] | 0) + b3, b3 = c3 >> 26, this.words[u3] = c3 & 67108863;
        return this.negative = 1, this.strip();
      }, f3.prototype._wordDiv = function(i, a3) {
        var h4 = this.length - i.length, s2 = this.clone(), u3 = i, c3 = u3.words[u3.length - 1] | 0, b3 = this._countBits(c3);
        h4 = 26 - b3, h4 !== 0 && (u3 = u3.ushln(h4), s2.iushln(h4), c3 = u3.words[u3.length - 1] | 0);
        var l2 = s2.length - u3.length, n;
        if (a3 !== "mod") {
          n = new f3(null), n.length = l2 + 1, n.words = new Array(n.length);
          for (var d4 = 0;d4 < n.length; d4++)
            n.words[d4] = 0;
        }
        var w = s2.clone()._ishlnsubmul(u3, 1, l2);
        w.negative === 0 && (s2 = w, n && (n.words[l2] = 1));
        for (var g3 = l2 - 1;g3 >= 0; g3--) {
          var _3 = (s2.words[u3.length + g3] | 0) * 67108864 + (s2.words[u3.length + g3 - 1] | 0);
          for (_3 = Math.min(_3 / c3 | 0, 67108863), s2._ishlnsubmul(u3, _3, g3);s2.negative !== 0; )
            _3--, s2.negative = 0, s2._ishlnsubmul(u3, 1, g3), s2.isZero() || (s2.negative ^= 1);
          n && (n.words[g3] = _3);
        }
        return n && n.strip(), s2.strip(), a3 !== "div" && h4 !== 0 && s2.iushrn(h4), { div: n || null, mod: s2 };
      }, f3.prototype.divmod = function(i, a3, h4) {
        if (r(!i.isZero()), this.isZero())
          return { div: new f3(0), mod: new f3(0) };
        var s2, u3, c3;
        return this.negative !== 0 && i.negative === 0 ? (c3 = this.neg().divmod(i, a3), a3 !== "mod" && (s2 = c3.div.neg()), a3 !== "div" && (u3 = c3.mod.neg(), h4 && u3.negative !== 0 && u3.iadd(i)), { div: s2, mod: u3 }) : this.negative === 0 && i.negative !== 0 ? (c3 = this.divmod(i.neg(), a3), a3 !== "mod" && (s2 = c3.div.neg()), { div: s2, mod: c3.mod }) : (this.negative & i.negative) !== 0 ? (c3 = this.neg().divmod(i.neg(), a3), a3 !== "div" && (u3 = c3.mod.neg(), h4 && u3.negative !== 0 && u3.isub(i)), { div: c3.div, mod: u3 }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f3(0), mod: this } : i.length === 1 ? a3 === "div" ? { div: this.divn(i.words[0]), mod: null } : a3 === "mod" ? { div: null, mod: new f3(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f3(this.modn(i.words[0])) } : this._wordDiv(i, a3);
      }, f3.prototype.div = function(i) {
        return this.divmod(i, "div", false).div;
      }, f3.prototype.mod = function(i) {
        return this.divmod(i, "mod", false).mod;
      }, f3.prototype.umod = function(i) {
        return this.divmod(i, "mod", true).mod;
      }, f3.prototype.divRound = function(i) {
        var a3 = this.divmod(i);
        if (a3.mod.isZero())
          return a3.div;
        var h4 = a3.div.negative !== 0 ? a3.mod.isub(i) : a3.mod, s2 = i.ushrn(1), u3 = i.andln(1), c3 = h4.cmp(s2);
        return c3 < 0 || u3 === 1 && c3 === 0 ? a3.div : a3.div.negative !== 0 ? a3.div.isubn(1) : a3.div.iaddn(1);
      }, f3.prototype.modn = function(i) {
        r(i <= 67108863);
        for (var a3 = (1 << 26) % i, h4 = 0, s2 = this.length - 1;s2 >= 0; s2--)
          h4 = (a3 * h4 + (this.words[s2] | 0)) % i;
        return h4;
      }, f3.prototype.idivn = function(i) {
        r(i <= 67108863);
        for (var a3 = 0, h4 = this.length - 1;h4 >= 0; h4--) {
          var s2 = (this.words[h4] | 0) + a3 * 67108864;
          this.words[h4] = s2 / i | 0, a3 = s2 % i;
        }
        return this.strip();
      }, f3.prototype.divn = function(i) {
        return this.clone().idivn(i);
      }, f3.prototype.egcd = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h4 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c3 = new f3(0), b3 = new f3(1), l2 = 0;a3.isEven() && h4.isEven(); )
          a3.iushrn(1), h4.iushrn(1), ++l2;
        for (var n = h4.clone(), d4 = a3.clone();!a3.isZero(); ) {
          for (var w = 0, g3 = 1;(a3.words[0] & g3) === 0 && w < 26; ++w, g3 <<= 1)
            ;
          if (w > 0)
            for (a3.iushrn(w);w-- > 0; )
              (s2.isOdd() || u3.isOdd()) && (s2.iadd(n), u3.isub(d4)), s2.iushrn(1), u3.iushrn(1);
          for (var _3 = 0, A2 = 1;(h4.words[0] & A2) === 0 && _3 < 26; ++_3, A2 <<= 1)
            ;
          if (_3 > 0)
            for (h4.iushrn(_3);_3-- > 0; )
              (c3.isOdd() || b3.isOdd()) && (c3.iadd(n), b3.isub(d4)), c3.iushrn(1), b3.iushrn(1);
          a3.cmp(h4) >= 0 ? (a3.isub(h4), s2.isub(c3), u3.isub(b3)) : (h4.isub(a3), c3.isub(s2), b3.isub(u3));
        }
        return { a: c3, b: b3, gcd: h4.iushln(l2) };
      }, f3.prototype._invmp = function(i) {
        r(i.negative === 0), r(!i.isZero());
        var a3 = this, h4 = i.clone();
        a3.negative !== 0 ? a3 = a3.umod(i) : a3 = a3.clone();
        for (var s2 = new f3(1), u3 = new f3(0), c3 = h4.clone();a3.cmpn(1) > 0 && h4.cmpn(1) > 0; ) {
          for (var b3 = 0, l2 = 1;(a3.words[0] & l2) === 0 && b3 < 26; ++b3, l2 <<= 1)
            ;
          if (b3 > 0)
            for (a3.iushrn(b3);b3-- > 0; )
              s2.isOdd() && s2.iadd(c3), s2.iushrn(1);
          for (var n = 0, d4 = 1;(h4.words[0] & d4) === 0 && n < 26; ++n, d4 <<= 1)
            ;
          if (n > 0)
            for (h4.iushrn(n);n-- > 0; )
              u3.isOdd() && u3.iadd(c3), u3.iushrn(1);
          a3.cmp(h4) >= 0 ? (a3.isub(h4), s2.isub(u3)) : (h4.isub(a3), u3.isub(s2));
        }
        var w;
        return a3.cmpn(1) === 0 ? w = s2 : w = u3, w.cmpn(0) < 0 && w.iadd(i), w;
      }, f3.prototype.gcd = function(i) {
        if (this.isZero())
          return i.abs();
        if (i.isZero())
          return this.abs();
        var a3 = this.clone(), h4 = i.clone();
        a3.negative = 0, h4.negative = 0;
        for (var s2 = 0;a3.isEven() && h4.isEven(); s2++)
          a3.iushrn(1), h4.iushrn(1);
        do {
          for (;a3.isEven(); )
            a3.iushrn(1);
          for (;h4.isEven(); )
            h4.iushrn(1);
          var u3 = a3.cmp(h4);
          if (u3 < 0) {
            var c3 = a3;
            a3 = h4, h4 = c3;
          } else if (u3 === 0 || h4.cmpn(1) === 0)
            break;
          a3.isub(h4);
        } while (true);
        return h4.iushln(s2);
      }, f3.prototype.invm = function(i) {
        return this.egcd(i).a.umod(i);
      }, f3.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f3.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f3.prototype.andln = function(i) {
        return this.words[0] & i;
      }, f3.prototype.bincn = function(i) {
        r(typeof i == "number");
        var a3 = i % 26, h4 = (i - a3) / 26, s2 = 1 << a3;
        if (this.length <= h4)
          return this._expand(h4 + 1), this.words[h4] |= s2, this;
        for (var u3 = s2, c3 = h4;u3 !== 0 && c3 < this.length; c3++) {
          var b3 = this.words[c3] | 0;
          b3 += u3, u3 = b3 >>> 26, b3 &= 67108863, this.words[c3] = b3;
        }
        return u3 !== 0 && (this.words[c3] = u3, this.length++), this;
      }, f3.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f3.prototype.cmpn = function(i) {
        var a3 = i < 0;
        if (this.negative !== 0 && !a3)
          return -1;
        if (this.negative === 0 && a3)
          return 1;
        this.strip();
        var h4;
        if (this.length > 1)
          h4 = 1;
        else {
          a3 && (i = -i), r(i <= 67108863, "Number is too big");
          var s2 = this.words[0] | 0;
          h4 = s2 === i ? 0 : s2 < i ? -1 : 1;
        }
        return this.negative !== 0 ? -h4 | 0 : h4;
      }, f3.prototype.cmp = function(i) {
        if (this.negative !== 0 && i.negative === 0)
          return -1;
        if (this.negative === 0 && i.negative !== 0)
          return 1;
        var a3 = this.ucmp(i);
        return this.negative !== 0 ? -a3 | 0 : a3;
      }, f3.prototype.ucmp = function(i) {
        if (this.length > i.length)
          return 1;
        if (this.length < i.length)
          return -1;
        for (var a3 = 0, h4 = this.length - 1;h4 >= 0; h4--) {
          var s2 = this.words[h4] | 0, u3 = i.words[h4] | 0;
          if (s2 !== u3) {
            s2 < u3 ? a3 = -1 : s2 > u3 && (a3 = 1);
            break;
          }
        }
        return a3;
      }, f3.prototype.gtn = function(i) {
        return this.cmpn(i) === 1;
      }, f3.prototype.gt = function(i) {
        return this.cmp(i) === 1;
      }, f3.prototype.gten = function(i) {
        return this.cmpn(i) >= 0;
      }, f3.prototype.gte = function(i) {
        return this.cmp(i) >= 0;
      }, f3.prototype.ltn = function(i) {
        return this.cmpn(i) === -1;
      }, f3.prototype.lt = function(i) {
        return this.cmp(i) === -1;
      }, f3.prototype.lten = function(i) {
        return this.cmpn(i) <= 0;
      }, f3.prototype.lte = function(i) {
        return this.cmp(i) <= 0;
      }, f3.prototype.eqn = function(i) {
        return this.cmpn(i) === 0;
      }, f3.prototype.eq = function(i) {
        return this.cmp(i) === 0;
      }, f3.red = function(i) {
        return new P4(i);
      }, f3.prototype.toRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
      }, f3.prototype.fromRed = function() {
        return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f3.prototype._forceRed = function(i) {
        return this.red = i, this;
      }, f3.prototype.forceRed = function(i) {
        return r(!this.red, "Already a number in reduction context"), this._forceRed(i);
      }, f3.prototype.redAdd = function(i) {
        return r(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
      }, f3.prototype.redIAdd = function(i) {
        return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
      }, f3.prototype.redSub = function(i) {
        return r(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
      }, f3.prototype.redISub = function(i) {
        return r(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
      }, f3.prototype.redShl = function(i) {
        return r(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
      }, f3.prototype.redMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
      }, f3.prototype.redIMul = function(i) {
        return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
      }, f3.prototype.redSqr = function() {
        return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f3.prototype.redISqr = function() {
        return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f3.prototype.redSqrt = function() {
        return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f3.prototype.redInvm = function() {
        return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f3.prototype.redNeg = function() {
        return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f3.prototype.redPow = function(i) {
        return r(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v2, i) {
        this.name = v2, this.p = new f3(i, 16), this.n = this.p.bitLength(), this.k = new f3(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i = new f3(null);
        return i.words = new Array(Math.ceil(this.n / 13)), i;
      }, ye.prototype.ireduce = function(i) {
        var a3 = i, h4;
        do
          this.split(a3, this.tmp), a3 = this.imulK(a3), a3 = a3.iadd(this.tmp), h4 = a3.bitLength();
        while (h4 > this.n);
        var s2 = h4 < this.n ? -1 : a3.ucmp(this.p);
        return s2 === 0 ? (a3.words[0] = 0, a3.length = 1) : s2 > 0 ? a3.isub(this.p) : a3.strip !== undefined ? a3.strip() : a3._strip(), a3;
      }, ye.prototype.split = function(i, a3) {
        i.iushrn(this.n, 0, a3);
      }, ye.prototype.imulK = function(i) {
        return i.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o(xe, ye), xe.prototype.split = function(i, a3) {
        for (var h4 = 4194303, s2 = Math.min(i.length, 9), u3 = 0;u3 < s2; u3++)
          a3.words[u3] = i.words[u3];
        if (a3.length = s2, i.length <= 9) {
          i.words[0] = 0, i.length = 1;
          return;
        }
        var c3 = i.words[9];
        for (a3.words[a3.length++] = c3 & h4, u3 = 10;u3 < i.length; u3++) {
          var b3 = i.words[u3] | 0;
          i.words[u3 - 10] = (b3 & h4) << 4 | c3 >>> 22, c3 = b3;
        }
        c3 >>>= 22, i.words[u3 - 10] = c3, c3 === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
      }, xe.prototype.imulK = function(i) {
        i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
        for (var a3 = 0, h4 = 0;h4 < i.length; h4++) {
          var s2 = i.words[h4] | 0;
          a3 += s2 * 977, i.words[h4] = a3 & 67108863, a3 = s2 * 64 + (a3 / 67108864 | 0);
        }
        return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o(Ae, ye), Ae.prototype.imulK = function(i) {
        for (var a3 = 0, h4 = 0;h4 < i.length; h4++) {
          var s2 = (i.words[h4] | 0) * 19 + a3, u3 = s2 & 67108863;
          s2 >>>= 26, i.words[h4] = u3, a3 = s2;
        }
        return a3 !== 0 && (i.words[i.length++] = a3), i;
      }, f3._prime = function(i) {
        if (we[i])
          return we[i];
        var a3;
        if (i === "k256")
          a3 = new xe;
        else if (i === "p224")
          a3 = new Re;
        else if (i === "p192")
          a3 = new Ee;
        else if (i === "p25519")
          a3 = new Ae;
        else
          throw new Error("Unknown prime " + i);
        return we[i] = a3, a3;
      };
      function P4(v2) {
        if (typeof v2 == "string") {
          var i = f3._prime(v2);
          this.m = i.p, this.prime = i;
        } else
          r(v2.gtn(1), "modulus must be greater than 1"), this.m = v2, this.prime = null;
      }
      P4.prototype._verify1 = function(i) {
        r(i.negative === 0, "red works only with positives"), r(i.red, "red works only with red numbers");
      }, P4.prototype._verify2 = function(i, a3) {
        r((i.negative | a3.negative) === 0, "red works only with positives"), r(i.red && i.red === a3.red, "red works only with red numbers");
      }, P4.prototype.imod = function(i) {
        return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
      }, P4.prototype.neg = function(i) {
        return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
      }, P4.prototype.add = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.add(a3);
        return h4.cmp(this.m) >= 0 && h4.isub(this.m), h4._forceRed(this);
      }, P4.prototype.iadd = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.iadd(a3);
        return h4.cmp(this.m) >= 0 && h4.isub(this.m), h4;
      }, P4.prototype.sub = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.sub(a3);
        return h4.cmpn(0) < 0 && h4.iadd(this.m), h4._forceRed(this);
      }, P4.prototype.isub = function(i, a3) {
        this._verify2(i, a3);
        var h4 = i.isub(a3);
        return h4.cmpn(0) < 0 && h4.iadd(this.m), h4;
      }, P4.prototype.shl = function(i, a3) {
        return this._verify1(i), this.imod(i.ushln(a3));
      }, P4.prototype.imul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.imul(a3));
      }, P4.prototype.mul = function(i, a3) {
        return this._verify2(i, a3), this.imod(i.mul(a3));
      }, P4.prototype.isqr = function(i) {
        return this.imul(i, i.clone());
      }, P4.prototype.sqr = function(i) {
        return this.mul(i, i);
      }, P4.prototype.sqrt = function(i) {
        if (i.isZero())
          return i.clone();
        var a3 = this.m.andln(3);
        if (r(a3 % 2 === 1), a3 === 3) {
          var h4 = this.m.add(new f3(1)).iushrn(2);
          return this.pow(i, h4);
        }
        for (var s2 = this.m.subn(1), u3 = 0;!s2.isZero() && s2.andln(1) === 0; )
          u3++, s2.iushrn(1);
        r(!s2.isZero());
        var c3 = new f3(1).toRed(this), b3 = c3.redNeg(), l2 = this.m.subn(1).iushrn(1), n = this.m.bitLength();
        for (n = new f3(2 * n * n).toRed(this);this.pow(n, l2).cmp(b3) !== 0; )
          n.redIAdd(b3);
        for (var d4 = this.pow(n, s2), w = this.pow(i, s2.addn(1).iushrn(1)), g3 = this.pow(i, s2), _3 = u3;g3.cmp(c3) !== 0; ) {
          for (var A2 = g3, R2 = 0;A2.cmp(c3) !== 0; R2++)
            A2 = A2.redSqr();
          r(R2 < _3);
          var I3 = this.pow(d4, new f3(1).iushln(_3 - R2 - 1));
          w = w.redMul(I3), d4 = I3.redSqr(), g3 = g3.redMul(d4), _3 = R2;
        }
        return w;
      }, P4.prototype.invm = function(i) {
        var a3 = i._invmp(this.m);
        return a3.negative !== 0 ? (a3.negative = 0, this.imod(a3).redNeg()) : this.imod(a3);
      }, P4.prototype.pow = function(i, a3) {
        if (a3.isZero())
          return new f3(1).toRed(this);
        if (a3.cmpn(1) === 0)
          return i.clone();
        var h4 = 4, s2 = new Array(1 << h4);
        s2[0] = new f3(1).toRed(this), s2[1] = i;
        for (var u3 = 2;u3 < s2.length; u3++)
          s2[u3] = this.mul(s2[u3 - 1], i);
        var c3 = s2[0], b3 = 0, l2 = 0, n = a3.bitLength() % 26;
        for (n === 0 && (n = 26), u3 = a3.length - 1;u3 >= 0; u3--) {
          for (var d4 = a3.words[u3], w = n - 1;w >= 0; w--) {
            var g3 = d4 >> w & 1;
            if (c3 !== s2[0] && (c3 = this.sqr(c3)), g3 === 0 && b3 === 0) {
              l2 = 0;
              continue;
            }
            b3 <<= 1, b3 |= g3, l2++, !(l2 !== h4 && (u3 !== 0 || w !== 0)) && (c3 = this.mul(c3, s2[b3]), l2 = 0, b3 = 0);
          }
          n = 26;
        }
        return c3;
      }, P4.prototype.convertTo = function(i) {
        var a3 = i.umod(this.m);
        return a3 === i ? a3.clone() : a3;
      }, P4.prototype.convertFrom = function(i) {
        var a3 = i.clone();
        return a3.red = null, a3;
      }, f3.mont = function(i) {
        return new Se2(i);
      };
      function Se2(v2) {
        P4.call(this, v2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f3(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o(Se2, P4), Se2.prototype.convertTo = function(i) {
        return this.imod(i.ushln(this.shift));
      }, Se2.prototype.convertFrom = function(i) {
        var a3 = this.imod(i.mul(this.rinv));
        return a3.red = null, a3;
      }, Se2.prototype.imul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return i.words[0] = 0, i.length = 1, i;
        var h4 = i.imul(a3), s2 = h4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h4.isub(s2).iushrn(this.shift), c3 = u3;
        return u3.cmp(this.m) >= 0 ? c3 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c3 = u3.iadd(this.m)), c3._forceRed(this);
      }, Se2.prototype.mul = function(i, a3) {
        if (i.isZero() || a3.isZero())
          return new f3(0)._forceRed(this);
        var h4 = i.mul(a3), s2 = h4.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u3 = h4.isub(s2).iushrn(this.shift), c3 = u3;
        return u3.cmp(this.m) >= 0 ? c3 = u3.isub(this.m) : u3.cmpn(0) < 0 && (c3 = u3.iadd(this.m)), c3._forceRed(this);
      }, Se2.prototype.invm = function(i) {
        var a3 = this.imod(i._invmp(this.m).mul(this.r2));
        return a3._forceRed(this);
      };
    })(typeof xd > "u" || xd, P3);
  });
  Sd = T3((ML, O32) => {
    var C3 = y0(), mq = Te().Buffer;
    function gq(t, e) {
      return mq.from(t.toRed(C3.mont(e.modulus)).redPow(new C3(e.publicExponent)).fromRed().toArray());
    }
    O32.exports = gq;
  });
  H3 = T3((_L, z3) => {
    var yq = Ha(), Ed = on(), wq = bf(), F3 = Md(), U32 = _d(), Ad = y0(), Mq = Sd(), _q = Ws2(), Kr = Te().Buffer;
    z3.exports = function(e, r, o) {
      var f3;
      e.padding ? f3 = e.padding : o ? f3 = 1 : f3 = 4;
      var p4 = yq(e), m3;
      if (f3 === 4)
        m3 = xq(p4, r);
      else if (f3 === 1)
        m3 = Sq(p4, r, o);
      else if (f3 === 3) {
        if (m3 = new Ad(r), m3.cmp(p4.modulus) >= 0)
          throw new Error("data too long for modulus");
      } else
        throw new Error("unknown padding");
      return o ? _q(m3, p4) : Mq(m3, p4);
    };
    function xq(t, e) {
      var r = t.modulus.byteLength(), o = e.length, f3 = wq("sha1").update(Kr.alloc(0)).digest(), p4 = f3.length, m3 = 2 * p4;
      if (o > r - m3 - 2)
        throw new Error("message too long");
      var y4 = Kr.alloc(r - o - m3 - 2), M2 = r - p4 - 1, x4 = Ed(p4), S3 = U32(Kr.concat([f3, y4, Kr.alloc(1, 1), e], M2), F3(x4, M2)), E4 = U32(x4, F3(S3, p4));
      return new Ad(Kr.concat([Kr.alloc(1), E4, S3], r));
    }
    function Sq(t, e, r) {
      var o = e.length, f3 = t.modulus.byteLength();
      if (o > f3 - 11)
        throw new Error("message too long");
      var p4;
      return r ? p4 = Kr.alloc(f3 - o - 3, 255) : p4 = Eq(f3 - o - 3), new Ad(Kr.concat([Kr.from([0, r ? 1 : 2]), p4, Kr.alloc(1), e], f3));
    }
    function Eq(t) {
      for (var e = Kr.allocUnsafe(t), r = 0, o = Ed(t * 2), f3 = 0, p4;r < t; )
        f3 === o.length && (o = Ed(t * 2), f3 = 0), p4 = o[f3++], p4 && (e[r++] = p4);
      return e;
    }
  });
  V3 = T3((xL, Z3) => {
    var Aq = Ha(), W3 = Md(), K3 = _d(), j3 = y0(), Rq = Ws2(), Bq = bf(), qq = Sd(), Za = Te().Buffer;
    Z3.exports = function(e, r, o) {
      var f3;
      e.padding ? f3 = e.padding : o ? f3 = 1 : f3 = 4;
      var p4 = Aq(e), m3 = p4.modulus.byteLength();
      if (r.length > m3 || new j3(r).cmp(p4.modulus) >= 0)
        throw new Error("decryption error");
      var y4;
      o ? y4 = qq(new j3(r), p4) : y4 = Rq(r, p4);
      var M2 = Za.alloc(m3 - y4.length);
      if (y4 = Za.concat([M2, y4], m3), f3 === 4)
        return Iq(p4, y4);
      if (f3 === 1)
        return Tq(p4, y4, o);
      if (f3 === 3)
        return y4;
      throw new Error("unknown padding");
    };
    function Iq(t, e) {
      var r = t.modulus.byteLength(), o = Bq("sha1").update(Za.alloc(0)).digest(), f3 = o.length;
      if (e[0] !== 0)
        throw new Error("decryption error");
      var p4 = e.slice(1, f3 + 1), m3 = e.slice(f3 + 1), y4 = K3(p4, W3(m3, f3)), M2 = K3(m3, W3(y4, r - f3 - 1));
      if (kq(o, M2.slice(0, f3)))
        throw new Error("decryption error");
      for (var x4 = f3;M2[x4] === 0; )
        x4++;
      if (M2[x4++] !== 1)
        throw new Error("decryption error");
      return M2.slice(x4);
    }
    function Tq(t, e, r) {
      for (var o = e.slice(0, 2), f3 = 2, p4 = 0;e[f3++] !== 0; )
        if (f3 >= e.length) {
          p4++;
          break;
        }
      var m3 = e.slice(2, f3 - 1);
      if ((o.toString("hex") !== "0002" && !r || o.toString("hex") !== "0001" && r) && p4++, m3.length < 8 && p4++, p4)
        throw new Error("decryption error");
      return e.slice(f3);
    }
    function kq(t, e) {
      t = Za.from(t), e = Za.from(e);
      var r = 0, o = t.length;
      t.length !== e.length && (r++, o = Math.min(t.length, e.length));
      for (var f3 = -1;++f3 < o; )
        r += t[f3] ^ e[f3];
      return r;
    }
  });
  $3 = T3((Vn) => {
    Vn.publicEncrypt = H3();
    Vn.privateDecrypt = V3();
    Vn.privateEncrypt = function(e, r) {
      return Vn.publicEncrypt(e, r, true);
    };
    Vn.publicDecrypt = function(e, r) {
      return Vn.privateDecrypt(e, r, true);
    };
  });
  nw = T3((Va) => {
    function G3() {
      throw new Error(`secure random number generation not supported by this browser
use chrome, FireFox or Internet Explorer 11`);
    }
    var X3 = Te(), Y3 = on(), J3 = X3.Buffer, Q3 = X3.kMaxLength, Rd = global.crypto || global.msCrypto, ew = Math.pow(2, 32) - 1;
    function tw(t, e) {
      if (typeof t != "number" || t !== t)
        throw new TypeError("offset must be a number");
      if (t > ew || t < 0)
        throw new TypeError("offset must be a uint32");
      if (t > Q3 || t > e)
        throw new RangeError("offset out of range");
    }
    function rw(t, e, r) {
      if (typeof t != "number" || t !== t)
        throw new TypeError("size must be a number");
      if (t > ew || t < 0)
        throw new TypeError("size must be a uint32");
      if (t + e > r || t > Q3)
        throw new RangeError("buffer too small");
    }
    Rd && Rd.getRandomValues ? (Va.randomFill = Lq, Va.randomFillSync = Nq) : (Va.randomFill = G3, Va.randomFillSync = G3);
    function Lq(t, e, r, o) {
      if (!J3.isBuffer(t) && !(t instanceof global.Uint8Array))
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      if (typeof e == "function")
        o = e, e = 0, r = t.length;
      else if (typeof r == "function")
        o = r, r = t.length - e;
      else if (typeof o != "function")
        throw new TypeError('"cb" argument must be a function');
      return tw(e, t.length), rw(r, e, t.length), iw(t, e, r, o);
    }
    function iw(t, e, r, o) {
      if (true) {
        var f3 = t.buffer, p4 = new Uint8Array(f3, e, r);
        if (Rd.getRandomValues(p4), o) {
          process.nextTick(function() {
            o(null, t);
          });
          return;
        }
        return t;
      }
      if (o) {
        Y3(r, function(y4, M2) {
          if (y4)
            return o(y4);
          M2.copy(t, e), o(null, t);
        });
        return;
      }
      var m3 = Y3(r);
      return m3.copy(t, e), t;
    }
    function Nq(t, e, r) {
      if (typeof e > "u" && (e = 0), !J3.isBuffer(t) && !(t instanceof global.Uint8Array))
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      return tw(e, t.length), r === undefined && (r = t.length - e), rw(r, e, t.length), iw(t, e, r);
    }
  });
  Bd = T3((ke) => {
    ke.randomBytes = ke.rng = ke.pseudoRandomBytes = ke.prng = on();
    ke.createHash = ke.Hash = bf();
    ke.createHmac = ke.Hmac = yu();
    var Dq = _b(), Pq = Object.keys(Dq), Cq = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(Pq);
    ke.getHashes = function() {
      return Cq;
    };
    var fw = qu();
    ke.pbkdf2 = fw.pbkdf2;
    ke.pbkdf2Sync = fw.pbkdf2Sync;
    var ui = Km();
    ke.Cipher = ui.Cipher;
    ke.createCipher = ui.createCipher;
    ke.Cipheriv = ui.Cipheriv;
    ke.createCipheriv = ui.createCipheriv;
    ke.Decipher = ui.Decipher;
    ke.createDecipher = ui.createDecipher;
    ke.Decipheriv = ui.Decipheriv;
    ke.createDecipheriv = ui.createDecipheriv;
    ke.getCiphers = ui.getCiphers;
    ke.listCiphers = ui.listCiphers;
    var $a = ag();
    ke.DiffieHellmanGroup = $a.DiffieHellmanGroup;
    ke.createDiffieHellmanGroup = $a.createDiffieHellmanGroup;
    ke.getDiffieHellman = $a.getDiffieHellman;
    ke.createDiffieHellman = $a.createDiffieHellman;
    ke.DiffieHellman = $a.DiffieHellman;
    var w0 = q3();
    ke.createSign = w0.createSign;
    ke.Sign = w0.Sign;
    ke.createVerify = w0.createVerify;
    ke.Verify = w0.Verify;
    ke.createECDH = L3();
    var M0 = $3();
    ke.publicEncrypt = M0.publicEncrypt;
    ke.privateEncrypt = M0.privateEncrypt;
    ke.publicDecrypt = M0.publicDecrypt;
    ke.privateDecrypt = M0.privateDecrypt;
    var aw = nw();
    ke.randomFill = aw.randomFill;
    ke.randomFillSync = aw.randomFillSync;
    ke.createCredentials = function() {
      throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join(`
`));
    };
    ke.constants = { DH_CHECK_P_NOT_SAFE_PRIME: 2, DH_CHECK_P_NOT_PRIME: 1, DH_UNABLE_TO_CHECK_GENERATOR: 4, DH_NOT_SUITABLE_GENERATOR: 8, NPN_ENABLED: 1, ALPN_ENABLED: 1, RSA_PKCS1_PADDING: 1, RSA_SSLV23_PADDING: 2, RSA_NO_PADDING: 3, RSA_PKCS1_OAEP_PADDING: 4, RSA_X931_PADDING: 5, RSA_PKCS1_PSS_PADDING: 6, POINT_CONVERSION_COMPRESSED: 2, POINT_CONVERSION_UNCOMPRESSED: 4, POINT_CONVERSION_HYBRID: 6 };
  });
  fr2 = {};
  Xa(fr2, { DEFAULT_ENCODING: () => Fq, default: () => zq, getCurves: () => hw, getRandomValues: () => ow, randomUUID: () => sw, timingSafeEqual: () => _0, webcrypto: () => uw });
  lt2(fr2, rn(Bd()));
  Oq = rn(Bd());
  Uq = ["p192", "p224", "p256", "p384", "p521", "curve25519", "ed25519", "secp256k1", "secp224r1", "prime256v1", "prime192v1", "ed25519", "secp384r1", "secp521r1"];
  _0 = "timingSafeEqual" in crypto ? (t, e) => {
    let { byteLength: r } = t, { byteLength: o } = e;
    if (typeof r != "number" || typeof o != "number")
      throw new TypeError("Input must be an array buffer view");
    if (r !== o)
      throw new RangeError("Input buffers must have the same length");
    return crypto.timingSafeEqual(t, e);
  } : undefined;
  _0 && Object.defineProperty(_0, "name", { value: "::bunternal::" });
  uw = crypto;
  zq = { ...Oq, getRandomValues: ow, randomUUID: sw, timingSafeEqual: _0, webcrypto: uw, getCurves: hw };
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
});

// node_modules/dotenv/package.json
var require_package = __commonJS((exports, module) => {
  module.exports = {
    name: "dotenv",
    version: "16.4.7",
    description: "Loads environment variables from .env file",
    main: "lib/main.js",
    types: "lib/main.d.ts",
    exports: {
      ".": {
        types: "./lib/main.d.ts",
        require: "./lib/main.js",
        default: "./lib/main.js"
      },
      "./config": "./config.js",
      "./config.js": "./config.js",
      "./lib/env-options": "./lib/env-options.js",
      "./lib/env-options.js": "./lib/env-options.js",
      "./lib/cli-options": "./lib/cli-options.js",
      "./lib/cli-options.js": "./lib/cli-options.js",
      "./package.json": "./package.json"
    },
    scripts: {
      "dts-check": "tsc --project tests/types/tsconfig.json",
      lint: "standard",
      pretest: "npm run lint && npm run dts-check",
      test: "tap run --allow-empty-coverage --disable-coverage --timeout=60000",
      "test:coverage": "tap run --show-full-coverage --timeout=60000 --coverage-report=lcov",
      prerelease: "npm test",
      release: "standard-version"
    },
    repository: {
      type: "git",
      url: "git://github.com/motdotla/dotenv.git"
    },
    funding: "https://dotenvx.com",
    keywords: [
      "dotenv",
      "env",
      ".env",
      "environment",
      "variables",
      "config",
      "settings"
    ],
    readmeFilename: "README.md",
    license: "BSD-2-Clause",
    devDependencies: {
      "@types/node": "^18.11.3",
      decache: "^4.6.2",
      sinon: "^14.0.1",
      standard: "^17.0.0",
      "standard-version": "^9.5.0",
      tap: "^19.2.0",
      typescript: "^4.8.4"
    },
    engines: {
      node: ">=12"
    },
    browser: {
      fs: false
    }
  };
});

// node_modules/dotenv/lib/main.js
var require_main = __commonJS((exports, module) => {
  var fs = (() => ({}));
  var path = (init_path(), __toCommonJS(exports_path));
  var os2 = (init_os(), __toCommonJS(exports_os));
  var crypto2 = (init_crypto(), __toCommonJS(exports_crypto));
  var packageJson = require_package();
  var version2 = packageJson.version;
  var LINE = /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;
  function parse(src) {
    const obj = {};
    let lines = src.toString();
    lines = lines.replace(/\r\n?/mg, `
`);
    let match;
    while ((match = LINE.exec(lines)) != null) {
      const key = match[1];
      let value = match[2] || "";
      value = value.trim();
      const maybeQuote = value[0];
      value = value.replace(/^(['"`])([\s\S]*)\1$/mg, "$2");
      if (maybeQuote === '"') {
        value = value.replace(/\\n/g, `
`);
        value = value.replace(/\\r/g, "\r");
      }
      obj[key] = value;
    }
    return obj;
  }
  function _parseVault(options) {
    const vaultPath = _vaultPath(options);
    const result = DotenvModule.configDotenv({ path: vaultPath });
    if (!result.parsed) {
      const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`);
      err.code = "MISSING_DATA";
      throw err;
    }
    const keys = _dotenvKey(options).split(",");
    const length = keys.length;
    let decrypted;
    for (let i = 0;i < length; i++) {
      try {
        const key = keys[i].trim();
        const attrs = _instructions(result, key);
        decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key);
        break;
      } catch (error) {
        if (i + 1 >= length) {
          throw error;
        }
      }
    }
    return DotenvModule.parse(decrypted);
  }
  function _log(message) {
    console.log(`[dotenv@${version2}][INFO] ${message}`);
  }
  function _warn(message) {
    console.log(`[dotenv@${version2}][WARN] ${message}`);
  }
  function _debug(message) {
    console.log(`[dotenv@${version2}][DEBUG] ${message}`);
  }
  function _dotenvKey(options) {
    if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {
      return options.DOTENV_KEY;
    }
    if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {
      return process.env.DOTENV_KEY;
    }
    return "";
  }
  function _instructions(result, dotenvKey) {
    let uri;
    try {
      uri = new URL(dotenvKey);
    } catch (error) {
      if (error.code === "ERR_INVALID_URL") {
        const err = new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");
        err.code = "INVALID_DOTENV_KEY";
        throw err;
      }
      throw error;
    }
    const key = uri.password;
    if (!key) {
      const err = new Error("INVALID_DOTENV_KEY: Missing key part");
      err.code = "INVALID_DOTENV_KEY";
      throw err;
    }
    const environment = uri.searchParams.get("environment");
    if (!environment) {
      const err = new Error("INVALID_DOTENV_KEY: Missing environment part");
      err.code = "INVALID_DOTENV_KEY";
      throw err;
    }
    const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`;
    const ciphertext = result.parsed[environmentKey];
    if (!ciphertext) {
      const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`);
      err.code = "NOT_FOUND_DOTENV_ENVIRONMENT";
      throw err;
    }
    return { ciphertext, key };
  }
  function _vaultPath(options) {
    let possibleVaultPath = null;
    if (options && options.path && options.path.length > 0) {
      if (Array.isArray(options.path)) {
        for (const filepath of options.path) {
          if (fs.existsSync(filepath)) {
            possibleVaultPath = filepath.endsWith(".vault") ? filepath : `${filepath}.vault`;
          }
        }
      } else {
        possibleVaultPath = options.path.endsWith(".vault") ? options.path : `${options.path}.vault`;
      }
    } else {
      possibleVaultPath = path.resolve(process.cwd(), ".env.vault");
    }
    if (fs.existsSync(possibleVaultPath)) {
      return possibleVaultPath;
    }
    return null;
  }
  function _resolveHome(envPath) {
    return envPath[0] === "~" ? path.join(os2.homedir(), envPath.slice(1)) : envPath;
  }
  function _configVault(options) {
    _log("Loading env from encrypted .env.vault");
    const parsed = DotenvModule._parseVault(options);
    let processEnv = process.env;
    if (options && options.processEnv != null) {
      processEnv = options.processEnv;
    }
    DotenvModule.populate(processEnv, parsed, options);
    return { parsed };
  }
  function configDotenv(options) {
    const dotenvPath = path.resolve(process.cwd(), ".env");
    let encoding = "utf8";
    const debug = Boolean(options && options.debug);
    if (options && options.encoding) {
      encoding = options.encoding;
    } else {
      if (debug) {
        _debug("No encoding is specified. UTF-8 is used by default");
      }
    }
    let optionPaths = [dotenvPath];
    if (options && options.path) {
      if (!Array.isArray(options.path)) {
        optionPaths = [_resolveHome(options.path)];
      } else {
        optionPaths = [];
        for (const filepath of options.path) {
          optionPaths.push(_resolveHome(filepath));
        }
      }
    }
    let lastError;
    const parsedAll = {};
    for (const path2 of optionPaths) {
      try {
        const parsed = DotenvModule.parse(fs.readFileSync(path2, { encoding }));
        DotenvModule.populate(parsedAll, parsed, options);
      } catch (e) {
        if (debug) {
          _debug(`Failed to load ${path2} ${e.message}`);
        }
        lastError = e;
      }
    }
    let processEnv = process.env;
    if (options && options.processEnv != null) {
      processEnv = options.processEnv;
    }
    DotenvModule.populate(processEnv, parsedAll, options);
    if (lastError) {
      return { parsed: parsedAll, error: lastError };
    } else {
      return { parsed: parsedAll };
    }
  }
  function config(options) {
    if (_dotenvKey(options).length === 0) {
      return DotenvModule.configDotenv(options);
    }
    const vaultPath = _vaultPath(options);
    if (!vaultPath) {
      _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`);
      return DotenvModule.configDotenv(options);
    }
    return DotenvModule._configVault(options);
  }
  function decrypt(encrypted, keyStr) {
    const key = Buffer.from(keyStr.slice(-64), "hex");
    let ciphertext = Buffer.from(encrypted, "base64");
    const nonce = ciphertext.subarray(0, 12);
    const authTag = ciphertext.subarray(-16);
    ciphertext = ciphertext.subarray(12, -16);
    try {
      const aesgcm = crypto2.createDecipheriv("aes-256-gcm", key, nonce);
      aesgcm.setAuthTag(authTag);
      return `${aesgcm.update(ciphertext)}${aesgcm.final()}`;
    } catch (error) {
      const isRange = error instanceof RangeError;
      const invalidKeyLength = error.message === "Invalid key length";
      const decryptionFailed = error.message === "Unsupported state or unable to authenticate data";
      if (isRange || invalidKeyLength) {
        const err = new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");
        err.code = "INVALID_DOTENV_KEY";
        throw err;
      } else if (decryptionFailed) {
        const err = new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");
        err.code = "DECRYPTION_FAILED";
        throw err;
      } else {
        throw error;
      }
    }
  }
  function populate(processEnv, parsed, options = {}) {
    const debug = Boolean(options && options.debug);
    const override = Boolean(options && options.override);
    if (typeof parsed !== "object") {
      const err = new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");
      err.code = "OBJECT_REQUIRED";
      throw err;
    }
    for (const key of Object.keys(parsed)) {
      if (Object.prototype.hasOwnProperty.call(processEnv, key)) {
        if (override === true) {
          processEnv[key] = parsed[key];
        }
        if (debug) {
          if (override === true) {
            _debug(`"${key}" is already defined and WAS overwritten`);
          } else {
            _debug(`"${key}" is already defined and was NOT overwritten`);
          }
        }
      } else {
        processEnv[key] = parsed[key];
      }
    }
  }
  var DotenvModule = {
    configDotenv,
    _configVault,
    _parseVault,
    config,
    decrypt,
    parse,
    populate
  };
  exports.configDotenv = DotenvModule.configDotenv;
  exports._configVault = DotenvModule._configVault;
  exports._parseVault = DotenvModule._parseVault;
  exports.config = DotenvModule.config;
  exports.decrypt = DotenvModule.decrypt;
  exports.parse = DotenvModule.parse;
  exports.populate = DotenvModule.populate;
  module.exports = DotenvModule;
});

// node_modules/dotenv/lib/env-options.js
var require_env_options = __commonJS((exports, module) => {
  var options = {};
  if (process.env.DOTENV_CONFIG_ENCODING != null) {
    options.encoding = process.env.DOTENV_CONFIG_ENCODING;
  }
  if (process.env.DOTENV_CONFIG_PATH != null) {
    options.path = process.env.DOTENV_CONFIG_PATH;
  }
  if (process.env.DOTENV_CONFIG_DEBUG != null) {
    options.debug = process.env.DOTENV_CONFIG_DEBUG;
  }
  if (process.env.DOTENV_CONFIG_OVERRIDE != null) {
    options.override = process.env.DOTENV_CONFIG_OVERRIDE;
  }
  if (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {
    options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY;
  }
  module.exports = options;
});

// node_modules/dotenv/lib/cli-options.js
var require_cli_options = __commonJS((exports, module) => {
  var re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;
  module.exports = function optionMatcher(args) {
    return args.reduce(function(acc, cur) {
      const matches = cur.match(re);
      if (matches) {
        acc[matches[1]] = matches[2];
      }
      return acc;
    }, {});
  };
});

// node_modules/dotenv/config.js
var require_config = __commonJS(() => {
  (function() {
    require_main().config(Object.assign({}, require_env_options(), require_cli_options()(process.argv)));
  })();
});

// node_modules/map-obj/index.js
var require_map_obj = __commonJS((exports, module) => {
  var isObject = (value) => typeof value === "object" && value !== null;
  var mapObjectSkip = Symbol("skip");
  var isObjectCustom = (value) => isObject(value) && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);
  var mapObject = (object, mapper, options, isSeen = new WeakMap) => {
    options = {
      deep: false,
      target: {},
      ...options
    };
    if (isSeen.has(object)) {
      return isSeen.get(object);
    }
    isSeen.set(object, options.target);
    const { target } = options;
    delete options.target;
    const mapArray = (array) => array.map((element) => isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);
    if (Array.isArray(object)) {
      return mapArray(object);
    }
    for (const [key, value] of Object.entries(object)) {
      const mapResult = mapper(key, value, object);
      if (mapResult === mapObjectSkip) {
        continue;
      }
      let [newKey, newValue, { shouldRecurse = true } = {}] = mapResult;
      if (newKey === "__proto__") {
        continue;
      }
      if (options.deep && shouldRecurse && isObjectCustom(newValue)) {
        newValue = Array.isArray(newValue) ? mapArray(newValue) : mapObject(newValue, mapper, options, isSeen);
      }
      target[newKey] = newValue;
    }
    return target;
  };
  module.exports = (object, mapper, options) => {
    if (!isObject(object)) {
      throw new TypeError(`Expected an object, got \`${object}\` (${typeof object})`);
    }
    return mapObject(object, mapper, options);
  };
  module.exports.mapObjectSkip = mapObjectSkip;
});

// node_modules/tslib/tslib.es6.mjs
var exports_tslib_es6 = {};
__export(exports_tslib_es6, {
  default: () => tslib_es6_default,
  __values: () => __values,
  __spreadArrays: () => __spreadArrays,
  __spreadArray: () => __spreadArray,
  __spread: () => __spread,
  __setFunctionName: () => __setFunctionName,
  __runInitializers: () => __runInitializers,
  __rewriteRelativeImportExtension: () => __rewriteRelativeImportExtension,
  __rest: () => __rest2,
  __read: () => __read,
  __propKey: () => __propKey,
  __param: () => __param,
  __metadata: () => __metadata,
  __makeTemplateObject: () => __makeTemplateObject,
  __importStar: () => __importStar,
  __importDefault: () => __importDefault,
  __generator: () => __generator,
  __extends: () => __extends,
  __exportStar: () => __exportStar,
  __esDecorate: () => __esDecorate,
  __disposeResources: () => __disposeResources,
  __decorate: () => __decorate,
  __createBinding: () => __createBinding,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __classPrivateFieldIn: () => __classPrivateFieldIn,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __awaiter: () => __awaiter,
  __await: () => __await,
  __asyncValues: () => __asyncValues,
  __asyncGenerator: () => __asyncGenerator,
  __asyncDelegator: () => __asyncDelegator,
  __assign: () => __assign,
  __addDisposableResource: () => __addDisposableResource
});
function __extends(d4, b3) {
  if (typeof b3 !== "function" && b3 !== null)
    throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
  extendStatics(d4, b3);
  function __() {
    this.constructor = d4;
  }
  d4.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __);
}
function __rest2(s2, e) {
  var t = {};
  for (var p4 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p4) && e.indexOf(p4) < 0)
      t[p4] = s2[p4];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p4 = Object.getOwnPropertySymbols(s2);i < p4.length; i++) {
      if (e.indexOf(p4[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p4[i]))
        t[p4[i]] = s2[p4[i]];
    }
  return t;
}
function __decorate(decorators, target, key, desc2) {
  var c3 = arguments.length, r = c3 < 3 ? target : desc2 === null ? desc2 = Object.getOwnPropertyDescriptor(target, key) : desc2, d4;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc2);
  else
    for (var i = decorators.length - 1;i >= 0; i--)
      if (d4 = decorators[i])
        r = (c3 < 3 ? d4(r) : c3 > 3 ? d4(target, key, r) : d4(target, key)) || r;
  return c3 > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f3) {
    if (f3 !== undefined && typeof f3 !== "function")
      throw new TypeError("Function expected");
    return f3;
  }
  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _3, done = false;
  for (var i = decorators.length - 1;i >= 0; i--) {
    var context = {};
    for (var p4 in contextIn)
      context[p4] = p4 === "access" ? {} : contextIn[p4];
    for (var p4 in contextIn.access)
      context.access[p4] = contextIn.access[p4];
    context.addInitializer = function(f3) {
      if (done)
        throw new TypeError("Cannot add initializers after decoration has completed");
      extraInitializers.push(accept(f3 || null));
    };
    var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
    if (kind === "accessor") {
      if (result === undefined)
        continue;
      if (result === null || typeof result !== "object")
        throw new TypeError("Object expected");
      if (_3 = accept(result.get))
        descriptor.get = _3;
      if (_3 = accept(result.set))
        descriptor.set = _3;
      if (_3 = accept(result.init))
        initializers.unshift(_3);
    } else if (_3 = accept(result)) {
      if (kind === "field")
        initializers.unshift(_3);
      else
        descriptor[key] = _3;
    }
  }
  if (target)
    Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
}
function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i = 0;i < initializers.length; i++) {
    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
  }
  return useValue ? value : undefined;
}
function __propKey(x4) {
  return typeof x4 === "symbol" ? x4 : "".concat(x4);
}
function __setFunctionName(f3, name, prefix) {
  if (typeof name === "symbol")
    name = name.description ? "[".concat(name.description, "]") : "";
  return Object.defineProperty(f3, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
    return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P3, generator) {
  function adopt(value) {
    return value instanceof P3 ? value : new P3(function(resolve) {
      resolve(value);
    });
  }
  return new (P3 || (P3 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _3 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f3, y4, t, g3 = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
  return g3.next = verb(0), g3["throw"] = verb(1), g3["return"] = verb(2), typeof Symbol === "function" && (g3[Symbol.iterator] = function() {
    return this;
  }), g3;
  function verb(n) {
    return function(v2) {
      return step([n, v2]);
    };
  }
  function step(op) {
    if (f3)
      throw new TypeError("Generator is already executing.");
    while (g3 && (g3 = 0, op[0] && (_3 = 0)), _3)
      try {
        if (f3 = 1, y4 && (t = op[0] & 2 ? y4["return"] : op[0] ? y4["throw"] || ((t = y4["return"]) && t.call(y4), 0) : y4.next) && !(t = t.call(y4, op[1])).done)
          return t;
        if (y4 = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _3.label++;
            return { value: op[1], done: false };
          case 5:
            _3.label++;
            y4 = op[1];
            op = [0];
            continue;
          case 7:
            op = _3.ops.pop();
            _3.trys.pop();
            continue;
          default:
            if (!(t = _3.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _3 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _3.label = op[1];
              break;
            }
            if (op[0] === 6 && _3.label < t[1]) {
              _3.label = t[1];
              t = op;
              break;
            }
            if (t && _3.label < t[2]) {
              _3.label = t[2];
              _3.ops.push(op);
              break;
            }
            if (t[2])
              _3.ops.pop();
            _3.trys.pop();
            continue;
        }
        op = body.call(thisArg, _3);
      } catch (e) {
        op = [6, e];
        y4 = 0;
      } finally {
        f3 = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : undefined, done: true };
  }
}
function __exportStar(m3, o) {
  for (var p4 in m3)
    if (p4 !== "default" && !Object.prototype.hasOwnProperty.call(o, p4))
      __createBinding(o, m3, p4);
}
function __values(o) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m3 = s2 && o[s2], i = 0;
  if (m3)
    return m3.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = undefined;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m3 = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m3)
    return o;
  var i = m3.call(o), r, ar2 = [], e;
  try {
    while ((n === undefined || n-- > 0) && !(r = i.next()).done)
      ar2.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m3 = i["return"]))
        m3.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar2;
}
function __spread() {
  for (var ar2 = [], i = 0;i < arguments.length; i++)
    ar2 = ar2.concat(__read(arguments[i]));
  return ar2;
}
function __spreadArrays() {
  for (var s2 = 0, i = 0, il = arguments.length;i < il; i++)
    s2 += arguments[i].length;
  for (var r = Array(s2), k3 = 0, i = 0;i < il; i++)
    for (var a3 = arguments[i], j3 = 0, jl = a3.length;j3 < jl; j3++, k3++)
      r[k3] = a3[j3];
  return r;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l2 = from.length, ar2;i < l2; i++) {
      if (ar2 || !(i in from)) {
        if (!ar2)
          ar2 = Array.prototype.slice.call(from, 0, i);
        ar2[i] = from[i];
      }
    }
  return to.concat(ar2 || Array.prototype.slice.call(from));
}
function __await(v2) {
  return this instanceof __await ? (this.v = v2, this) : new __await(v2);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g3 = generator.apply(thisArg, _arguments || []), i, q2 = [];
  return i = Object.create((typeof AsyncIterator === "function" ? AsyncIterator : Object).prototype), verb("next"), verb("throw"), verb("return", awaitReturn), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function awaitReturn(f3) {
    return function(v2) {
      return Promise.resolve(v2).then(f3, reject);
    };
  }
  function verb(n, f3) {
    if (g3[n]) {
      i[n] = function(v2) {
        return new Promise(function(a3, b3) {
          q2.push([n, v2, a3, b3]) > 1 || resume(n, v2);
        });
      };
      if (f3)
        i[n] = f3(i[n]);
    }
  }
  function resume(n, v2) {
    try {
      step(g3[n](v2));
    } catch (e) {
      settle(q2[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q2[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f3, v2) {
    if (f3(v2), q2.shift(), q2.length)
      resume(q2[0][0], q2[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p4;
  return i = {}, verb("next"), verb("throw", function(e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function() {
    return this;
  }, i;
  function verb(n, f3) {
    i[n] = o[n] ? function(v2) {
      return (p4 = !p4) ? { value: __await(o[n](v2)), done: false } : f3 ? f3(v2) : v2;
    } : f3;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m3 = o[Symbol.asyncIterator], i;
  return m3 ? m3.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function(v2) {
      return new Promise(function(resolve, reject) {
        v2 = o[n](v2), settle(resolve, reject, v2.done, v2.value);
      });
    };
  }
  function settle(resolve, reject, d4, v2) {
    Promise.resolve(v2).then(function(v3) {
      resolve({ value: v3, done: d4 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw2) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw2 });
  } else {
    cooked.raw = raw2;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule)
    return mod;
  var result = {};
  if (mod != null) {
    for (var k3 = ownKeys(mod), i = 0;i < k3.length; i++)
      if (k3[i] !== "default")
        __createBinding(result, mod, k3[i]);
  }
  __setModuleDefault(result, mod);
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, state, kind, f3) {
  if (kind === "a" && !f3)
    throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
    throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f3 : kind === "a" ? f3.call(receiver) : f3 ? f3.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f3) {
  if (kind === "m")
    throw new TypeError("Private method is not writable");
  if (kind === "a" && !f3)
    throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f3 : !state.has(receiver))
    throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f3.call(receiver, value) : f3 ? f3.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
    throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}
function __addDisposableResource(env, value, async) {
  if (value !== null && value !== undefined) {
    if (typeof value !== "object" && typeof value !== "function")
      throw new TypeError("Object expected.");
    var dispose, inner;
    if (async) {
      if (!Symbol.asyncDispose)
        throw new TypeError("Symbol.asyncDispose is not defined.");
      dispose = value[Symbol.asyncDispose];
    }
    if (dispose === undefined) {
      if (!Symbol.dispose)
        throw new TypeError("Symbol.dispose is not defined.");
      dispose = value[Symbol.dispose];
      if (async)
        inner = dispose;
    }
    if (typeof dispose !== "function")
      throw new TypeError("Object not disposable.");
    if (inner)
      dispose = function() {
        try {
          inner.call(this);
        } catch (e) {
          return Promise.reject(e);
        }
      };
    env.stack.push({ value, dispose, async });
  } else if (async) {
    env.stack.push({ async: true });
  }
  return value;
}
function __disposeResources(env) {
  function fail(e) {
    env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
    env.hasError = true;
  }
  var r, s2 = 0;
  function next() {
    while (r = env.stack.pop()) {
      try {
        if (!r.async && s2 === 1)
          return s2 = 0, env.stack.push(r), Promise.resolve().then(next);
        if (r.dispose) {
          var result = r.dispose.call(r.value);
          if (r.async)
            return s2 |= 2, Promise.resolve(result).then(next, function(e) {
              fail(e);
              return next();
            });
        } else
          s2 |= 1;
      } catch (e) {
        fail(e);
      }
    }
    if (s2 === 1)
      return env.hasError ? Promise.reject(env.error) : Promise.resolve();
    if (env.hasError)
      throw env.error;
  }
  return next();
}
function __rewriteRelativeImportExtension(path, preserveJsx) {
  if (typeof path === "string" && /^\.\.?\//.test(path)) {
    return path.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i, function(m3, tsx, d4, ext, cm2) {
      return tsx ? preserveJsx ? ".jsx" : ".js" : d4 && (!ext || !cm2) ? m3 : d4 + ext + "." + cm2.toLowerCase() + "js";
    });
  }
  return path;
}
var extendStatics = function(d4, b3) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d5, b4) {
    d5.__proto__ = b4;
  } || function(d5, b4) {
    for (var p4 in b4)
      if (Object.prototype.hasOwnProperty.call(b4, p4))
        d5[p4] = b4[p4];
  };
  return extendStatics(d4, b3);
}, __assign = function() {
  __assign = Object.assign || function __assign(t) {
    for (var s2, i = 1, n = arguments.length;i < n; i++) {
      s2 = arguments[i];
      for (var p4 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p4))
          t[p4] = s2[p4];
    }
    return t;
  };
  return __assign.apply(this, arguments);
}, __createBinding, __setModuleDefault, ownKeys = function(o) {
  ownKeys = Object.getOwnPropertyNames || function(o2) {
    var ar2 = [];
    for (var k3 in o2)
      if (Object.prototype.hasOwnProperty.call(o2, k3))
        ar2[ar2.length] = k3;
    return ar2;
  };
  return ownKeys(o);
}, _SuppressedError, tslib_es6_default;
var init_tslib_es6 = __esm(() => {
  __createBinding = Object.create ? function(o, m3, k3, k22) {
    if (k22 === undefined)
      k22 = k3;
    var desc2 = Object.getOwnPropertyDescriptor(m3, k3);
    if (!desc2 || ("get" in desc2 ? !m3.__esModule : desc2.writable || desc2.configurable)) {
      desc2 = { enumerable: true, get: function() {
        return m3[k3];
      } };
    }
    Object.defineProperty(o, k22, desc2);
  } : function(o, m3, k3, k22) {
    if (k22 === undefined)
      k22 = k3;
    o[k22] = m3[k3];
  };
  __setModuleDefault = Object.create ? function(o, v2) {
    Object.defineProperty(o, "default", { enumerable: true, value: v2 });
  } : function(o, v2) {
    o["default"] = v2;
  };
  _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function(error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
  };
  tslib_es6_default = {
    __extends,
    __assign,
    __rest: __rest2,
    __decorate,
    __param,
    __esDecorate,
    __runInitializers,
    __propKey,
    __setFunctionName,
    __metadata,
    __awaiter,
    __generator,
    __createBinding,
    __exportStar,
    __values,
    __read,
    __spread,
    __spreadArrays,
    __spreadArray,
    __await,
    __asyncGenerator,
    __asyncDelegator,
    __asyncValues,
    __makeTemplateObject,
    __importStar,
    __importDefault,
    __classPrivateFieldGet,
    __classPrivateFieldSet,
    __classPrivateFieldIn,
    __addDisposableResource,
    __disposeResources,
    __rewriteRelativeImportExtension
  };
});

// node_modules/lower-case/dist/index.js
var require_dist = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.lowerCase = exports.localeLowerCase = undefined;
  var SUPPORTED_LOCALE = {
    tr: {
      regexp: /\u0130|\u0049|\u0049\u0307/g,
      map: {
        İ: "i",
        I: "ı",
        İ: "i"
      }
    },
    az: {
      regexp: /\u0130/g,
      map: {
        İ: "i",
        I: "ı",
        İ: "i"
      }
    },
    lt: {
      regexp: /\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,
      map: {
        I: "i̇",
        J: "j̇",
        Į: "į̇",
        Ì: "i̇̀",
        Í: "i̇́",
        Ĩ: "i̇̃"
      }
    }
  };
  function localeLowerCase(str, locale) {
    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];
    if (lang)
      return lowerCase(str.replace(lang.regexp, function(m3) {
        return lang.map[m3];
      }));
    return lowerCase(str);
  }
  exports.localeLowerCase = localeLowerCase;
  function lowerCase(str) {
    return str.toLowerCase();
  }
  exports.lowerCase = lowerCase;
});

// node_modules/no-case/dist/index.js
var require_dist2 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.noCase = undefined;
  var lower_case_1 = require_dist();
  var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
  var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
  function noCase(input, options) {
    if (options === undefined) {
      options = {};
    }
    var _a = options.splitRegexp, splitRegexp = _a === undefined ? DEFAULT_SPLIT_REGEXP : _a, _b2 = options.stripRegexp, stripRegexp = _b2 === undefined ? DEFAULT_STRIP_REGEXP : _b2, _c = options.transform, transform = _c === undefined ? lower_case_1.lowerCase : _c, _d2 = options.delimiter, delimiter = _d2 === undefined ? " " : _d2;
    var result = replace(replace(input, splitRegexp, "$1\x00$2"), stripRegexp, "\x00");
    var start = 0;
    var end = result.length;
    while (result.charAt(start) === "\x00")
      start++;
    while (result.charAt(end - 1) === "\x00")
      end--;
    return result.slice(start, end).split("\x00").map(transform).join(delimiter);
  }
  exports.noCase = noCase;
  function replace(input, re, value) {
    if (re instanceof RegExp)
      return input.replace(re, value);
    return re.reduce(function(input2, re2) {
      return input2.replace(re2, value);
    }, input);
  }
});

// node_modules/dot-case/dist/index.js
var require_dist3 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.dotCase = undefined;
  var tslib_1 = (init_tslib_es6(), __toCommonJS(exports_tslib_es6));
  var no_case_1 = require_dist2();
  function dotCase(input, options) {
    if (options === undefined) {
      options = {};
    }
    return no_case_1.noCase(input, tslib_1.__assign({ delimiter: "." }, options));
  }
  exports.dotCase = dotCase;
});

// node_modules/snake-case/dist/index.js
var require_dist4 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.snakeCase = undefined;
  var tslib_1 = (init_tslib_es6(), __toCommonJS(exports_tslib_es6));
  var dot_case_1 = require_dist3();
  function snakeCase(input, options) {
    if (options === undefined) {
      options = {};
    }
    return dot_case_1.dotCase(input, tslib_1.__assign({ delimiter: "_" }, options));
  }
  exports.snakeCase = snakeCase;
});

// node_modules/snakecase-keys/index.js
var require_snakecase_keys = __commonJS((exports, module) => {
  var map = require_map_obj();
  var { snakeCase } = require_dist4();
  var PlainObjectConstructor = {}.constructor;
  module.exports = function(obj, options) {
    if (Array.isArray(obj)) {
      if (obj.some((item) => item.constructor !== PlainObjectConstructor)) {
        throw new Error("obj must be array of plain objects");
      }
    } else {
      if (obj.constructor !== PlainObjectConstructor) {
        throw new Error("obj must be an plain object");
      }
    }
    options = Object.assign({ deep: true, exclude: [], parsingOptions: {} }, options);
    return map(obj, function(key, val) {
      return [
        matches(options.exclude, key) ? key : snakeCase(key, options.parsingOptions),
        val,
        mapperOptions(key, val, options)
      ];
    }, options);
  };
  function matches(patterns, value) {
    return patterns.some(function(pattern) {
      return typeof pattern === "string" ? pattern === value : pattern.test(value);
    });
  }
  function mapperOptions(key, val, options) {
    return options.shouldRecurse ? { shouldRecurse: options.shouldRecurse(key, val) } : undefined;
  }
});

// node_modules/cookie/dist/index.js
var require_dist5 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.parse = parse3;
  exports.serialize = serialize2;
  var cookieNameRegExp = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/;
  var cookieValueRegExp = /^[\u0021-\u003A\u003C-\u007E]*$/;
  var domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
  var pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
  var __toString = Object.prototype.toString;
  var NullObject = /* @__PURE__ */ (() => {
    const C = function() {};
    C.prototype = Object.create(null);
    return C;
  })();
  function parse3(str, options) {
    const obj = new NullObject;
    const len = str.length;
    if (len < 2)
      return obj;
    const dec = options?.decode || decode;
    let index = 0;
    do {
      const eqIdx = str.indexOf("=", index);
      if (eqIdx === -1)
        break;
      const colonIdx = str.indexOf(";", index);
      const endIdx = colonIdx === -1 ? len : colonIdx;
      if (eqIdx > endIdx) {
        index = str.lastIndexOf(";", eqIdx - 1) + 1;
        continue;
      }
      const keyStartIdx = startIndex(str, index, eqIdx);
      const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
      const key = str.slice(keyStartIdx, keyEndIdx);
      if (obj[key] === undefined) {
        let valStartIdx = startIndex(str, eqIdx + 1, endIdx);
        let valEndIdx = endIndex(str, endIdx, valStartIdx);
        const value = dec(str.slice(valStartIdx, valEndIdx));
        obj[key] = value;
      }
      index = endIdx + 1;
    } while (index < len);
    return obj;
  }
  function startIndex(str, index, max) {
    do {
      const code = str.charCodeAt(index);
      if (code !== 32 && code !== 9)
        return index;
    } while (++index < max);
    return max;
  }
  function endIndex(str, index, min) {
    while (index > min) {
      const code = str.charCodeAt(--index);
      if (code !== 32 && code !== 9)
        return index + 1;
    }
    return min;
  }
  function serialize2(name, val, options) {
    const enc = options?.encode || encodeURIComponent;
    if (!cookieNameRegExp.test(name)) {
      throw new TypeError(`argument name is invalid: ${name}`);
    }
    const value = enc(val);
    if (!cookieValueRegExp.test(value)) {
      throw new TypeError(`argument val is invalid: ${val}`);
    }
    let str = name + "=" + value;
    if (!options)
      return str;
    if (options.maxAge !== undefined) {
      if (!Number.isInteger(options.maxAge)) {
        throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);
      }
      str += "; Max-Age=" + options.maxAge;
    }
    if (options.domain) {
      if (!domainValueRegExp.test(options.domain)) {
        throw new TypeError(`option domain is invalid: ${options.domain}`);
      }
      str += "; Domain=" + options.domain;
    }
    if (options.path) {
      if (!pathValueRegExp.test(options.path)) {
        throw new TypeError(`option path is invalid: ${options.path}`);
      }
      str += "; Path=" + options.path;
    }
    if (options.expires) {
      if (!isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) {
        throw new TypeError(`option expires is invalid: ${options.expires}`);
      }
      str += "; Expires=" + options.expires.toUTCString();
    }
    if (options.httpOnly) {
      str += "; HttpOnly";
    }
    if (options.secure) {
      str += "; Secure";
    }
    if (options.partitioned) {
      str += "; Partitioned";
    }
    if (options.priority) {
      const priority = typeof options.priority === "string" ? options.priority.toLowerCase() : undefined;
      switch (priority) {
        case "low":
          str += "; Priority=Low";
          break;
        case "medium":
          str += "; Priority=Medium";
          break;
        case "high":
          str += "; Priority=High";
          break;
        default:
          throw new TypeError(`option priority is invalid: ${options.priority}`);
      }
    }
    if (options.sameSite) {
      const sameSite = typeof options.sameSite === "string" ? options.sameSite.toLowerCase() : options.sameSite;
      switch (sameSite) {
        case true:
        case "strict":
          str += "; SameSite=Strict";
          break;
        case "lax":
          str += "; SameSite=Lax";
          break;
        case "none":
          str += "; SameSite=None";
          break;
        default:
          throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);
      }
    }
    return str;
  }
  function decode(str) {
    if (str.indexOf("%") === -1)
      return str;
    try {
      return decodeURIComponent(str);
    } catch (e) {
      return str;
    }
  }
  function isDate(val) {
    return __toString.call(val) === "[object Date]";
  }
});

// node_modules/hono/dist/compose.js
var compose = (middleware, onError, onNotFound) => {
  return (context, next) => {
    let index = -1;
    return dispatch(0);
    async function dispatch(i) {
      if (i <= index) {
        throw new Error("next() called multiple times");
      }
      index = i;
      let res;
      let isError = false;
      let handler;
      if (middleware[i]) {
        handler = middleware[i][0][0];
        context.req.routeIndex = i;
      } else {
        handler = i === middleware.length && next || undefined;
      }
      if (handler) {
        try {
          res = await handler(context, () => dispatch(i + 1));
        } catch (err) {
          if (err instanceof Error && onError) {
            context.error = err;
            res = await onError(err, context);
            isError = true;
          } else {
            throw err;
          }
        }
      } else {
        if (context.finalized === false && onNotFound) {
          res = await onNotFound(context);
        }
      }
      if (res && (context.finalized === false || isError)) {
        context.res = res;
      }
      return context;
    }
  };
};

// node_modules/hono/dist/utils/body.js
var parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {
  const { all = false, dot = false } = options;
  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;
  const contentType = headers.get("Content-Type");
  if (contentType?.startsWith("multipart/form-data") || contentType?.startsWith("application/x-www-form-urlencoded")) {
    return parseFormData(request, { all, dot });
  }
  return {};
};
async function parseFormData(request, options) {
  const formData = await request.formData();
  if (formData) {
    return convertFormDataToBodyData(formData, options);
  }
  return {};
}
function convertFormDataToBodyData(formData, options) {
  const form = /* @__PURE__ */ Object.create(null);
  formData.forEach((value, key) => {
    const shouldParseAllValues = options.all || key.endsWith("[]");
    if (!shouldParseAllValues) {
      form[key] = value;
    } else {
      handleParsingAllValues(form, key, value);
    }
  });
  if (options.dot) {
    Object.entries(form).forEach(([key, value]) => {
      const shouldParseDotValues = key.includes(".");
      if (shouldParseDotValues) {
        handleParsingNestedValues(form, key, value);
        delete form[key];
      }
    });
  }
  return form;
}
var handleParsingAllValues = (form, key, value) => {
  if (form[key] !== undefined) {
    if (Array.isArray(form[key])) {
      form[key].push(value);
    } else {
      form[key] = [form[key], value];
    }
  } else {
    form[key] = value;
  }
};
var handleParsingNestedValues = (form, key, value) => {
  let nestedForm = form;
  const keys = key.split(".");
  keys.forEach((key2, index) => {
    if (index === keys.length - 1) {
      nestedForm[key2] = value;
    } else {
      if (!nestedForm[key2] || typeof nestedForm[key2] !== "object" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {
        nestedForm[key2] = /* @__PURE__ */ Object.create(null);
      }
      nestedForm = nestedForm[key2];
    }
  });
};

// node_modules/hono/dist/utils/url.js
var splitPath = (path) => {
  const paths = path.split("/");
  if (paths[0] === "") {
    paths.shift();
  }
  return paths;
};
var splitRoutingPath = (routePath) => {
  const { groups, path } = extractGroupsFromPath(routePath);
  const paths = splitPath(path);
  return replaceGroupMarks(paths, groups);
};
var extractGroupsFromPath = (path) => {
  const groups = [];
  path = path.replace(/\{[^}]+\}/g, (match, index) => {
    const mark = `@${index}`;
    groups.push([mark, match]);
    return mark;
  });
  return { groups, path };
};
var replaceGroupMarks = (paths, groups) => {
  for (let i = groups.length - 1;i >= 0; i--) {
    const [mark] = groups[i];
    for (let j = paths.length - 1;j >= 0; j--) {
      if (paths[j].includes(mark)) {
        paths[j] = paths[j].replace(mark, groups[i][1]);
        break;
      }
    }
  }
  return paths;
};
var patternCache = {};
var getPattern = (label, next) => {
  if (label === "*") {
    return "*";
  }
  const match = label.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
  if (match) {
    const cacheKey = `${label}#${next}`;
    if (!patternCache[cacheKey]) {
      if (match[2]) {
        patternCache[cacheKey] = next && next[0] !== ":" && next[0] !== "*" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];
      } else {
        patternCache[cacheKey] = [label, match[1], true];
      }
    }
    return patternCache[cacheKey];
  }
  return null;
};
var tryDecode = (str, decoder) => {
  try {
    return decoder(str);
  } catch {
    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {
      try {
        return decoder(match);
      } catch {
        return match;
      }
    });
  }
};
var tryDecodeURI = (str) => tryDecode(str, decodeURI);
var getPath = (request) => {
  const url = request.url;
  const start = url.indexOf("/", 8);
  let i = start;
  for (;i < url.length; i++) {
    const charCode = url.charCodeAt(i);
    if (charCode === 37) {
      const queryIndex = url.indexOf("?", i);
      const path = url.slice(start, queryIndex === -1 ? undefined : queryIndex);
      return tryDecodeURI(path.includes("%25") ? path.replace(/%25/g, "%2525") : path);
    } else if (charCode === 63) {
      break;
    }
  }
  return url.slice(start, i);
};
var getPathNoStrict = (request) => {
  const result = getPath(request);
  return result.length > 1 && result.at(-1) === "/" ? result.slice(0, -1) : result;
};
var mergePath = (base, sub, ...rest) => {
  if (rest.length) {
    sub = mergePath(sub, ...rest);
  }
  return `${base?.[0] === "/" ? "" : "/"}${base}${sub === "/" ? "" : `${base?.at(-1) === "/" ? "" : "/"}${sub?.[0] === "/" ? sub.slice(1) : sub}`}`;
};
var checkOptionalParameter = (path) => {
  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(":")) {
    return null;
  }
  const segments = path.split("/");
  const results = [];
  let basePath = "";
  segments.forEach((segment) => {
    if (segment !== "" && !/\:/.test(segment)) {
      basePath += "/" + segment;
    } else if (/\:/.test(segment)) {
      if (/\?/.test(segment)) {
        if (results.length === 0 && basePath === "") {
          results.push("/");
        } else {
          results.push(basePath);
        }
        const optionalSegment = segment.replace("?", "");
        basePath += "/" + optionalSegment;
        results.push(basePath);
      } else {
        basePath += "/" + segment;
      }
    }
  });
  return results.filter((v, i, a) => a.indexOf(v) === i);
};
var _decodeURI = (value) => {
  if (!/[%+]/.test(value)) {
    return value;
  }
  if (value.indexOf("+") !== -1) {
    value = value.replace(/\+/g, " ");
  }
  return value.indexOf("%") !== -1 ? decodeURIComponent_(value) : value;
};
var _getQueryParam = (url, key, multiple) => {
  let encoded;
  if (!multiple && key && !/[%+]/.test(key)) {
    let keyIndex2 = url.indexOf(`?${key}`, 8);
    if (keyIndex2 === -1) {
      keyIndex2 = url.indexOf(`&${key}`, 8);
    }
    while (keyIndex2 !== -1) {
      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);
      if (trailingKeyCode === 61) {
        const valueIndex = keyIndex2 + key.length + 2;
        const endIndex = url.indexOf("&", valueIndex);
        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? undefined : endIndex));
      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {
        return "";
      }
      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);
    }
    encoded = /[%+]/.test(url);
    if (!encoded) {
      return;
    }
  }
  const results = {};
  encoded ??= /[%+]/.test(url);
  let keyIndex = url.indexOf("?", 8);
  while (keyIndex !== -1) {
    const nextKeyIndex = url.indexOf("&", keyIndex + 1);
    let valueIndex = url.indexOf("=", keyIndex);
    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {
      valueIndex = -1;
    }
    let name = url.slice(keyIndex + 1, valueIndex === -1 ? nextKeyIndex === -1 ? undefined : nextKeyIndex : valueIndex);
    if (encoded) {
      name = _decodeURI(name);
    }
    keyIndex = nextKeyIndex;
    if (name === "") {
      continue;
    }
    let value;
    if (valueIndex === -1) {
      value = "";
    } else {
      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? undefined : nextKeyIndex);
      if (encoded) {
        value = _decodeURI(value);
      }
    }
    if (multiple) {
      if (!(results[name] && Array.isArray(results[name]))) {
        results[name] = [];
      }
      results[name].push(value);
    } else {
      results[name] ??= value;
    }
  }
  return key ? results[key] : results;
};
var getQueryParam = _getQueryParam;
var getQueryParams = (url, key) => {
  return _getQueryParam(url, key, true);
};
var decodeURIComponent_ = decodeURIComponent;

// node_modules/hono/dist/request.js
var tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);
var HonoRequest = class {
  raw;
  #validatedData;
  #matchResult;
  routeIndex = 0;
  path;
  bodyCache = {};
  constructor(request, path = "/", matchResult = [[]]) {
    this.raw = request;
    this.path = path;
    this.#matchResult = matchResult;
    this.#validatedData = {};
  }
  param(key) {
    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();
  }
  #getDecodedParam(key) {
    const paramKey = this.#matchResult[0][this.routeIndex][1][key];
    const param = this.#getParamValue(paramKey);
    return param ? /\%/.test(param) ? tryDecodeURIComponent(param) : param : undefined;
  }
  #getAllDecodedParams() {
    const decoded = {};
    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);
    for (const key of keys) {
      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);
      if (value && typeof value === "string") {
        decoded[key] = /\%/.test(value) ? tryDecodeURIComponent(value) : value;
      }
    }
    return decoded;
  }
  #getParamValue(paramKey) {
    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;
  }
  query(key) {
    return getQueryParam(this.url, key);
  }
  queries(key) {
    return getQueryParams(this.url, key);
  }
  header(name) {
    if (name) {
      return this.raw.headers.get(name) ?? undefined;
    }
    const headerData = {};
    this.raw.headers.forEach((value, key) => {
      headerData[key] = value;
    });
    return headerData;
  }
  async parseBody(options) {
    return this.bodyCache.parsedBody ??= await parseBody(this, options);
  }
  #cachedBody = (key) => {
    const { bodyCache, raw } = this;
    const cachedBody = bodyCache[key];
    if (cachedBody) {
      return cachedBody;
    }
    const anyCachedKey = Object.keys(bodyCache)[0];
    if (anyCachedKey) {
      return bodyCache[anyCachedKey].then((body) => {
        if (anyCachedKey === "json") {
          body = JSON.stringify(body);
        }
        return new Response(body)[key]();
      });
    }
    return bodyCache[key] = raw[key]();
  };
  json() {
    return this.#cachedBody("json");
  }
  text() {
    return this.#cachedBody("text");
  }
  arrayBuffer() {
    return this.#cachedBody("arrayBuffer");
  }
  blob() {
    return this.#cachedBody("blob");
  }
  formData() {
    return this.#cachedBody("formData");
  }
  addValidatedData(target, data) {
    this.#validatedData[target] = data;
  }
  valid(target) {
    return this.#validatedData[target];
  }
  get url() {
    return this.raw.url;
  }
  get method() {
    return this.raw.method;
  }
  get matchedRoutes() {
    return this.#matchResult[0].map(([[, route]]) => route);
  }
  get routePath() {
    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;
  }
};

// node_modules/hono/dist/utils/html.js
var HtmlEscapedCallbackPhase = {
  Stringify: 1,
  BeforeStream: 2,
  Stream: 3
};
var raw = (value, callbacks) => {
  const escapedString = new String(value);
  escapedString.isEscaped = true;
  escapedString.callbacks = callbacks;
  return escapedString;
};
var resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {
  if (typeof str === "object" && !(str instanceof String)) {
    if (!(str instanceof Promise)) {
      str = str.toString();
    }
    if (str instanceof Promise) {
      str = await str;
    }
  }
  const callbacks = str.callbacks;
  if (!callbacks?.length) {
    return Promise.resolve(str);
  }
  if (buffer) {
    buffer[0] += str;
  } else {
    buffer = [str];
  }
  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then((res) => Promise.all(res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))).then(() => buffer[0]));
  if (preserveCallbacks) {
    return raw(await resStr, callbacks);
  } else {
    return resStr;
  }
};

// node_modules/hono/dist/context.js
var TEXT_PLAIN = "text/plain; charset=UTF-8";
var setHeaders = (headers, map = {}) => {
  for (const key of Object.keys(map)) {
    headers.set(key, map[key]);
  }
  return headers;
};
var Context = class {
  #rawRequest;
  #req;
  env = {};
  #var;
  finalized = false;
  error;
  #status = 200;
  #executionCtx;
  #headers;
  #preparedHeaders;
  #res;
  #isFresh = true;
  #layout;
  #renderer;
  #notFoundHandler;
  #matchResult;
  #path;
  constructor(req, options) {
    this.#rawRequest = req;
    if (options) {
      this.#executionCtx = options.executionCtx;
      this.env = options.env;
      this.#notFoundHandler = options.notFoundHandler;
      this.#path = options.path;
      this.#matchResult = options.matchResult;
    }
  }
  get req() {
    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);
    return this.#req;
  }
  get event() {
    if (this.#executionCtx && "respondWith" in this.#executionCtx) {
      return this.#executionCtx;
    } else {
      throw Error("This context has no FetchEvent");
    }
  }
  get executionCtx() {
    if (this.#executionCtx) {
      return this.#executionCtx;
    } else {
      throw Error("This context has no ExecutionContext");
    }
  }
  get res() {
    this.#isFresh = false;
    return this.#res ||= new Response("404 Not Found", { status: 404 });
  }
  set res(_res) {
    this.#isFresh = false;
    if (this.#res && _res) {
      _res = new Response(_res.body, _res);
      for (const [k, v] of this.#res.headers.entries()) {
        if (k === "content-type") {
          continue;
        }
        if (k === "set-cookie") {
          const cookies = this.#res.headers.getSetCookie();
          _res.headers.delete("set-cookie");
          for (const cookie of cookies) {
            _res.headers.append("set-cookie", cookie);
          }
        } else {
          _res.headers.set(k, v);
        }
      }
    }
    this.#res = _res;
    this.finalized = true;
  }
  render = (...args) => {
    this.#renderer ??= (content) => this.html(content);
    return this.#renderer(...args);
  };
  setLayout = (layout) => this.#layout = layout;
  getLayout = () => this.#layout;
  setRenderer = (renderer) => {
    this.#renderer = renderer;
  };
  header = (name, value, options) => {
    if (this.finalized) {
      this.#res = new Response(this.#res.body, this.#res);
    }
    if (value === undefined) {
      if (this.#headers) {
        this.#headers.delete(name);
      } else if (this.#preparedHeaders) {
        delete this.#preparedHeaders[name.toLocaleLowerCase()];
      }
      if (this.finalized) {
        this.res.headers.delete(name);
      }
      return;
    }
    if (options?.append) {
      if (!this.#headers) {
        this.#isFresh = false;
        this.#headers = new Headers(this.#preparedHeaders);
        this.#preparedHeaders = {};
      }
      this.#headers.append(name, value);
    } else {
      if (this.#headers) {
        this.#headers.set(name, value);
      } else {
        this.#preparedHeaders ??= {};
        this.#preparedHeaders[name.toLowerCase()] = value;
      }
    }
    if (this.finalized) {
      if (options?.append) {
        this.res.headers.append(name, value);
      } else {
        this.res.headers.set(name, value);
      }
    }
  };
  status = (status) => {
    this.#isFresh = false;
    this.#status = status;
  };
  set = (key, value) => {
    this.#var ??= /* @__PURE__ */ new Map;
    this.#var.set(key, value);
  };
  get = (key) => {
    return this.#var ? this.#var.get(key) : undefined;
  };
  get var() {
    if (!this.#var) {
      return {};
    }
    return Object.fromEntries(this.#var);
  }
  #newResponse(data, arg, headers) {
    if (this.#isFresh && !headers && !arg && this.#status === 200) {
      return new Response(data, {
        headers: this.#preparedHeaders
      });
    }
    if (arg && typeof arg !== "number") {
      const header = new Headers(arg.headers);
      if (this.#headers) {
        this.#headers.forEach((v, k) => {
          if (k === "set-cookie") {
            header.append(k, v);
          } else {
            header.set(k, v);
          }
        });
      }
      const headers2 = setHeaders(header, this.#preparedHeaders);
      return new Response(data, {
        headers: headers2,
        status: arg.status ?? this.#status
      });
    }
    const status = typeof arg === "number" ? arg : this.#status;
    this.#preparedHeaders ??= {};
    this.#headers ??= new Headers;
    setHeaders(this.#headers, this.#preparedHeaders);
    if (this.#res) {
      this.#res.headers.forEach((v, k) => {
        if (k === "set-cookie") {
          this.#headers?.append(k, v);
        } else {
          this.#headers?.set(k, v);
        }
      });
      setHeaders(this.#headers, this.#preparedHeaders);
    }
    headers ??= {};
    for (const [k, v] of Object.entries(headers)) {
      if (typeof v === "string") {
        this.#headers.set(k, v);
      } else {
        this.#headers.delete(k);
        for (const v2 of v) {
          this.#headers.append(k, v2);
        }
      }
    }
    return new Response(data, {
      status,
      headers: this.#headers
    });
  }
  newResponse = (...args) => this.#newResponse(...args);
  body = (data, arg, headers) => {
    return typeof arg === "number" ? this.#newResponse(data, arg, headers) : this.#newResponse(data, arg);
  };
  text = (text, arg, headers) => {
    if (!this.#preparedHeaders) {
      if (this.#isFresh && !headers && !arg) {
        return new Response(text);
      }
      this.#preparedHeaders = {};
    }
    this.#preparedHeaders["content-type"] = TEXT_PLAIN;
    if (typeof arg === "number") {
      return this.#newResponse(text, arg, headers);
    }
    return this.#newResponse(text, arg);
  };
  json = (object, arg, headers) => {
    const body = JSON.stringify(object);
    this.#preparedHeaders ??= {};
    this.#preparedHeaders["content-type"] = "application/json";
    return typeof arg === "number" ? this.#newResponse(body, arg, headers) : this.#newResponse(body, arg);
  };
  html = (html, arg, headers) => {
    this.#preparedHeaders ??= {};
    this.#preparedHeaders["content-type"] = "text/html; charset=UTF-8";
    if (typeof html === "object") {
      return resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then((html2) => {
        return typeof arg === "number" ? this.#newResponse(html2, arg, headers) : this.#newResponse(html2, arg);
      });
    }
    return typeof arg === "number" ? this.#newResponse(html, arg, headers) : this.#newResponse(html, arg);
  };
  redirect = (location2, status) => {
    this.#headers ??= new Headers;
    this.#headers.set("Location", String(location2));
    return this.newResponse(null, status ?? 302);
  };
  notFound = () => {
    this.#notFoundHandler ??= () => new Response;
    return this.#notFoundHandler(this);
  };
};

// node_modules/hono/dist/router.js
var METHOD_NAME_ALL = "ALL";
var METHOD_NAME_ALL_LOWERCASE = "all";
var METHODS = ["get", "post", "put", "delete", "options", "patch"];
var MESSAGE_MATCHER_IS_ALREADY_BUILT = "Can not add a route since the matcher is already built.";
var UnsupportedPathError = class extends Error {
};

// node_modules/hono/dist/utils/constants.js
var COMPOSED_HANDLER = "__COMPOSED_HANDLER";

// node_modules/hono/dist/hono-base.js
var notFoundHandler = (c) => {
  return c.text("404 Not Found", 404);
};
var errorHandler = (err, c) => {
  if ("getResponse" in err) {
    return err.getResponse();
  }
  console.error(err);
  return c.text("Internal Server Error", 500);
};
var Hono = class {
  get;
  post;
  put;
  delete;
  options;
  patch;
  all;
  on;
  use;
  router;
  getPath;
  _basePath = "/";
  #path = "/";
  routes = [];
  constructor(options = {}) {
    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];
    allMethods.forEach((method) => {
      this[method] = (args1, ...args) => {
        if (typeof args1 === "string") {
          this.#path = args1;
        } else {
          this.#addRoute(method, this.#path, args1);
        }
        args.forEach((handler) => {
          this.#addRoute(method, this.#path, handler);
        });
        return this;
      };
    });
    this.on = (method, path, ...handlers) => {
      for (const p of [path].flat()) {
        this.#path = p;
        for (const m of [method].flat()) {
          handlers.map((handler) => {
            this.#addRoute(m.toUpperCase(), this.#path, handler);
          });
        }
      }
      return this;
    };
    this.use = (arg1, ...handlers) => {
      if (typeof arg1 === "string") {
        this.#path = arg1;
      } else {
        this.#path = "*";
        handlers.unshift(arg1);
      }
      handlers.forEach((handler) => {
        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);
      });
      return this;
    };
    const { strict, ...optionsWithoutStrict } = options;
    Object.assign(this, optionsWithoutStrict);
    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;
  }
  #clone() {
    const clone = new Hono({
      router: this.router,
      getPath: this.getPath
    });
    clone.routes = this.routes;
    return clone;
  }
  #notFoundHandler = notFoundHandler;
  errorHandler = errorHandler;
  route(path, app) {
    const subApp = this.basePath(path);
    app.routes.map((r) => {
      let handler;
      if (app.errorHandler === errorHandler) {
        handler = r.handler;
      } else {
        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;
        handler[COMPOSED_HANDLER] = r.handler;
      }
      subApp.#addRoute(r.method, r.path, handler);
    });
    return this;
  }
  basePath(path) {
    const subApp = this.#clone();
    subApp._basePath = mergePath(this._basePath, path);
    return subApp;
  }
  onError = (handler) => {
    this.errorHandler = handler;
    return this;
  };
  notFound = (handler) => {
    this.#notFoundHandler = handler;
    return this;
  };
  mount(path, applicationHandler, options) {
    let replaceRequest;
    let optionHandler;
    if (options) {
      if (typeof options === "function") {
        optionHandler = options;
      } else {
        optionHandler = options.optionHandler;
        replaceRequest = options.replaceRequest;
      }
    }
    const getOptions = optionHandler ? (c) => {
      const options2 = optionHandler(c);
      return Array.isArray(options2) ? options2 : [options2];
    } : (c) => {
      let executionContext = undefined;
      try {
        executionContext = c.executionCtx;
      } catch {}
      return [c.env, executionContext];
    };
    replaceRequest ||= (() => {
      const mergedPath = mergePath(this._basePath, path);
      const pathPrefixLength = mergedPath === "/" ? 0 : mergedPath.length;
      return (request) => {
        const url = new URL(request.url);
        url.pathname = url.pathname.slice(pathPrefixLength) || "/";
        return new Request(url, request);
      };
    })();
    const handler = async (c, next) => {
      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));
      if (res) {
        return res;
      }
      await next();
    };
    this.#addRoute(METHOD_NAME_ALL, mergePath(path, "*"), handler);
    return this;
  }
  #addRoute(method, path, handler) {
    method = method.toUpperCase();
    path = mergePath(this._basePath, path);
    const r = { path, method, handler };
    this.router.add(method, path, [handler, r]);
    this.routes.push(r);
  }
  #handleError(err, c) {
    if (err instanceof Error) {
      return this.errorHandler(err, c);
    }
    throw err;
  }
  #dispatch(request, executionCtx, env, method) {
    if (method === "HEAD") {
      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, "GET")))();
    }
    const path = this.getPath(request, { env });
    const matchResult = this.router.match(method, path);
    const c = new Context(request, {
      path,
      matchResult,
      env,
      executionCtx,
      notFoundHandler: this.#notFoundHandler
    });
    if (matchResult[0].length === 1) {
      let res;
      try {
        res = matchResult[0][0][0][0](c, async () => {
          c.res = await this.#notFoundHandler(c);
        });
      } catch (err) {
        return this.#handleError(err, c);
      }
      return res instanceof Promise ? res.then((resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);
    }
    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);
    return (async () => {
      try {
        const context = await composed(c);
        if (!context.finalized) {
          throw new Error("Context is not finalized. Did you forget to return a Response object or `await next()`?");
        }
        return context.res;
      } catch (err) {
        return this.#handleError(err, c);
      }
    })();
  }
  fetch = (request, ...rest) => {
    return this.#dispatch(request, rest[1], rest[0], request.method);
  };
  request = (input, requestInit, Env, executionCtx) => {
    if (input instanceof Request) {
      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);
    }
    input = input.toString();
    return this.fetch(new Request(/^https?:\/\//.test(input) ? input : `http://localhost${mergePath("/", input)}`, requestInit), Env, executionCtx);
  };
  fire = () => {
    addEventListener("fetch", (event) => {
      event.respondWith(this.#dispatch(event.request, event, undefined, event.request.method));
    });
  };
};

// node_modules/hono/dist/router/reg-exp-router/node.js
var LABEL_REG_EXP_STR = "[^/]+";
var ONLY_WILDCARD_REG_EXP_STR = ".*";
var TAIL_WILDCARD_REG_EXP_STR = "(?:|/.*)";
var PATH_ERROR = Symbol();
var regExpMetaChars = new Set(".\\+*[^]$()");
function compareKey(a, b) {
  if (a.length === 1) {
    return b.length === 1 ? a < b ? -1 : 1 : -1;
  }
  if (b.length === 1) {
    return 1;
  }
  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {
    return 1;
  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {
    return -1;
  }
  if (a === LABEL_REG_EXP_STR) {
    return 1;
  } else if (b === LABEL_REG_EXP_STR) {
    return -1;
  }
  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;
}
var Node = class {
  #index;
  #varIndex;
  #children = /* @__PURE__ */ Object.create(null);
  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {
    if (tokens.length === 0) {
      if (this.#index !== undefined) {
        throw PATH_ERROR;
      }
      if (pathErrorCheckOnly) {
        return;
      }
      this.#index = index;
      return;
    }
    const [token, ...restTokens] = tokens;
    const pattern = token === "*" ? restTokens.length === 0 ? ["", "", ONLY_WILDCARD_REG_EXP_STR] : ["", "", LABEL_REG_EXP_STR] : token === "/*" ? ["", "", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
    let node;
    if (pattern) {
      const name = pattern[1];
      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;
      if (name && pattern[2]) {
        regexpStr = regexpStr.replace(/^\((?!\?:)(?=[^)]+\)$)/, "(?:");
        if (/\((?!\?:)/.test(regexpStr)) {
          throw PATH_ERROR;
        }
      }
      node = this.#children[regexpStr];
      if (!node) {
        if (Object.keys(this.#children).some((k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR)) {
          throw PATH_ERROR;
        }
        if (pathErrorCheckOnly) {
          return;
        }
        node = this.#children[regexpStr] = new Node;
        if (name !== "") {
          node.#varIndex = context.varIndex++;
        }
      }
      if (!pathErrorCheckOnly && name !== "") {
        paramMap.push([name, node.#varIndex]);
      }
    } else {
      node = this.#children[token];
      if (!node) {
        if (Object.keys(this.#children).some((k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR)) {
          throw PATH_ERROR;
        }
        if (pathErrorCheckOnly) {
          return;
        }
        node = this.#children[token] = new Node;
      }
    }
    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);
  }
  buildRegExpStr() {
    const childKeys = Object.keys(this.#children).sort(compareKey);
    const strList = childKeys.map((k) => {
      const c = this.#children[k];
      return (typeof c.#varIndex === "number" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\${k}` : k) + c.buildRegExpStr();
    });
    if (typeof this.#index === "number") {
      strList.unshift(`#${this.#index}`);
    }
    if (strList.length === 0) {
      return "";
    }
    if (strList.length === 1) {
      return strList[0];
    }
    return "(?:" + strList.join("|") + ")";
  }
};

// node_modules/hono/dist/router/reg-exp-router/trie.js
var Trie = class {
  #context = { varIndex: 0 };
  #root = new Node;
  insert(path, index, pathErrorCheckOnly) {
    const paramAssoc = [];
    const groups = [];
    for (let i = 0;; ) {
      let replaced = false;
      path = path.replace(/\{[^}]+\}/g, (m) => {
        const mark = `@\\${i}`;
        groups[i] = [mark, m];
        i++;
        replaced = true;
        return mark;
      });
      if (!replaced) {
        break;
      }
    }
    const tokens = path.match(/(?::[^\/]+)|(?:\/\*$)|./g) || [];
    for (let i = groups.length - 1;i >= 0; i--) {
      const [mark] = groups[i];
      for (let j = tokens.length - 1;j >= 0; j--) {
        if (tokens[j].indexOf(mark) !== -1) {
          tokens[j] = tokens[j].replace(mark, groups[i][1]);
          break;
        }
      }
    }
    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);
    return paramAssoc;
  }
  buildRegExp() {
    let regexp = this.#root.buildRegExpStr();
    if (regexp === "") {
      return [/^$/, [], []];
    }
    let captureIndex = 0;
    const indexReplacementMap = [];
    const paramReplacementMap = [];
    regexp = regexp.replace(/#(\d+)|@(\d+)|\.\*\$/g, (_, handlerIndex, paramIndex) => {
      if (handlerIndex !== undefined) {
        indexReplacementMap[++captureIndex] = Number(handlerIndex);
        return "$()";
      }
      if (paramIndex !== undefined) {
        paramReplacementMap[Number(paramIndex)] = ++captureIndex;
        return "";
      }
      return "";
    });
    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];
  }
};

// node_modules/hono/dist/router/reg-exp-router/router.js
var emptyParam = [];
var nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];
var wildcardRegExpCache = /* @__PURE__ */ Object.create(null);
function buildWildcardRegExp(path) {
  return wildcardRegExpCache[path] ??= new RegExp(path === "*" ? "" : `^${path.replace(/\/\*$|([.\\+*[^\]$()])/g, (_, metaChar) => metaChar ? `\\${metaChar}` : "(?:|/.*)")}$`);
}
function clearWildcardRegExpCache() {
  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);
}
function buildMatcherFromPreprocessedRoutes(routes) {
  const trie = new Trie;
  const handlerData = [];
  if (routes.length === 0) {
    return nullMatcher;
  }
  const routesWithStaticPathFlag = routes.map((route) => [!/\*|\/:/.test(route[0]), ...route]).sort(([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length);
  const staticMap = /* @__PURE__ */ Object.create(null);
  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length;i < len; i++) {
    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];
    if (pathErrorCheckOnly) {
      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];
    } else {
      j++;
    }
    let paramAssoc;
    try {
      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);
    } catch (e) {
      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;
    }
    if (pathErrorCheckOnly) {
      continue;
    }
    handlerData[j] = handlers.map(([h, paramCount]) => {
      const paramIndexMap = /* @__PURE__ */ Object.create(null);
      paramCount -= 1;
      for (;paramCount >= 0; paramCount--) {
        const [key, value] = paramAssoc[paramCount];
        paramIndexMap[key] = value;
      }
      return [h, paramIndexMap];
    });
  }
  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();
  for (let i = 0, len = handlerData.length;i < len; i++) {
    for (let j = 0, len2 = handlerData[i].length;j < len2; j++) {
      const map = handlerData[i][j]?.[1];
      if (!map) {
        continue;
      }
      const keys = Object.keys(map);
      for (let k = 0, len3 = keys.length;k < len3; k++) {
        map[keys[k]] = paramReplacementMap[map[keys[k]]];
      }
    }
  }
  const handlerMap = [];
  for (const i in indexReplacementMap) {
    handlerMap[i] = handlerData[indexReplacementMap[i]];
  }
  return [regexp, handlerMap, staticMap];
}
function findMiddleware(middleware, path) {
  if (!middleware) {
    return;
  }
  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {
    if (buildWildcardRegExp(k).test(path)) {
      return [...middleware[k]];
    }
  }
  return;
}
var RegExpRouter = class {
  name = "RegExpRouter";
  #middleware;
  #routes;
  constructor() {
    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };
    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };
  }
  add(method, path, handler) {
    const middleware = this.#middleware;
    const routes = this.#routes;
    if (!middleware || !routes) {
      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);
    }
    if (!middleware[method]) {
      [middleware, routes].forEach((handlerMap) => {
        handlerMap[method] = /* @__PURE__ */ Object.create(null);
        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {
          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];
        });
      });
    }
    if (path === "/*") {
      path = "*";
    }
    const paramCount = (path.match(/\/:/g) || []).length;
    if (/\*$/.test(path)) {
      const re = buildWildcardRegExp(path);
      if (method === METHOD_NAME_ALL) {
        Object.keys(middleware).forEach((m) => {
          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];
        });
      } else {
        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];
      }
      Object.keys(middleware).forEach((m) => {
        if (method === METHOD_NAME_ALL || method === m) {
          Object.keys(middleware[m]).forEach((p) => {
            re.test(p) && middleware[m][p].push([handler, paramCount]);
          });
        }
      });
      Object.keys(routes).forEach((m) => {
        if (method === METHOD_NAME_ALL || method === m) {
          Object.keys(routes[m]).forEach((p) => re.test(p) && routes[m][p].push([handler, paramCount]));
        }
      });
      return;
    }
    const paths = checkOptionalParameter(path) || [path];
    for (let i = 0, len = paths.length;i < len; i++) {
      const path2 = paths[i];
      Object.keys(routes).forEach((m) => {
        if (method === METHOD_NAME_ALL || method === m) {
          routes[m][path2] ||= [
            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []
          ];
          routes[m][path2].push([handler, paramCount - len + i + 1]);
        }
      });
    }
  }
  match(method, path) {
    clearWildcardRegExpCache();
    const matchers = this.#buildAllMatchers();
    this.match = (method2, path2) => {
      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];
      const staticMatch = matcher[2][path2];
      if (staticMatch) {
        return staticMatch;
      }
      const match = path2.match(matcher[0]);
      if (!match) {
        return [[], emptyParam];
      }
      const index = match.indexOf("", 1);
      return [matcher[1][index], match];
    };
    return this.match(method, path);
  }
  #buildAllMatchers() {
    const matchers = /* @__PURE__ */ Object.create(null);
    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {
      matchers[method] ||= this.#buildMatcher(method);
    });
    this.#middleware = this.#routes = undefined;
    return matchers;
  }
  #buildMatcher(method) {
    const routes = [];
    let hasOwnRoute = method === METHOD_NAME_ALL;
    [this.#middleware, this.#routes].forEach((r) => {
      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];
      if (ownRoute.length !== 0) {
        hasOwnRoute ||= true;
        routes.push(...ownRoute);
      } else if (method !== METHOD_NAME_ALL) {
        routes.push(...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]]));
      }
    });
    if (!hasOwnRoute) {
      return null;
    } else {
      return buildMatcherFromPreprocessedRoutes(routes);
    }
  }
};

// node_modules/hono/dist/router/smart-router/router.js
var SmartRouter = class {
  name = "SmartRouter";
  #routers = [];
  #routes = [];
  constructor(init) {
    this.#routers = init.routers;
  }
  add(method, path, handler) {
    if (!this.#routes) {
      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);
    }
    this.#routes.push([method, path, handler]);
  }
  match(method, path) {
    if (!this.#routes) {
      throw new Error("Fatal error");
    }
    const routers = this.#routers;
    const routes = this.#routes;
    const len = routers.length;
    let i = 0;
    let res;
    for (;i < len; i++) {
      const router = routers[i];
      try {
        for (let i2 = 0, len2 = routes.length;i2 < len2; i2++) {
          router.add(...routes[i2]);
        }
        res = router.match(method, path);
      } catch (e) {
        if (e instanceof UnsupportedPathError) {
          continue;
        }
        throw e;
      }
      this.match = router.match.bind(router);
      this.#routers = [router];
      this.#routes = undefined;
      break;
    }
    if (i === len) {
      throw new Error("Fatal error");
    }
    this.name = `SmartRouter + ${this.activeRouter.name}`;
    return res;
  }
  get activeRouter() {
    if (this.#routes || this.#routers.length !== 1) {
      throw new Error("No active router has been determined yet.");
    }
    return this.#routers[0];
  }
};

// node_modules/hono/dist/router/trie-router/node.js
var emptyParams = /* @__PURE__ */ Object.create(null);
var Node2 = class {
  #methods;
  #children;
  #patterns;
  #order = 0;
  #params = emptyParams;
  constructor(method, handler, children) {
    this.#children = children || /* @__PURE__ */ Object.create(null);
    this.#methods = [];
    if (method && handler) {
      const m = /* @__PURE__ */ Object.create(null);
      m[method] = { handler, possibleKeys: [], score: 0 };
      this.#methods = [m];
    }
    this.#patterns = [];
  }
  insert(method, path, handler) {
    this.#order = ++this.#order;
    let curNode = this;
    const parts = splitRoutingPath(path);
    const possibleKeys = [];
    for (let i = 0, len = parts.length;i < len; i++) {
      const p = parts[i];
      const nextP = parts[i + 1];
      const pattern = getPattern(p, nextP);
      const key = Array.isArray(pattern) ? pattern[0] : p;
      if (Object.keys(curNode.#children).includes(key)) {
        curNode = curNode.#children[key];
        const pattern2 = getPattern(p, nextP);
        if (pattern2) {
          possibleKeys.push(pattern2[1]);
        }
        continue;
      }
      curNode.#children[key] = new Node2;
      if (pattern) {
        curNode.#patterns.push(pattern);
        possibleKeys.push(pattern[1]);
      }
      curNode = curNode.#children[key];
    }
    const m = /* @__PURE__ */ Object.create(null);
    const handlerSet = {
      handler,
      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),
      score: this.#order
    };
    m[method] = handlerSet;
    curNode.#methods.push(m);
    return curNode;
  }
  #getHandlerSets(node, method, nodeParams, params) {
    const handlerSets = [];
    for (let i = 0, len = node.#methods.length;i < len; i++) {
      const m = node.#methods[i];
      const handlerSet = m[method] || m[METHOD_NAME_ALL];
      const processedSet = {};
      if (handlerSet !== undefined) {
        handlerSet.params = /* @__PURE__ */ Object.create(null);
        handlerSets.push(handlerSet);
        if (nodeParams !== emptyParams || params && params !== emptyParams) {
          for (let i2 = 0, len2 = handlerSet.possibleKeys.length;i2 < len2; i2++) {
            const key = handlerSet.possibleKeys[i2];
            const processed = processedSet[handlerSet.score];
            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];
            processedSet[handlerSet.score] = true;
          }
        }
      }
    }
    return handlerSets;
  }
  search(method, path) {
    const handlerSets = [];
    this.#params = emptyParams;
    const curNode = this;
    let curNodes = [curNode];
    const parts = splitPath(path);
    const curNodesQueue = [];
    for (let i = 0, len = parts.length;i < len; i++) {
      const part = parts[i];
      const isLast = i === len - 1;
      const tempNodes = [];
      for (let j = 0, len2 = curNodes.length;j < len2; j++) {
        const node = curNodes[j];
        const nextNode = node.#children[part];
        if (nextNode) {
          nextNode.#params = node.#params;
          if (isLast) {
            if (nextNode.#children["*"]) {
              handlerSets.push(...this.#getHandlerSets(nextNode.#children["*"], method, node.#params));
            }
            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));
          } else {
            tempNodes.push(nextNode);
          }
        }
        for (let k = 0, len3 = node.#patterns.length;k < len3; k++) {
          const pattern = node.#patterns[k];
          const params = node.#params === emptyParams ? {} : { ...node.#params };
          if (pattern === "*") {
            const astNode = node.#children["*"];
            if (astNode) {
              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));
              astNode.#params = params;
              tempNodes.push(astNode);
            }
            continue;
          }
          if (part === "") {
            continue;
          }
          const [key, name, matcher] = pattern;
          const child = node.#children[key];
          const restPathString = parts.slice(i).join("/");
          if (matcher instanceof RegExp) {
            const m = matcher.exec(restPathString);
            if (m) {
              params[name] = m[0];
              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));
              if (Object.keys(child.#children).length) {
                child.#params = params;
                const componentCount = m[0].match(/\//)?.length ?? 0;
                const targetCurNodes = curNodesQueue[componentCount] ||= [];
                targetCurNodes.push(child);
              }
              continue;
            }
          }
          if (matcher === true || matcher.test(part)) {
            params[name] = part;
            if (isLast) {
              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));
              if (child.#children["*"]) {
                handlerSets.push(...this.#getHandlerSets(child.#children["*"], method, params, node.#params));
              }
            } else {
              child.#params = params;
              tempNodes.push(child);
            }
          }
        }
      }
      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);
    }
    if (handlerSets.length > 1) {
      handlerSets.sort((a, b) => {
        return a.score - b.score;
      });
    }
    return [handlerSets.map(({ handler, params }) => [handler, params])];
  }
};

// node_modules/hono/dist/router/trie-router/router.js
var TrieRouter = class {
  name = "TrieRouter";
  #node;
  constructor() {
    this.#node = new Node2;
  }
  add(method, path, handler) {
    const results = checkOptionalParameter(path);
    if (results) {
      for (let i = 0, len = results.length;i < len; i++) {
        this.#node.insert(method, results[i], handler);
      }
      return;
    }
    this.#node.insert(method, path, handler);
  }
  match(method, path) {
    return this.#node.search(method, path);
  }
};

// node_modules/hono/dist/hono.js
var Hono2 = class extends Hono {
  constructor(options = {}) {
    super(options);
    this.router = options.router ?? new SmartRouter({
      routers: [new RegExpRouter, new TrieRouter]
    });
  }
};

// node_modules/drizzle-orm/entity.js
var entityKind = Symbol.for("drizzle:entityKind");
var hasOwnEntityKind = Symbol.for("drizzle:hasOwnEntityKind");
function is(value, type) {
  if (!value || typeof value !== "object") {
    return false;
  }
  if (value instanceof type) {
    return true;
  }
  if (!Object.prototype.hasOwnProperty.call(type, entityKind)) {
    throw new Error(`Class "${type.name ?? "<unknown>"}" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`);
  }
  let cls = Object.getPrototypeOf(value).constructor;
  if (cls) {
    while (cls) {
      if (entityKind in cls && cls[entityKind] === type[entityKind]) {
        return true;
      }
      cls = Object.getPrototypeOf(cls);
    }
  }
  return false;
}

// node_modules/drizzle-orm/column.js
class Column {
  constructor(table, config) {
    this.table = table;
    this.config = config;
    this.name = config.name;
    this.keyAsName = config.keyAsName;
    this.notNull = config.notNull;
    this.default = config.default;
    this.defaultFn = config.defaultFn;
    this.onUpdateFn = config.onUpdateFn;
    this.hasDefault = config.hasDefault;
    this.primary = config.primaryKey;
    this.isUnique = config.isUnique;
    this.uniqueName = config.uniqueName;
    this.uniqueType = config.uniqueType;
    this.dataType = config.dataType;
    this.columnType = config.columnType;
    this.generated = config.generated;
    this.generatedIdentity = config.generatedIdentity;
  }
  static [entityKind] = "Column";
  name;
  keyAsName;
  primary;
  notNull;
  default;
  defaultFn;
  onUpdateFn;
  hasDefault;
  isUnique;
  uniqueName;
  uniqueType;
  dataType;
  columnType;
  enumValues = undefined;
  generated = undefined;
  generatedIdentity = undefined;
  config;
  mapFromDriverValue(value) {
    return value;
  }
  mapToDriverValue(value) {
    return value;
  }
  shouldDisableInsert() {
    return this.config.generated !== undefined && this.config.generated.type !== "byDefault";
  }
}

// node_modules/drizzle-orm/column-builder.js
class ColumnBuilder {
  static [entityKind] = "ColumnBuilder";
  config;
  constructor(name, dataType, columnType) {
    this.config = {
      name,
      keyAsName: name === "",
      notNull: false,
      default: undefined,
      hasDefault: false,
      primaryKey: false,
      isUnique: false,
      uniqueName: undefined,
      uniqueType: undefined,
      dataType,
      columnType,
      generated: undefined
    };
  }
  $type() {
    return this;
  }
  notNull() {
    this.config.notNull = true;
    return this;
  }
  default(value) {
    this.config.default = value;
    this.config.hasDefault = true;
    return this;
  }
  $defaultFn(fn) {
    this.config.defaultFn = fn;
    this.config.hasDefault = true;
    return this;
  }
  $default = this.$defaultFn;
  $onUpdateFn(fn) {
    this.config.onUpdateFn = fn;
    this.config.hasDefault = true;
    return this;
  }
  $onUpdate = this.$onUpdateFn;
  primaryKey() {
    this.config.primaryKey = true;
    this.config.notNull = true;
    return this;
  }
  setName(name) {
    if (this.config.name !== "")
      return;
    this.config.name = name;
  }
}

// node_modules/drizzle-orm/table.utils.js
var TableName = Symbol.for("drizzle:Name");

// node_modules/drizzle-orm/pg-core/foreign-keys.js
class ForeignKeyBuilder {
  static [entityKind] = "PgForeignKeyBuilder";
  reference;
  _onUpdate = "no action";
  _onDelete = "no action";
  constructor(config, actions) {
    this.reference = () => {
      const { name, columns, foreignColumns } = config();
      return { name, columns, foreignTable: foreignColumns[0].table, foreignColumns };
    };
    if (actions) {
      this._onUpdate = actions.onUpdate;
      this._onDelete = actions.onDelete;
    }
  }
  onUpdate(action) {
    this._onUpdate = action === undefined ? "no action" : action;
    return this;
  }
  onDelete(action) {
    this._onDelete = action === undefined ? "no action" : action;
    return this;
  }
  build(table) {
    return new ForeignKey(table, this);
  }
}

class ForeignKey {
  constructor(table, builder) {
    this.table = table;
    this.reference = builder.reference;
    this.onUpdate = builder._onUpdate;
    this.onDelete = builder._onDelete;
  }
  static [entityKind] = "PgForeignKey";
  reference;
  onUpdate;
  onDelete;
  getName() {
    const { name, columns, foreignColumns } = this.reference();
    const columnNames = columns.map((column) => column.name);
    const foreignColumnNames = foreignColumns.map((column) => column.name);
    const chunks = [
      this.table[TableName],
      ...columnNames,
      foreignColumns[0].table[TableName],
      ...foreignColumnNames
    ];
    return name ?? `${chunks.join("_")}_fk`;
  }
}

// node_modules/drizzle-orm/tracing-utils.js
function iife(fn, ...args) {
  return fn(...args);
}

// node_modules/drizzle-orm/pg-core/unique-constraint.js
function uniqueKeyName(table, columns) {
  return `${table[TableName]}_${columns.join("_")}_unique`;
}

// node_modules/drizzle-orm/pg-core/utils/array.js
function parsePgArrayValue(arrayString, startFrom, inQuotes) {
  for (let i = startFrom;i < arrayString.length; i++) {
    const char = arrayString[i];
    if (char === "\\") {
      i++;
      continue;
    }
    if (char === '"') {
      return [arrayString.slice(startFrom, i).replace(/\\/g, ""), i + 1];
    }
    if (inQuotes) {
      continue;
    }
    if (char === "," || char === "}") {
      return [arrayString.slice(startFrom, i).replace(/\\/g, ""), i];
    }
  }
  return [arrayString.slice(startFrom).replace(/\\/g, ""), arrayString.length];
}
function parsePgNestedArray(arrayString, startFrom = 0) {
  const result = [];
  let i = startFrom;
  let lastCharIsComma = false;
  while (i < arrayString.length) {
    const char = arrayString[i];
    if (char === ",") {
      if (lastCharIsComma || i === startFrom) {
        result.push("");
      }
      lastCharIsComma = true;
      i++;
      continue;
    }
    lastCharIsComma = false;
    if (char === "\\") {
      i += 2;
      continue;
    }
    if (char === '"') {
      const [value2, startFrom2] = parsePgArrayValue(arrayString, i + 1, true);
      result.push(value2);
      i = startFrom2;
      continue;
    }
    if (char === "}") {
      return [result, i + 1];
    }
    if (char === "{") {
      const [value2, startFrom2] = parsePgNestedArray(arrayString, i + 1);
      result.push(value2);
      i = startFrom2;
      continue;
    }
    const [value, newStartFrom] = parsePgArrayValue(arrayString, i, false);
    result.push(value);
    i = newStartFrom;
  }
  return [result, i];
}
function parsePgArray(arrayString) {
  const [result] = parsePgNestedArray(arrayString, 1);
  return result;
}
function makePgArray(array) {
  return `{${array.map((item) => {
    if (Array.isArray(item)) {
      return makePgArray(item);
    }
    if (typeof item === "string") {
      return `"${item.replace(/\\/g, "\\\\").replace(/"/g, "\\\"")}"`;
    }
    return `${item}`;
  }).join(",")}}`;
}

// node_modules/drizzle-orm/pg-core/columns/common.js
class PgColumnBuilder extends ColumnBuilder {
  foreignKeyConfigs = [];
  static [entityKind] = "PgColumnBuilder";
  array(size) {
    return new PgArrayBuilder(this.config.name, this, size);
  }
  references(ref, actions = {}) {
    this.foreignKeyConfigs.push({ ref, actions });
    return this;
  }
  unique(name, config) {
    this.config.isUnique = true;
    this.config.uniqueName = name;
    this.config.uniqueType = config?.nulls;
    return this;
  }
  generatedAlwaysAs(as) {
    this.config.generated = {
      as,
      type: "always",
      mode: "stored"
    };
    return this;
  }
  buildForeignKeys(column, table) {
    return this.foreignKeyConfigs.map(({ ref, actions }) => {
      return iife((ref2, actions2) => {
        const builder = new ForeignKeyBuilder(() => {
          const foreignColumn = ref2();
          return { columns: [column], foreignColumns: [foreignColumn] };
        });
        if (actions2.onUpdate) {
          builder.onUpdate(actions2.onUpdate);
        }
        if (actions2.onDelete) {
          builder.onDelete(actions2.onDelete);
        }
        return builder.build(table);
      }, ref, actions);
    });
  }
  buildExtraConfigColumn(table) {
    return new ExtraConfigColumn(table, this.config);
  }
}

class PgColumn extends Column {
  constructor(table, config) {
    if (!config.uniqueName) {
      config.uniqueName = uniqueKeyName(table, [config.name]);
    }
    super(table, config);
    this.table = table;
  }
  static [entityKind] = "PgColumn";
}

class ExtraConfigColumn extends PgColumn {
  static [entityKind] = "ExtraConfigColumn";
  getSQLType() {
    return this.getSQLType();
  }
  indexConfig = {
    order: this.config.order ?? "asc",
    nulls: this.config.nulls ?? "last",
    opClass: this.config.opClass
  };
  defaultConfig = {
    order: "asc",
    nulls: "last",
    opClass: undefined
  };
  asc() {
    this.indexConfig.order = "asc";
    return this;
  }
  desc() {
    this.indexConfig.order = "desc";
    return this;
  }
  nullsFirst() {
    this.indexConfig.nulls = "first";
    return this;
  }
  nullsLast() {
    this.indexConfig.nulls = "last";
    return this;
  }
  op(opClass) {
    this.indexConfig.opClass = opClass;
    return this;
  }
}
class PgArrayBuilder extends PgColumnBuilder {
  static [entityKind] = "PgArrayBuilder";
  constructor(name, baseBuilder, size) {
    super(name, "array", "PgArray");
    this.config.baseBuilder = baseBuilder;
    this.config.size = size;
  }
  build(table) {
    const baseColumn = this.config.baseBuilder.build(table);
    return new PgArray(table, this.config, baseColumn);
  }
}

class PgArray extends PgColumn {
  constructor(table, config, baseColumn, range) {
    super(table, config);
    this.baseColumn = baseColumn;
    this.range = range;
    this.size = config.size;
  }
  size;
  static [entityKind] = "PgArray";
  getSQLType() {
    return `${this.baseColumn.getSQLType()}[${typeof this.size === "number" ? this.size : ""}]`;
  }
  mapFromDriverValue(value) {
    if (typeof value === "string") {
      value = parsePgArray(value);
    }
    return value.map((v) => this.baseColumn.mapFromDriverValue(v));
  }
  mapToDriverValue(value, isNestedArray = false) {
    const a = value.map((v) => v === null ? null : is(this.baseColumn, PgArray) ? this.baseColumn.mapToDriverValue(v, true) : this.baseColumn.mapToDriverValue(v));
    if (isNestedArray)
      return a;
    return makePgArray(a);
  }
}

// node_modules/drizzle-orm/pg-core/columns/enum.js
class PgEnumObjectColumn extends PgColumn {
  static [entityKind] = "PgEnumObjectColumn";
  enum;
  enumValues = this.config.enum.enumValues;
  constructor(table, config) {
    super(table, config);
    this.enum = config.enum;
  }
  getSQLType() {
    return this.enum.enumName;
  }
}
var isPgEnumSym = Symbol.for("drizzle:isPgEnum");
function isPgEnum(obj) {
  return !!obj && typeof obj === "function" && isPgEnumSym in obj && obj[isPgEnumSym] === true;
}
class PgEnumColumn extends PgColumn {
  static [entityKind] = "PgEnumColumn";
  enum = this.config.enum;
  enumValues = this.config.enum.enumValues;
  constructor(table, config) {
    super(table, config);
    this.enum = config.enum;
  }
  getSQLType() {
    return this.enum.enumName;
  }
}

// node_modules/drizzle-orm/subquery.js
class Subquery {
  static [entityKind] = "Subquery";
  constructor(sql, fields, alias, isWith = false, usedTables = []) {
    this._ = {
      brand: "Subquery",
      sql,
      selectedFields: fields,
      alias,
      isWith,
      usedTables
    };
  }
}

class WithSubquery extends Subquery {
  static [entityKind] = "WithSubquery";
}

// node_modules/drizzle-orm/version.js
var version = "0.44.2";

// node_modules/drizzle-orm/tracing.js
var otel;
var rawTracer;
var tracer = {
  startActiveSpan(name, fn) {
    if (!otel) {
      return fn();
    }
    if (!rawTracer) {
      rawTracer = otel.trace.getTracer("drizzle-orm", version);
    }
    return iife((otel2, rawTracer2) => rawTracer2.startActiveSpan(name, (span) => {
      try {
        return fn(span);
      } catch (e) {
        span.setStatus({
          code: otel2.SpanStatusCode.ERROR,
          message: e instanceof Error ? e.message : "Unknown error"
        });
        throw e;
      } finally {
        span.end();
      }
    }), otel, rawTracer);
  }
};

// node_modules/drizzle-orm/view-common.js
var ViewBaseConfig = Symbol.for("drizzle:ViewBaseConfig");

// node_modules/drizzle-orm/table.js
var Schema = Symbol.for("drizzle:Schema");
var Columns = Symbol.for("drizzle:Columns");
var ExtraConfigColumns = Symbol.for("drizzle:ExtraConfigColumns");
var OriginalName = Symbol.for("drizzle:OriginalName");
var BaseName = Symbol.for("drizzle:BaseName");
var IsAlias = Symbol.for("drizzle:IsAlias");
var ExtraConfigBuilder = Symbol.for("drizzle:ExtraConfigBuilder");
var IsDrizzleTable = Symbol.for("drizzle:IsDrizzleTable");

class Table {
  static [entityKind] = "Table";
  static Symbol = {
    Name: TableName,
    Schema,
    OriginalName,
    Columns,
    ExtraConfigColumns,
    BaseName,
    IsAlias,
    ExtraConfigBuilder
  };
  [TableName];
  [OriginalName];
  [Schema];
  [Columns];
  [ExtraConfigColumns];
  [BaseName];
  [IsAlias] = false;
  [IsDrizzleTable] = true;
  [ExtraConfigBuilder] = undefined;
  constructor(name, schema, baseName) {
    this[TableName] = this[OriginalName] = name;
    this[Schema] = schema;
    this[BaseName] = baseName;
  }
}
function getTableName(table) {
  return table[TableName];
}
function getTableUniqueName(table) {
  return `${table[Schema] ?? "public"}.${table[TableName]}`;
}

// node_modules/drizzle-orm/sql/sql.js
function isSQLWrapper(value) {
  return value !== null && value !== undefined && typeof value.getSQL === "function";
}
function mergeQueries(queries) {
  const result = { sql: "", params: [] };
  for (const query of queries) {
    result.sql += query.sql;
    result.params.push(...query.params);
    if (query.typings?.length) {
      if (!result.typings) {
        result.typings = [];
      }
      result.typings.push(...query.typings);
    }
  }
  return result;
}

class StringChunk {
  static [entityKind] = "StringChunk";
  value;
  constructor(value) {
    this.value = Array.isArray(value) ? value : [value];
  }
  getSQL() {
    return new SQL([this]);
  }
}

class SQL {
  constructor(queryChunks) {
    this.queryChunks = queryChunks;
    for (const chunk of queryChunks) {
      if (is(chunk, Table)) {
        const schemaName = chunk[Table.Symbol.Schema];
        this.usedTables.push(schemaName === undefined ? chunk[Table.Symbol.Name] : schemaName + "." + chunk[Table.Symbol.Name]);
      }
    }
  }
  static [entityKind] = "SQL";
  decoder = noopDecoder;
  shouldInlineParams = false;
  usedTables = [];
  append(query) {
    this.queryChunks.push(...query.queryChunks);
    return this;
  }
  toQuery(config) {
    return tracer.startActiveSpan("drizzle.buildSQL", (span) => {
      const query = this.buildQueryFromSourceParams(this.queryChunks, config);
      span?.setAttributes({
        "drizzle.query.text": query.sql,
        "drizzle.query.params": JSON.stringify(query.params)
      });
      return query;
    });
  }
  buildQueryFromSourceParams(chunks, _config) {
    const config = Object.assign({}, _config, {
      inlineParams: _config.inlineParams || this.shouldInlineParams,
      paramStartIndex: _config.paramStartIndex || { value: 0 }
    });
    const {
      casing,
      escapeName,
      escapeParam,
      prepareTyping,
      inlineParams,
      paramStartIndex
    } = config;
    return mergeQueries(chunks.map((chunk) => {
      if (is(chunk, StringChunk)) {
        return { sql: chunk.value.join(""), params: [] };
      }
      if (is(chunk, Name)) {
        return { sql: escapeName(chunk.value), params: [] };
      }
      if (chunk === undefined) {
        return { sql: "", params: [] };
      }
      if (Array.isArray(chunk)) {
        const result = [new StringChunk("(")];
        for (const [i, p] of chunk.entries()) {
          result.push(p);
          if (i < chunk.length - 1) {
            result.push(new StringChunk(", "));
          }
        }
        result.push(new StringChunk(")"));
        return this.buildQueryFromSourceParams(result, config);
      }
      if (is(chunk, SQL)) {
        return this.buildQueryFromSourceParams(chunk.queryChunks, {
          ...config,
          inlineParams: inlineParams || chunk.shouldInlineParams
        });
      }
      if (is(chunk, Table)) {
        const schemaName = chunk[Table.Symbol.Schema];
        const tableName = chunk[Table.Symbol.Name];
        return {
          sql: schemaName === undefined || chunk[IsAlias] ? escapeName(tableName) : escapeName(schemaName) + "." + escapeName(tableName),
          params: []
        };
      }
      if (is(chunk, Column)) {
        const columnName = casing.getColumnCasing(chunk);
        if (_config.invokeSource === "indexes") {
          return { sql: escapeName(columnName), params: [] };
        }
        const schemaName = chunk.table[Table.Symbol.Schema];
        return {
          sql: chunk.table[IsAlias] || schemaName === undefined ? escapeName(chunk.table[Table.Symbol.Name]) + "." + escapeName(columnName) : escapeName(schemaName) + "." + escapeName(chunk.table[Table.Symbol.Name]) + "." + escapeName(columnName),
          params: []
        };
      }
      if (is(chunk, View)) {
        const schemaName = chunk[ViewBaseConfig].schema;
        const viewName = chunk[ViewBaseConfig].name;
        return {
          sql: schemaName === undefined || chunk[ViewBaseConfig].isAlias ? escapeName(viewName) : escapeName(schemaName) + "." + escapeName(viewName),
          params: []
        };
      }
      if (is(chunk, Param)) {
        if (is(chunk.value, Placeholder)) {
          return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ["none"] };
        }
        const mappedValue = chunk.value === null ? null : chunk.encoder.mapToDriverValue(chunk.value);
        if (is(mappedValue, SQL)) {
          return this.buildQueryFromSourceParams([mappedValue], config);
        }
        if (inlineParams) {
          return { sql: this.mapInlineParam(mappedValue, config), params: [] };
        }
        let typings = ["none"];
        if (prepareTyping) {
          typings = [prepareTyping(chunk.encoder)];
        }
        return { sql: escapeParam(paramStartIndex.value++, mappedValue), params: [mappedValue], typings };
      }
      if (is(chunk, Placeholder)) {
        return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ["none"] };
      }
      if (is(chunk, SQL.Aliased) && chunk.fieldAlias !== undefined) {
        return { sql: escapeName(chunk.fieldAlias), params: [] };
      }
      if (is(chunk, Subquery)) {
        if (chunk._.isWith) {
          return { sql: escapeName(chunk._.alias), params: [] };
        }
        return this.buildQueryFromSourceParams([
          new StringChunk("("),
          chunk._.sql,
          new StringChunk(") "),
          new Name(chunk._.alias)
        ], config);
      }
      if (isPgEnum(chunk)) {
        if (chunk.schema) {
          return { sql: escapeName(chunk.schema) + "." + escapeName(chunk.enumName), params: [] };
        }
        return { sql: escapeName(chunk.enumName), params: [] };
      }
      if (isSQLWrapper(chunk)) {
        if (chunk.shouldOmitSQLParens?.()) {
          return this.buildQueryFromSourceParams([chunk.getSQL()], config);
        }
        return this.buildQueryFromSourceParams([
          new StringChunk("("),
          chunk.getSQL(),
          new StringChunk(")")
        ], config);
      }
      if (inlineParams) {
        return { sql: this.mapInlineParam(chunk, config), params: [] };
      }
      return { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ["none"] };
    }));
  }
  mapInlineParam(chunk, { escapeString }) {
    if (chunk === null) {
      return "null";
    }
    if (typeof chunk === "number" || typeof chunk === "boolean") {
      return chunk.toString();
    }
    if (typeof chunk === "string") {
      return escapeString(chunk);
    }
    if (typeof chunk === "object") {
      const mappedValueAsString = chunk.toString();
      if (mappedValueAsString === "[object Object]") {
        return escapeString(JSON.stringify(chunk));
      }
      return escapeString(mappedValueAsString);
    }
    throw new Error("Unexpected param value: " + chunk);
  }
  getSQL() {
    return this;
  }
  as(alias) {
    if (alias === undefined) {
      return this;
    }
    return new SQL.Aliased(this, alias);
  }
  mapWith(decoder) {
    this.decoder = typeof decoder === "function" ? { mapFromDriverValue: decoder } : decoder;
    return this;
  }
  inlineParams() {
    this.shouldInlineParams = true;
    return this;
  }
  if(condition) {
    return condition ? this : undefined;
  }
}

class Name {
  constructor(value) {
    this.value = value;
  }
  static [entityKind] = "Name";
  brand;
  getSQL() {
    return new SQL([this]);
  }
}
function isDriverValueEncoder(value) {
  return typeof value === "object" && value !== null && "mapToDriverValue" in value && typeof value.mapToDriverValue === "function";
}
var noopDecoder = {
  mapFromDriverValue: (value) => value
};
var noopEncoder = {
  mapToDriverValue: (value) => value
};
var noopMapper = {
  ...noopDecoder,
  ...noopEncoder
};

class Param {
  constructor(value, encoder = noopEncoder) {
    this.value = value;
    this.encoder = encoder;
  }
  static [entityKind] = "Param";
  brand;
  getSQL() {
    return new SQL([this]);
  }
}
function sql(strings, ...params) {
  const queryChunks = [];
  if (params.length > 0 || strings.length > 0 && strings[0] !== "") {
    queryChunks.push(new StringChunk(strings[0]));
  }
  for (const [paramIndex, param2] of params.entries()) {
    queryChunks.push(param2, new StringChunk(strings[paramIndex + 1]));
  }
  return new SQL(queryChunks);
}
((sql2) => {
  function empty() {
    return new SQL([]);
  }
  sql2.empty = empty;
  function fromList(list) {
    return new SQL(list);
  }
  sql2.fromList = fromList;
  function raw2(str) {
    return new SQL([new StringChunk(str)]);
  }
  sql2.raw = raw2;
  function join(chunks, separator) {
    const result = [];
    for (const [i, chunk] of chunks.entries()) {
      if (i > 0 && separator !== undefined) {
        result.push(separator);
      }
      result.push(chunk);
    }
    return new SQL(result);
  }
  sql2.join = join;
  function identifier(value) {
    return new Name(value);
  }
  sql2.identifier = identifier;
  function placeholder2(name2) {
    return new Placeholder(name2);
  }
  sql2.placeholder = placeholder2;
  function param2(value, encoder) {
    return new Param(value, encoder);
  }
  sql2.param = param2;
})(sql || (sql = {}));
((SQL2) => {

  class Aliased {
    constructor(sql2, fieldAlias) {
      this.sql = sql2;
      this.fieldAlias = fieldAlias;
    }
    static [entityKind] = "SQL.Aliased";
    isSelectionField = false;
    getSQL() {
      return this.sql;
    }
    clone() {
      return new Aliased(this.sql, this.fieldAlias);
    }
  }
  SQL2.Aliased = Aliased;
})(SQL || (SQL = {}));

class Placeholder {
  constructor(name2) {
    this.name = name2;
  }
  static [entityKind] = "Placeholder";
  getSQL() {
    return new SQL([this]);
  }
}
function fillPlaceholders(params, values) {
  return params.map((p) => {
    if (is(p, Placeholder)) {
      if (!(p.name in values)) {
        throw new Error(`No value for placeholder "${p.name}" was provided`);
      }
      return values[p.name];
    }
    if (is(p, Param) && is(p.value, Placeholder)) {
      if (!(p.value.name in values)) {
        throw new Error(`No value for placeholder "${p.value.name}" was provided`);
      }
      return p.encoder.mapToDriverValue(values[p.value.name]);
    }
    return p;
  });
}
var IsDrizzleView = Symbol.for("drizzle:IsDrizzleView");

class View {
  static [entityKind] = "View";
  [ViewBaseConfig];
  [IsDrizzleView] = true;
  constructor({ name: name2, schema, selectedFields, query }) {
    this[ViewBaseConfig] = {
      name: name2,
      originalName: name2,
      schema,
      selectedFields,
      query,
      isExisting: !query,
      isAlias: false
    };
  }
  getSQL() {
    return new SQL([this]);
  }
}
Column.prototype.getSQL = function() {
  return new SQL([this]);
};
Table.prototype.getSQL = function() {
  return new SQL([this]);
};
Subquery.prototype.getSQL = function() {
  return new SQL([this]);
};

// node_modules/drizzle-orm/alias.js
class ColumnAliasProxyHandler {
  constructor(table) {
    this.table = table;
  }
  static [entityKind] = "ColumnAliasProxyHandler";
  get(columnObj, prop) {
    if (prop === "table") {
      return this.table;
    }
    return columnObj[prop];
  }
}

class TableAliasProxyHandler {
  constructor(alias, replaceOriginalName) {
    this.alias = alias;
    this.replaceOriginalName = replaceOriginalName;
  }
  static [entityKind] = "TableAliasProxyHandler";
  get(target, prop) {
    if (prop === Table.Symbol.IsAlias) {
      return true;
    }
    if (prop === Table.Symbol.Name) {
      return this.alias;
    }
    if (this.replaceOriginalName && prop === Table.Symbol.OriginalName) {
      return this.alias;
    }
    if (prop === ViewBaseConfig) {
      return {
        ...target[ViewBaseConfig],
        name: this.alias,
        isAlias: true
      };
    }
    if (prop === Table.Symbol.Columns) {
      const columns = target[Table.Symbol.Columns];
      if (!columns) {
        return columns;
      }
      const proxiedColumns = {};
      Object.keys(columns).map((key) => {
        proxiedColumns[key] = new Proxy(columns[key], new ColumnAliasProxyHandler(new Proxy(target, this)));
      });
      return proxiedColumns;
    }
    const value = target[prop];
    if (is(value, Column)) {
      return new Proxy(value, new ColumnAliasProxyHandler(new Proxy(target, this)));
    }
    return value;
  }
}
function aliasedTable(table, tableAlias) {
  return new Proxy(table, new TableAliasProxyHandler(tableAlias, false));
}
function aliasedTableColumn(column, tableAlias) {
  return new Proxy(column, new ColumnAliasProxyHandler(new Proxy(column.table, new TableAliasProxyHandler(tableAlias, false))));
}
function mapColumnsInAliasedSQLToAlias(query, alias) {
  return new SQL.Aliased(mapColumnsInSQLToAlias(query.sql, alias), query.fieldAlias);
}
function mapColumnsInSQLToAlias(query, alias) {
  return sql.join(query.queryChunks.map((c) => {
    if (is(c, Column)) {
      return aliasedTableColumn(c, alias);
    }
    if (is(c, SQL)) {
      return mapColumnsInSQLToAlias(c, alias);
    }
    if (is(c, SQL.Aliased)) {
      return mapColumnsInAliasedSQLToAlias(c, alias);
    }
    return c;
  }));
}

// node_modules/drizzle-orm/utils.js
function mapResultRow(columns, row, joinsNotNullableMap) {
  const nullifyMap = {};
  const result = columns.reduce((result2, { path, field }, columnIndex) => {
    let decoder;
    if (is(field, Column)) {
      decoder = field;
    } else if (is(field, SQL)) {
      decoder = field.decoder;
    } else {
      decoder = field.sql.decoder;
    }
    let node = result2;
    for (const [pathChunkIndex, pathChunk] of path.entries()) {
      if (pathChunkIndex < path.length - 1) {
        if (!(pathChunk in node)) {
          node[pathChunk] = {};
        }
        node = node[pathChunk];
      } else {
        const rawValue = row[columnIndex];
        const value = node[pathChunk] = rawValue === null ? null : decoder.mapFromDriverValue(rawValue);
        if (joinsNotNullableMap && is(field, Column) && path.length === 2) {
          const objectName = path[0];
          if (!(objectName in nullifyMap)) {
            nullifyMap[objectName] = value === null ? getTableName(field.table) : false;
          } else if (typeof nullifyMap[objectName] === "string" && nullifyMap[objectName] !== getTableName(field.table)) {
            nullifyMap[objectName] = false;
          }
        }
      }
    }
    return result2;
  }, {});
  if (joinsNotNullableMap && Object.keys(nullifyMap).length > 0) {
    for (const [objectName, tableName] of Object.entries(nullifyMap)) {
      if (typeof tableName === "string" && !joinsNotNullableMap[tableName]) {
        result[objectName] = null;
      }
    }
  }
  return result;
}
function orderSelectedFields(fields, pathPrefix) {
  return Object.entries(fields).reduce((result, [name, field]) => {
    if (typeof name !== "string") {
      return result;
    }
    const newPath = pathPrefix ? [...pathPrefix, name] : [name];
    if (is(field, Column) || is(field, SQL) || is(field, SQL.Aliased)) {
      result.push({ path: newPath, field });
    } else if (is(field, Table)) {
      result.push(...orderSelectedFields(field[Table.Symbol.Columns], newPath));
    } else {
      result.push(...orderSelectedFields(field, newPath));
    }
    return result;
  }, []);
}
function haveSameKeys(left, right) {
  const leftKeys = Object.keys(left);
  const rightKeys = Object.keys(right);
  if (leftKeys.length !== rightKeys.length) {
    return false;
  }
  for (const [index, key] of leftKeys.entries()) {
    if (key !== rightKeys[index]) {
      return false;
    }
  }
  return true;
}
function mapUpdateSet(table, values) {
  const entries = Object.entries(values).filter(([, value]) => value !== undefined).map(([key, value]) => {
    if (is(value, SQL) || is(value, Column)) {
      return [key, value];
    } else {
      return [key, new Param(value, table[Table.Symbol.Columns][key])];
    }
  });
  if (entries.length === 0) {
    throw new Error("No values to set");
  }
  return Object.fromEntries(entries);
}
function applyMixins(baseClass, extendedClasses) {
  for (const extendedClass of extendedClasses) {
    for (const name of Object.getOwnPropertyNames(extendedClass.prototype)) {
      if (name === "constructor")
        continue;
      Object.defineProperty(baseClass.prototype, name, Object.getOwnPropertyDescriptor(extendedClass.prototype, name) || /* @__PURE__ */ Object.create(null));
    }
  }
}
function getTableColumns(table) {
  return table[Table.Symbol.Columns];
}
function getTableLikeName(table) {
  return is(table, Subquery) ? table._.alias : is(table, View) ? table[ViewBaseConfig].name : is(table, SQL) ? undefined : table[Table.Symbol.IsAlias] ? table[Table.Symbol.Name] : table[Table.Symbol.BaseName];
}
function getColumnNameAndConfig(a, b) {
  return {
    name: typeof a === "string" && a.length > 0 ? a : "",
    config: typeof a === "object" ? a : b
  };
}
function isConfig(data) {
  if (typeof data !== "object" || data === null)
    return false;
  if (data.constructor.name !== "Object")
    return false;
  if ("logger" in data) {
    const type = typeof data["logger"];
    if (type !== "boolean" && (type !== "object" || typeof data["logger"]["logQuery"] !== "function") && type !== "undefined")
      return false;
    return true;
  }
  if ("schema" in data) {
    const type = typeof data["schema"];
    if (type !== "object" && type !== "undefined")
      return false;
    return true;
  }
  if ("casing" in data) {
    const type = typeof data["casing"];
    if (type !== "string" && type !== "undefined")
      return false;
    return true;
  }
  if ("mode" in data) {
    if (data["mode"] !== "default" || data["mode"] !== "planetscale" || data["mode"] !== undefined)
      return false;
    return true;
  }
  if ("connection" in data) {
    const type = typeof data["connection"];
    if (type !== "string" && type !== "object" && type !== "undefined")
      return false;
    return true;
  }
  if ("client" in data) {
    const type = typeof data["client"];
    if (type !== "object" && type !== "function" && type !== "undefined")
      return false;
    return true;
  }
  if (Object.keys(data).length === 0)
    return true;
  return false;
}

// node_modules/drizzle-orm/pg-core/columns/int.common.js
class PgIntColumnBaseBuilder extends PgColumnBuilder {
  static [entityKind] = "PgIntColumnBaseBuilder";
  generatedAlwaysAsIdentity(sequence) {
    if (sequence) {
      const { name, ...options } = sequence;
      this.config.generatedIdentity = {
        type: "always",
        sequenceName: name,
        sequenceOptions: options
      };
    } else {
      this.config.generatedIdentity = {
        type: "always"
      };
    }
    this.config.hasDefault = true;
    this.config.notNull = true;
    return this;
  }
  generatedByDefaultAsIdentity(sequence) {
    if (sequence) {
      const { name, ...options } = sequence;
      this.config.generatedIdentity = {
        type: "byDefault",
        sequenceName: name,
        sequenceOptions: options
      };
    } else {
      this.config.generatedIdentity = {
        type: "byDefault"
      };
    }
    this.config.hasDefault = true;
    this.config.notNull = true;
    return this;
  }
}

// node_modules/drizzle-orm/pg-core/columns/bigint.js
class PgBigInt53Builder extends PgIntColumnBaseBuilder {
  static [entityKind] = "PgBigInt53Builder";
  constructor(name) {
    super(name, "number", "PgBigInt53");
  }
  build(table) {
    return new PgBigInt53(table, this.config);
  }
}

class PgBigInt53 extends PgColumn {
  static [entityKind] = "PgBigInt53";
  getSQLType() {
    return "bigint";
  }
  mapFromDriverValue(value) {
    if (typeof value === "number") {
      return value;
    }
    return Number(value);
  }
}

class PgBigInt64Builder extends PgIntColumnBaseBuilder {
  static [entityKind] = "PgBigInt64Builder";
  constructor(name) {
    super(name, "bigint", "PgBigInt64");
  }
  build(table) {
    return new PgBigInt64(table, this.config);
  }
}

class PgBigInt64 extends PgColumn {
  static [entityKind] = "PgBigInt64";
  getSQLType() {
    return "bigint";
  }
  mapFromDriverValue(value) {
    return BigInt(value);
  }
}
function bigint(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (config.mode === "number") {
    return new PgBigInt53Builder(name);
  }
  return new PgBigInt64Builder(name);
}

// node_modules/drizzle-orm/pg-core/columns/bigserial.js
class PgBigSerial53Builder extends PgColumnBuilder {
  static [entityKind] = "PgBigSerial53Builder";
  constructor(name) {
    super(name, "number", "PgBigSerial53");
    this.config.hasDefault = true;
    this.config.notNull = true;
  }
  build(table) {
    return new PgBigSerial53(table, this.config);
  }
}

class PgBigSerial53 extends PgColumn {
  static [entityKind] = "PgBigSerial53";
  getSQLType() {
    return "bigserial";
  }
  mapFromDriverValue(value) {
    if (typeof value === "number") {
      return value;
    }
    return Number(value);
  }
}

class PgBigSerial64Builder extends PgColumnBuilder {
  static [entityKind] = "PgBigSerial64Builder";
  constructor(name) {
    super(name, "bigint", "PgBigSerial64");
    this.config.hasDefault = true;
  }
  build(table) {
    return new PgBigSerial64(table, this.config);
  }
}

class PgBigSerial64 extends PgColumn {
  static [entityKind] = "PgBigSerial64";
  getSQLType() {
    return "bigserial";
  }
  mapFromDriverValue(value) {
    return BigInt(value);
  }
}
function bigserial(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (config.mode === "number") {
    return new PgBigSerial53Builder(name);
  }
  return new PgBigSerial64Builder(name);
}

// node_modules/drizzle-orm/pg-core/columns/boolean.js
class PgBooleanBuilder extends PgColumnBuilder {
  static [entityKind] = "PgBooleanBuilder";
  constructor(name) {
    super(name, "boolean", "PgBoolean");
  }
  build(table) {
    return new PgBoolean(table, this.config);
  }
}

class PgBoolean extends PgColumn {
  static [entityKind] = "PgBoolean";
  getSQLType() {
    return "boolean";
  }
}
function boolean(name) {
  return new PgBooleanBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/char.js
class PgCharBuilder extends PgColumnBuilder {
  static [entityKind] = "PgCharBuilder";
  constructor(name, config) {
    super(name, "string", "PgChar");
    this.config.length = config.length;
    this.config.enumValues = config.enum;
  }
  build(table) {
    return new PgChar(table, this.config);
  }
}

class PgChar extends PgColumn {
  static [entityKind] = "PgChar";
  length = this.config.length;
  enumValues = this.config.enumValues;
  getSQLType() {
    return this.length === undefined ? `char` : `char(${this.length})`;
  }
}
function char(a, b = {}) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgCharBuilder(name, config);
}

// node_modules/drizzle-orm/pg-core/columns/cidr.js
class PgCidrBuilder extends PgColumnBuilder {
  static [entityKind] = "PgCidrBuilder";
  constructor(name) {
    super(name, "string", "PgCidr");
  }
  build(table) {
    return new PgCidr(table, this.config);
  }
}

class PgCidr extends PgColumn {
  static [entityKind] = "PgCidr";
  getSQLType() {
    return "cidr";
  }
}
function cidr(name) {
  return new PgCidrBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/custom.js
class PgCustomColumnBuilder extends PgColumnBuilder {
  static [entityKind] = "PgCustomColumnBuilder";
  constructor(name, fieldConfig, customTypeParams) {
    super(name, "custom", "PgCustomColumn");
    this.config.fieldConfig = fieldConfig;
    this.config.customTypeParams = customTypeParams;
  }
  build(table) {
    return new PgCustomColumn(table, this.config);
  }
}

class PgCustomColumn extends PgColumn {
  static [entityKind] = "PgCustomColumn";
  sqlName;
  mapTo;
  mapFrom;
  constructor(table, config) {
    super(table, config);
    this.sqlName = config.customTypeParams.dataType(config.fieldConfig);
    this.mapTo = config.customTypeParams.toDriver;
    this.mapFrom = config.customTypeParams.fromDriver;
  }
  getSQLType() {
    return this.sqlName;
  }
  mapFromDriverValue(value) {
    return typeof this.mapFrom === "function" ? this.mapFrom(value) : value;
  }
  mapToDriverValue(value) {
    return typeof this.mapTo === "function" ? this.mapTo(value) : value;
  }
}
function customType(customTypeParams) {
  return (a, b) => {
    const { name, config } = getColumnNameAndConfig(a, b);
    return new PgCustomColumnBuilder(name, config, customTypeParams);
  };
}

// node_modules/drizzle-orm/pg-core/columns/date.common.js
class PgDateColumnBaseBuilder extends PgColumnBuilder {
  static [entityKind] = "PgDateColumnBaseBuilder";
  defaultNow() {
    return this.default(sql`now()`);
  }
}

// node_modules/drizzle-orm/pg-core/columns/date.js
class PgDateBuilder extends PgDateColumnBaseBuilder {
  static [entityKind] = "PgDateBuilder";
  constructor(name) {
    super(name, "date", "PgDate");
  }
  build(table) {
    return new PgDate(table, this.config);
  }
}

class PgDate extends PgColumn {
  static [entityKind] = "PgDate";
  getSQLType() {
    return "date";
  }
  mapFromDriverValue(value) {
    return new Date(value);
  }
  mapToDriverValue(value) {
    return value.toISOString();
  }
}

class PgDateStringBuilder extends PgDateColumnBaseBuilder {
  static [entityKind] = "PgDateStringBuilder";
  constructor(name) {
    super(name, "string", "PgDateString");
  }
  build(table) {
    return new PgDateString(table, this.config);
  }
}

class PgDateString extends PgColumn {
  static [entityKind] = "PgDateString";
  getSQLType() {
    return "date";
  }
}
function date(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (config?.mode === "date") {
    return new PgDateBuilder(name);
  }
  return new PgDateStringBuilder(name);
}

// node_modules/drizzle-orm/pg-core/columns/double-precision.js
class PgDoublePrecisionBuilder extends PgColumnBuilder {
  static [entityKind] = "PgDoublePrecisionBuilder";
  constructor(name) {
    super(name, "number", "PgDoublePrecision");
  }
  build(table) {
    return new PgDoublePrecision(table, this.config);
  }
}

class PgDoublePrecision extends PgColumn {
  static [entityKind] = "PgDoublePrecision";
  getSQLType() {
    return "double precision";
  }
  mapFromDriverValue(value) {
    if (typeof value === "string") {
      return Number.parseFloat(value);
    }
    return value;
  }
}
function doublePrecision(name) {
  return new PgDoublePrecisionBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/inet.js
class PgInetBuilder extends PgColumnBuilder {
  static [entityKind] = "PgInetBuilder";
  constructor(name) {
    super(name, "string", "PgInet");
  }
  build(table) {
    return new PgInet(table, this.config);
  }
}

class PgInet extends PgColumn {
  static [entityKind] = "PgInet";
  getSQLType() {
    return "inet";
  }
}
function inet(name) {
  return new PgInetBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/integer.js
class PgIntegerBuilder extends PgIntColumnBaseBuilder {
  static [entityKind] = "PgIntegerBuilder";
  constructor(name) {
    super(name, "number", "PgInteger");
  }
  build(table) {
    return new PgInteger(table, this.config);
  }
}

class PgInteger extends PgColumn {
  static [entityKind] = "PgInteger";
  getSQLType() {
    return "integer";
  }
  mapFromDriverValue(value) {
    if (typeof value === "string") {
      return Number.parseInt(value);
    }
    return value;
  }
}
function integer(name) {
  return new PgIntegerBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/interval.js
class PgIntervalBuilder extends PgColumnBuilder {
  static [entityKind] = "PgIntervalBuilder";
  constructor(name, intervalConfig) {
    super(name, "string", "PgInterval");
    this.config.intervalConfig = intervalConfig;
  }
  build(table) {
    return new PgInterval(table, this.config);
  }
}

class PgInterval extends PgColumn {
  static [entityKind] = "PgInterval";
  fields = this.config.intervalConfig.fields;
  precision = this.config.intervalConfig.precision;
  getSQLType() {
    const fields = this.fields ? ` ${this.fields}` : "";
    const precision = this.precision ? `(${this.precision})` : "";
    return `interval${fields}${precision}`;
  }
}
function interval(a, b = {}) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgIntervalBuilder(name, config);
}

// node_modules/drizzle-orm/pg-core/columns/json.js
class PgJsonBuilder extends PgColumnBuilder {
  static [entityKind] = "PgJsonBuilder";
  constructor(name) {
    super(name, "json", "PgJson");
  }
  build(table) {
    return new PgJson(table, this.config);
  }
}

class PgJson extends PgColumn {
  static [entityKind] = "PgJson";
  constructor(table, config) {
    super(table, config);
  }
  getSQLType() {
    return "json";
  }
  mapToDriverValue(value) {
    return JSON.stringify(value);
  }
  mapFromDriverValue(value) {
    if (typeof value === "string") {
      try {
        return JSON.parse(value);
      } catch {
        return value;
      }
    }
    return value;
  }
}
function json(name) {
  return new PgJsonBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/jsonb.js
class PgJsonbBuilder extends PgColumnBuilder {
  static [entityKind] = "PgJsonbBuilder";
  constructor(name) {
    super(name, "json", "PgJsonb");
  }
  build(table) {
    return new PgJsonb(table, this.config);
  }
}

class PgJsonb extends PgColumn {
  static [entityKind] = "PgJsonb";
  constructor(table, config) {
    super(table, config);
  }
  getSQLType() {
    return "jsonb";
  }
  mapToDriverValue(value) {
    return JSON.stringify(value);
  }
  mapFromDriverValue(value) {
    if (typeof value === "string") {
      try {
        return JSON.parse(value);
      } catch {
        return value;
      }
    }
    return value;
  }
}
function jsonb(name) {
  return new PgJsonbBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/line.js
class PgLineBuilder extends PgColumnBuilder {
  static [entityKind] = "PgLineBuilder";
  constructor(name) {
    super(name, "array", "PgLine");
  }
  build(table) {
    return new PgLineTuple(table, this.config);
  }
}

class PgLineTuple extends PgColumn {
  static [entityKind] = "PgLine";
  getSQLType() {
    return "line";
  }
  mapFromDriverValue(value) {
    const [a, b, c] = value.slice(1, -1).split(",");
    return [Number.parseFloat(a), Number.parseFloat(b), Number.parseFloat(c)];
  }
  mapToDriverValue(value) {
    return `{${value[0]},${value[1]},${value[2]}}`;
  }
}

class PgLineABCBuilder extends PgColumnBuilder {
  static [entityKind] = "PgLineABCBuilder";
  constructor(name) {
    super(name, "json", "PgLineABC");
  }
  build(table) {
    return new PgLineABC(table, this.config);
  }
}

class PgLineABC extends PgColumn {
  static [entityKind] = "PgLineABC";
  getSQLType() {
    return "line";
  }
  mapFromDriverValue(value) {
    const [a, b, c] = value.slice(1, -1).split(",");
    return { a: Number.parseFloat(a), b: Number.parseFloat(b), c: Number.parseFloat(c) };
  }
  mapToDriverValue(value) {
    return `{${value.a},${value.b},${value.c}}`;
  }
}
function line(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (!config?.mode || config.mode === "tuple") {
    return new PgLineBuilder(name);
  }
  return new PgLineABCBuilder(name);
}

// node_modules/drizzle-orm/pg-core/columns/macaddr.js
class PgMacaddrBuilder extends PgColumnBuilder {
  static [entityKind] = "PgMacaddrBuilder";
  constructor(name) {
    super(name, "string", "PgMacaddr");
  }
  build(table) {
    return new PgMacaddr(table, this.config);
  }
}

class PgMacaddr extends PgColumn {
  static [entityKind] = "PgMacaddr";
  getSQLType() {
    return "macaddr";
  }
}
function macaddr(name) {
  return new PgMacaddrBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/macaddr8.js
class PgMacaddr8Builder extends PgColumnBuilder {
  static [entityKind] = "PgMacaddr8Builder";
  constructor(name) {
    super(name, "string", "PgMacaddr8");
  }
  build(table) {
    return new PgMacaddr8(table, this.config);
  }
}

class PgMacaddr8 extends PgColumn {
  static [entityKind] = "PgMacaddr8";
  getSQLType() {
    return "macaddr8";
  }
}
function macaddr8(name) {
  return new PgMacaddr8Builder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/numeric.js
class PgNumericBuilder extends PgColumnBuilder {
  static [entityKind] = "PgNumericBuilder";
  constructor(name, precision, scale) {
    super(name, "string", "PgNumeric");
    this.config.precision = precision;
    this.config.scale = scale;
  }
  build(table) {
    return new PgNumeric(table, this.config);
  }
}

class PgNumeric extends PgColumn {
  static [entityKind] = "PgNumeric";
  precision;
  scale;
  constructor(table, config) {
    super(table, config);
    this.precision = config.precision;
    this.scale = config.scale;
  }
  mapFromDriverValue(value) {
    if (typeof value === "string")
      return value;
    return String(value);
  }
  getSQLType() {
    if (this.precision !== undefined && this.scale !== undefined) {
      return `numeric(${this.precision}, ${this.scale})`;
    } else if (this.precision === undefined) {
      return "numeric";
    } else {
      return `numeric(${this.precision})`;
    }
  }
}

class PgNumericNumberBuilder extends PgColumnBuilder {
  static [entityKind] = "PgNumericNumberBuilder";
  constructor(name, precision, scale) {
    super(name, "number", "PgNumericNumber");
    this.config.precision = precision;
    this.config.scale = scale;
  }
  build(table) {
    return new PgNumericNumber(table, this.config);
  }
}

class PgNumericNumber extends PgColumn {
  static [entityKind] = "PgNumericNumber";
  precision;
  scale;
  constructor(table, config) {
    super(table, config);
    this.precision = config.precision;
    this.scale = config.scale;
  }
  mapFromDriverValue(value) {
    if (typeof value === "number")
      return value;
    return Number(value);
  }
  mapToDriverValue = String;
  getSQLType() {
    if (this.precision !== undefined && this.scale !== undefined) {
      return `numeric(${this.precision}, ${this.scale})`;
    } else if (this.precision === undefined) {
      return "numeric";
    } else {
      return `numeric(${this.precision})`;
    }
  }
}

class PgNumericBigIntBuilder extends PgColumnBuilder {
  static [entityKind] = "PgNumericBigIntBuilder";
  constructor(name, precision, scale) {
    super(name, "bigint", "PgNumericBigInt");
    this.config.precision = precision;
    this.config.scale = scale;
  }
  build(table) {
    return new PgNumericBigInt(table, this.config);
  }
}

class PgNumericBigInt extends PgColumn {
  static [entityKind] = "PgNumericBigInt";
  precision;
  scale;
  constructor(table, config) {
    super(table, config);
    this.precision = config.precision;
    this.scale = config.scale;
  }
  mapFromDriverValue = BigInt;
  mapToDriverValue = String;
  getSQLType() {
    if (this.precision !== undefined && this.scale !== undefined) {
      return `numeric(${this.precision}, ${this.scale})`;
    } else if (this.precision === undefined) {
      return "numeric";
    } else {
      return `numeric(${this.precision})`;
    }
  }
}
function numeric(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  const mode = config?.mode;
  return mode === "number" ? new PgNumericNumberBuilder(name, config?.precision, config?.scale) : mode === "bigint" ? new PgNumericBigIntBuilder(name, config?.precision, config?.scale) : new PgNumericBuilder(name, config?.precision, config?.scale);
}

// node_modules/drizzle-orm/pg-core/columns/point.js
class PgPointTupleBuilder extends PgColumnBuilder {
  static [entityKind] = "PgPointTupleBuilder";
  constructor(name) {
    super(name, "array", "PgPointTuple");
  }
  build(table) {
    return new PgPointTuple(table, this.config);
  }
}

class PgPointTuple extends PgColumn {
  static [entityKind] = "PgPointTuple";
  getSQLType() {
    return "point";
  }
  mapFromDriverValue(value) {
    if (typeof value === "string") {
      const [x, y] = value.slice(1, -1).split(",");
      return [Number.parseFloat(x), Number.parseFloat(y)];
    }
    return [value.x, value.y];
  }
  mapToDriverValue(value) {
    return `(${value[0]},${value[1]})`;
  }
}

class PgPointObjectBuilder extends PgColumnBuilder {
  static [entityKind] = "PgPointObjectBuilder";
  constructor(name) {
    super(name, "json", "PgPointObject");
  }
  build(table) {
    return new PgPointObject(table, this.config);
  }
}

class PgPointObject extends PgColumn {
  static [entityKind] = "PgPointObject";
  getSQLType() {
    return "point";
  }
  mapFromDriverValue(value) {
    if (typeof value === "string") {
      const [x, y] = value.slice(1, -1).split(",");
      return { x: Number.parseFloat(x), y: Number.parseFloat(y) };
    }
    return value;
  }
  mapToDriverValue(value) {
    return `(${value.x},${value.y})`;
  }
}
function point(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (!config?.mode || config.mode === "tuple") {
    return new PgPointTupleBuilder(name);
  }
  return new PgPointObjectBuilder(name);
}

// node_modules/drizzle-orm/pg-core/columns/postgis_extension/utils.js
function hexToBytes(hex) {
  const bytes = [];
  for (let c = 0;c < hex.length; c += 2) {
    bytes.push(Number.parseInt(hex.slice(c, c + 2), 16));
  }
  return new Uint8Array(bytes);
}
function bytesToFloat64(bytes, offset) {
  const buffer = new ArrayBuffer(8);
  const view = new DataView(buffer);
  for (let i = 0;i < 8; i++) {
    view.setUint8(i, bytes[offset + i]);
  }
  return view.getFloat64(0, true);
}
function parseEWKB(hex) {
  const bytes = hexToBytes(hex);
  let offset = 0;
  const byteOrder = bytes[offset];
  offset += 1;
  const view = new DataView(bytes.buffer);
  const geomType = view.getUint32(offset, byteOrder === 1);
  offset += 4;
  let _srid;
  if (geomType & 536870912) {
    _srid = view.getUint32(offset, byteOrder === 1);
    offset += 4;
  }
  if ((geomType & 65535) === 1) {
    const x = bytesToFloat64(bytes, offset);
    offset += 8;
    const y = bytesToFloat64(bytes, offset);
    offset += 8;
    return [x, y];
  }
  throw new Error("Unsupported geometry type");
}

// node_modules/drizzle-orm/pg-core/columns/postgis_extension/geometry.js
class PgGeometryBuilder extends PgColumnBuilder {
  static [entityKind] = "PgGeometryBuilder";
  constructor(name) {
    super(name, "array", "PgGeometry");
  }
  build(table) {
    return new PgGeometry(table, this.config);
  }
}

class PgGeometry extends PgColumn {
  static [entityKind] = "PgGeometry";
  getSQLType() {
    return "geometry(point)";
  }
  mapFromDriverValue(value) {
    return parseEWKB(value);
  }
  mapToDriverValue(value) {
    return `point(${value[0]} ${value[1]})`;
  }
}

class PgGeometryObjectBuilder extends PgColumnBuilder {
  static [entityKind] = "PgGeometryObjectBuilder";
  constructor(name) {
    super(name, "json", "PgGeometryObject");
  }
  build(table) {
    return new PgGeometryObject(table, this.config);
  }
}

class PgGeometryObject extends PgColumn {
  static [entityKind] = "PgGeometryObject";
  getSQLType() {
    return "geometry(point)";
  }
  mapFromDriverValue(value) {
    const parsed = parseEWKB(value);
    return { x: parsed[0], y: parsed[1] };
  }
  mapToDriverValue(value) {
    return `point(${value.x} ${value.y})`;
  }
}
function geometry(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (!config?.mode || config.mode === "tuple") {
    return new PgGeometryBuilder(name);
  }
  return new PgGeometryObjectBuilder(name);
}

// node_modules/drizzle-orm/pg-core/columns/real.js
class PgRealBuilder extends PgColumnBuilder {
  static [entityKind] = "PgRealBuilder";
  constructor(name, length) {
    super(name, "number", "PgReal");
    this.config.length = length;
  }
  build(table) {
    return new PgReal(table, this.config);
  }
}

class PgReal extends PgColumn {
  static [entityKind] = "PgReal";
  constructor(table, config) {
    super(table, config);
  }
  getSQLType() {
    return "real";
  }
  mapFromDriverValue = (value) => {
    if (typeof value === "string") {
      return Number.parseFloat(value);
    }
    return value;
  };
}
function real(name) {
  return new PgRealBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/serial.js
class PgSerialBuilder extends PgColumnBuilder {
  static [entityKind] = "PgSerialBuilder";
  constructor(name) {
    super(name, "number", "PgSerial");
    this.config.hasDefault = true;
    this.config.notNull = true;
  }
  build(table) {
    return new PgSerial(table, this.config);
  }
}

class PgSerial extends PgColumn {
  static [entityKind] = "PgSerial";
  getSQLType() {
    return "serial";
  }
}
function serial(name) {
  return new PgSerialBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/smallint.js
class PgSmallIntBuilder extends PgIntColumnBaseBuilder {
  static [entityKind] = "PgSmallIntBuilder";
  constructor(name) {
    super(name, "number", "PgSmallInt");
  }
  build(table) {
    return new PgSmallInt(table, this.config);
  }
}

class PgSmallInt extends PgColumn {
  static [entityKind] = "PgSmallInt";
  getSQLType() {
    return "smallint";
  }
  mapFromDriverValue = (value) => {
    if (typeof value === "string") {
      return Number(value);
    }
    return value;
  };
}
function smallint(name) {
  return new PgSmallIntBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/smallserial.js
class PgSmallSerialBuilder extends PgColumnBuilder {
  static [entityKind] = "PgSmallSerialBuilder";
  constructor(name) {
    super(name, "number", "PgSmallSerial");
    this.config.hasDefault = true;
    this.config.notNull = true;
  }
  build(table) {
    return new PgSmallSerial(table, this.config);
  }
}

class PgSmallSerial extends PgColumn {
  static [entityKind] = "PgSmallSerial";
  getSQLType() {
    return "smallserial";
  }
}
function smallserial(name) {
  return new PgSmallSerialBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/text.js
class PgTextBuilder extends PgColumnBuilder {
  static [entityKind] = "PgTextBuilder";
  constructor(name, config) {
    super(name, "string", "PgText");
    this.config.enumValues = config.enum;
  }
  build(table) {
    return new PgText(table, this.config);
  }
}

class PgText extends PgColumn {
  static [entityKind] = "PgText";
  enumValues = this.config.enumValues;
  getSQLType() {
    return "text";
  }
}
function text(a, b = {}) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgTextBuilder(name, config);
}

// node_modules/drizzle-orm/pg-core/columns/time.js
class PgTimeBuilder extends PgDateColumnBaseBuilder {
  constructor(name, withTimezone, precision) {
    super(name, "string", "PgTime");
    this.withTimezone = withTimezone;
    this.precision = precision;
    this.config.withTimezone = withTimezone;
    this.config.precision = precision;
  }
  static [entityKind] = "PgTimeBuilder";
  build(table) {
    return new PgTime(table, this.config);
  }
}

class PgTime extends PgColumn {
  static [entityKind] = "PgTime";
  withTimezone;
  precision;
  constructor(table, config) {
    super(table, config);
    this.withTimezone = config.withTimezone;
    this.precision = config.precision;
  }
  getSQLType() {
    const precision = this.precision === undefined ? "" : `(${this.precision})`;
    return `time${precision}${this.withTimezone ? " with time zone" : ""}`;
  }
}
function time(a, b = {}) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgTimeBuilder(name, config.withTimezone ?? false, config.precision);
}

// node_modules/drizzle-orm/pg-core/columns/timestamp.js
class PgTimestampBuilder extends PgDateColumnBaseBuilder {
  static [entityKind] = "PgTimestampBuilder";
  constructor(name, withTimezone, precision) {
    super(name, "date", "PgTimestamp");
    this.config.withTimezone = withTimezone;
    this.config.precision = precision;
  }
  build(table) {
    return new PgTimestamp(table, this.config);
  }
}

class PgTimestamp extends PgColumn {
  static [entityKind] = "PgTimestamp";
  withTimezone;
  precision;
  constructor(table, config) {
    super(table, config);
    this.withTimezone = config.withTimezone;
    this.precision = config.precision;
  }
  getSQLType() {
    const precision = this.precision === undefined ? "" : ` (${this.precision})`;
    return `timestamp${precision}${this.withTimezone ? " with time zone" : ""}`;
  }
  mapFromDriverValue = (value) => {
    return new Date(this.withTimezone ? value : value + "+0000");
  };
  mapToDriverValue = (value) => {
    return value.toISOString();
  };
}

class PgTimestampStringBuilder extends PgDateColumnBaseBuilder {
  static [entityKind] = "PgTimestampStringBuilder";
  constructor(name, withTimezone, precision) {
    super(name, "string", "PgTimestampString");
    this.config.withTimezone = withTimezone;
    this.config.precision = precision;
  }
  build(table) {
    return new PgTimestampString(table, this.config);
  }
}

class PgTimestampString extends PgColumn {
  static [entityKind] = "PgTimestampString";
  withTimezone;
  precision;
  constructor(table, config) {
    super(table, config);
    this.withTimezone = config.withTimezone;
    this.precision = config.precision;
  }
  getSQLType() {
    const precision = this.precision === undefined ? "" : `(${this.precision})`;
    return `timestamp${precision}${this.withTimezone ? " with time zone" : ""}`;
  }
}
function timestamp(a, b = {}) {
  const { name, config } = getColumnNameAndConfig(a, b);
  if (config?.mode === "string") {
    return new PgTimestampStringBuilder(name, config.withTimezone ?? false, config.precision);
  }
  return new PgTimestampBuilder(name, config?.withTimezone ?? false, config?.precision);
}

// node_modules/drizzle-orm/pg-core/columns/uuid.js
class PgUUIDBuilder extends PgColumnBuilder {
  static [entityKind] = "PgUUIDBuilder";
  constructor(name) {
    super(name, "string", "PgUUID");
  }
  defaultRandom() {
    return this.default(sql`gen_random_uuid()`);
  }
  build(table) {
    return new PgUUID(table, this.config);
  }
}

class PgUUID extends PgColumn {
  static [entityKind] = "PgUUID";
  getSQLType() {
    return "uuid";
  }
}
function uuid(name) {
  return new PgUUIDBuilder(name ?? "");
}

// node_modules/drizzle-orm/pg-core/columns/varchar.js
class PgVarcharBuilder extends PgColumnBuilder {
  static [entityKind] = "PgVarcharBuilder";
  constructor(name, config) {
    super(name, "string", "PgVarchar");
    this.config.length = config.length;
    this.config.enumValues = config.enum;
  }
  build(table) {
    return new PgVarchar(table, this.config);
  }
}

class PgVarchar extends PgColumn {
  static [entityKind] = "PgVarchar";
  length = this.config.length;
  enumValues = this.config.enumValues;
  getSQLType() {
    return this.length === undefined ? `varchar` : `varchar(${this.length})`;
  }
}
function varchar(a, b = {}) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgVarcharBuilder(name, config);
}

// node_modules/drizzle-orm/pg-core/columns/vector_extension/bit.js
class PgBinaryVectorBuilder extends PgColumnBuilder {
  static [entityKind] = "PgBinaryVectorBuilder";
  constructor(name, config) {
    super(name, "string", "PgBinaryVector");
    this.config.dimensions = config.dimensions;
  }
  build(table) {
    return new PgBinaryVector(table, this.config);
  }
}

class PgBinaryVector extends PgColumn {
  static [entityKind] = "PgBinaryVector";
  dimensions = this.config.dimensions;
  getSQLType() {
    return `bit(${this.dimensions})`;
  }
}
function bit(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgBinaryVectorBuilder(name, config);
}

// node_modules/drizzle-orm/pg-core/columns/vector_extension/halfvec.js
class PgHalfVectorBuilder extends PgColumnBuilder {
  static [entityKind] = "PgHalfVectorBuilder";
  constructor(name, config) {
    super(name, "array", "PgHalfVector");
    this.config.dimensions = config.dimensions;
  }
  build(table) {
    return new PgHalfVector(table, this.config);
  }
}

class PgHalfVector extends PgColumn {
  static [entityKind] = "PgHalfVector";
  dimensions = this.config.dimensions;
  getSQLType() {
    return `halfvec(${this.dimensions})`;
  }
  mapToDriverValue(value) {
    return JSON.stringify(value);
  }
  mapFromDriverValue(value) {
    return value.slice(1, -1).split(",").map((v) => Number.parseFloat(v));
  }
}
function halfvec(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgHalfVectorBuilder(name, config);
}

// node_modules/drizzle-orm/pg-core/columns/vector_extension/sparsevec.js
class PgSparseVectorBuilder extends PgColumnBuilder {
  static [entityKind] = "PgSparseVectorBuilder";
  constructor(name, config) {
    super(name, "string", "PgSparseVector");
    this.config.dimensions = config.dimensions;
  }
  build(table) {
    return new PgSparseVector(table, this.config);
  }
}

class PgSparseVector extends PgColumn {
  static [entityKind] = "PgSparseVector";
  dimensions = this.config.dimensions;
  getSQLType() {
    return `sparsevec(${this.dimensions})`;
  }
}
function sparsevec(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgSparseVectorBuilder(name, config);
}

// node_modules/drizzle-orm/pg-core/columns/vector_extension/vector.js
class PgVectorBuilder extends PgColumnBuilder {
  static [entityKind] = "PgVectorBuilder";
  constructor(name, config) {
    super(name, "array", "PgVector");
    this.config.dimensions = config.dimensions;
  }
  build(table) {
    return new PgVector(table, this.config);
  }
}

class PgVector extends PgColumn {
  static [entityKind] = "PgVector";
  dimensions = this.config.dimensions;
  getSQLType() {
    return `vector(${this.dimensions})`;
  }
  mapToDriverValue(value) {
    return JSON.stringify(value);
  }
  mapFromDriverValue(value) {
    return value.slice(1, -1).split(",").map((v) => Number.parseFloat(v));
  }
}
function vector(a, b) {
  const { name, config } = getColumnNameAndConfig(a, b);
  return new PgVectorBuilder(name, config);
}

// node_modules/drizzle-orm/query-promise.js
class QueryPromise {
  static [entityKind] = "QueryPromise";
  [Symbol.toStringTag] = "QueryPromise";
  catch(onRejected) {
    return this.then(undefined, onRejected);
  }
  finally(onFinally) {
    return this.then((value) => {
      onFinally?.();
      return value;
    }, (reason) => {
      onFinally?.();
      throw reason;
    });
  }
  then(onFulfilled, onRejected) {
    return this.execute().then(onFulfilled, onRejected);
  }
}

// node_modules/drizzle-orm/selection-proxy.js
class SelectionProxyHandler {
  static [entityKind] = "SelectionProxyHandler";
  config;
  constructor(config) {
    this.config = { ...config };
  }
  get(subquery, prop) {
    if (prop === "_") {
      return {
        ...subquery["_"],
        selectedFields: new Proxy(subquery._.selectedFields, this)
      };
    }
    if (prop === ViewBaseConfig) {
      return {
        ...subquery[ViewBaseConfig],
        selectedFields: new Proxy(subquery[ViewBaseConfig].selectedFields, this)
      };
    }
    if (typeof prop === "symbol") {
      return subquery[prop];
    }
    const columns = is(subquery, Subquery) ? subquery._.selectedFields : is(subquery, View) ? subquery[ViewBaseConfig].selectedFields : subquery;
    const value = columns[prop];
    if (is(value, SQL.Aliased)) {
      if (this.config.sqlAliasedBehavior === "sql" && !value.isSelectionField) {
        return value.sql;
      }
      const newValue = value.clone();
      newValue.isSelectionField = true;
      return newValue;
    }
    if (is(value, SQL)) {
      if (this.config.sqlBehavior === "sql") {
        return value;
      }
      throw new Error(`You tried to reference "${prop}" field from a subquery, which is a raw SQL field, but it doesn't have an alias declared. Please add an alias to the field using ".as('alias')" method.`);
    }
    if (is(value, Column)) {
      if (this.config.alias) {
        return new Proxy(value, new ColumnAliasProxyHandler(new Proxy(value.table, new TableAliasProxyHandler(this.config.alias, this.config.replaceOriginalName ?? false))));
      }
      return value;
    }
    if (typeof value !== "object" || value === null) {
      return value;
    }
    return new Proxy(value, new SelectionProxyHandler(this.config));
  }
}

// node_modules/drizzle-orm/pg-core/columns/all.js
function getPgColumnBuilders() {
  return {
    bigint,
    bigserial,
    boolean,
    char,
    cidr,
    customType,
    date,
    doublePrecision,
    inet,
    integer,
    interval,
    json,
    jsonb,
    line,
    macaddr,
    macaddr8,
    numeric,
    point,
    geometry,
    real,
    serial,
    smallint,
    smallserial,
    text,
    time,
    timestamp,
    uuid,
    varchar,
    bit,
    halfvec,
    sparsevec,
    vector
  };
}

// node_modules/drizzle-orm/pg-core/table.js
var InlineForeignKeys = Symbol.for("drizzle:PgInlineForeignKeys");
var EnableRLS = Symbol.for("drizzle:EnableRLS");

class PgTable extends Table {
  static [entityKind] = "PgTable";
  static Symbol = Object.assign({}, Table.Symbol, {
    InlineForeignKeys,
    EnableRLS
  });
  [InlineForeignKeys] = [];
  [EnableRLS] = false;
  [Table.Symbol.ExtraConfigBuilder] = undefined;
  [Table.Symbol.ExtraConfigColumns] = {};
}
function pgTableWithSchema(name, columns, extraConfig, schema, baseName = name) {
  const rawTable = new PgTable(name, schema, baseName);
  const parsedColumns = typeof columns === "function" ? columns(getPgColumnBuilders()) : columns;
  const builtColumns = Object.fromEntries(Object.entries(parsedColumns).map(([name2, colBuilderBase]) => {
    const colBuilder = colBuilderBase;
    colBuilder.setName(name2);
    const column = colBuilder.build(rawTable);
    rawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));
    return [name2, column];
  }));
  const builtColumnsForExtraConfig = Object.fromEntries(Object.entries(parsedColumns).map(([name2, colBuilderBase]) => {
    const colBuilder = colBuilderBase;
    colBuilder.setName(name2);
    const column = colBuilder.buildExtraConfigColumn(rawTable);
    return [name2, column];
  }));
  const table = Object.assign(rawTable, builtColumns);
  table[Table.Symbol.Columns] = builtColumns;
  table[Table.Symbol.ExtraConfigColumns] = builtColumnsForExtraConfig;
  if (extraConfig) {
    table[PgTable.Symbol.ExtraConfigBuilder] = extraConfig;
  }
  return Object.assign(table, {
    enableRLS: () => {
      table[PgTable.Symbol.EnableRLS] = true;
      return table;
    }
  });
}
var pgTable = (name, columns, extraConfig) => {
  return pgTableWithSchema(name, columns, extraConfig, undefined);
};

// node_modules/drizzle-orm/pg-core/primary-keys.js
class PrimaryKeyBuilder {
  static [entityKind] = "PgPrimaryKeyBuilder";
  columns;
  name;
  constructor(columns, name) {
    this.columns = columns;
    this.name = name;
  }
  build(table) {
    return new PrimaryKey(table, this.columns, this.name);
  }
}

class PrimaryKey {
  constructor(table, columns, name) {
    this.table = table;
    this.columns = columns;
    this.name = name;
  }
  static [entityKind] = "PgPrimaryKey";
  columns;
  name;
  getName() {
    return this.name ?? `${this.table[PgTable.Symbol.Name]}_${this.columns.map((column) => column.name).join("_")}_pk`;
  }
}

// node_modules/drizzle-orm/casing.js
function toSnakeCase(input) {
  const words = input.replace(/['\u2019]/g, "").match(/[\da-z]+|[A-Z]+(?![a-z])|[A-Z][\da-z]+/g) ?? [];
  return words.map((word) => word.toLowerCase()).join("_");
}
function toCamelCase(input) {
  const words = input.replace(/['\u2019]/g, "").match(/[\da-z]+|[A-Z]+(?![a-z])|[A-Z][\da-z]+/g) ?? [];
  return words.reduce((acc, word, i) => {
    const formattedWord = i === 0 ? word.toLowerCase() : `${word[0].toUpperCase()}${word.slice(1)}`;
    return acc + formattedWord;
  }, "");
}
function noopCase(input) {
  return input;
}

class CasingCache {
  static [entityKind] = "CasingCache";
  cache = {};
  cachedTables = {};
  convert;
  constructor(casing) {
    this.convert = casing === "snake_case" ? toSnakeCase : casing === "camelCase" ? toCamelCase : noopCase;
  }
  getColumnCasing(column) {
    if (!column.keyAsName)
      return column.name;
    const schema = column.table[Table.Symbol.Schema] ?? "public";
    const tableName = column.table[Table.Symbol.OriginalName];
    const key = `${schema}.${tableName}.${column.name}`;
    if (!this.cache[key]) {
      this.cacheTable(column.table);
    }
    return this.cache[key];
  }
  cacheTable(table) {
    const schema = table[Table.Symbol.Schema] ?? "public";
    const tableName = table[Table.Symbol.OriginalName];
    const tableKey = `${schema}.${tableName}`;
    if (!this.cachedTables[tableKey]) {
      for (const column of Object.values(table[Table.Symbol.Columns])) {
        const columnKey = `${tableKey}.${column.name}`;
        this.cache[columnKey] = this.convert(column.name);
      }
      this.cachedTables[tableKey] = true;
    }
  }
  clearCache() {
    this.cache = {};
    this.cachedTables = {};
  }
}

// node_modules/drizzle-orm/errors.js
class DrizzleError extends Error {
  static [entityKind] = "DrizzleError";
  constructor({ message, cause }) {
    super(message);
    this.name = "DrizzleError";
    this.cause = cause;
  }
}

// node_modules/drizzle-orm/sql/expressions/conditions.js
function bindIfParam(value, column) {
  if (isDriverValueEncoder(column) && !isSQLWrapper(value) && !is(value, Param) && !is(value, Placeholder) && !is(value, Column) && !is(value, Table) && !is(value, View)) {
    return new Param(value, column);
  }
  return value;
}
var eq = (left, right) => {
  return sql`${left} = ${bindIfParam(right, left)}`;
};
var ne = (left, right) => {
  return sql`${left} <> ${bindIfParam(right, left)}`;
};
function and(...unfilteredConditions) {
  const conditions = unfilteredConditions.filter((c) => c !== undefined);
  if (conditions.length === 0) {
    return;
  }
  if (conditions.length === 1) {
    return new SQL(conditions);
  }
  return new SQL([
    new StringChunk("("),
    sql.join(conditions, new StringChunk(" and ")),
    new StringChunk(")")
  ]);
}
function or(...unfilteredConditions) {
  const conditions = unfilteredConditions.filter((c) => c !== undefined);
  if (conditions.length === 0) {
    return;
  }
  if (conditions.length === 1) {
    return new SQL(conditions);
  }
  return new SQL([
    new StringChunk("("),
    sql.join(conditions, new StringChunk(" or ")),
    new StringChunk(")")
  ]);
}
function not(condition) {
  return sql`not ${condition}`;
}
var gt = (left, right) => {
  return sql`${left} > ${bindIfParam(right, left)}`;
};
var gte = (left, right) => {
  return sql`${left} >= ${bindIfParam(right, left)}`;
};
var lt = (left, right) => {
  return sql`${left} < ${bindIfParam(right, left)}`;
};
var lte = (left, right) => {
  return sql`${left} <= ${bindIfParam(right, left)}`;
};
function inArray(column, values) {
  if (Array.isArray(values)) {
    if (values.length === 0) {
      return sql`false`;
    }
    return sql`${column} in ${values.map((v) => bindIfParam(v, column))}`;
  }
  return sql`${column} in ${bindIfParam(values, column)}`;
}
function notInArray(column, values) {
  if (Array.isArray(values)) {
    if (values.length === 0) {
      return sql`true`;
    }
    return sql`${column} not in ${values.map((v) => bindIfParam(v, column))}`;
  }
  return sql`${column} not in ${bindIfParam(values, column)}`;
}
function isNull(value) {
  return sql`${value} is null`;
}
function isNotNull(value) {
  return sql`${value} is not null`;
}
function exists(subquery) {
  return sql`exists ${subquery}`;
}
function notExists(subquery) {
  return sql`not exists ${subquery}`;
}
function between(column, min, max) {
  return sql`${column} between ${bindIfParam(min, column)} and ${bindIfParam(max, column)}`;
}
function notBetween(column, min, max) {
  return sql`${column} not between ${bindIfParam(min, column)} and ${bindIfParam(max, column)}`;
}
function like(column, value) {
  return sql`${column} like ${value}`;
}
function notLike(column, value) {
  return sql`${column} not like ${value}`;
}
function ilike(column, value) {
  return sql`${column} ilike ${value}`;
}
function notIlike(column, value) {
  return sql`${column} not ilike ${value}`;
}

// node_modules/drizzle-orm/sql/expressions/select.js
function asc(column) {
  return sql`${column} asc`;
}
function desc(column) {
  return sql`${column} desc`;
}

// node_modules/drizzle-orm/relations.js
class Relation {
  constructor(sourceTable, referencedTable, relationName) {
    this.sourceTable = sourceTable;
    this.referencedTable = referencedTable;
    this.relationName = relationName;
    this.referencedTableName = referencedTable[Table.Symbol.Name];
  }
  static [entityKind] = "Relation";
  referencedTableName;
  fieldName;
}

class Relations {
  constructor(table, config) {
    this.table = table;
    this.config = config;
  }
  static [entityKind] = "Relations";
}

class One extends Relation {
  constructor(sourceTable, referencedTable, config, isNullable) {
    super(sourceTable, referencedTable, config?.relationName);
    this.config = config;
    this.isNullable = isNullable;
  }
  static [entityKind] = "One";
  withFieldName(fieldName) {
    const relation = new One(this.sourceTable, this.referencedTable, this.config, this.isNullable);
    relation.fieldName = fieldName;
    return relation;
  }
}

class Many extends Relation {
  constructor(sourceTable, referencedTable, config) {
    super(sourceTable, referencedTable, config?.relationName);
    this.config = config;
  }
  static [entityKind] = "Many";
  withFieldName(fieldName) {
    const relation = new Many(this.sourceTable, this.referencedTable, this.config);
    relation.fieldName = fieldName;
    return relation;
  }
}
function getOperators() {
  return {
    and,
    between,
    eq,
    exists,
    gt,
    gte,
    ilike,
    inArray,
    isNull,
    isNotNull,
    like,
    lt,
    lte,
    ne,
    not,
    notBetween,
    notExists,
    notLike,
    notIlike,
    notInArray,
    or,
    sql
  };
}
function getOrderByOperators() {
  return {
    sql,
    asc,
    desc
  };
}
function extractTablesRelationalConfig(schema, configHelpers) {
  if (Object.keys(schema).length === 1 && "default" in schema && !is(schema["default"], Table)) {
    schema = schema["default"];
  }
  const tableNamesMap = {};
  const relationsBuffer = {};
  const tablesConfig = {};
  for (const [key, value] of Object.entries(schema)) {
    if (is(value, Table)) {
      const dbName = getTableUniqueName(value);
      const bufferedRelations = relationsBuffer[dbName];
      tableNamesMap[dbName] = key;
      tablesConfig[key] = {
        tsName: key,
        dbName: value[Table.Symbol.Name],
        schema: value[Table.Symbol.Schema],
        columns: value[Table.Symbol.Columns],
        relations: bufferedRelations?.relations ?? {},
        primaryKey: bufferedRelations?.primaryKey ?? []
      };
      for (const column of Object.values(value[Table.Symbol.Columns])) {
        if (column.primary) {
          tablesConfig[key].primaryKey.push(column);
        }
      }
      const extraConfig = value[Table.Symbol.ExtraConfigBuilder]?.(value[Table.Symbol.ExtraConfigColumns]);
      if (extraConfig) {
        for (const configEntry of Object.values(extraConfig)) {
          if (is(configEntry, PrimaryKeyBuilder)) {
            tablesConfig[key].primaryKey.push(...configEntry.columns);
          }
        }
      }
    } else if (is(value, Relations)) {
      const dbName = getTableUniqueName(value.table);
      const tableName = tableNamesMap[dbName];
      const relations2 = value.config(configHelpers(value.table));
      let primaryKey;
      for (const [relationName, relation] of Object.entries(relations2)) {
        if (tableName) {
          const tableConfig = tablesConfig[tableName];
          tableConfig.relations[relationName] = relation;
          if (primaryKey) {
            tableConfig.primaryKey.push(...primaryKey);
          }
        } else {
          if (!(dbName in relationsBuffer)) {
            relationsBuffer[dbName] = {
              relations: {},
              primaryKey
            };
          }
          relationsBuffer[dbName].relations[relationName] = relation;
        }
      }
    }
  }
  return { tables: tablesConfig, tableNamesMap };
}
function relations(table, relations2) {
  return new Relations(table, (helpers) => Object.fromEntries(Object.entries(relations2(helpers)).map(([key, value]) => [
    key,
    value.withFieldName(key)
  ])));
}
function createOne(sourceTable) {
  return function one(table, config) {
    return new One(sourceTable, table, config, config?.fields.reduce((res, f) => res && f.notNull, true) ?? false);
  };
}
function createMany(sourceTable) {
  return function many(referencedTable, config) {
    return new Many(sourceTable, referencedTable, config);
  };
}
function normalizeRelation(schema, tableNamesMap, relation) {
  if (is(relation, One) && relation.config) {
    return {
      fields: relation.config.fields,
      references: relation.config.references
    };
  }
  const referencedTableTsName = tableNamesMap[getTableUniqueName(relation.referencedTable)];
  if (!referencedTableTsName) {
    throw new Error(`Table "${relation.referencedTable[Table.Symbol.Name]}" not found in schema`);
  }
  const referencedTableConfig = schema[referencedTableTsName];
  if (!referencedTableConfig) {
    throw new Error(`Table "${referencedTableTsName}" not found in schema`);
  }
  const sourceTable = relation.sourceTable;
  const sourceTableTsName = tableNamesMap[getTableUniqueName(sourceTable)];
  if (!sourceTableTsName) {
    throw new Error(`Table "${sourceTable[Table.Symbol.Name]}" not found in schema`);
  }
  const reverseRelations = [];
  for (const referencedTableRelation of Object.values(referencedTableConfig.relations)) {
    if (relation.relationName && relation !== referencedTableRelation && referencedTableRelation.relationName === relation.relationName || !relation.relationName && referencedTableRelation.referencedTable === relation.sourceTable) {
      reverseRelations.push(referencedTableRelation);
    }
  }
  if (reverseRelations.length > 1) {
    throw relation.relationName ? new Error(`There are multiple relations with name "${relation.relationName}" in table "${referencedTableTsName}"`) : new Error(`There are multiple relations between "${referencedTableTsName}" and "${relation.sourceTable[Table.Symbol.Name]}". Please specify relation name`);
  }
  if (reverseRelations[0] && is(reverseRelations[0], One) && reverseRelations[0].config) {
    return {
      fields: reverseRelations[0].config.references,
      references: reverseRelations[0].config.fields
    };
  }
  throw new Error(`There is not enough information to infer relation "${sourceTableTsName}.${relation.fieldName}"`);
}
function createTableRelationsHelpers(sourceTable) {
  return {
    one: createOne(sourceTable),
    many: createMany(sourceTable)
  };
}
function mapRelationalRow(tablesConfig, tableConfig, row, buildQueryResultSelection, mapColumnValue = (value) => value) {
  const result = {};
  for (const [
    selectionItemIndex,
    selectionItem
  ] of buildQueryResultSelection.entries()) {
    if (selectionItem.isJson) {
      const relation = tableConfig.relations[selectionItem.tsKey];
      const rawSubRows = row[selectionItemIndex];
      const subRows = typeof rawSubRows === "string" ? JSON.parse(rawSubRows) : rawSubRows;
      result[selectionItem.tsKey] = is(relation, One) ? subRows && mapRelationalRow(tablesConfig, tablesConfig[selectionItem.relationTableTsKey], subRows, selectionItem.selection, mapColumnValue) : subRows.map((subRow) => mapRelationalRow(tablesConfig, tablesConfig[selectionItem.relationTableTsKey], subRow, selectionItem.selection, mapColumnValue));
    } else {
      const value = mapColumnValue(row[selectionItemIndex]);
      const field = selectionItem.field;
      let decoder;
      if (is(field, Column)) {
        decoder = field;
      } else if (is(field, SQL)) {
        decoder = field.decoder;
      } else {
        decoder = field.sql.decoder;
      }
      result[selectionItem.tsKey] = value === null ? null : decoder.mapFromDriverValue(value);
    }
  }
  return result;
}

// node_modules/drizzle-orm/sql/functions/aggregate.js
function count(expression) {
  return sql`count(${expression || sql.raw("*")})`.mapWith(Number);
}
function sum(expression) {
  return sql`sum(${expression})`.mapWith(String);
}

// node_modules/drizzle-orm/pg-core/view-base.js
class PgViewBase extends View {
  static [entityKind] = "PgViewBase";
}

// node_modules/drizzle-orm/pg-core/dialect.js
class PgDialect {
  static [entityKind] = "PgDialect";
  casing;
  constructor(config) {
    this.casing = new CasingCache(config?.casing);
  }
  async migrate(migrations, session, config) {
    const migrationsTable = typeof config === "string" ? "__drizzle_migrations" : config.migrationsTable ?? "__drizzle_migrations";
    const migrationsSchema = typeof config === "string" ? "drizzle" : config.migrationsSchema ?? "drizzle";
    const migrationTableCreate = sql`
			CREATE TABLE IF NOT EXISTS ${sql.identifier(migrationsSchema)}.${sql.identifier(migrationsTable)} (
				id SERIAL PRIMARY KEY,
				hash text NOT NULL,
				created_at bigint
			)
		`;
    await session.execute(sql`CREATE SCHEMA IF NOT EXISTS ${sql.identifier(migrationsSchema)}`);
    await session.execute(migrationTableCreate);
    const dbMigrations = await session.all(sql`select id, hash, created_at from ${sql.identifier(migrationsSchema)}.${sql.identifier(migrationsTable)} order by created_at desc limit 1`);
    const lastDbMigration = dbMigrations[0];
    await session.transaction(async (tx) => {
      for await (const migration of migrations) {
        if (!lastDbMigration || Number(lastDbMigration.created_at) < migration.folderMillis) {
          for (const stmt of migration.sql) {
            await tx.execute(sql.raw(stmt));
          }
          await tx.execute(sql`insert into ${sql.identifier(migrationsSchema)}.${sql.identifier(migrationsTable)} ("hash", "created_at") values(${migration.hash}, ${migration.folderMillis})`);
        }
      }
    });
  }
  escapeName(name) {
    return `"${name}"`;
  }
  escapeParam(num) {
    return `$${num + 1}`;
  }
  escapeString(str) {
    return `'${str.replace(/'/g, "''")}'`;
  }
  buildWithCTE(queries) {
    if (!queries?.length)
      return;
    const withSqlChunks = [sql`with `];
    for (const [i, w] of queries.entries()) {
      withSqlChunks.push(sql`${sql.identifier(w._.alias)} as (${w._.sql})`);
      if (i < queries.length - 1) {
        withSqlChunks.push(sql`, `);
      }
    }
    withSqlChunks.push(sql` `);
    return sql.join(withSqlChunks);
  }
  buildDeleteQuery({ table, where, returning, withList }) {
    const withSql = this.buildWithCTE(withList);
    const returningSql = returning ? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}` : undefined;
    const whereSql = where ? sql` where ${where}` : undefined;
    return sql`${withSql}delete from ${table}${whereSql}${returningSql}`;
  }
  buildUpdateSet(table, set) {
    const tableColumns = table[Table.Symbol.Columns];
    const columnNames = Object.keys(tableColumns).filter((colName) => set[colName] !== undefined || tableColumns[colName]?.onUpdateFn !== undefined);
    const setSize = columnNames.length;
    return sql.join(columnNames.flatMap((colName, i) => {
      const col = tableColumns[colName];
      const value = set[colName] ?? sql.param(col.onUpdateFn(), col);
      const res = sql`${sql.identifier(this.casing.getColumnCasing(col))} = ${value}`;
      if (i < setSize - 1) {
        return [res, sql.raw(", ")];
      }
      return [res];
    }));
  }
  buildUpdateQuery({ table, set, where, returning, withList, from, joins }) {
    const withSql = this.buildWithCTE(withList);
    const tableName = table[PgTable.Symbol.Name];
    const tableSchema = table[PgTable.Symbol.Schema];
    const origTableName = table[PgTable.Symbol.OriginalName];
    const alias = tableName === origTableName ? undefined : tableName;
    const tableSql = sql`${tableSchema ? sql`${sql.identifier(tableSchema)}.` : undefined}${sql.identifier(origTableName)}${alias && sql` ${sql.identifier(alias)}`}`;
    const setSql = this.buildUpdateSet(table, set);
    const fromSql = from && sql.join([sql.raw(" from "), this.buildFromTable(from)]);
    const joinsSql = this.buildJoins(joins);
    const returningSql = returning ? sql` returning ${this.buildSelection(returning, { isSingleTable: !from })}` : undefined;
    const whereSql = where ? sql` where ${where}` : undefined;
    return sql`${withSql}update ${tableSql} set ${setSql}${fromSql}${joinsSql}${whereSql}${returningSql}`;
  }
  buildSelection(fields, { isSingleTable = false } = {}) {
    const columnsLen = fields.length;
    const chunks = fields.flatMap(({ field }, i) => {
      const chunk = [];
      if (is(field, SQL.Aliased) && field.isSelectionField) {
        chunk.push(sql.identifier(field.fieldAlias));
      } else if (is(field, SQL.Aliased) || is(field, SQL)) {
        const query = is(field, SQL.Aliased) ? field.sql : field;
        if (isSingleTable) {
          chunk.push(new SQL(query.queryChunks.map((c) => {
            if (is(c, PgColumn)) {
              return sql.identifier(this.casing.getColumnCasing(c));
            }
            return c;
          })));
        } else {
          chunk.push(query);
        }
        if (is(field, SQL.Aliased)) {
          chunk.push(sql` as ${sql.identifier(field.fieldAlias)}`);
        }
      } else if (is(field, Column)) {
        if (isSingleTable) {
          chunk.push(sql.identifier(this.casing.getColumnCasing(field)));
        } else {
          chunk.push(field);
        }
      }
      if (i < columnsLen - 1) {
        chunk.push(sql`, `);
      }
      return chunk;
    });
    return sql.join(chunks);
  }
  buildJoins(joins) {
    if (!joins || joins.length === 0) {
      return;
    }
    const joinsArray = [];
    for (const [index, joinMeta] of joins.entries()) {
      if (index === 0) {
        joinsArray.push(sql` `);
      }
      const table = joinMeta.table;
      const lateralSql = joinMeta.lateral ? sql` lateral` : undefined;
      const onSql = joinMeta.on ? sql` on ${joinMeta.on}` : undefined;
      if (is(table, PgTable)) {
        const tableName = table[PgTable.Symbol.Name];
        const tableSchema = table[PgTable.Symbol.Schema];
        const origTableName = table[PgTable.Symbol.OriginalName];
        const alias = tableName === origTableName ? undefined : joinMeta.alias;
        joinsArray.push(sql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${tableSchema ? sql`${sql.identifier(tableSchema)}.` : undefined}${sql.identifier(origTableName)}${alias && sql` ${sql.identifier(alias)}`}${onSql}`);
      } else if (is(table, View)) {
        const viewName = table[ViewBaseConfig].name;
        const viewSchema = table[ViewBaseConfig].schema;
        const origViewName = table[ViewBaseConfig].originalName;
        const alias = viewName === origViewName ? undefined : joinMeta.alias;
        joinsArray.push(sql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${viewSchema ? sql`${sql.identifier(viewSchema)}.` : undefined}${sql.identifier(origViewName)}${alias && sql` ${sql.identifier(alias)}`}${onSql}`);
      } else {
        joinsArray.push(sql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${table}${onSql}`);
      }
      if (index < joins.length - 1) {
        joinsArray.push(sql` `);
      }
    }
    return sql.join(joinsArray);
  }
  buildFromTable(table) {
    if (is(table, Table) && table[Table.Symbol.IsAlias]) {
      let fullName = sql`${sql.identifier(table[Table.Symbol.OriginalName])}`;
      if (table[Table.Symbol.Schema]) {
        fullName = sql`${sql.identifier(table[Table.Symbol.Schema])}.${fullName}`;
      }
      return sql`${fullName} ${sql.identifier(table[Table.Symbol.Name])}`;
    }
    return table;
  }
  buildSelectQuery({
    withList,
    fields,
    fieldsFlat,
    where,
    having,
    table,
    joins,
    orderBy,
    groupBy,
    limit,
    offset,
    lockingClause,
    distinct,
    setOperators
  }) {
    const fieldsList = fieldsFlat ?? orderSelectedFields(fields);
    for (const f of fieldsList) {
      if (is(f.field, Column) && getTableName(f.field.table) !== (is(table, Subquery) ? table._.alias : is(table, PgViewBase) ? table[ViewBaseConfig].name : is(table, SQL) ? undefined : getTableName(table)) && !((table2) => joins?.some(({ alias }) => alias === (table2[Table.Symbol.IsAlias] ? getTableName(table2) : table2[Table.Symbol.BaseName])))(f.field.table)) {
        const tableName = getTableName(f.field.table);
        throw new Error(`Your "${f.path.join("->")}" field references a column "${tableName}"."${f.field.name}", but the table "${tableName}" is not part of the query! Did you forget to join it?`);
      }
    }
    const isSingleTable = !joins || joins.length === 0;
    const withSql = this.buildWithCTE(withList);
    let distinctSql;
    if (distinct) {
      distinctSql = distinct === true ? sql` distinct` : sql` distinct on (${sql.join(distinct.on, sql`, `)})`;
    }
    const selection = this.buildSelection(fieldsList, { isSingleTable });
    const tableSql = this.buildFromTable(table);
    const joinsSql = this.buildJoins(joins);
    const whereSql = where ? sql` where ${where}` : undefined;
    const havingSql = having ? sql` having ${having}` : undefined;
    let orderBySql;
    if (orderBy && orderBy.length > 0) {
      orderBySql = sql` order by ${sql.join(orderBy, sql`, `)}`;
    }
    let groupBySql;
    if (groupBy && groupBy.length > 0) {
      groupBySql = sql` group by ${sql.join(groupBy, sql`, `)}`;
    }
    const limitSql = typeof limit === "object" || typeof limit === "number" && limit >= 0 ? sql` limit ${limit}` : undefined;
    const offsetSql = offset ? sql` offset ${offset}` : undefined;
    const lockingClauseSql = sql.empty();
    if (lockingClause) {
      const clauseSql = sql` for ${sql.raw(lockingClause.strength)}`;
      if (lockingClause.config.of) {
        clauseSql.append(sql` of ${sql.join(Array.isArray(lockingClause.config.of) ? lockingClause.config.of : [lockingClause.config.of], sql`, `)}`);
      }
      if (lockingClause.config.noWait) {
        clauseSql.append(sql` nowait`);
      } else if (lockingClause.config.skipLocked) {
        clauseSql.append(sql` skip locked`);
      }
      lockingClauseSql.append(clauseSql);
    }
    const finalQuery = sql`${withSql}select${distinctSql} ${selection} from ${tableSql}${joinsSql}${whereSql}${groupBySql}${havingSql}${orderBySql}${limitSql}${offsetSql}${lockingClauseSql}`;
    if (setOperators.length > 0) {
      return this.buildSetOperations(finalQuery, setOperators);
    }
    return finalQuery;
  }
  buildSetOperations(leftSelect, setOperators) {
    const [setOperator, ...rest] = setOperators;
    if (!setOperator) {
      throw new Error("Cannot pass undefined values to any set operator");
    }
    if (rest.length === 0) {
      return this.buildSetOperationQuery({ leftSelect, setOperator });
    }
    return this.buildSetOperations(this.buildSetOperationQuery({ leftSelect, setOperator }), rest);
  }
  buildSetOperationQuery({
    leftSelect,
    setOperator: { type, isAll, rightSelect, limit, orderBy, offset }
  }) {
    const leftChunk = sql`(${leftSelect.getSQL()}) `;
    const rightChunk = sql`(${rightSelect.getSQL()})`;
    let orderBySql;
    if (orderBy && orderBy.length > 0) {
      const orderByValues = [];
      for (const singleOrderBy of orderBy) {
        if (is(singleOrderBy, PgColumn)) {
          orderByValues.push(sql.identifier(singleOrderBy.name));
        } else if (is(singleOrderBy, SQL)) {
          for (let i = 0;i < singleOrderBy.queryChunks.length; i++) {
            const chunk = singleOrderBy.queryChunks[i];
            if (is(chunk, PgColumn)) {
              singleOrderBy.queryChunks[i] = sql.identifier(chunk.name);
            }
          }
          orderByValues.push(sql`${singleOrderBy}`);
        } else {
          orderByValues.push(sql`${singleOrderBy}`);
        }
      }
      orderBySql = sql` order by ${sql.join(orderByValues, sql`, `)} `;
    }
    const limitSql = typeof limit === "object" || typeof limit === "number" && limit >= 0 ? sql` limit ${limit}` : undefined;
    const operatorChunk = sql.raw(`${type} ${isAll ? "all " : ""}`);
    const offsetSql = offset ? sql` offset ${offset}` : undefined;
    return sql`${leftChunk}${operatorChunk}${rightChunk}${orderBySql}${limitSql}${offsetSql}`;
  }
  buildInsertQuery({ table, values: valuesOrSelect, onConflict, returning, withList, select, overridingSystemValue_ }) {
    const valuesSqlList = [];
    const columns = table[Table.Symbol.Columns];
    const colEntries = Object.entries(columns).filter(([_, col]) => !col.shouldDisableInsert());
    const insertOrder = colEntries.map(([, column]) => sql.identifier(this.casing.getColumnCasing(column)));
    if (select) {
      const select2 = valuesOrSelect;
      if (is(select2, SQL)) {
        valuesSqlList.push(select2);
      } else {
        valuesSqlList.push(select2.getSQL());
      }
    } else {
      const values = valuesOrSelect;
      valuesSqlList.push(sql.raw("values "));
      for (const [valueIndex, value] of values.entries()) {
        const valueList = [];
        for (const [fieldName, col] of colEntries) {
          const colValue = value[fieldName];
          if (colValue === undefined || is(colValue, Param) && colValue.value === undefined) {
            if (col.defaultFn !== undefined) {
              const defaultFnResult = col.defaultFn();
              const defaultValue = is(defaultFnResult, SQL) ? defaultFnResult : sql.param(defaultFnResult, col);
              valueList.push(defaultValue);
            } else if (!col.default && col.onUpdateFn !== undefined) {
              const onUpdateFnResult = col.onUpdateFn();
              const newValue = is(onUpdateFnResult, SQL) ? onUpdateFnResult : sql.param(onUpdateFnResult, col);
              valueList.push(newValue);
            } else {
              valueList.push(sql`default`);
            }
          } else {
            valueList.push(colValue);
          }
        }
        valuesSqlList.push(valueList);
        if (valueIndex < values.length - 1) {
          valuesSqlList.push(sql`, `);
        }
      }
    }
    const withSql = this.buildWithCTE(withList);
    const valuesSql = sql.join(valuesSqlList);
    const returningSql = returning ? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}` : undefined;
    const onConflictSql = onConflict ? sql` on conflict ${onConflict}` : undefined;
    const overridingSql = overridingSystemValue_ === true ? sql`overriding system value ` : undefined;
    return sql`${withSql}insert into ${table} ${insertOrder} ${overridingSql}${valuesSql}${onConflictSql}${returningSql}`;
  }
  buildRefreshMaterializedViewQuery({ view, concurrently, withNoData }) {
    const concurrentlySql = concurrently ? sql` concurrently` : undefined;
    const withNoDataSql = withNoData ? sql` with no data` : undefined;
    return sql`refresh materialized view${concurrentlySql} ${view}${withNoDataSql}`;
  }
  prepareTyping(encoder) {
    if (is(encoder, PgJsonb) || is(encoder, PgJson)) {
      return "json";
    } else if (is(encoder, PgNumeric)) {
      return "decimal";
    } else if (is(encoder, PgTime)) {
      return "time";
    } else if (is(encoder, PgTimestamp) || is(encoder, PgTimestampString)) {
      return "timestamp";
    } else if (is(encoder, PgDate) || is(encoder, PgDateString)) {
      return "date";
    } else if (is(encoder, PgUUID)) {
      return "uuid";
    } else {
      return "none";
    }
  }
  sqlToQuery(sql2, invokeSource) {
    return sql2.toQuery({
      casing: this.casing,
      escapeName: this.escapeName,
      escapeParam: this.escapeParam,
      escapeString: this.escapeString,
      prepareTyping: this.prepareTyping,
      invokeSource
    });
  }
  buildRelationalQueryWithoutPK({
    fullSchema,
    schema,
    tableNamesMap,
    table,
    tableConfig,
    queryConfig: config,
    tableAlias,
    nestedQueryRelation,
    joinOn
  }) {
    let selection = [];
    let limit, offset, orderBy = [], where;
    const joins = [];
    if (config === true) {
      const selectionEntries = Object.entries(tableConfig.columns);
      selection = selectionEntries.map(([key, value]) => ({
        dbKey: value.name,
        tsKey: key,
        field: aliasedTableColumn(value, tableAlias),
        relationTableTsKey: undefined,
        isJson: false,
        selection: []
      }));
    } else {
      const aliasedColumns = Object.fromEntries(Object.entries(tableConfig.columns).map(([key, value]) => [key, aliasedTableColumn(value, tableAlias)]));
      if (config.where) {
        const whereSql = typeof config.where === "function" ? config.where(aliasedColumns, getOperators()) : config.where;
        where = whereSql && mapColumnsInSQLToAlias(whereSql, tableAlias);
      }
      const fieldsSelection = [];
      let selectedColumns = [];
      if (config.columns) {
        let isIncludeMode = false;
        for (const [field, value] of Object.entries(config.columns)) {
          if (value === undefined) {
            continue;
          }
          if (field in tableConfig.columns) {
            if (!isIncludeMode && value === true) {
              isIncludeMode = true;
            }
            selectedColumns.push(field);
          }
        }
        if (selectedColumns.length > 0) {
          selectedColumns = isIncludeMode ? selectedColumns.filter((c) => config.columns?.[c] === true) : Object.keys(tableConfig.columns).filter((key) => !selectedColumns.includes(key));
        }
      } else {
        selectedColumns = Object.keys(tableConfig.columns);
      }
      for (const field of selectedColumns) {
        const column = tableConfig.columns[field];
        fieldsSelection.push({ tsKey: field, value: column });
      }
      let selectedRelations = [];
      if (config.with) {
        selectedRelations = Object.entries(config.with).filter((entry) => !!entry[1]).map(([tsKey, queryConfig]) => ({ tsKey, queryConfig, relation: tableConfig.relations[tsKey] }));
      }
      let extras;
      if (config.extras) {
        extras = typeof config.extras === "function" ? config.extras(aliasedColumns, { sql }) : config.extras;
        for (const [tsKey, value] of Object.entries(extras)) {
          fieldsSelection.push({
            tsKey,
            value: mapColumnsInAliasedSQLToAlias(value, tableAlias)
          });
        }
      }
      for (const { tsKey, value } of fieldsSelection) {
        selection.push({
          dbKey: is(value, SQL.Aliased) ? value.fieldAlias : tableConfig.columns[tsKey].name,
          tsKey,
          field: is(value, Column) ? aliasedTableColumn(value, tableAlias) : value,
          relationTableTsKey: undefined,
          isJson: false,
          selection: []
        });
      }
      let orderByOrig = typeof config.orderBy === "function" ? config.orderBy(aliasedColumns, getOrderByOperators()) : config.orderBy ?? [];
      if (!Array.isArray(orderByOrig)) {
        orderByOrig = [orderByOrig];
      }
      orderBy = orderByOrig.map((orderByValue) => {
        if (is(orderByValue, Column)) {
          return aliasedTableColumn(orderByValue, tableAlias);
        }
        return mapColumnsInSQLToAlias(orderByValue, tableAlias);
      });
      limit = config.limit;
      offset = config.offset;
      for (const {
        tsKey: selectedRelationTsKey,
        queryConfig: selectedRelationConfigValue,
        relation
      } of selectedRelations) {
        const normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);
        const relationTableName = getTableUniqueName(relation.referencedTable);
        const relationTableTsName = tableNamesMap[relationTableName];
        const relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;
        const joinOn2 = and(...normalizedRelation.fields.map((field2, i) => eq(aliasedTableColumn(normalizedRelation.references[i], relationTableAlias), aliasedTableColumn(field2, tableAlias))));
        const builtRelation = this.buildRelationalQueryWithoutPK({
          fullSchema,
          schema,
          tableNamesMap,
          table: fullSchema[relationTableTsName],
          tableConfig: schema[relationTableTsName],
          queryConfig: is(relation, One) ? selectedRelationConfigValue === true ? { limit: 1 } : { ...selectedRelationConfigValue, limit: 1 } : selectedRelationConfigValue,
          tableAlias: relationTableAlias,
          joinOn: joinOn2,
          nestedQueryRelation: relation
        });
        const field = sql`${sql.identifier(relationTableAlias)}.${sql.identifier("data")}`.as(selectedRelationTsKey);
        joins.push({
          on: sql`true`,
          table: new Subquery(builtRelation.sql, {}, relationTableAlias),
          alias: relationTableAlias,
          joinType: "left",
          lateral: true
        });
        selection.push({
          dbKey: selectedRelationTsKey,
          tsKey: selectedRelationTsKey,
          field,
          relationTableTsKey: relationTableTsName,
          isJson: true,
          selection: builtRelation.selection
        });
      }
    }
    if (selection.length === 0) {
      throw new DrizzleError({ message: `No fields selected for table "${tableConfig.tsName}" ("${tableAlias}")` });
    }
    let result;
    where = and(joinOn, where);
    if (nestedQueryRelation) {
      let field = sql`json_build_array(${sql.join(selection.map(({ field: field2, tsKey, isJson }) => isJson ? sql`${sql.identifier(`${tableAlias}_${tsKey}`)}.${sql.identifier("data")}` : is(field2, SQL.Aliased) ? field2.sql : field2), sql`, `)})`;
      if (is(nestedQueryRelation, Many)) {
        field = sql`coalesce(json_agg(${field}${orderBy.length > 0 ? sql` order by ${sql.join(orderBy, sql`, `)}` : undefined}), '[]'::json)`;
      }
      const nestedSelection = [{
        dbKey: "data",
        tsKey: "data",
        field: field.as("data"),
        isJson: true,
        relationTableTsKey: tableConfig.tsName,
        selection
      }];
      const needsSubquery = limit !== undefined || offset !== undefined || orderBy.length > 0;
      if (needsSubquery) {
        result = this.buildSelectQuery({
          table: aliasedTable(table, tableAlias),
          fields: {},
          fieldsFlat: [{
            path: [],
            field: sql.raw("*")
          }],
          where,
          limit,
          offset,
          orderBy,
          setOperators: []
        });
        where = undefined;
        limit = undefined;
        offset = undefined;
        orderBy = [];
      } else {
        result = aliasedTable(table, tableAlias);
      }
      result = this.buildSelectQuery({
        table: is(result, PgTable) ? result : new Subquery(result, {}, tableAlias),
        fields: {},
        fieldsFlat: nestedSelection.map(({ field: field2 }) => ({
          path: [],
          field: is(field2, Column) ? aliasedTableColumn(field2, tableAlias) : field2
        })),
        joins,
        where,
        limit,
        offset,
        orderBy,
        setOperators: []
      });
    } else {
      result = this.buildSelectQuery({
        table: aliasedTable(table, tableAlias),
        fields: {},
        fieldsFlat: selection.map(({ field }) => ({
          path: [],
          field: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field
        })),
        joins,
        where,
        limit,
        offset,
        orderBy,
        setOperators: []
      });
    }
    return {
      tableTsKey: tableConfig.tsName,
      sql: result,
      selection
    };
  }
}

// node_modules/drizzle-orm/query-builders/query-builder.js
class TypedQueryBuilder {
  static [entityKind] = "TypedQueryBuilder";
  getSelectedFields() {
    return this._.selectedFields;
  }
}

// node_modules/drizzle-orm/pg-core/query-builders/select.js
class PgSelectBuilder {
  static [entityKind] = "PgSelectBuilder";
  fields;
  session;
  dialect;
  withList = [];
  distinct;
  constructor(config) {
    this.fields = config.fields;
    this.session = config.session;
    this.dialect = config.dialect;
    if (config.withList) {
      this.withList = config.withList;
    }
    this.distinct = config.distinct;
  }
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  from(source) {
    const isPartialSelect = !!this.fields;
    const src = source;
    let fields;
    if (this.fields) {
      fields = this.fields;
    } else if (is(src, Subquery)) {
      fields = Object.fromEntries(Object.keys(src._.selectedFields).map((key) => [key, src[key]]));
    } else if (is(src, PgViewBase)) {
      fields = src[ViewBaseConfig].selectedFields;
    } else if (is(src, SQL)) {
      fields = {};
    } else {
      fields = getTableColumns(src);
    }
    return new PgSelectBase({
      table: src,
      fields,
      isPartialSelect,
      session: this.session,
      dialect: this.dialect,
      withList: this.withList,
      distinct: this.distinct
    }).setToken(this.authToken);
  }
}

class PgSelectQueryBuilderBase extends TypedQueryBuilder {
  static [entityKind] = "PgSelectQueryBuilder";
  _;
  config;
  joinsNotNullableMap;
  tableName;
  isPartialSelect;
  session;
  dialect;
  cacheConfig = undefined;
  usedTables = /* @__PURE__ */ new Set;
  constructor({ table, fields, isPartialSelect, session, dialect, withList, distinct }) {
    super();
    this.config = {
      withList,
      table,
      fields: { ...fields },
      distinct,
      setOperators: []
    };
    this.isPartialSelect = isPartialSelect;
    this.session = session;
    this.dialect = dialect;
    this._ = {
      selectedFields: fields,
      config: this.config
    };
    this.tableName = getTableLikeName(table);
    this.joinsNotNullableMap = typeof this.tableName === "string" ? { [this.tableName]: true } : {};
    for (const item of extractUsedTable(table))
      this.usedTables.add(item);
  }
  getUsedTables() {
    return [...this.usedTables];
  }
  createJoin(joinType, lateral) {
    return (table, on) => {
      const baseTableName = this.tableName;
      const tableName = getTableLikeName(table);
      for (const item of extractUsedTable(table))
        this.usedTables.add(item);
      if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
        throw new Error(`Alias "${tableName}" is already used in this query`);
      }
      if (!this.isPartialSelect) {
        if (Object.keys(this.joinsNotNullableMap).length === 1 && typeof baseTableName === "string") {
          this.config.fields = {
            [baseTableName]: this.config.fields
          };
        }
        if (typeof tableName === "string" && !is(table, SQL)) {
          const selection = is(table, Subquery) ? table._.selectedFields : is(table, View) ? table[ViewBaseConfig].selectedFields : table[Table.Symbol.Columns];
          this.config.fields[tableName] = selection;
        }
      }
      if (typeof on === "function") {
        on = on(new Proxy(this.config.fields, new SelectionProxyHandler({ sqlAliasedBehavior: "sql", sqlBehavior: "sql" })));
      }
      if (!this.config.joins) {
        this.config.joins = [];
      }
      this.config.joins.push({ on, table, joinType, alias: tableName, lateral });
      if (typeof tableName === "string") {
        switch (joinType) {
          case "left": {
            this.joinsNotNullableMap[tableName] = false;
            break;
          }
          case "right": {
            this.joinsNotNullableMap = Object.fromEntries(Object.entries(this.joinsNotNullableMap).map(([key]) => [key, false]));
            this.joinsNotNullableMap[tableName] = true;
            break;
          }
          case "cross":
          case "inner": {
            this.joinsNotNullableMap[tableName] = true;
            break;
          }
          case "full": {
            this.joinsNotNullableMap = Object.fromEntries(Object.entries(this.joinsNotNullableMap).map(([key]) => [key, false]));
            this.joinsNotNullableMap[tableName] = false;
            break;
          }
        }
      }
      return this;
    };
  }
  leftJoin = this.createJoin("left", false);
  leftJoinLateral = this.createJoin("left", true);
  rightJoin = this.createJoin("right", false);
  innerJoin = this.createJoin("inner", false);
  innerJoinLateral = this.createJoin("inner", true);
  fullJoin = this.createJoin("full", false);
  crossJoin = this.createJoin("cross", false);
  crossJoinLateral = this.createJoin("cross", true);
  createSetOperator(type, isAll) {
    return (rightSelection) => {
      const rightSelect = typeof rightSelection === "function" ? rightSelection(getPgSetOperators()) : rightSelection;
      if (!haveSameKeys(this.getSelectedFields(), rightSelect.getSelectedFields())) {
        throw new Error("Set operator error (union / intersect / except): selected fields are not the same or are in a different order");
      }
      this.config.setOperators.push({ type, isAll, rightSelect });
      return this;
    };
  }
  union = this.createSetOperator("union", false);
  unionAll = this.createSetOperator("union", true);
  intersect = this.createSetOperator("intersect", false);
  intersectAll = this.createSetOperator("intersect", true);
  except = this.createSetOperator("except", false);
  exceptAll = this.createSetOperator("except", true);
  addSetOperators(setOperators) {
    this.config.setOperators.push(...setOperators);
    return this;
  }
  where(where) {
    if (typeof where === "function") {
      where = where(new Proxy(this.config.fields, new SelectionProxyHandler({ sqlAliasedBehavior: "sql", sqlBehavior: "sql" })));
    }
    this.config.where = where;
    return this;
  }
  having(having) {
    if (typeof having === "function") {
      having = having(new Proxy(this.config.fields, new SelectionProxyHandler({ sqlAliasedBehavior: "sql", sqlBehavior: "sql" })));
    }
    this.config.having = having;
    return this;
  }
  groupBy(...columns) {
    if (typeof columns[0] === "function") {
      const groupBy = columns[0](new Proxy(this.config.fields, new SelectionProxyHandler({ sqlAliasedBehavior: "alias", sqlBehavior: "sql" })));
      this.config.groupBy = Array.isArray(groupBy) ? groupBy : [groupBy];
    } else {
      this.config.groupBy = columns;
    }
    return this;
  }
  orderBy(...columns) {
    if (typeof columns[0] === "function") {
      const orderBy = columns[0](new Proxy(this.config.fields, new SelectionProxyHandler({ sqlAliasedBehavior: "alias", sqlBehavior: "sql" })));
      const orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];
      if (this.config.setOperators.length > 0) {
        this.config.setOperators.at(-1).orderBy = orderByArray;
      } else {
        this.config.orderBy = orderByArray;
      }
    } else {
      const orderByArray = columns;
      if (this.config.setOperators.length > 0) {
        this.config.setOperators.at(-1).orderBy = orderByArray;
      } else {
        this.config.orderBy = orderByArray;
      }
    }
    return this;
  }
  limit(limit) {
    if (this.config.setOperators.length > 0) {
      this.config.setOperators.at(-1).limit = limit;
    } else {
      this.config.limit = limit;
    }
    return this;
  }
  offset(offset) {
    if (this.config.setOperators.length > 0) {
      this.config.setOperators.at(-1).offset = offset;
    } else {
      this.config.offset = offset;
    }
    return this;
  }
  for(strength, config = {}) {
    this.config.lockingClause = { strength, config };
    return this;
  }
  getSQL() {
    return this.dialect.buildSelectQuery(this.config);
  }
  toSQL() {
    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());
    return rest;
  }
  as(alias) {
    const usedTables = [];
    usedTables.push(...extractUsedTable(this.config.table));
    if (this.config.joins) {
      for (const it of this.config.joins)
        usedTables.push(...extractUsedTable(it.table));
    }
    return new Proxy(new Subquery(this.getSQL(), this.config.fields, alias, false, [...new Set(usedTables)]), new SelectionProxyHandler({ alias, sqlAliasedBehavior: "alias", sqlBehavior: "error" }));
  }
  getSelectedFields() {
    return new Proxy(this.config.fields, new SelectionProxyHandler({ alias: this.tableName, sqlAliasedBehavior: "alias", sqlBehavior: "error" }));
  }
  $dynamic() {
    return this;
  }
  $withCache(config) {
    this.cacheConfig = config === undefined ? { config: {}, enable: true, autoInvalidate: true } : config === false ? { enable: false } : { enable: true, autoInvalidate: true, ...config };
    return this;
  }
}

class PgSelectBase extends PgSelectQueryBuilderBase {
  static [entityKind] = "PgSelect";
  _prepare(name) {
    const { session, config, dialect, joinsNotNullableMap, authToken, cacheConfig, usedTables } = this;
    if (!session) {
      throw new Error("Cannot execute a query on a query builder. Please use a database instance instead.");
    }
    const { fields } = config;
    return tracer.startActiveSpan("drizzle.prepareQuery", () => {
      const fieldsList = orderSelectedFields(fields);
      const query = session.prepareQuery(dialect.sqlToQuery(this.getSQL()), fieldsList, name, true, undefined, {
        type: "select",
        tables: [...usedTables]
      }, cacheConfig);
      query.joinsNotNullableMap = joinsNotNullableMap;
      return query.setToken(authToken);
    });
  }
  prepare(name) {
    return this._prepare(name);
  }
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  execute = (placeholderValues) => {
    return tracer.startActiveSpan("drizzle.operation", () => {
      return this._prepare().execute(placeholderValues, this.authToken);
    });
  };
}
applyMixins(PgSelectBase, [QueryPromise]);
function createSetOperator(type, isAll) {
  return (leftSelect, rightSelect, ...restSelects) => {
    const setOperators = [rightSelect, ...restSelects].map((select) => ({
      type,
      isAll,
      rightSelect: select
    }));
    for (const setOperator of setOperators) {
      if (!haveSameKeys(leftSelect.getSelectedFields(), setOperator.rightSelect.getSelectedFields())) {
        throw new Error("Set operator error (union / intersect / except): selected fields are not the same or are in a different order");
      }
    }
    return leftSelect.addSetOperators(setOperators);
  };
}
var getPgSetOperators = () => ({
  union,
  unionAll,
  intersect,
  intersectAll,
  except,
  exceptAll
});
var union = createSetOperator("union", false);
var unionAll = createSetOperator("union", true);
var intersect = createSetOperator("intersect", false);
var intersectAll = createSetOperator("intersect", true);
var except = createSetOperator("except", false);
var exceptAll = createSetOperator("except", true);

// node_modules/drizzle-orm/pg-core/query-builders/query-builder.js
class QueryBuilder {
  static [entityKind] = "PgQueryBuilder";
  dialect;
  dialectConfig;
  constructor(dialect) {
    this.dialect = is(dialect, PgDialect) ? dialect : undefined;
    this.dialectConfig = is(dialect, PgDialect) ? undefined : dialect;
  }
  $with = (alias, selection) => {
    const queryBuilder = this;
    const as = (qb) => {
      if (typeof qb === "function") {
        qb = qb(queryBuilder);
      }
      return new Proxy(new WithSubquery(qb.getSQL(), selection ?? ("getSelectedFields" in qb ? qb.getSelectedFields() ?? {} : {}), alias, true), new SelectionProxyHandler({ alias, sqlAliasedBehavior: "alias", sqlBehavior: "error" }));
    };
    return { as };
  };
  with(...queries) {
    const self2 = this;
    function select(fields) {
      return new PgSelectBuilder({
        fields: fields ?? undefined,
        session: undefined,
        dialect: self2.getDialect(),
        withList: queries
      });
    }
    function selectDistinct(fields) {
      return new PgSelectBuilder({
        fields: fields ?? undefined,
        session: undefined,
        dialect: self2.getDialect(),
        distinct: true
      });
    }
    function selectDistinctOn(on, fields) {
      return new PgSelectBuilder({
        fields: fields ?? undefined,
        session: undefined,
        dialect: self2.getDialect(),
        distinct: { on }
      });
    }
    return { select, selectDistinct, selectDistinctOn };
  }
  select(fields) {
    return new PgSelectBuilder({
      fields: fields ?? undefined,
      session: undefined,
      dialect: this.getDialect()
    });
  }
  selectDistinct(fields) {
    return new PgSelectBuilder({
      fields: fields ?? undefined,
      session: undefined,
      dialect: this.getDialect(),
      distinct: true
    });
  }
  selectDistinctOn(on, fields) {
    return new PgSelectBuilder({
      fields: fields ?? undefined,
      session: undefined,
      dialect: this.getDialect(),
      distinct: { on }
    });
  }
  getDialect() {
    if (!this.dialect) {
      this.dialect = new PgDialect(this.dialectConfig);
    }
    return this.dialect;
  }
}

// node_modules/drizzle-orm/pg-core/utils.js
function extractUsedTable(table) {
  if (is(table, PgTable)) {
    return [table[Schema] ? `${table[Schema]}.${table[Table.Symbol.BaseName]}` : table[Table.Symbol.BaseName]];
  }
  if (is(table, Subquery)) {
    return table._.usedTables ?? [];
  }
  if (is(table, SQL)) {
    return table.usedTables ?? [];
  }
  return [];
}

// node_modules/drizzle-orm/pg-core/query-builders/delete.js
class PgDeleteBase extends QueryPromise {
  constructor(table, session, dialect, withList) {
    super();
    this.session = session;
    this.dialect = dialect;
    this.config = { table, withList };
  }
  static [entityKind] = "PgDelete";
  config;
  cacheConfig;
  where(where) {
    this.config.where = where;
    return this;
  }
  returning(fields = this.config.table[Table.Symbol.Columns]) {
    this.config.returningFields = fields;
    this.config.returning = orderSelectedFields(fields);
    return this;
  }
  getSQL() {
    return this.dialect.buildDeleteQuery(this.config);
  }
  toSQL() {
    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());
    return rest;
  }
  _prepare(name) {
    return tracer.startActiveSpan("drizzle.prepareQuery", () => {
      return this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true, undefined, {
        type: "delete",
        tables: extractUsedTable(this.config.table)
      }, this.cacheConfig);
    });
  }
  prepare(name) {
    return this._prepare(name);
  }
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  execute = (placeholderValues) => {
    return tracer.startActiveSpan("drizzle.operation", () => {
      return this._prepare().execute(placeholderValues, this.authToken);
    });
  };
  getSelectedFields() {
    return this.config.returningFields ? new Proxy(this.config.returningFields, new SelectionProxyHandler({
      alias: getTableName(this.config.table),
      sqlAliasedBehavior: "alias",
      sqlBehavior: "error"
    })) : undefined;
  }
  $dynamic() {
    return this;
  }
}

// node_modules/drizzle-orm/pg-core/query-builders/insert.js
class PgInsertBuilder {
  constructor(table, session, dialect, withList, overridingSystemValue_) {
    this.table = table;
    this.session = session;
    this.dialect = dialect;
    this.withList = withList;
    this.overridingSystemValue_ = overridingSystemValue_;
  }
  static [entityKind] = "PgInsertBuilder";
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  overridingSystemValue() {
    this.overridingSystemValue_ = true;
    return this;
  }
  values(values) {
    values = Array.isArray(values) ? values : [values];
    if (values.length === 0) {
      throw new Error("values() must be called with at least one value");
    }
    const mappedValues = values.map((entry) => {
      const result = {};
      const cols = this.table[Table.Symbol.Columns];
      for (const colKey of Object.keys(entry)) {
        const colValue = entry[colKey];
        result[colKey] = is(colValue, SQL) ? colValue : new Param(colValue, cols[colKey]);
      }
      return result;
    });
    return new PgInsertBase(this.table, mappedValues, this.session, this.dialect, this.withList, false, this.overridingSystemValue_).setToken(this.authToken);
  }
  select(selectQuery) {
    const select = typeof selectQuery === "function" ? selectQuery(new QueryBuilder) : selectQuery;
    if (!is(select, SQL) && !haveSameKeys(this.table[Columns], select._.selectedFields)) {
      throw new Error("Insert select error: selected fields are not the same or are in a different order compared to the table definition");
    }
    return new PgInsertBase(this.table, select, this.session, this.dialect, this.withList, true);
  }
}

class PgInsertBase extends QueryPromise {
  constructor(table, values, session, dialect, withList, select, overridingSystemValue_) {
    super();
    this.session = session;
    this.dialect = dialect;
    this.config = { table, values, withList, select, overridingSystemValue_ };
  }
  static [entityKind] = "PgInsert";
  config;
  cacheConfig;
  returning(fields = this.config.table[Table.Symbol.Columns]) {
    this.config.returningFields = fields;
    this.config.returning = orderSelectedFields(fields);
    return this;
  }
  onConflictDoNothing(config = {}) {
    if (config.target === undefined) {
      this.config.onConflict = sql`do nothing`;
    } else {
      let targetColumn = "";
      targetColumn = Array.isArray(config.target) ? config.target.map((it) => this.dialect.escapeName(this.dialect.casing.getColumnCasing(it))).join(",") : this.dialect.escapeName(this.dialect.casing.getColumnCasing(config.target));
      const whereSql = config.where ? sql` where ${config.where}` : undefined;
      this.config.onConflict = sql`(${sql.raw(targetColumn)})${whereSql} do nothing`;
    }
    return this;
  }
  onConflictDoUpdate(config) {
    if (config.where && (config.targetWhere || config.setWhere)) {
      throw new Error('You cannot use both "where" and "targetWhere"/"setWhere" at the same time - "where" is deprecated, use "targetWhere" or "setWhere" instead.');
    }
    const whereSql = config.where ? sql` where ${config.where}` : undefined;
    const targetWhereSql = config.targetWhere ? sql` where ${config.targetWhere}` : undefined;
    const setWhereSql = config.setWhere ? sql` where ${config.setWhere}` : undefined;
    const setSql = this.dialect.buildUpdateSet(this.config.table, mapUpdateSet(this.config.table, config.set));
    let targetColumn = "";
    targetColumn = Array.isArray(config.target) ? config.target.map((it) => this.dialect.escapeName(this.dialect.casing.getColumnCasing(it))).join(",") : this.dialect.escapeName(this.dialect.casing.getColumnCasing(config.target));
    this.config.onConflict = sql`(${sql.raw(targetColumn)})${targetWhereSql} do update set ${setSql}${whereSql}${setWhereSql}`;
    return this;
  }
  getSQL() {
    return this.dialect.buildInsertQuery(this.config);
  }
  toSQL() {
    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());
    return rest;
  }
  _prepare(name) {
    return tracer.startActiveSpan("drizzle.prepareQuery", () => {
      return this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true, undefined, {
        type: "insert",
        tables: extractUsedTable(this.config.table)
      }, this.cacheConfig);
    });
  }
  prepare(name) {
    return this._prepare(name);
  }
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  execute = (placeholderValues) => {
    return tracer.startActiveSpan("drizzle.operation", () => {
      return this._prepare().execute(placeholderValues, this.authToken);
    });
  };
  getSelectedFields() {
    return this.config.returningFields ? new Proxy(this.config.returningFields, new SelectionProxyHandler({
      alias: getTableName(this.config.table),
      sqlAliasedBehavior: "alias",
      sqlBehavior: "error"
    })) : undefined;
  }
  $dynamic() {
    return this;
  }
}

// node_modules/drizzle-orm/pg-core/query-builders/refresh-materialized-view.js
class PgRefreshMaterializedView extends QueryPromise {
  constructor(view, session, dialect) {
    super();
    this.session = session;
    this.dialect = dialect;
    this.config = { view };
  }
  static [entityKind] = "PgRefreshMaterializedView";
  config;
  concurrently() {
    if (this.config.withNoData !== undefined) {
      throw new Error("Cannot use concurrently and withNoData together");
    }
    this.config.concurrently = true;
    return this;
  }
  withNoData() {
    if (this.config.concurrently !== undefined) {
      throw new Error("Cannot use concurrently and withNoData together");
    }
    this.config.withNoData = true;
    return this;
  }
  getSQL() {
    return this.dialect.buildRefreshMaterializedViewQuery(this.config);
  }
  toSQL() {
    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());
    return rest;
  }
  _prepare(name) {
    return tracer.startActiveSpan("drizzle.prepareQuery", () => {
      return this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()), undefined, name, true);
    });
  }
  prepare(name) {
    return this._prepare(name);
  }
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  execute = (placeholderValues) => {
    return tracer.startActiveSpan("drizzle.operation", () => {
      return this._prepare().execute(placeholderValues, this.authToken);
    });
  };
}

// node_modules/drizzle-orm/pg-core/query-builders/update.js
class PgUpdateBuilder {
  constructor(table, session, dialect, withList) {
    this.table = table;
    this.session = session;
    this.dialect = dialect;
    this.withList = withList;
  }
  static [entityKind] = "PgUpdateBuilder";
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  set(values) {
    return new PgUpdateBase(this.table, mapUpdateSet(this.table, values), this.session, this.dialect, this.withList).setToken(this.authToken);
  }
}

class PgUpdateBase extends QueryPromise {
  constructor(table, set, session, dialect, withList) {
    super();
    this.session = session;
    this.dialect = dialect;
    this.config = { set, table, withList, joins: [] };
    this.tableName = getTableLikeName(table);
    this.joinsNotNullableMap = typeof this.tableName === "string" ? { [this.tableName]: true } : {};
  }
  static [entityKind] = "PgUpdate";
  config;
  tableName;
  joinsNotNullableMap;
  cacheConfig;
  from(source) {
    const src = source;
    const tableName = getTableLikeName(src);
    if (typeof tableName === "string") {
      this.joinsNotNullableMap[tableName] = true;
    }
    this.config.from = src;
    return this;
  }
  getTableLikeFields(table) {
    if (is(table, PgTable)) {
      return table[Table.Symbol.Columns];
    } else if (is(table, Subquery)) {
      return table._.selectedFields;
    }
    return table[ViewBaseConfig].selectedFields;
  }
  createJoin(joinType) {
    return (table, on) => {
      const tableName = getTableLikeName(table);
      if (typeof tableName === "string" && this.config.joins.some((join) => join.alias === tableName)) {
        throw new Error(`Alias "${tableName}" is already used in this query`);
      }
      if (typeof on === "function") {
        const from = this.config.from && !is(this.config.from, SQL) ? this.getTableLikeFields(this.config.from) : undefined;
        on = on(new Proxy(this.config.table[Table.Symbol.Columns], new SelectionProxyHandler({ sqlAliasedBehavior: "sql", sqlBehavior: "sql" })), from && new Proxy(from, new SelectionProxyHandler({ sqlAliasedBehavior: "sql", sqlBehavior: "sql" })));
      }
      this.config.joins.push({ on, table, joinType, alias: tableName });
      if (typeof tableName === "string") {
        switch (joinType) {
          case "left": {
            this.joinsNotNullableMap[tableName] = false;
            break;
          }
          case "right": {
            this.joinsNotNullableMap = Object.fromEntries(Object.entries(this.joinsNotNullableMap).map(([key]) => [key, false]));
            this.joinsNotNullableMap[tableName] = true;
            break;
          }
          case "inner": {
            this.joinsNotNullableMap[tableName] = true;
            break;
          }
          case "full": {
            this.joinsNotNullableMap = Object.fromEntries(Object.entries(this.joinsNotNullableMap).map(([key]) => [key, false]));
            this.joinsNotNullableMap[tableName] = false;
            break;
          }
        }
      }
      return this;
    };
  }
  leftJoin = this.createJoin("left");
  rightJoin = this.createJoin("right");
  innerJoin = this.createJoin("inner");
  fullJoin = this.createJoin("full");
  where(where) {
    this.config.where = where;
    return this;
  }
  returning(fields) {
    if (!fields) {
      fields = Object.assign({}, this.config.table[Table.Symbol.Columns]);
      if (this.config.from) {
        const tableName = getTableLikeName(this.config.from);
        if (typeof tableName === "string" && this.config.from && !is(this.config.from, SQL)) {
          const fromFields = this.getTableLikeFields(this.config.from);
          fields[tableName] = fromFields;
        }
        for (const join of this.config.joins) {
          const tableName2 = getTableLikeName(join.table);
          if (typeof tableName2 === "string" && !is(join.table, SQL)) {
            const fromFields = this.getTableLikeFields(join.table);
            fields[tableName2] = fromFields;
          }
        }
      }
    }
    this.config.returningFields = fields;
    this.config.returning = orderSelectedFields(fields);
    return this;
  }
  getSQL() {
    return this.dialect.buildUpdateQuery(this.config);
  }
  toSQL() {
    const { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());
    return rest;
  }
  _prepare(name) {
    const query = this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true, undefined, {
      type: "insert",
      tables: extractUsedTable(this.config.table)
    }, this.cacheConfig);
    query.joinsNotNullableMap = this.joinsNotNullableMap;
    return query;
  }
  prepare(name) {
    return this._prepare(name);
  }
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  execute = (placeholderValues) => {
    return this._prepare().execute(placeholderValues, this.authToken);
  };
  getSelectedFields() {
    return this.config.returningFields ? new Proxy(this.config.returningFields, new SelectionProxyHandler({
      alias: getTableName(this.config.table),
      sqlAliasedBehavior: "alias",
      sqlBehavior: "error"
    })) : undefined;
  }
  $dynamic() {
    return this;
  }
}

// node_modules/drizzle-orm/pg-core/query-builders/count.js
class PgCountBuilder extends SQL {
  constructor(params) {
    super(PgCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
    this.params = params;
    this.mapWith(Number);
    this.session = params.session;
    this.sql = PgCountBuilder.buildCount(params.source, params.filters);
  }
  sql;
  token;
  static [entityKind] = "PgCountBuilder";
  [Symbol.toStringTag] = "PgCountBuilder";
  session;
  static buildEmbeddedCount(source, filters) {
    return sql`(select count(*) from ${source}${sql.raw(" where ").if(filters)}${filters})`;
  }
  static buildCount(source, filters) {
    return sql`select count(*) as count from ${source}${sql.raw(" where ").if(filters)}${filters};`;
  }
  setToken(token) {
    this.token = token;
    return this;
  }
  then(onfulfilled, onrejected) {
    return Promise.resolve(this.session.count(this.sql, this.token)).then(onfulfilled, onrejected);
  }
  catch(onRejected) {
    return this.then(undefined, onRejected);
  }
  finally(onFinally) {
    return this.then((value) => {
      onFinally?.();
      return value;
    }, (reason) => {
      onFinally?.();
      throw reason;
    });
  }
}

// node_modules/drizzle-orm/pg-core/query-builders/query.js
class RelationalQueryBuilder {
  constructor(fullSchema, schema, tableNamesMap, table, tableConfig, dialect, session) {
    this.fullSchema = fullSchema;
    this.schema = schema;
    this.tableNamesMap = tableNamesMap;
    this.table = table;
    this.tableConfig = tableConfig;
    this.dialect = dialect;
    this.session = session;
  }
  static [entityKind] = "PgRelationalQueryBuilder";
  findMany(config) {
    return new PgRelationalQuery(this.fullSchema, this.schema, this.tableNamesMap, this.table, this.tableConfig, this.dialect, this.session, config ? config : {}, "many");
  }
  findFirst(config) {
    return new PgRelationalQuery(this.fullSchema, this.schema, this.tableNamesMap, this.table, this.tableConfig, this.dialect, this.session, config ? { ...config, limit: 1 } : { limit: 1 }, "first");
  }
}

class PgRelationalQuery extends QueryPromise {
  constructor(fullSchema, schema, tableNamesMap, table, tableConfig, dialect, session, config, mode) {
    super();
    this.fullSchema = fullSchema;
    this.schema = schema;
    this.tableNamesMap = tableNamesMap;
    this.table = table;
    this.tableConfig = tableConfig;
    this.dialect = dialect;
    this.session = session;
    this.config = config;
    this.mode = mode;
  }
  static [entityKind] = "PgRelationalQuery";
  _prepare(name) {
    return tracer.startActiveSpan("drizzle.prepareQuery", () => {
      const { query, builtQuery } = this._toSQL();
      return this.session.prepareQuery(builtQuery, undefined, name, true, (rawRows, mapColumnValue) => {
        const rows = rawRows.map((row) => mapRelationalRow(this.schema, this.tableConfig, row, query.selection, mapColumnValue));
        if (this.mode === "first") {
          return rows[0];
        }
        return rows;
      });
    });
  }
  prepare(name) {
    return this._prepare(name);
  }
  _getQuery() {
    return this.dialect.buildRelationalQueryWithoutPK({
      fullSchema: this.fullSchema,
      schema: this.schema,
      tableNamesMap: this.tableNamesMap,
      table: this.table,
      tableConfig: this.tableConfig,
      queryConfig: this.config,
      tableAlias: this.tableConfig.tsName
    });
  }
  getSQL() {
    return this._getQuery().sql;
  }
  _toSQL() {
    const query = this._getQuery();
    const builtQuery = this.dialect.sqlToQuery(query.sql);
    return { query, builtQuery };
  }
  toSQL() {
    return this._toSQL().builtQuery;
  }
  authToken;
  setToken(token) {
    this.authToken = token;
    return this;
  }
  execute() {
    return tracer.startActiveSpan("drizzle.operation", () => {
      return this._prepare().execute(undefined, this.authToken);
    });
  }
}

// node_modules/drizzle-orm/pg-core/query-builders/raw.js
class PgRaw extends QueryPromise {
  constructor(execute, sql2, query, mapBatchResult) {
    super();
    this.execute = execute;
    this.sql = sql2;
    this.query = query;
    this.mapBatchResult = mapBatchResult;
  }
  static [entityKind] = "PgRaw";
  getSQL() {
    return this.sql;
  }
  getQuery() {
    return this.query;
  }
  mapResult(result, isFromBatch) {
    return isFromBatch ? this.mapBatchResult(result) : result;
  }
  _prepare() {
    return this;
  }
  isResponseInArrayMode() {
    return false;
  }
}

// node_modules/drizzle-orm/pg-core/db.js
class PgDatabase {
  constructor(dialect, session, schema) {
    this.dialect = dialect;
    this.session = session;
    this._ = schema ? {
      schema: schema.schema,
      fullSchema: schema.fullSchema,
      tableNamesMap: schema.tableNamesMap,
      session
    } : {
      schema: undefined,
      fullSchema: {},
      tableNamesMap: {},
      session
    };
    this.query = {};
    if (this._.schema) {
      for (const [tableName, columns] of Object.entries(this._.schema)) {
        this.query[tableName] = new RelationalQueryBuilder(schema.fullSchema, this._.schema, this._.tableNamesMap, schema.fullSchema[tableName], columns, dialect, session);
      }
    }
    this.$cache = { invalidate: async (_params) => {} };
  }
  static [entityKind] = "PgDatabase";
  query;
  $with = (alias, selection) => {
    const self2 = this;
    const as = (qb) => {
      if (typeof qb === "function") {
        qb = qb(new QueryBuilder(self2.dialect));
      }
      return new Proxy(new WithSubquery(qb.getSQL(), selection ?? ("getSelectedFields" in qb ? qb.getSelectedFields() ?? {} : {}), alias, true), new SelectionProxyHandler({ alias, sqlAliasedBehavior: "alias", sqlBehavior: "error" }));
    };
    return { as };
  };
  $count(source, filters) {
    return new PgCountBuilder({ source, filters, session: this.session });
  }
  $cache;
  with(...queries) {
    const self2 = this;
    function select(fields) {
      return new PgSelectBuilder({
        fields: fields ?? undefined,
        session: self2.session,
        dialect: self2.dialect,
        withList: queries
      });
    }
    function selectDistinct(fields) {
      return new PgSelectBuilder({
        fields: fields ?? undefined,
        session: self2.session,
        dialect: self2.dialect,
        withList: queries,
        distinct: true
      });
    }
    function selectDistinctOn(on, fields) {
      return new PgSelectBuilder({
        fields: fields ?? undefined,
        session: self2.session,
        dialect: self2.dialect,
        withList: queries,
        distinct: { on }
      });
    }
    function update(table) {
      return new PgUpdateBuilder(table, self2.session, self2.dialect, queries);
    }
    function insert(table) {
      return new PgInsertBuilder(table, self2.session, self2.dialect, queries);
    }
    function delete_(table) {
      return new PgDeleteBase(table, self2.session, self2.dialect, queries);
    }
    return { select, selectDistinct, selectDistinctOn, update, insert, delete: delete_ };
  }
  select(fields) {
    return new PgSelectBuilder({
      fields: fields ?? undefined,
      session: this.session,
      dialect: this.dialect
    });
  }
  selectDistinct(fields) {
    return new PgSelectBuilder({
      fields: fields ?? undefined,
      session: this.session,
      dialect: this.dialect,
      distinct: true
    });
  }
  selectDistinctOn(on, fields) {
    return new PgSelectBuilder({
      fields: fields ?? undefined,
      session: this.session,
      dialect: this.dialect,
      distinct: { on }
    });
  }
  update(table) {
    return new PgUpdateBuilder(table, this.session, this.dialect);
  }
  insert(table) {
    return new PgInsertBuilder(table, this.session, this.dialect);
  }
  delete(table) {
    return new PgDeleteBase(table, this.session, this.dialect);
  }
  refreshMaterializedView(view) {
    return new PgRefreshMaterializedView(view, this.session, this.dialect);
  }
  authToken;
  execute(query) {
    const sequel = typeof query === "string" ? sql.raw(query) : query.getSQL();
    const builtQuery = this.dialect.sqlToQuery(sequel);
    const prepared = this.session.prepareQuery(builtQuery, undefined, undefined, false);
    return new PgRaw(() => prepared.execute(undefined, this.authToken), sequel, builtQuery, (result) => prepared.mapResult(result, true));
  }
  transaction(transaction, config) {
    return this.session.transaction(transaction, config);
  }
}

// node_modules/drizzle-orm/cache/core/cache.js
class Cache {
  static [entityKind] = "Cache";
}

class NoopCache extends Cache {
  strategy() {
    return "all";
  }
  static [entityKind] = "NoopCache";
  async get(_key) {
    return;
  }
  async put(_hashedQuery, _response, _tables, _config) {}
  async onMutate(_params) {}
}
async function hashQuery(sql2, params) {
  const dataToHash = `${sql2}-${JSON.stringify(params)}`;
  const encoder = new TextEncoder;
  const data = encoder.encode(dataToHash);
  const hashBuffer = await crypto.subtle.digest("SHA-256", data);
  const hashArray = [...new Uint8Array(hashBuffer)];
  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, "0")).join("");
  return hashHex;
}

// node_modules/drizzle-orm/errors/index.js
class DrizzleQueryError extends Error {
  constructor(query, params, cause) {
    super(`Failed query: ${query}
params: ${params}`);
    this.query = query;
    this.params = params;
    this.cause = cause;
    Error.captureStackTrace(this, DrizzleQueryError);
    if (cause)
      this.cause = cause;
  }
}

// node_modules/drizzle-orm/pg-core/session.js
class PgPreparedQuery {
  constructor(query, cache, queryMetadata, cacheConfig) {
    this.query = query;
    this.cache = cache;
    this.queryMetadata = queryMetadata;
    this.cacheConfig = cacheConfig;
    if (cache && cache.strategy() === "all" && cacheConfig === undefined) {
      this.cacheConfig = { enable: true, autoInvalidate: true };
    }
    if (!this.cacheConfig?.enable) {
      this.cacheConfig = undefined;
    }
  }
  authToken;
  getQuery() {
    return this.query;
  }
  mapResult(response, _isFromBatch) {
    return response;
  }
  setToken(token) {
    this.authToken = token;
    return this;
  }
  static [entityKind] = "PgPreparedQuery";
  joinsNotNullableMap;
  async queryWithCache(queryString, params, query) {
    if (this.cache === undefined || is(this.cache, NoopCache) || this.queryMetadata === undefined) {
      try {
        return await query();
      } catch (e) {
        throw new DrizzleQueryError(queryString, params, e);
      }
    }
    if (this.cacheConfig && !this.cacheConfig.enable) {
      try {
        return await query();
      } catch (e) {
        throw new DrizzleQueryError(queryString, params, e);
      }
    }
    if ((this.queryMetadata.type === "insert" || this.queryMetadata.type === "update" || this.queryMetadata.type === "delete") && this.queryMetadata.tables.length > 0) {
      try {
        const [res] = await Promise.all([
          query(),
          this.cache.onMutate({ tables: this.queryMetadata.tables })
        ]);
        return res;
      } catch (e) {
        throw new DrizzleQueryError(queryString, params, e);
      }
    }
    if (!this.cacheConfig) {
      try {
        return await query();
      } catch (e) {
        throw new DrizzleQueryError(queryString, params, e);
      }
    }
    if (this.queryMetadata.type === "select") {
      const fromCache = await this.cache.get(this.cacheConfig.tag ?? await hashQuery(queryString, params), this.queryMetadata.tables, this.cacheConfig.tag !== undefined, this.cacheConfig.autoInvalidate);
      if (fromCache === undefined) {
        let result;
        try {
          result = await query();
        } catch (e) {
          throw new DrizzleQueryError(queryString, params, e);
        }
        await this.cache.put(this.cacheConfig.tag ?? await hashQuery(queryString, params), result, this.cacheConfig.autoInvalidate ? this.queryMetadata.tables : [], this.cacheConfig.tag !== undefined, this.cacheConfig.config);
        return result;
      }
      return fromCache;
    }
    try {
      return await query();
    } catch (e) {
      throw new DrizzleQueryError(queryString, params, e);
    }
  }
}

class PgSession {
  constructor(dialect) {
    this.dialect = dialect;
  }
  static [entityKind] = "PgSession";
  execute(query, token) {
    return tracer.startActiveSpan("drizzle.operation", () => {
      const prepared = tracer.startActiveSpan("drizzle.prepareQuery", () => {
        return this.prepareQuery(this.dialect.sqlToQuery(query), undefined, undefined, false);
      });
      return prepared.setToken(token).execute(undefined, token);
    });
  }
  all(query) {
    return this.prepareQuery(this.dialect.sqlToQuery(query), undefined, undefined, false).all();
  }
  async count(sql2, token) {
    const res = await this.execute(sql2, token);
    return Number(res[0]["count"]);
  }
}

// node_modules/drizzle-orm/logger.js
class ConsoleLogWriter {
  static [entityKind] = "ConsoleLogWriter";
  write(message) {
    console.log(message);
  }
}

class DefaultLogger {
  static [entityKind] = "DefaultLogger";
  writer;
  constructor(config) {
    this.writer = config?.writer ?? new ConsoleLogWriter;
  }
  logQuery(query, params) {
    const stringifiedParams = params.map((p) => {
      try {
        return JSON.stringify(p);
      } catch {
        return String(p);
      }
    });
    const paramsStr = stringifiedParams.length ? ` -- params: [${stringifiedParams.join(", ")}]` : "";
    this.writer.write(`Query: ${query}${paramsStr}`);
  }
}

class NoopLogger {
  static [entityKind] = "NoopLogger";
  logQuery() {}
}

// src/db/schema.js
var usersTable = pgTable("users", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  age: integer("age").notNull(),
  notes: text("notes"),
  user_id: text("user_id"),
  parent_id: integer("parent_id")
});
var measurementsTable = pgTable("measurements", {
  id: serial("id").primaryKey(),
  name: text("name").notNull()
});
var measurementsDataTable = pgTable("measurementsData", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").notNull().references(() => usersTable.id),
  measurement_id: integer("measurement_id").references(() => measurementsTable.id),
  value: numeric("value"),
  created_at: timestamp("created_at", { mode: "string" })
});
var weightTable = pgTable("weight", {
  id: serial("id").primaryKey(),
  scaleWeight: numeric("scaleWeight"),
  created_at: timestamp("created_at"),
  trendWeight: numeric("trendWeight"),
  user_id: integer("user_id").notNull().references(() => usersTable.id)
});
var nutritionTable = pgTable("nutrition", {
  id: serial("id").primaryKey(),
  calories: numeric("calories"),
  protein: numeric("protein"),
  fat: numeric("fat"),
  carbs: numeric("carbs"),
  created_at: timestamp("created_at"),
  user_id: integer("user_id").notNull().references(() => usersTable.id)
});
var weightUnitsTable = pgTable("weightUnits", {
  id: serial("id").primaryKey(),
  unit: text("unit").notNull()
});
var customFoodTable = pgTable("foodsTable", {
  id: serial("id").primaryKey(),
  foodName: text("foodName"),
  defaultProtein: numeric("defaultProtein"),
  defaultServing: numeric("defaultServing"),
  defaultCalories: numeric("defaultCalories"),
  defaultCarbs: numeric("defaultCarbs"),
  defaultFat: numeric("defaultFat"),
  user_id: integer("user_id").references(() => usersTable.id)
});
var heightUnitTable = pgTable("heightUnit", {
  id: serial("id").primaryKey(),
  unit: text("unit").notNull()
});
var programmesTable = pgTable("programme", {
  id: serial("id").primaryKey(),
  name: text("name"),
  description: text("description"),
  user_id: integer("user_id").references(() => usersTable.id),
  assigned_to: integer("assigned_to").references(() => usersTable.id)
});
var exerciseTable = pgTable("exercise", {
  id: serial("id").primaryKey(),
  name: text("name"),
  equipment: text("equipment"),
  type: text("type"),
  instructions: text("instructions"),
  photo: text("photo")
});
var customExerciseTable = pgTable("customExercise", {
  id: serial("id").primaryKey(),
  name: text("name"),
  equipment: text("equipment"),
  type: text("type"),
  instructions: text("instructions"),
  photo: text("photo"),
  user_id: integer("user_id").references(() => usersTable.id)
});
var workoutTable = pgTable("workout", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").references(() => usersTable.id),
  name: text("name"),
  programme_id: integer("programme_id").references(() => programmesTable.id),
  created_at: timestamp("created_at")
});
var userProgrammeTable = pgTable("userProgramme", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").references(() => usersTable.id),
  programme_id: integer("programme_id").references(() => programmesTable.id),
  status: text("status")
});
var latestActivitiesTable = pgTable("latestActivities", {
  id: serial("id").primaryKey(),
  sender_id: integer("sender_id").references(() => usersTable.id),
  reciever_id: integer("reciever_id").references(() => usersTable.id),
  message: text("message")
});
var programmeWorkoutTable = pgTable("programmeWorkout", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  programme_id: integer("programme_id").references(() => programmesTable.id)
});
var programmeDetailsTable = pgTable("programmeDetails", {
  id: serial("id").primaryKey(),
  exercise_id: integer("exercise_id").references(() => exerciseTable.id),
  repRange: text("repRange"),
  programme_workoutId: integer("programme_workoutId").references(() => programmeWorkoutTable.id),
  sets: integer("sets")
});
var roomsTable = pgTable("rooms", {
  id: serial("id").primaryKey(),
  name: text("name"),
  user_id: integer("user_id").references(() => usersTable.id)
});
var roomMembersTable = pgTable("roomMembers", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").references(() => usersTable.id),
  room_id: integer("room_id").references(() => roomsTable.id)
});
var messagesTable = pgTable("messages", {
  id: serial("id").primaryKey(),
  content: text("content"),
  created_at: timestamp("created_at"),
  user_id: integer("user_id").references(() => usersTable.id),
  room_id: integer("room_id").references(() => roomsTable.id)
});
var workoutDetailsTable = pgTable("workoutDetails", {
  id: serial("id").primaryKey(),
  workout_id: integer("workout_id").references(() => workoutTable.id),
  set: numeric("set"),
  reps: numeric("reps"),
  weight: numeric("weight"),
  rir: numeric("rir"),
  exercise_id: integer("exercise_id").references(() => exerciseTable.id)
});
var userRelations = relations(usersTable, ({ many }) => ({
  weight: many(weightTable),
  nutrients: many(nutritionTable),
  measurementData: many(measurementsDataTable),
  workout: many(workoutTable),
  customFood: many(customFoodTable),
  programmes: many(programmesTable),
  userProgramme: many(userProgrammeTable),
  rooms: many(roomsTable),
  room_members: many(roomMembersTable),
  messages: many(messagesTable),
  customExercises: many(customExerciseTable),
  sender: many(latestActivitiesTable, {
    relationName: "senderActivity"
  }),
  reciever: many(latestActivitiesTable, {
    relationName: "receiverActivity"
  })
}));
var roomRelations = relations(roomsTable, ({ one, many }) => ({
  roomMembers: many(roomMembersTable),
  messages: many(messagesTable),
  user: one(usersTable, {
    fields: [roomsTable.user_id],
    references: [usersTable.id]
  })
}));
var messagesRelations = relations(messagesTable, ({ one, many }) => ({
  user: one(usersTable, {
    fields: [messagesTable.user_id],
    references: [usersTable.id]
  }),
  room: one(roomsTable, {
    fields: [messagesTable.room_id],
    references: [roomsTable.id]
  })
}));
var roomMembersRelations = relations(roomMembersTable, ({ one }) => ({
  user: one(usersTable, {
    fields: [roomMembersTable.user_id],
    references: [usersTable.id]
  }),
  room: one(roomsTable, {
    fields: [roomMembersTable.room_id],
    references: [roomsTable.id]
  })
}));
var measurementRelationwithData = relations(measurementsTable, ({ many }) => ({
  measurementData: many(measurementsDataTable)
}));
var measurementDataTableWithMeasurement = relations(measurementsDataTable, ({ one }) => ({
  measurement: one(measurementsTable, {
    fields: [measurementsDataTable.measurement_id],
    references: [measurementsTable.id]
  }),
  user: one(usersTable, {
    fields: [measurementsDataTable.user_id],
    references: [usersTable.id]
  })
}));
var parent_child = relations(usersTable, ({ one, many }) => ({
  parent: one(usersTable, {
    fields: [usersTable.parent_id],
    references: [usersTable.id],
    relationName: "children"
  }),
  children: many(usersTable, {
    relationName: "children"
  })
}));
var weightRelations = relations(weightTable, ({ one }) => ({
  user: one(usersTable, {
    fields: [weightTable.user_id],
    references: [usersTable.id]
  })
}));
var nutritionRelations = relations(nutritionTable, ({ one }) => ({
  user: one(usersTable, {
    fields: [nutritionTable.user_id],
    references: [usersTable.id]
  })
}));
var customExerciseRelationWithUser = relations(customExerciseTable, ({ one }) => ({
  user: one(usersTable, {
    fields: [customExerciseTable.user_id],
    references: [usersTable.id]
  })
}));
var programmeUserRelationWithUser = relations(userProgrammeTable, ({ one }) => ({
  user: one(usersTable, {
    fields: [userProgrammeTable.user_id],
    references: [usersTable.id]
  })
}));
var programmeUserRelationWithProgramme = relations(userProgrammeTable, ({ one }) => ({
  programme: one(programmesTable, {
    fields: [userProgrammeTable.programme_id],
    references: [programmesTable.id]
  })
}));
var workoutDetailRelationWithExercise = relations(workoutDetailsTable, ({ one }) => ({
  exercise: one(exerciseTable, {
    fields: [workoutDetailsTable.exercise_id],
    references: [exerciseTable.id]
  })
}));
var programmeRelationsWithUser = relations(programmesTable, ({ one }) => ({
  usersTable: one(usersTable, {
    fields: [programmesTable.user_id],
    references: [usersTable.id]
  })
}));
var childRelationwithParent = relations(usersTable, ({ one }) => ({
  parent: one(usersTable, {
    fields: [usersTable.parent_id],
    references: [usersTable.id]
  })
}));
var workoutRelationWithUser = relations(workoutTable, ({ one }) => ({
  user: one(usersTable, {
    fields: [workoutTable.user_id],
    references: [usersTable.id]
  }),
  programme: one(programmesTable, {
    fields: [workoutTable.programme_id],
    references: [programmesTable.id]
  })
}));
var exerciseWorkoutRelation = relations(exerciseTable, ({ many }) => ({
  workout: many(workoutDetailsTable),
  programmeDetails: many(programmeDetailsTable)
}));
var workoutRelations = relations(workoutTable, ({ many }) => ({
  workoutDetail: many(workoutDetailsTable)
}));
var workoutDetailRelation = relations(workoutDetailsTable, ({ one }) => ({
  workout: one(workoutTable, {
    fields: [workoutDetailsTable.workout_id],
    references: [workoutTable.id]
  })
}));
var programmeDetailsRelationWithProgramme = relations(programmeDetailsTable, ({ one }) => ({
  programmeWorkout: one(programmeWorkoutTable, {
    fields: [programmeDetailsTable.programme_workoutId],
    references: [programmeWorkoutTable.id]
  })
}));
var programmeRelationWithProgramme = relations(programmesTable, ({ many }) => ({
  userProgramme: many(userProgrammeTable),
  workout: many(workoutTable),
  programmeWorkout: many(programmeWorkoutTable)
}));
var programmeWorkoutRelation = relations(programmeWorkoutTable, ({ one }) => ({
  programme: one(programmesTable, {
    fields: [programmeWorkoutTable.programme_id],
    references: [programmesTable.id]
  })
}));
var programmeWorkoutDetailRelation = relations(programmeWorkoutTable, ({ many }) => ({
  programmeDetails: many(programmeDetailsTable)
}));
var programmeDetailRelationWithExercise = relations(programmeDetailsTable, ({ one }) => ({
  exercise: one(exerciseTable, {
    fields: [programmeDetailsTable.exercise_id],
    references: [exerciseTable.id]
  })
}));
var customFoodRelation = relations(customFoodTable, ({ one }) => ({
  user: one(usersTable, {
    fields: [customFoodTable.user_id],
    references: [usersTable.id]
  })
}));
var activtiesRelation = relations(latestActivitiesTable, ({ one }) => ({
  sender: one(usersTable, {
    fields: [latestActivitiesTable.sender_id],
    references: [usersTable.id],
    relationName: "senderActivity"
  }),
  reciever: one(usersTable, {
    fields: [latestActivitiesTable.reciever_id],
    references: [usersTable.id],
    relationName: "receiverActivity"
  })
}));

// node_modules/@neondatabase/serverless/index.mjs
var So = Object.create;
var Ie = Object.defineProperty;
var Eo = Object.getOwnPropertyDescriptor;
var Ao = Object.getOwnPropertyNames;
var Co = Object.getPrototypeOf;
var _o = Object.prototype.hasOwnProperty;
var Io = (r, e, t) => (e in r) ? Ie(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t;
var a = (r, e) => Ie(r, "name", { value: e, configurable: true });
var G = (r, e) => () => (r && (e = r(r = 0)), e);
var T = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports);
var ie = (r, e) => {
  for (var t in e)
    Ie(r, t, {
      get: e[t],
      enumerable: true
    });
};
var Dn = (r, e, t, n) => {
  if (e && typeof e == "object" || typeof e == "function")
    for (let i of Ao(e))
      !_o.call(r, i) && i !== t && Ie(r, i, { get: () => e[i], enumerable: !(n = Eo(e, i)) || n.enumerable });
  return r;
};
var Se = (r, e, t) => (t = r != null ? So(Co(r)) : {}, Dn(e || !r || !r.__esModule ? Ie(t, "default", { value: r, enumerable: true }) : t, r));
var O = (r) => Dn(Ie({}, "__esModule", { value: true }), r);
var E = (r, e, t) => Io(r, typeof e != "symbol" ? e + "" : e, t);
var Qn = T((lt2) => {
  p();
  lt2.byteLength = Po;
  lt2.toByteArray = Ro;
  lt2.fromByteArray = ko;
  var ae = [], te = [], To = typeof Uint8Array < "u" ? Uint8Array : Array, qt = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  for (Ee = 0, On = qt.length;Ee < On; ++Ee)
    ae[Ee] = qt[Ee], te[qt.charCodeAt(Ee)] = Ee;
  var Ee, On;
  te[45] = 62;
  te[95] = 63;
  function qn(r) {
    var e = r.length;
    if (e % 4 > 0)
      throw new Error("Invalid string. Length must be a multiple of 4");
    var t = r.indexOf("=");
    t === -1 && (t = e);
    var n = t === e ? 0 : 4 - t % 4;
    return [t, n];
  }
  a(qn, "getLens");
  function Po(r) {
    var e = qn(r), t = e[0], n = e[1];
    return (t + n) * 3 / 4 - n;
  }
  a(Po, "byteLength");
  function Bo(r, e, t) {
    return (e + t) * 3 / 4 - t;
  }
  a(Bo, "_byteLength");
  function Ro(r) {
    var e, t = qn(r), n = t[0], i = t[1], s = new To(Bo(r, n, i)), o = 0, u = i > 0 ? n - 4 : n, c;
    for (c = 0;c < u; c += 4)
      e = te[r.charCodeAt(c)] << 18 | te[r.charCodeAt(c + 1)] << 12 | te[r.charCodeAt(c + 2)] << 6 | te[r.charCodeAt(c + 3)], s[o++] = e >> 16 & 255, s[o++] = e >> 8 & 255, s[o++] = e & 255;
    return i === 2 && (e = te[r.charCodeAt(c)] << 2 | te[r.charCodeAt(c + 1)] >> 4, s[o++] = e & 255), i === 1 && (e = te[r.charCodeAt(c)] << 10 | te[r.charCodeAt(c + 1)] << 4 | te[r.charCodeAt(c + 2)] >> 2, s[o++] = e >> 8 & 255, s[o++] = e & 255), s;
  }
  a(Ro, "toByteArray");
  function Lo(r) {
    return ae[r >> 18 & 63] + ae[r >> 12 & 63] + ae[r >> 6 & 63] + ae[r & 63];
  }
  a(Lo, "tripletToBase64");
  function Fo(r, e, t) {
    for (var n, i = [], s = e;s < t; s += 3)
      n = (r[s] << 16 & 16711680) + (r[s + 1] << 8 & 65280) + (r[s + 2] & 255), i.push(Lo(n));
    return i.join("");
  }
  a(Fo, "encodeChunk");
  function ko(r) {
    for (var e, t = r.length, n = t % 3, i = [], s = 16383, o = 0, u = t - n;o < u; o += s)
      i.push(Fo(r, o, o + s > u ? u : o + s));
    return n === 1 ? (e = r[t - 1], i.push(ae[e >> 2] + ae[e << 4 & 63] + "==")) : n === 2 && (e = (r[t - 2] << 8) + r[t - 1], i.push(ae[e >> 10] + ae[e >> 4 & 63] + ae[e << 2 & 63] + "=")), i.join("");
  }
  a(ko, "fromByteArray");
});
var Nn = T((Qt) => {
  p();
  Qt.read = function(r, e, t, n, i) {
    var s, o, u = i * 8 - n - 1, c = (1 << u) - 1, l = c >> 1, f = -7, y = t ? i - 1 : 0, g = t ? -1 : 1, A = r[e + y];
    for (y += g, s = A & (1 << -f) - 1, A >>= -f, f += u;f > 0; s = s * 256 + r[e + y], y += g, f -= 8)
      ;
    for (o = s & (1 << -f) - 1, s >>= -f, f += n;f > 0; o = o * 256 + r[e + y], y += g, f -= 8)
      ;
    if (s === 0)
      s = 1 - l;
    else {
      if (s === c)
        return o ? NaN : (A ? -1 : 1) * (1 / 0);
      o = o + Math.pow(2, n), s = s - l;
    }
    return (A ? -1 : 1) * o * Math.pow(2, s - n);
  };
  Qt.write = function(r, e, t, n, i, s) {
    var o, u, c, l = s * 8 - i - 1, f = (1 << l) - 1, y = f >> 1, g = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, A = n ? 0 : s - 1, C = n ? 1 : -1, D = e < 0 || e === 0 && 1 / e < 0 ? 1 : 0;
    for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (u = isNaN(e) ? 1 : 0, o = f) : (o = Math.floor(Math.log(e) / Math.LN2), e * (c = Math.pow(2, -o)) < 1 && (o--, c *= 2), o + y >= 1 ? e += g / c : e += g * Math.pow(2, 1 - y), e * c >= 2 && (o++, c /= 2), o + y >= f ? (u = 0, o = f) : o + y >= 1 ? (u = (e * c - 1) * Math.pow(2, i), o = o + y) : (u = e * Math.pow(2, y - 1) * Math.pow(2, i), o = 0));i >= 8; r[t + A] = u & 255, A += C, u /= 256, i -= 8)
      ;
    for (o = o << i | u, l += i;l > 0; r[t + A] = o & 255, A += C, o /= 256, l -= 8)
      ;
    r[t + A - C] |= D * 128;
  };
});
var ii = T((Re) => {
  p();
  var Nt = Qn(), Pe = Nn(), Wn = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Re.Buffer = h;
  Re.SlowBuffer = Qo;
  Re.INSPECT_MAX_BYTES = 50;
  var ft = 2147483647;
  Re.kMaxLength = ft;
  h.TYPED_ARRAY_SUPPORT = Mo();
  !h.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
  function Mo() {
    try {
      let r = new Uint8Array(1), e = { foo: a(function() {
        return 42;
      }, "foo") };
      return Object.setPrototypeOf(e, Uint8Array.prototype), Object.setPrototypeOf(r, e), r.foo() === 42;
    } catch {
      return false;
    }
  }
  a(Mo, "typedArraySupport");
  Object.defineProperty(h.prototype, "parent", { enumerable: true, get: a(function() {
    if (h.isBuffer(this))
      return this.buffer;
  }, "get") });
  Object.defineProperty(h.prototype, "offset", { enumerable: true, get: a(function() {
    if (h.isBuffer(this))
      return this.byteOffset;
  }, "get") });
  function he(r) {
    if (r > ft)
      throw new RangeError('The value "' + r + '" is invalid for option "size"');
    let e = new Uint8Array(r);
    return Object.setPrototypeOf(e, h.prototype), e;
  }
  a(he, "createBuffer");
  function h(r, e, t) {
    if (typeof r == "number") {
      if (typeof e == "string")
        throw new TypeError('The "string" argument must be of type string. Received type number');
      return $t(r);
    }
    return Gn(r, e, t);
  }
  a(h, "Buffer");
  h.poolSize = 8192;
  function Gn(r, e, t) {
    if (typeof r == "string")
      return Do(r, e);
    if (ArrayBuffer.isView(r))
      return Oo(r);
    if (r == null)
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof r);
    if (ue(r, ArrayBuffer) || r && ue(r.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (ue(r, SharedArrayBuffer) || r && ue(r.buffer, SharedArrayBuffer)))
      return jt(r, e, t);
    if (typeof r == "number")
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    let n = r.valueOf && r.valueOf();
    if (n != null && n !== r)
      return h.from(n, e, t);
    let i = qo(r);
    if (i)
      return i;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof r[Symbol.toPrimitive] == "function")
      return h.from(r[Symbol.toPrimitive]("string"), e, t);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof r);
  }
  a(Gn, "from");
  h.from = function(r, e, t) {
    return Gn(r, e, t);
  };
  Object.setPrototypeOf(h.prototype, Uint8Array.prototype);
  Object.setPrototypeOf(h, Uint8Array);
  function Vn(r) {
    if (typeof r != "number")
      throw new TypeError('"size" argument must be of type number');
    if (r < 0)
      throw new RangeError('The value "' + r + '" is invalid for option "size"');
  }
  a(Vn, "assertSize");
  function Uo(r, e, t) {
    return Vn(r), r <= 0 ? he(r) : e !== undefined ? typeof t == "string" ? he(r).fill(e, t) : he(r).fill(e) : he(r);
  }
  a(Uo, "alloc");
  h.alloc = function(r, e, t) {
    return Uo(r, e, t);
  };
  function $t(r) {
    return Vn(r), he(r < 0 ? 0 : Gt(r) | 0);
  }
  a($t, "allocUnsafe");
  h.allocUnsafe = function(r) {
    return $t(r);
  };
  h.allocUnsafeSlow = function(r) {
    return $t(r);
  };
  function Do(r, e) {
    if ((typeof e != "string" || e === "") && (e = "utf8"), !h.isEncoding(e))
      throw new TypeError("Unknown encoding: " + e);
    let t = zn(r, e) | 0, n = he(t), i = n.write(r, e);
    return i !== t && (n = n.slice(0, i)), n;
  }
  a(Do, "fromString");
  function Wt(r) {
    let e = r.length < 0 ? 0 : Gt(r.length) | 0, t = he(e);
    for (let n = 0;n < e; n += 1)
      t[n] = r[n] & 255;
    return t;
  }
  a(Wt, "fromArrayLike");
  function Oo(r) {
    if (ue(r, Uint8Array)) {
      let e = new Uint8Array(r);
      return jt(e.buffer, e.byteOffset, e.byteLength);
    }
    return Wt(r);
  }
  a(Oo, "fromArrayView");
  function jt(r, e, t) {
    if (e < 0 || r.byteLength < e)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (r.byteLength < e + (t || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let n;
    return e === undefined && t === undefined ? n = new Uint8Array(r) : t === undefined ? n = new Uint8Array(r, e) : n = new Uint8Array(r, e, t), Object.setPrototypeOf(n, h.prototype), n;
  }
  a(jt, "fromArrayBuffer");
  function qo(r) {
    if (h.isBuffer(r)) {
      let e = Gt(r.length) | 0, t = he(e);
      return t.length === 0 || r.copy(t, 0, 0, e), t;
    }
    if (r.length !== undefined)
      return typeof r.length != "number" || zt(r.length) ? he(0) : Wt(r);
    if (r.type === "Buffer" && Array.isArray(r.data))
      return Wt(r.data);
  }
  a(qo, "fromObject");
  function Gt(r) {
    if (r >= ft)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + ft.toString(16) + " bytes");
    return r | 0;
  }
  a(Gt, "checked");
  function Qo(r) {
    return +r != r && (r = 0), h.alloc(+r);
  }
  a(Qo, "SlowBuffer");
  h.isBuffer = a(function(e) {
    return e != null && e._isBuffer === true && e !== h.prototype;
  }, "isBuffer");
  h.compare = a(function(e, t) {
    if (ue(e, Uint8Array) && (e = h.from(e, e.offset, e.byteLength)), ue(t, Uint8Array) && (t = h.from(t, t.offset, t.byteLength)), !h.isBuffer(e) || !h.isBuffer(t))
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (e === t)
      return 0;
    let n = e.length, i = t.length;
    for (let s = 0, o = Math.min(n, i);s < o; ++s)
      if (e[s] !== t[s]) {
        n = e[s], i = t[s];
        break;
      }
    return n < i ? -1 : i < n ? 1 : 0;
  }, "compare");
  h.isEncoding = a(function(e) {
    switch (String(e).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return true;
      default:
        return false;
    }
  }, "isEncoding");
  h.concat = a(function(e, t) {
    if (!Array.isArray(e))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (e.length === 0)
      return h.alloc(0);
    let n;
    if (t === undefined)
      for (t = 0, n = 0;n < e.length; ++n)
        t += e[n].length;
    let i = h.allocUnsafe(t), s = 0;
    for (n = 0;n < e.length; ++n) {
      let o = e[n];
      if (ue(o, Uint8Array))
        s + o.length > i.length ? (h.isBuffer(o) || (o = h.from(o)), o.copy(i, s)) : Uint8Array.prototype.set.call(i, o, s);
      else if (h.isBuffer(o))
        o.copy(i, s);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      s += o.length;
    }
    return i;
  }, "concat");
  function zn(r, e) {
    if (h.isBuffer(r))
      return r.length;
    if (ArrayBuffer.isView(r) || ue(r, ArrayBuffer))
      return r.byteLength;
    if (typeof r != "string")
      throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof r);
    let t = r.length, n = arguments.length > 2 && arguments[2] === true;
    if (!n && t === 0)
      return 0;
    let i = false;
    for (;; )
      switch (e) {
        case "ascii":
        case "latin1":
        case "binary":
          return t;
        case "utf8":
        case "utf-8":
          return Ht(r).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return t * 2;
        case "hex":
          return t >>> 1;
        case "base64":
          return ni(r).length;
        default:
          if (i)
            return n ? -1 : Ht(r).length;
          e = ("" + e).toLowerCase(), i = true;
      }
  }
  a(zn, "byteLength");
  h.byteLength = zn;
  function No(r, e, t) {
    let n = false;
    if ((e === undefined || e < 0) && (e = 0), e > this.length || ((t === undefined || t > this.length) && (t = this.length), t <= 0) || (t >>>= 0, e >>>= 0, t <= e))
      return "";
    for (r || (r = "utf8");; )
      switch (r) {
        case "hex":
          return Zo(this, e, t);
        case "utf8":
        case "utf-8":
          return Yn(this, e, t);
        case "ascii":
          return Ko(this, e, t);
        case "latin1":
        case "binary":
          return Yo(this, e, t);
        case "base64":
          return Vo(this, e, t);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Jo(this, e, t);
        default:
          if (n)
            throw new TypeError("Unknown encoding: " + r);
          r = (r + "").toLowerCase(), n = true;
      }
  }
  a(No, "slowToString");
  h.prototype._isBuffer = true;
  function Ae(r, e, t) {
    let n = r[e];
    r[e] = r[t], r[t] = n;
  }
  a(Ae, "swap");
  h.prototype.swap16 = a(function() {
    let e = this.length;
    if (e % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let t = 0;t < e; t += 2)
      Ae(this, t, t + 1);
    return this;
  }, "swap16");
  h.prototype.swap32 = a(function() {
    let e = this.length;
    if (e % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let t = 0;t < e; t += 4)
      Ae(this, t, t + 3), Ae(this, t + 1, t + 2);
    return this;
  }, "swap32");
  h.prototype.swap64 = a(function() {
    let e = this.length;
    if (e % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let t = 0;t < e; t += 8)
      Ae(this, t, t + 7), Ae(this, t + 1, t + 6), Ae(this, t + 2, t + 5), Ae(this, t + 3, t + 4);
    return this;
  }, "swap64");
  h.prototype.toString = a(function() {
    let e = this.length;
    return e === 0 ? "" : arguments.length === 0 ? Yn(this, 0, e) : No.apply(this, arguments);
  }, "toString");
  h.prototype.toLocaleString = h.prototype.toString;
  h.prototype.equals = a(function(e) {
    if (!h.isBuffer(e))
      throw new TypeError("Argument must be a Buffer");
    return this === e ? true : h.compare(this, e) === 0;
  }, "equals");
  h.prototype.inspect = a(function() {
    let e = "", t = Re.INSPECT_MAX_BYTES;
    return e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(), this.length > t && (e += " ... "), "<Buffer " + e + ">";
  }, "inspect");
  Wn && (h.prototype[Wn] = h.prototype.inspect);
  h.prototype.compare = a(function(e, t, n, i, s) {
    if (ue(e, Uint8Array) && (e = h.from(e, e.offset, e.byteLength)), !h.isBuffer(e))
      throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
    if (t === undefined && (t = 0), n === undefined && (n = e ? e.length : 0), i === undefined && (i = 0), s === undefined && (s = this.length), t < 0 || n > e.length || i < 0 || s > this.length)
      throw new RangeError("out of range index");
    if (i >= s && t >= n)
      return 0;
    if (i >= s)
      return -1;
    if (t >= n)
      return 1;
    if (t >>>= 0, n >>>= 0, i >>>= 0, s >>>= 0, this === e)
      return 0;
    let o = s - i, u = n - t, c = Math.min(o, u), l = this.slice(i, s), f = e.slice(t, n);
    for (let y = 0;y < c; ++y)
      if (l[y] !== f[y]) {
        o = l[y], u = f[y];
        break;
      }
    return o < u ? -1 : u < o ? 1 : 0;
  }, "compare");
  function Kn(r, e, t, n, i) {
    if (r.length === 0)
      return -1;
    if (typeof t == "string" ? (n = t, t = 0) : t > 2147483647 ? t = 2147483647 : t < -2147483648 && (t = -2147483648), t = +t, zt(t) && (t = i ? 0 : r.length - 1), t < 0 && (t = r.length + t), t >= r.length) {
      if (i)
        return -1;
      t = r.length - 1;
    } else if (t < 0)
      if (i)
        t = 0;
      else
        return -1;
    if (typeof e == "string" && (e = h.from(e, n)), h.isBuffer(e))
      return e.length === 0 ? -1 : jn(r, e, t, n, i);
    if (typeof e == "number")
      return e = e & 255, typeof Uint8Array.prototype.indexOf == "function" ? i ? Uint8Array.prototype.indexOf.call(r, e, t) : Uint8Array.prototype.lastIndexOf.call(r, e, t) : jn(r, [e], t, n, i);
    throw new TypeError("val must be string, number or Buffer");
  }
  a(Kn, "bidirectionalIndexOf");
  function jn(r, e, t, n, i) {
    let s = 1, o = r.length, u = e.length;
    if (n !== undefined && (n = String(n).toLowerCase(), n === "ucs2" || n === "ucs-2" || n === "utf16le" || n === "utf-16le")) {
      if (r.length < 2 || e.length < 2)
        return -1;
      s = 2, o /= 2, u /= 2, t /= 2;
    }
    function c(f, y) {
      return s === 1 ? f[y] : f.readUInt16BE(y * s);
    }
    a(c, "read");
    let l;
    if (i) {
      let f = -1;
      for (l = t;l < o; l++)
        if (c(r, l) === c(e, f === -1 ? 0 : l - f)) {
          if (f === -1 && (f = l), l - f + 1 === u)
            return f * s;
        } else
          f !== -1 && (l -= l - f), f = -1;
    } else
      for (t + u > o && (t = o - u), l = t;l >= 0; l--) {
        let f = true;
        for (let y = 0;y < u; y++)
          if (c(r, l + y) !== c(e, y)) {
            f = false;
            break;
          }
        if (f)
          return l;
      }
    return -1;
  }
  a(jn, "arrayIndexOf");
  h.prototype.includes = a(function(e, t, n) {
    return this.indexOf(e, t, n) !== -1;
  }, "includes");
  h.prototype.indexOf = a(function(e, t, n) {
    return Kn(this, e, t, n, true);
  }, "indexOf");
  h.prototype.lastIndexOf = a(function(e, t, n) {
    return Kn(this, e, t, n, false);
  }, "lastIndexOf");
  function Wo(r, e, t, n) {
    t = Number(t) || 0;
    let i = r.length - t;
    n ? (n = Number(n), n > i && (n = i)) : n = i;
    let s = e.length;
    n > s / 2 && (n = s / 2);
    let o;
    for (o = 0;o < n; ++o) {
      let u = parseInt(e.substr(o * 2, 2), 16);
      if (zt(u))
        return o;
      r[t + o] = u;
    }
    return o;
  }
  a(Wo, "hexWrite");
  function jo(r, e, t, n) {
    return ht(Ht(e, r.length - t), r, t, n);
  }
  a(jo, "utf8Write");
  function Ho(r, e, t, n) {
    return ht(ra(e), r, t, n);
  }
  a(Ho, "asciiWrite");
  function $o(r, e, t, n) {
    return ht(ni(e), r, t, n);
  }
  a($o, "base64Write");
  function Go(r, e, t, n) {
    return ht(na(e, r.length - t), r, t, n);
  }
  a(Go, "ucs2Write");
  h.prototype.write = a(function(e, t, n, i) {
    if (t === undefined)
      i = "utf8", n = this.length, t = 0;
    else if (n === undefined && typeof t == "string")
      i = t, n = this.length, t = 0;
    else if (isFinite(t))
      t = t >>> 0, isFinite(n) ? (n = n >>> 0, i === undefined && (i = "utf8")) : (i = n, n = undefined);
    else
      throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
    let s = this.length - t;
    if ((n === undefined || n > s) && (n = s), e.length > 0 && (n < 0 || t < 0) || t > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    i || (i = "utf8");
    let o = false;
    for (;; )
      switch (i) {
        case "hex":
          return Wo(this, e, t, n);
        case "utf8":
        case "utf-8":
          return jo(this, e, t, n);
        case "ascii":
        case "latin1":
        case "binary":
          return Ho(this, e, t, n);
        case "base64":
          return $o(this, e, t, n);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Go(this, e, t, n);
        default:
          if (o)
            throw new TypeError("Unknown encoding: " + i);
          i = ("" + i).toLowerCase(), o = true;
      }
  }, "write");
  h.prototype.toJSON = a(function() {
    return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
  }, "toJSON");
  function Vo(r, e, t) {
    return e === 0 && t === r.length ? Nt.fromByteArray(r) : Nt.fromByteArray(r.slice(e, t));
  }
  a(Vo, "base64Slice");
  function Yn(r, e, t) {
    t = Math.min(r.length, t);
    let n = [], i = e;
    for (;i < t; ) {
      let s = r[i], o = null, u = s > 239 ? 4 : s > 223 ? 3 : s > 191 ? 2 : 1;
      if (i + u <= t) {
        let c, l, f, y;
        switch (u) {
          case 1:
            s < 128 && (o = s);
            break;
          case 2:
            c = r[i + 1], (c & 192) === 128 && (y = (s & 31) << 6 | c & 63, y > 127 && (o = y));
            break;
          case 3:
            c = r[i + 1], l = r[i + 2], (c & 192) === 128 && (l & 192) === 128 && (y = (s & 15) << 12 | (c & 63) << 6 | l & 63, y > 2047 && (y < 55296 || y > 57343) && (o = y));
            break;
          case 4:
            c = r[i + 1], l = r[i + 2], f = r[i + 3], (c & 192) === 128 && (l & 192) === 128 && (f & 192) === 128 && (y = (s & 15) << 18 | (c & 63) << 12 | (l & 63) << 6 | f & 63, y > 65535 && y < 1114112 && (o = y));
        }
      }
      o === null ? (o = 65533, u = 1) : o > 65535 && (o -= 65536, n.push(o >>> 10 & 1023 | 55296), o = 56320 | o & 1023), n.push(o), i += u;
    }
    return zo(n);
  }
  a(Yn, "utf8Slice");
  var Hn = 4096;
  function zo(r) {
    let e = r.length;
    if (e <= Hn)
      return String.fromCharCode.apply(String, r);
    let t = "", n = 0;
    for (;n < e; )
      t += String.fromCharCode.apply(String, r.slice(n, n += Hn));
    return t;
  }
  a(zo, "decodeCodePointsArray");
  function Ko(r, e, t) {
    let n = "";
    t = Math.min(r.length, t);
    for (let i = e;i < t; ++i)
      n += String.fromCharCode(r[i] & 127);
    return n;
  }
  a(Ko, "asciiSlice");
  function Yo(r, e, t) {
    let n = "";
    t = Math.min(r.length, t);
    for (let i = e;i < t; ++i)
      n += String.fromCharCode(r[i]);
    return n;
  }
  a(Yo, "latin1Slice");
  function Zo(r, e, t) {
    let n = r.length;
    (!e || e < 0) && (e = 0), (!t || t < 0 || t > n) && (t = n);
    let i = "";
    for (let s = e;s < t; ++s)
      i += ia[r[s]];
    return i;
  }
  a(Zo, "hexSlice");
  function Jo(r, e, t) {
    let n = r.slice(e, t), i = "";
    for (let s = 0;s < n.length - 1; s += 2)
      i += String.fromCharCode(n[s] + n[s + 1] * 256);
    return i;
  }
  a(Jo, "utf16leSlice");
  h.prototype.slice = a(function(e, t) {
    let n = this.length;
    e = ~~e, t = t === undefined ? n : ~~t, e < 0 ? (e += n, e < 0 && (e = 0)) : e > n && (e = n), t < 0 ? (t += n, t < 0 && (t = 0)) : t > n && (t = n), t < e && (t = e);
    let i = this.subarray(e, t);
    return Object.setPrototypeOf(i, h.prototype), i;
  }, "slice");
  function q(r, e, t) {
    if (r % 1 !== 0 || r < 0)
      throw new RangeError("offset is not uint");
    if (r + e > t)
      throw new RangeError("Trying to access beyond buffer length");
  }
  a(q, "checkOffset");
  h.prototype.readUintLE = h.prototype.readUIntLE = a(function(e, t, n) {
    e = e >>> 0, t = t >>> 0, n || q(e, t, this.length);
    let i = this[e], s = 1, o = 0;
    for (;++o < t && (s *= 256); )
      i += this[e + o] * s;
    return i;
  }, "readUIntLE");
  h.prototype.readUintBE = h.prototype.readUIntBE = a(function(e, t, n) {
    e = e >>> 0, t = t >>> 0, n || q(e, t, this.length);
    let i = this[e + --t], s = 1;
    for (;t > 0 && (s *= 256); )
      i += this[e + --t] * s;
    return i;
  }, "readUIntBE");
  h.prototype.readUint8 = h.prototype.readUInt8 = a(function(e, t) {
    return e = e >>> 0, t || q(e, 1, this.length), this[e];
  }, "readUInt8");
  h.prototype.readUint16LE = h.prototype.readUInt16LE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 2, this.length), this[e] | this[e + 1] << 8;
  }, "readUInt16LE");
  h.prototype.readUint16BE = h.prototype.readUInt16BE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 2, this.length), this[e] << 8 | this[e + 1];
  }, "readUInt16BE");
  h.prototype.readUint32LE = h.prototype.readUInt32LE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216;
  }, "readUInt32LE");
  h.prototype.readUint32BE = h.prototype.readUInt32BE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 4, this.length), this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
  }, "readUInt32BE");
  h.prototype.readBigUInt64LE = we(a(function(e) {
    e = e >>> 0, Be(e, "offset");
    let t = this[e], n = this[e + 7];
    (t === undefined || n === undefined) && je(e, this.length - 8);
    let i = t + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + this[++e] * 2 ** 24, s = this[++e] + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + n * 2 ** 24;
    return BigInt(i) + (BigInt(s) << BigInt(32));
  }, "readBigUInt64LE"));
  h.prototype.readBigUInt64BE = we(a(function(e) {
    e = e >>> 0, Be(e, "offset");
    let t = this[e], n = this[e + 7];
    (t === undefined || n === undefined) && je(e, this.length - 8);
    let i = t * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + this[++e], s = this[++e] * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + n;
    return (BigInt(i) << BigInt(32)) + BigInt(s);
  }, "readBigUInt64BE"));
  h.prototype.readIntLE = a(function(e, t, n) {
    e = e >>> 0, t = t >>> 0, n || q(e, t, this.length);
    let i = this[e], s = 1, o = 0;
    for (;++o < t && (s *= 256); )
      i += this[e + o] * s;
    return s *= 128, i >= s && (i -= Math.pow(2, 8 * t)), i;
  }, "readIntLE");
  h.prototype.readIntBE = a(function(e, t, n) {
    e = e >>> 0, t = t >>> 0, n || q(e, t, this.length);
    let i = t, s = 1, o = this[e + --i];
    for (;i > 0 && (s *= 256); )
      o += this[e + --i] * s;
    return s *= 128, o >= s && (o -= Math.pow(2, 8 * t)), o;
  }, "readIntBE");
  h.prototype.readInt8 = a(function(e, t) {
    return e = e >>> 0, t || q(e, 1, this.length), this[e] & 128 ? (255 - this[e] + 1) * -1 : this[e];
  }, "readInt8");
  h.prototype.readInt16LE = a(function(e, t) {
    e = e >>> 0, t || q(e, 2, this.length);
    let n = this[e] | this[e + 1] << 8;
    return n & 32768 ? n | 4294901760 : n;
  }, "readInt16LE");
  h.prototype.readInt16BE = a(function(e, t) {
    e = e >>> 0, t || q(e, 2, this.length);
    let n = this[e + 1] | this[e] << 8;
    return n & 32768 ? n | 4294901760 : n;
  }, "readInt16BE");
  h.prototype.readInt32LE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
  }, "readInt32LE");
  h.prototype.readInt32BE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
  }, "readInt32BE");
  h.prototype.readBigInt64LE = we(a(function(e) {
    e = e >>> 0, Be(e, "offset");
    let t = this[e], n = this[e + 7];
    (t === undefined || n === undefined) && je(e, this.length - 8);
    let i = this[e + 4] + this[e + 5] * 2 ** 8 + this[e + 6] * 2 ** 16 + (n << 24);
    return (BigInt(i) << BigInt(32)) + BigInt(t + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + this[++e] * 2 ** 24);
  }, "readBigInt64LE"));
  h.prototype.readBigInt64BE = we(a(function(e) {
    e = e >>> 0, Be(e, "offset");
    let t = this[e], n = this[e + 7];
    (t === undefined || n === undefined) && je(e, this.length - 8);
    let i = (t << 24) + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + this[++e];
    return (BigInt(i) << BigInt(32)) + BigInt(this[++e] * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + n);
  }, "readBigInt64BE"));
  h.prototype.readFloatLE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 4, this.length), Pe.read(this, e, true, 23, 4);
  }, "readFloatLE");
  h.prototype.readFloatBE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 4, this.length), Pe.read(this, e, false, 23, 4);
  }, "readFloatBE");
  h.prototype.readDoubleLE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 8, this.length), Pe.read(this, e, true, 52, 8);
  }, "readDoubleLE");
  h.prototype.readDoubleBE = a(function(e, t) {
    return e = e >>> 0, t || q(e, 8, this.length), Pe.read(this, e, false, 52, 8);
  }, "readDoubleBE");
  function V(r, e, t, n, i, s) {
    if (!h.isBuffer(r))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (e > i || e < s)
      throw new RangeError('"value" argument is out of bounds');
    if (t + n > r.length)
      throw new RangeError("Index out of range");
  }
  a(V, "checkInt");
  h.prototype.writeUintLE = h.prototype.writeUIntLE = a(function(e, t, n, i) {
    if (e = +e, t = t >>> 0, n = n >>> 0, !i) {
      let u = Math.pow(2, 8 * n) - 1;
      V(this, e, t, n, u, 0);
    }
    let s = 1, o = 0;
    for (this[t] = e & 255;++o < n && (s *= 256); )
      this[t + o] = e / s & 255;
    return t + n;
  }, "writeUIntLE");
  h.prototype.writeUintBE = h.prototype.writeUIntBE = a(function(e, t, n, i) {
    if (e = +e, t = t >>> 0, n = n >>> 0, !i) {
      let u = Math.pow(2, 8 * n) - 1;
      V(this, e, t, n, u, 0);
    }
    let s = n - 1, o = 1;
    for (this[t + s] = e & 255;--s >= 0 && (o *= 256); )
      this[t + s] = e / o & 255;
    return t + n;
  }, "writeUIntBE");
  h.prototype.writeUint8 = h.prototype.writeUInt8 = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 1, 255, 0), this[t] = e & 255, t + 1;
  }, "writeUInt8");
  h.prototype.writeUint16LE = h.prototype.writeUInt16LE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 2, 65535, 0), this[t] = e & 255, this[t + 1] = e >>> 8, t + 2;
  }, "writeUInt16LE");
  h.prototype.writeUint16BE = h.prototype.writeUInt16BE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = e & 255, t + 2;
  }, "writeUInt16BE");
  h.prototype.writeUint32LE = h.prototype.writeUInt32LE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = e & 255, t + 4;
  }, "writeUInt32LE");
  h.prototype.writeUint32BE = h.prototype.writeUInt32BE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = e & 255, t + 4;
  }, "writeUInt32BE");
  function Zn(r, e, t, n, i) {
    ri(e, n, i, r, t, 7);
    let s = Number(e & BigInt(4294967295));
    r[t++] = s, s = s >> 8, r[t++] = s, s = s >> 8, r[t++] = s, s = s >> 8, r[t++] = s;
    let o = Number(e >> BigInt(32) & BigInt(4294967295));
    return r[t++] = o, o = o >> 8, r[t++] = o, o = o >> 8, r[t++] = o, o = o >> 8, r[t++] = o, t;
  }
  a(Zn, "wrtBigUInt64LE");
  function Jn(r, e, t, n, i) {
    ri(e, n, i, r, t, 7);
    let s = Number(e & BigInt(4294967295));
    r[t + 7] = s, s = s >> 8, r[t + 6] = s, s = s >> 8, r[t + 5] = s, s = s >> 8, r[t + 4] = s;
    let o = Number(e >> BigInt(32) & BigInt(4294967295));
    return r[t + 3] = o, o = o >> 8, r[t + 2] = o, o = o >> 8, r[t + 1] = o, o = o >> 8, r[t] = o, t + 8;
  }
  a(Jn, "wrtBigUInt64BE");
  h.prototype.writeBigUInt64LE = we(a(function(e, t = 0) {
    return Zn(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
  }, "writeBigUInt64LE"));
  h.prototype.writeBigUInt64BE = we(a(function(e, t = 0) {
    return Jn(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"));
  }, "writeBigUInt64BE"));
  h.prototype.writeIntLE = a(function(e, t, n, i) {
    if (e = +e, t = t >>> 0, !i) {
      let c = Math.pow(2, 8 * n - 1);
      V(this, e, t, n, c - 1, -c);
    }
    let s = 0, o = 1, u = 0;
    for (this[t] = e & 255;++s < n && (o *= 256); )
      e < 0 && u === 0 && this[t + s - 1] !== 0 && (u = 1), this[t + s] = (e / o >> 0) - u & 255;
    return t + n;
  }, "writeIntLE");
  h.prototype.writeIntBE = a(function(e, t, n, i) {
    if (e = +e, t = t >>> 0, !i) {
      let c = Math.pow(2, 8 * n - 1);
      V(this, e, t, n, c - 1, -c);
    }
    let s = n - 1, o = 1, u = 0;
    for (this[t + s] = e & 255;--s >= 0 && (o *= 256); )
      e < 0 && u === 0 && this[t + s + 1] !== 0 && (u = 1), this[t + s] = (e / o >> 0) - u & 255;
    return t + n;
  }, "writeIntBE");
  h.prototype.writeInt8 = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = e & 255, t + 1;
  }, "writeInt8");
  h.prototype.writeInt16LE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 2, 32767, -32768), this[t] = e & 255, this[t + 1] = e >>> 8, t + 2;
  }, "writeInt16LE");
  h.prototype.writeInt16BE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = e & 255, t + 2;
  }, "writeInt16BE");
  h.prototype.writeInt32LE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 4, 2147483647, -2147483648), this[t] = e & 255, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4;
  }, "writeInt32LE");
  h.prototype.writeInt32BE = a(function(e, t, n) {
    return e = +e, t = t >>> 0, n || V(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = e & 255, t + 4;
  }, "writeInt32BE");
  h.prototype.writeBigInt64LE = we(a(function(e, t = 0) {
    return Zn(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }, "writeBigInt64LE"));
  h.prototype.writeBigInt64BE = we(a(function(e, t = 0) {
    return Jn(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  }, "writeBigInt64BE"));
  function Xn(r, e, t, n, i, s) {
    if (t + n > r.length)
      throw new RangeError("Index out of range");
    if (t < 0)
      throw new RangeError("Index out of range");
  }
  a(Xn, "checkIEEE754");
  function ei(r, e, t, n, i) {
    return e = +e, t = t >>> 0, i || Xn(r, e, t, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), Pe.write(r, e, t, n, 23, 4), t + 4;
  }
  a(ei, "writeFloat");
  h.prototype.writeFloatLE = a(function(e, t, n) {
    return ei(this, e, t, true, n);
  }, "writeFloatLE");
  h.prototype.writeFloatBE = a(function(e, t, n) {
    return ei(this, e, t, false, n);
  }, "writeFloatBE");
  function ti(r, e, t, n, i) {
    return e = +e, t = t >>> 0, i || Xn(r, e, te.write(r, e, t, n, 52, 8), t + 8;
  }
  a(ti, "writeDouble");
  h.prototype.writeDoubleLE = a(function(e, t, n) {
    return ti(this, e, t, true, n);
  }, "writeDoubleLE");
  h.prototype.writeDoubleBE = a(function(e, t, n) {
    return ti(this, e, t, false, n);
  }, "writeDoubleBE");
  h.prototype.copy = a(function(e, t, n, i) {
    if (!h.isBuffer(e))
      throw new TypeError("argument should be a Buffer");
    if (n || (n = 0), !i && i !== 0 && (i = this.length), t >= e.length && (t = e.length), t || (t = 0), i > 0 && i < n && (i = n), i === n || e.length === 0 || this.length === 0)
      return 0;
    if (t < 0)
      throw new RangeError("targetStart out of bounds");
    if (n < 0 || n >= this.length)
      throw new RangeError("Index out of range");
    if (i < 0)
      throw new RangeError("sourceEnd out of bounds");
    i > this.length && (i = this.length), e.length - t < i - n && (i = e.length - t + n);
    let s = i - n;
    return this === e && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(t, n, i) : Uint8Array.prototype.set.call(e, this.subarray(n, i), t), s;
  }, "copy");
  h.prototype.fill = a(function(e, t, n, i) {
    if (typeof e == "string") {
      if (typeof t == "string" ? (i = t, t = 0, n = this.length) : typeof n == "string" && (i = n, n = this.length), i !== undefined && typeof i != "string")
        throw new TypeError("encoding must be a string");
      if (typeof i == "string" && !h.isEncoding(i))
        throw new TypeError("Unknown encoding: " + i);
      if (e.length === 1) {
        let o = e.charCodeAt(0);
        (i === "utf8" && o < 128 || i === "latin1") && (e = o);
      }
    } else
      typeof e == "number" ? e = e & 255 : typeof e == "boolean" && (e = Number(e));
    if (t < 0 || this.length < t || this.length < n)
      throw new RangeError("Out of range index");
    if (n <= t)
      return this;
    t = t >>> 0, n = n === undefined ? this.length : n >>> 0, e || (e = 0);
    let s;
    if (typeof e == "number")
      for (s = t;s < n; ++s)
        this[s] = e;
    else {
      let o = h.isBuffer(e) ? e : h.from(e, i), u = o.length;
      if (u === 0)
        throw new TypeError('The value "' + e + '" is invalid for argument "value"');
      for (s = 0;s < n - t; ++s)
        this[s + t] = o[s % u];
    }
    return this;
  }, "fill");
  var Te = {};
  function Vt(r, e, t) {
    var n;
    Te[r] = (n = class extends t {
      constructor() {
        super(), Object.defineProperty(this, "message", { value: e.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${r}]`, this.stack, delete this.name;
      }
      get code() {
        return r;
      }
      set code(s) {
        Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: s, writable: true });
      }
      toString() {
        return `${this.name} [${r}]: ${this.message}`;
      }
    }, a(n, "NodeError"), n);
  }
  a(Vt, "E");
  Vt("ERR_BUFFER_OUT_OF_BOUNDS", function(r) {
    return r ? `${r} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
  }, RangeError);
  Vt("ERR_INVALID_ARG_TYPE", function(r, e) {
    return `The "${r}" argument must be of type number. Received type ${typeof e}`;
  }, TypeError);
  Vt("ERR_OUT_OF_RANGE", function(r, e, t) {
    let n = `The value of "${r}" is out of range.`, i = t;
    return Number.isInteger(t) && Math.abs(t) > 2 ** 32 ? i = $n(String(t)) : typeof t == "bigint" && (i = String(t), (t > BigInt(2) ** BigInt(32) || t < -(BigInt(2) ** BigInt(32))) && (i = $n(i)), i += "n"), n += ` It must be ${e}. Received ${i}`, n;
  }, RangeError);
  function $n(r) {
    let e = "", t = r.length, n = r[0] === "-" ? 1 : 0;
    for (;t >= n + 4; t -= 3)
      e = `_${r.slice(t - 3, t)}${e}`;
    return `${r.slice(0, t)}${e}`;
  }
  a($n, "addNumericalSeparator");
  function Xo(r, e, t) {
    Be(e, "offset"), (r[e] === undefined || r[e + t] === undefined) && je(e, r.length - (t + 1));
  }
  a(Xo, "checkBounds");
  function ri(r, e, t, n, i, s) {
    if (r > t || r < e) {
      let o = typeof e == "bigint" ? "n" : "", u;
      throw s > 3 ? e === 0 || e === BigInt(0) ? u = `>= 0${o} and < 2${o} ** ${(s + 1) * 8}${o}` : u = `>= -(2${o} ** ${(s + 1) * 8 - 1}${o}) and < 2 ** ${(s + 1) * 8 - 1}${o}` : u = `>= ${e}${o} and <= ${t}${o}`, new Te.ERR_OUT_OF_RANGE("value", u, r);
    }
    Xo(n, i, s);
  }
  a(ri, "checkIntBI");
  function Be(r, e) {
    if (typeof r != "number")
      throw new Te.ERR_INVALID_ARG_TYPE(e, "number", r);
  }
  a(Be, "validateNumber");
  function je(r, e, t) {
    throw Math.floor(r) !== r ? (Be(r, t), new Te.ERR_OUT_OF_RANGE(t || "offset", "an integer", r)) : e < 0 ? new Te.ERR_BUFFER_OUT_OF_BOUNDS : new Te.ERR_OUT_OF_RANGE(t || "offset", `>= ${t ? 1 : 0} and <= ${e}`, r);
  }
  a(je, "boundsError");
  var ea = /[^+/0-9A-Za-z-_]/g;
  function ta(r) {
    if (r = r.split("=")[0], r = r.trim().replace(ea, ""), r.length < 2)
      return "";
    for (;r.length % 4 !== 0; )
      r = r + "=";
    return r;
  }
  a(ta, "base64clean");
  function Ht(r, e) {
    e = e || 1 / 0;
    let t, n = r.length, i = null, s = [];
    for (let o = 0;o < n; ++o) {
      if (t = r.charCodeAt(o), t > 55295 && t < 57344) {
        if (!i) {
          if (t > 56319) {
            (e -= 3) > -1 && s.push(239, 191, 189);
            continue;
          } else if (o + 1 === n) {
            (e -= 3) > -1 && s.push(239, 191, 189);
            continue;
          }
          i = t;
          continue;
        }
        if (t < 56320) {
          (e -= 3) > -1 && s.push(239, 191, 189), i = t;
          continue;
        }
        t = (i - 55296 << 10 | t - 56320) + 65536;
      } else
        i && (e -= 3) > -1 && s.push(239, 191, 189);
      if (i = null, t < 128) {
        if ((e -= 1) < 0)
          break;
        s.push(t);
      } else if (t < 2048) {
        if ((e -= 2) < 0)
          break;
        s.push(t >> 6 | 192, t & 63 | 128);
      } else if (t < 65536) {
        if ((e -= 3) < 0)
          break;
        s.push(t >> 12 | 224, t >> 6 & 63 | 128, t & 63 | 128);
      } else if (t < 1114112) {
        if ((e -= 4) < 0)
          break;
        s.push(t >> 18 | 240, t >> 12 & 63 | 128, t >> 6 & 63 | 128, t & 63 | 128);
      } else
        throw new Error("Invalid code point");
    }
    return s;
  }
  a(Ht, "utf8ToBytes");
  function ra(r) {
    let e = [];
    for (let t = 0;t < r.length; ++t)
      e.push(r.charCodeAt(t) & 255);
    return e;
  }
  a(ra, "asciiToBytes");
  function na(r, e) {
    let t, n, i, s = [];
    for (let o = 0;o < r.length && !((e -= 2) < 0); ++o)
      t = r.charCodeAt(o), n = t >> 8, i = t % 256, s.push(i), s.push(n);
    return s;
  }
  a(na, "utf16leToBytes");
  function ni(r) {
    return Nt.toByteArray(ta(r));
  }
  a(ni, "base64ToBytes");
  function ht(r, e, t, n) {
    let i;
    for (i = 0;i < n && !(i + t >= e.length || i >= r.length); ++i)
      e[i + t] = r[i];
    return i;
  }
  a(ht, "blitBuffer");
  function ue(r, e) {
    return r instanceof e || r != null && r.constructor != null && r.constructor.name != null && r.constructor.name === e.name;
  }
  a(ue, "isInstance");
  function zt(r) {
    return r !== r;
  }
  a(zt, "numberIsNaN");
  var ia = function() {
    let r = "0123456789abcdef", e = new Array(256);
    for (let t = 0;t < 16; ++t) {
      let n = t * 16;
      for (let i = 0;i < 16; ++i)
        e[n + i] = r[t] + r[i];
    }
    return e;
  }();
  function we(r) {
    return typeof BigInt > "u" ? sa : r;
  }
  a(we, "defineBigIntMethod");
  function sa() {
    throw new Error("BigInt not supported");
  }
  a(sa, "BufferBigIntNotDefined");
});
var b;
var v;
var x;
var d;
var m;
var p = G(() => {
  b = globalThis, v = globalThis.setImmediate ?? ((r) => setTimeout(r, 0)), x = globalThis.clearImmediate ?? ((r) => clearTimeout(r)), d = typeof globalThis.Buffer == "function" && typeof globalThis.Buffer.allocUnsafe == "function" ? globalThis.Buffer : ii().Buffer, m = globalThis.process ?? {};
  m.env ?? (m.env = {});
  try {
    m.nextTick(() => {});
  } catch {
    let e = Promise.resolve();
    m.nextTick = e.then.bind(e);
  }
});
var ge = T((Rl, Kt) => {
  p();
  var Le = typeof Reflect == "object" ? Reflect : null, si = Le && typeof Le.apply == "function" ? Le.apply : a(function(e, t, n) {
    return Function.prototype.apply.call(e, t, n);
  }, "ReflectApply"), pt;
  Le && typeof Le.ownKeys == "function" ? pt = Le.ownKeys : Object.getOwnPropertySymbols ? pt = a(function(e) {
    return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
  }, "ReflectOwnKeys") : pt = a(function(e) {
    return Object.getOwnPropertyNames(e);
  }, "ReflectOwnKeys");
  function oa(r) {
    console && console.warn && console.warn(r);
  }
  a(oa, "ProcessEmitWarning");
  var ai = Number.isNaN || a(function(e) {
    return e !== e;
  }, "NumberIsNaN");
  function B() {
    B.init.call(this);
  }
  a(B, "EventEmitter");
  Kt.exports = B;
  Kt.exports.once = la;
  B.EventEmitter = B;
  B.prototype._events = undefined;
  B.prototype._eventsCount = 0;
  B.prototype._maxListeners = undefined;
  var oi = 10;
  function dt(r) {
    if (typeof r != "function")
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof r);
  }
  a(dt, "checkListener");
  Object.defineProperty(B, "defaultMaxListeners", { enumerable: true, get: a(function() {
    return oi;
  }, "get"), set: a(function(r) {
    if (typeof r != "number" || r < 0 || ai(r))
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + r + ".");
    oi = r;
  }, "set") });
  B.init = function() {
    (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
  };
  B.prototype.setMaxListeners = a(function(e) {
    if (typeof e != "number" || e < 0 || ai(e))
      throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
    return this._maxListeners = e, this;
  }, "setMaxListeners");
  function ui(r) {
    return r._maxListeners === undefined ? B.defaultMaxListeners : r._maxListeners;
  }
  a(ui, "_getMaxListeners");
  B.prototype.getMaxListeners = a(function() {
    return ui(this);
  }, "getMaxListeners");
  B.prototype.emit = a(function(e) {
    for (var t = [], n = 1;n < arguments.length; n++)
      t.push(arguments[n]);
    var i = e === "error", s = this._events;
    if (s !== undefined)
      i = i && s.error === undefined;
    else if (!i)
      return false;
    if (i) {
      var o;
      if (t.length > 0 && (o = t[0]), o instanceof Error)
        throw o;
      var u = new Error("Unhandled error." + (o ? " (" + o.message + ")" : ""));
      throw u.context = o, u;
    }
    var c = s[e];
    if (c === undefined)
      return false;
    if (typeof c == "function")
      si(c, this, t);
    else
      for (var l = c.length, f = pi(c, l), n = 0;n < l; ++n)
        si(f[n], this, t);
    return true;
  }, "emit");
  function ci(r, e, t, n) {
    var i, s, o;
    if (dt(t), s = r._events, s === undefined ? (s = r._events = Object.create(null), r._eventsCount = 0) : (s.newListener !== undefined && (r.emit("newListener", e, t.listener ? t.listener : t), s = r._events), o = s[e]), o === undefined)
      o = s[e] = t, ++r._eventsCount;
    else if (typeof o == "function" ? o = s[e] = n ? [t, o] : [o, t] : n ? o.unshift(t) : o.push(t), i = ui(r), i > 0 && o.length > i && !o.warned) {
      o.warned = true;
      var u = new Error("Possible EventEmitter memory leak detected. " + o.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
      u.name = "MaxListenersExceededWarning", u.emitter = r, u.type = e, u.count = o.length, oa(u);
    }
    return r;
  }
  a(ci, "_addListener");
  B.prototype.addListener = a(function(e, t) {
    return ci(this, e, t, false);
  }, "addListener");
  B.prototype.on = B.prototype.addListener;
  B.prototype.prependListener = a(function(e, t) {
    return ci(this, e, t, true);
  }, "prependListener");
  function aa() {
    if (!this.fired)
      return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
  }
  a(aa, "onceWrapper");
  function li(r, e, t) {
    var n = {
      fired: false,
      wrapFn: undefined,
      target: r,
      type: e,
      listener: t
    }, i = aa.bind(n);
    return i.listener = t, n.wrapFn = i, i;
  }
  a(li, "_onceWrap");
  B.prototype.once = a(function(e, t) {
    return dt(t), this.on(e, li(this, e, t)), this;
  }, "once");
  B.prototype.prependOnceListener = a(function(e, t) {
    return dt(t), this.prependListener(e, li(this, e, t)), this;
  }, "prependOnceListener");
  B.prototype.removeListener = a(function(e, t) {
    var n, i, s, o, u;
    if (dt(t), i = this._events, i === undefined)
      return this;
    if (n = i[e], n === undefined)
      return this;
    if (n === t || n.listener === t)
      --this._eventsCount === 0 ? this._events = Object.create(null) : (delete i[e], i.removeListener && this.emit("removeListener", e, n.listener || t));
    else if (typeof n != "function") {
      for (s = -1, o = n.length - 1;o >= 0; o--)
        if (n[o] === t || n[o].listener === t) {
          u = n[o].listener, s = o;
          break;
        }
      if (s < 0)
        return this;
      s === 0 ? n.shift() : ua(n, s), n.length === 1 && (i[e] = n[0]), i.removeListener !== undefined && this.emit("removeListener", e, u || t);
    }
    return this;
  }, "removeListener");
  B.prototype.off = B.prototype.removeListener;
  B.prototype.removeAllListeners = a(function(e) {
    var t, n, i;
    if (n = this._events, n === undefined)
      return this;
    if (n.removeListener === undefined)
      return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : n[e] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete n[e]), this;
    if (arguments.length === 0) {
      var s = Object.keys(n), o;
      for (i = 0;i < s.length; ++i)
        o = s[i], o !== "removeListener" && this.removeAllListeners(o);
      return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
    }
    if (t = n[e], typeof t == "function")
      this.removeListener(e, t);
    else if (t !== undefined)
      for (i = t.length - 1;i >= 0; i--)
        this.removeListener(e, t[i]);
    return this;
  }, "removeAllListeners");
  function fi(r, e, t) {
    var n = r._events;
    if (n === undefined)
      return [];
    var i = n[e];
    return i === undefined ? [] : typeof i == "function" ? t ? [i.listener || i] : [i] : t ? ca(i) : pi(i, i.length);
  }
  a(fi, "_listeners");
  B.prototype.listeners = a(function(e) {
    return fi(this, e, true);
  }, "listeners");
  B.prototype.rawListeners = a(function(e) {
    return fi(this, e, false);
  }, "rawListeners");
  B.listenerCount = function(r, e) {
    return typeof r.listenerCount == "function" ? r.listenerCount(e) : hi.call(r, e);
  };
  B.prototype.listenerCount = hi;
  function hi(r) {
    var e = this._events;
    if (e !== undefined) {
      var t = e[r];
      if (typeof t == "function")
        return 1;
      if (t !== undefined)
        return t.length;
    }
    return 0;
  }
  a(hi, "listenerCount");
  B.prototype.eventNames = a(function() {
    return this._eventsCount > 0 ? pt(this._events) : [];
  }, "eventNames");
  function pi(r, e) {
    for (var t = new Array(e), n = 0;n < e; ++n)
      t[n] = r[n];
    return t;
  }
  a(pi, "arrayClone");
  function ua(r, e) {
    for (;e + 1 < r.length; e++)
      r[e] = r[e + 1];
    r.pop();
  }
  a(ua, "spliceOne");
  function ca(r) {
    for (var e = new Array(r.length), t = 0;t < e.length; ++t)
      e[t] = r[t].listener || r[t];
    return e;
  }
  a(ca, "unwrapListeners");
  function la(r, e) {
    return new Promise(function(t, n) {
      function i(o) {
        r.removeListener(e, s), n(o);
      }
      a(i, "errorListener");
      function s() {
        typeof r.removeListener == "function" && r.removeListener("error", i), t([].slice.call(arguments));
      }
      a(s, "resolver"), di(r, e, s, { once: true }), e !== "error" && fa(r, i, { once: true });
    });
  }
  a(la, "once");
  function fa(r, e, t) {
    typeof r.on == "function" && di(r, "error", e, t);
  }
  a(fa, "addErrorHandlerIfEventEmitter");
  function di(r, e, t, n) {
    if (typeof r.on == "function")
      n.once ? r.once(e, t) : r.on(e, t);
    else if (typeof r.addEventListener == "function")
      r.addEventListener(e, a(function i(s) {
        n.once && r.removeEventListener(e, i), t(s);
      }, "wrapListener"));
    else
      throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof r);
  }
  a(di, "eventTargetAgnosticAddListener");
});
var wi = {};
ie(wi, { Socket: () => ce, isIP: () => ha });
function ha(r) {
  return 0;
}
var mi;
var yi;
var S;
var ce;
var Fe = G(() => {
  p();
  mi = Se(ge(), 1);
  a(ha, "isIP");
  yi = /^[^.]+\./, S = class S2 extends mi.EventEmitter {
    constructor() {
      super(...arguments);
      E(this, "opts", {});
      E(this, "connecting", false);
      E(this, "pending", true);
      E(this, "writable", true);
      E(this, "encrypted", false);
      E(this, "authorized", false);
      E(this, "destroyed", false);
      E(this, "ws", null);
      E(this, "writeBuffer");
      E(this, "tlsState", 0);
      E(this, "tlsRead");
      E(this, "tlsWrite");
    }
    static get poolQueryViaFetch() {
      return S2.opts.poolQueryViaFetch ?? S2.defaults.poolQueryViaFetch;
    }
    static set poolQueryViaFetch(t) {
      S2.opts.poolQueryViaFetch = t;
    }
    static get fetchEndpoint() {
      return S2.opts.fetchEndpoint ?? S2.defaults.fetchEndpoint;
    }
    static set fetchEndpoint(t) {
      S2.opts.fetchEndpoint = t;
    }
    static get fetchConnectionCache() {
      return true;
    }
    static set fetchConnectionCache(t) {
      console.warn("The `fetchConnectionCache` option is deprecated (now always `true`)");
    }
    static get fetchFunction() {
      return S2.opts.fetchFunction ?? S2.defaults.fetchFunction;
    }
    static set fetchFunction(t) {
      S2.opts.fetchFunction = t;
    }
    static get webSocketConstructor() {
      return S2.opts.webSocketConstructor ?? S2.defaults.webSocketConstructor;
    }
    static set webSocketConstructor(t) {
      S2.opts.webSocketConstructor = t;
    }
    get webSocketConstructor() {
      return this.opts.webSocketConstructor ?? S2.webSocketConstructor;
    }
    set webSocketConstructor(t) {
      this.opts.webSocketConstructor = t;
    }
    static get wsProxy() {
      return S2.opts.wsProxy ?? S2.defaults.wsProxy;
    }
    static set wsProxy(t) {
      S2.opts.wsProxy = t;
    }
    get wsProxy() {
      return this.opts.wsProxy ?? S2.wsProxy;
    }
    set wsProxy(t) {
      this.opts.wsProxy = t;
    }
    static get coalesceWrites() {
      return S2.opts.coalesceWrites ?? S2.defaults.coalesceWrites;
    }
    static set coalesceWrites(t) {
      S2.opts.coalesceWrites = t;
    }
    get coalesceWrites() {
      return this.opts.coalesceWrites ?? S2.coalesceWrites;
    }
    set coalesceWrites(t) {
      this.opts.coalesceWrites = t;
    }
    static get useSecureWebSocket() {
      return S2.opts.useSecureWebSocket ?? S2.defaults.useSecureWebSocket;
    }
    static set useSecureWebSocket(t) {
      S2.opts.useSecureWebSocket = t;
    }
    get useSecureWebSocket() {
      return this.opts.useSecureWebSocket ?? S2.useSecureWebSocket;
    }
    set useSecureWebSocket(t) {
      this.opts.useSecureWebSocket = t;
    }
    static get forceDisablePgSSL() {
      return S2.opts.forceDisablePgSSL ?? S2.defaults.forceDisablePgSSL;
    }
    static set forceDisablePgSSL(t) {
      S2.opts.forceDisablePgSSL = t;
    }
    get forceDisablePgSSL() {
      return this.opts.forceDisablePgSSL ?? S2.forceDisablePgSSL;
    }
    set forceDisablePgSSL(t) {
      this.opts.forceDisablePgSSL = t;
    }
    static get disableSNI() {
      return S2.opts.disableSNI ?? S2.defaults.disableSNI;
    }
    static set disableSNI(t) {
      S2.opts.disableSNI = t;
    }
    get disableSNI() {
      return this.opts.disableSNI ?? S2.disableSNI;
    }
    set disableSNI(t) {
      this.opts.disableSNI = t;
    }
    static get disableWarningInBrowsers() {
      return S2.opts.disableWarningInBrowsers ?? S2.defaults.disableWarningInBrowsers;
    }
    static set disableWarningInBrowsers(t) {
      S2.opts.disableWarningInBrowsers = t;
    }
    get disableWarningInBrowsers() {
      return this.opts.disableWarningInBrowsers ?? S2.disableWarningInBrowsers;
    }
    set disableWarningInBrowsers(t) {
      this.opts.disableWarningInBrowsers = t;
    }
    static get pipelineConnect() {
      return S2.opts.pipelineConnect ?? S2.defaults.pipelineConnect;
    }
    static set pipelineConnect(t) {
      S2.opts.pipelineConnect = t;
    }
    get pipelineConnect() {
      return this.opts.pipelineConnect ?? S2.pipelineConnect;
    }
    set pipelineConnect(t) {
      this.opts.pipelineConnect = t;
    }
    static get subtls() {
      return S2.opts.subtls ?? S2.defaults.subtls;
    }
    static set subtls(t) {
      S2.opts.subtls = t;
    }
    get subtls() {
      return this.opts.subtls ?? S2.subtls;
    }
    set subtls(t) {
      this.opts.subtls = t;
    }
    static get pipelineTLS() {
      return S2.opts.pipelineTLS ?? S2.defaults.pipelineTLS;
    }
    static set pipelineTLS(t) {
      S2.opts.pipelineTLS = t;
    }
    get pipelineTLS() {
      return this.opts.pipelineTLS ?? S2.pipelineTLS;
    }
    set pipelineTLS(t) {
      this.opts.pipelineTLS = t;
    }
    static get rootCerts() {
      return S2.opts.rootCerts ?? S2.defaults.rootCerts;
    }
    static set rootCerts(t) {
      S2.opts.rootCerts = t;
    }
    get rootCerts() {
      return this.opts.rootCerts ?? S2.rootCerts;
    }
    set rootCerts(t) {
      this.opts.rootCerts = t;
    }
    wsProxyAddrForHost(t, n) {
      let i = this.wsProxy;
      if (i === undefined)
        throw new Error("No WebSocket proxy is configured. Please see https://github.com/neondatabase/serverless/blob/main/CONFIG.md#wsproxy-string--host-string-port-number--string--string");
      return typeof i == "function" ? i(t, n) : `${i}?address=${t}:${n}`;
    }
    setNoDelay() {
      return this;
    }
    setKeepAlive() {
      return this;
    }
    ref() {
      return this;
    }
    unref() {
      return this;
    }
    connect(t, n, i) {
      this.connecting = true, i && this.once("connect", i);
      let s = a(() => {
        this.connecting = false, this.pending = false, this.emit("connect"), this.emit("ready");
      }, "handleWebSocketOpen"), o = a((c, l = false) => {
        c.binaryType = "arraybuffer", c.addEventListener("error", (f) => {
          this.emit("error", f), this.emit("close");
        }), c.addEventListener("message", (f) => {
          if (this.tlsState === 0) {
            let y = d.from(f.data);
            this.emit("data", y);
          }
        }), c.addEventListener("close", () => {
          this.emit("close");
        }), l ? s() : c.addEventListener("open", s);
      }, "configureWebSocket"), u;
      try {
        u = this.wsProxyAddrForHost(n, typeof t == "string" ? parseInt(t, 10) : t);
      } catch (c) {
        this.emit("error", c), this.emit("close");
        return;
      }
      try {
        let l = (this.useSecureWebSocket ? "wss:" : "ws:") + "//" + u;
        if (this.webSocketConstructor !== undefined)
          this.ws = new this.webSocketConstructor(l), o(this.ws);
        else
          try {
            this.ws = new WebSocket(l), o(this.ws);
          } catch {
            this.ws = new __unstable_WebSocket(l), o(this.ws);
          }
      } catch (c) {
        let f = (this.useSecureWebSocket ? "https:" : "http:") + "//" + u;
        fetch(f, { headers: { Upgrade: "websocket" } }).then((y) => {
          if (this.ws = y.webSocket, this.ws == null)
            throw c;
          this.ws.accept(), o(this.ws, true);
        }).catch((y) => {
          this.emit("error", new Error(`All attempts to open a WebSocket to connect to the database failed. Please refer to https://github.com/neondatabase/serverless/blob/main/CONFIG.md#websocketconstructor-typeof-websocket--undefined. Details: ${y}`)), this.emit("close");
        });
      }
    }
    async startTls(t) {
      if (this.subtls === undefined)
        throw new Error("For Postgres SSL connections, you must set `neonConfig.subtls` to the subtls library. See https://github.com/neondatabase/serverless/blob/main/CONFIG.md for more information.");
      this.tlsState = 1;
      let n = await this.subtls.TrustedCert.databaseFromPEM(this.rootCerts), i = new this.subtls.WebSocketReadQueue(this.ws), s = i.read.bind(i), o = this.rawWrite.bind(this), { read: u, write: c } = await this.subtls.startTls(t, n, s, o, { useSNI: !this.disableSNI, expectPreData: this.pipelineTLS ? new Uint8Array([83]) : undefined });
      this.tlsRead = u, this.tlsWrite = c, this.tlsState = 2, this.encrypted = true, this.authorized = true, this.emit("secureConnection", this), this.tlsReadLoop();
    }
    async tlsReadLoop() {
      for (;; ) {
        let t = await this.tlsRead();
        if (t === undefined)
          break;
        {
          let n = d.from(t);
          this.emit("data", n);
        }
      }
    }
    rawWrite(t) {
      if (!this.coalesceWrites) {
        this.ws && this.ws.send(t);
        return;
      }
      if (this.writeBuffer === undefined)
        this.writeBuffer = t, setTimeout(() => {
          this.ws && this.ws.send(this.writeBuffer), this.writeBuffer = undefined;
        }, 0);
      else {
        let n = new Uint8Array(this.writeBuffer.length + t.length);
        n.set(this.writeBuffer), n.set(t, this.writeBuffer.length), this.writeBuffer = n;
      }
    }
    write(t, n = "utf8", i = (s) => {}) {
      return t.length === 0 ? (i(), true) : (typeof t == "string" && (t = d.from(t, n)), this.tlsState === 0 ? (this.rawWrite(t), i()) : this.tlsState === 1 ? this.once("secureConnection", () => {
        this.write(t, n, i);
      }) : (this.tlsWrite(t), i()), true);
    }
    end(t = d.alloc(0), n = "utf8", i = () => {}) {
      return this.write(t, n, () => {
        this.ws.close(), i();
      }), this;
    }
    destroy() {
      return this.destroyed = true, this.end();
    }
  };
  a(S, "Socket"), E(S, "defaults", {
    poolQueryViaFetch: false,
    fetchEndpoint: a((t, n, i) => {
      let s;
      return i?.jwtAuth ? s = t.replace(yi, "apiauth.") : s = t.replace(yi, "api."), "https://" + s + "/sql";
    }, "fetchEndpoint"),
    fetchConnectionCache: true,
    fetchFunction: undefined,
    webSocketConstructor: undefined,
    wsProxy: a((t) => t + "/v2", "wsProxy"),
    useSecureWebSocket: true,
    forceDisablePgSSL: true,
    coalesceWrites: true,
    pipelineConnect: "password",
    subtls: undefined,
    rootCerts: "",
    pipelineTLS: false,
    disableSNI: false,
    disableWarningInBrowsers: false
  }), E(S, "opts", {});
  ce = S;
});
var gi = {};
ie(gi, { parse: () => Yt });
function Yt(r, e = false) {
  let { protocol: t } = new URL(r), n = "http:" + r.substring(t.length), { username: i, password: s, host: o, hostname: u, port: c, pathname: l, search: f, searchParams: y, hash: g } = new URL(n);
  s = decodeURIComponent(s), i = decodeURIComponent(i), l = decodeURIComponent(l);
  let A = i + ":" + s, C = e ? Object.fromEntries(y.entries()) : f;
  return {
    href: r,
    protocol: t,
    auth: A,
    username: i,
    password: s,
    host: o,
    hostname: u,
    port: c,
    pathname: l,
    search: f,
    query: C,
    hash: g
  };
}
var Zt = G(() => {
  p();
  a(Yt, "parse");
});
var tr = T((Ai) => {
  p();
  Ai.parse = function(r, e) {
    return new er(r, e).parse();
  };
  var vt = class vt2 {
    constructor(e, t) {
      this.source = e, this.transform = t || Ca, this.position = 0, this.entries = [], this.recorded = [], this.dimension = 0;
    }
    isEof() {
      return this.position >= this.source.length;
    }
    nextCharacter() {
      var e = this.source[this.position++];
      return e === "\\" ? { value: this.source[this.position++], escaped: true } : { value: e, escaped: false };
    }
    record(e) {
      this.recorded.push(e);
    }
    newEntry(e) {
      var t;
      (this.recorded.length > 0 || e) && (t = this.recorded.join(""), t === "NULL" && !e && (t = null), t !== null && (t = this.transform(t)), this.entries.push(t), this.recorded = []);
    }
    consumeDimensions() {
      if (this.source[0] === "[")
        for (;!this.isEof(); ) {
          var e = this.nextCharacter();
          if (e.value === "=")
            break;
        }
    }
    parse(e) {
      var t, n, i;
      for (this.consumeDimensions();!this.isEof(); )
        if (t = this.nextCharacter(), t.value === "{" && !i)
          this.dimension++, this.dimension > 1 && (n = new vt2(this.source.substr(this.position - 1), this.transform), this.entries.push(n.parse(true)), this.position += n.position - 2);
        else if (t.value === "}" && !i) {
          if (this.dimension--, !this.dimension && (this.newEntry(), e))
            return this.entries;
        } else
          t.value === '"' && !t.escaped ? (i && this.newEntry(true), i = !i) : t.value === "," && !i ? this.newEntry() : this.record(t.value);
      if (this.dimension !== 0)
        throw new Error("array dimension not balanced");
      return this.entries;
    }
  };
  a(vt, "ArrayParser");
  var er = vt;
  function Ca(r) {
    return r;
  }
  a(Ca, "identity");
});
var rr = T((Zl, Ci) => {
  p();
  var _a = tr();
  Ci.exports = { create: a(function(r, e) {
    return { parse: a(function() {
      return _a.parse(r, e);
    }, "parse") };
  }, "create") };
});
var Ti = T((ef, Ii) => {
  p();
  var Ia = /(\d{1,})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})(\.\d{1,})?.*?( BC)?$/, Ta = /^(\d{1,})-(\d{2})-(\d{2})( BC)?$/, Pa = /([Z+-])(\d{2})?:?(\d{2})?:?(\d{2})?/, Ba = /^-?infinity$/;
  Ii.exports = a(function(e) {
    if (Ba.test(e))
      return Number(e.replace("i", "I"));
    var t = Ia.exec(e);
    if (!t)
      return Ra(e) || null;
    var n = !!t[8], i = parseInt(t[1], 10);
    n && (i = _i(i));
    var s = parseInt(t[2], 10) - 1, o = t[3], u = parseInt(t[4], 10), c = parseInt(t[5], 10), l = parseInt(t[6], 10), f = t[7];
    f = f ? 1000 * parseFloat(f) : 0;
    var y, g = La(e);
    return g != null ? (y = new Date(Date.UTC(i, s, o, u, c, l, f)), nr(i) && y.setUTCFullYear(i), g !== 0 && y.setTime(y.getTime() - g)) : (y = new Date(i, s, o, u, c, l, f), nr(i) && y.setFullYear(i)), y;
  }, "parseDate");
  function Ra(r) {
    var e = Ta.exec(r);
    if (e) {
      var t = parseInt(e[1], 10), n = !!e[4];
      n && (t = _i(t));
      var i = parseInt(e[2], 10) - 1, s = e[3], o = new Date(t, i, s);
      return nr(t) && o.setFullYear(t), o;
    }
  }
  a(Ra, "getDate");
  function La(r) {
    if (r.endsWith("+00"))
      return 0;
    var e = Pa.exec(r.split(" ")[1]);
    if (e) {
      var t = e[1];
      if (t === "Z")
        return 0;
      var n = t === "-" ? -1 : 1, i = parseInt(e[2], 10) * 3600 + parseInt(e[3] || 0, 10) * 60 + parseInt(e[4] || 0, 10);
      return i * n * 1000;
    }
  }
  a(La, "timeZoneOffset");
  function _i(r) {
    return -(r - 1);
  }
  a(_i, "bcYearToNegativeYear");
  function nr(r) {
    return r >= 0 && r < 100;
  }
  a(nr, "is0To99");
});
var Bi = T((nf, Pi) => {
  p();
  Pi.exports = ka;
  var Fa = Object.prototype.hasOwnProperty;
  function ka(r) {
    for (var e = 1;e < arguments.length; e++) {
      var t = arguments[e];
      for (var n in t)
        Fa.call(t, n) && (r[n] = t[n]);
    }
    return r;
  }
  a(ka, "extend");
});
var Fi = T((af, Li) => {
  p();
  var Ma = Bi();
  Li.exports = ke;
  function ke(r) {
    if (!(this instanceof ke))
      return new ke(r);
    Ma(this, Va(r));
  }
  a(ke, "PostgresInterval");
  var Ua = [
    "seconds",
    "minutes",
    "hours",
    "days",
    "months",
    "years"
  ];
  ke.prototype.toPostgres = function() {
    var r = Ua.filter(this.hasOwnProperty, this);
    return this.milliseconds && r.indexOf("seconds") < 0 && r.push("seconds"), r.length === 0 ? "0" : r.map(function(e) {
      var t = this[e] || 0;
      return e === "seconds" && this.milliseconds && (t = (t + this.milliseconds / 1000).toFixed(6).replace(/\.?0+$/, "")), t + " " + e;
    }, this).join(" ");
  };
  var Da = { years: "Y", months: "M", days: "D", hours: "H", minutes: "M", seconds: "S" }, Oa = ["years", "months", "days"], qa = ["hours", "minutes", "seconds"];
  ke.prototype.toISOString = ke.prototype.toISO = function() {
    var r = Oa.map(t, this).join(""), e = qa.map(t, this).join("");
    return "P" + r + "T" + e;
    function t(n) {
      var i = this[n] || 0;
      return n === "seconds" && this.milliseconds && (i = (i + this.milliseconds / 1000).toFixed(6).replace(/0+$/, "")), i + Da[n];
    }
  };
  var ir = "([+-]?\\d+)", Qa = ir + "\\s+years?", Na = ir + "\\s+mons?", Wa = ir + "\\s+days?", ja = "([+-])?([\\d]*):(\\d\\d):(\\d\\d)\\.?(\\d{1,6})?", Ha = new RegExp([Qa, Na, Wa, ja].map(function(r) {
    return "(" + r + ")?";
  }).join("\\s*")), Ri = { years: 2, months: 4, days: 6, hours: 9, minutes: 10, seconds: 11, milliseconds: 12 }, $a = ["hours", "minutes", "seconds", "milliseconds"];
  function Ga(r) {
    var e = r + "000000".slice(r.length);
    return parseInt(e, 10) / 1000;
  }
  a(Ga, "parseMilliseconds");
  function Va(r) {
    if (!r)
      return {};
    var e = Ha.exec(r), t = e[8] === "-";
    return Object.keys(Ri).reduce(function(n, i) {
      var s = Ri[i], o = e[s];
      return !o || (o = i === "milliseconds" ? Ga(o) : parseInt(o, 10), !o) || (t && ~$a.indexOf(i) && (o *= -1), n[i] = o), n;
    }, {});
  }
  a(Va, "parse");
});
var Mi = T((lf, ki) => {
  p();
  ki.exports = a(function(e) {
    if (/^\\x/.test(e))
      return new d(e.substr(2), "hex");
    for (var t = "", n = 0;n < e.length; )
      if (e[n] !== "\\")
        t += e[n], ++n;
      else if (/[0-7]{3}/.test(e.substr(n + 1, 3)))
        t += String.fromCharCode(parseInt(e.substr(n + 1, 3), 8)), n += 4;
      else {
        for (var i = 1;n + i < e.length && e[n + i] === "\\"; )
          i++;
        for (var s = 0;s < Math.floor(i / 2); ++s)
          t += "\\";
        n += Math.floor(i / 2) * 2;
      }
    return new d(t, "binary");
  }, "parseBytea");
});
var Wi = T((pf, Ni) => {
  p();
  var Ve = tr(), ze = rr(), xt = Ti(), Di = Fi(), Oi = Mi();
  function St(r) {
    return a(function(t) {
      return t === null ? t : r(t);
    }, "nullAllowed");
  }
  a(St, "allowNull");
  function qi(r) {
    return r === null ? r : r === "TRUE" || r === "t" || r === "true" || r === "y" || r === "yes" || r === "on" || r === "1";
  }
  a(qi, "parseBool");
  function za(r) {
    return r ? Ve.parse(r, qi) : null;
  }
  a(za, "parseBoolArray");
  function Ka(r) {
    return parseInt(r, 10);
  }
  a(Ka, "parseBaseTenInt");
  function sr(r) {
    return r ? Ve.parse(r, St(Ka)) : null;
  }
  a(sr, "parseIntegerArray");
  function Ya(r) {
    return r ? Ve.parse(r, St(function(e) {
      return Qi(e).trim();
    })) : null;
  }
  a(Ya, "parseBigIntegerArray");
  var Za = a(function(r) {
    if (!r)
      return null;
    var e = ze.create(r, function(t) {
      return t !== null && (t = cr(t)), t;
    });
    return e.parse();
  }, "parsePointArray"), or2 = a(function(r) {
    if (!r)
      return null;
    var e = ze.create(r, function(t) {
      return t !== null && (t = parseFloat(t)), t;
    });
    return e.parse();
  }, "parseFloatArray"), re = a(function(r) {
    if (!r)
      return null;
    var e = ze.create(r);
    return e.parse();
  }, "parseStringArray"), ar = a(function(r) {
    if (!r)
      return null;
    var e = ze.create(r, function(t) {
      return t !== null && (t = xt(t)), t;
    });
    return e.parse();
  }, "parseDateArray"), Ja = a(function(r) {
    if (!r)
      return null;
    var e = ze.create(r, function(t) {
      return t !== null && (t = Di(t)), t;
    });
    return e.parse();
  }, "parseIntervalArray"), Xa = a(function(r) {
    return r ? Ve.parse(r, St(Oi)) : null;
  }, "parseByteAArray"), ur = a(function(r) {
    return parseInt(r, 10);
  }, "parseInteger"), Qi = a(function(r) {
    var e = String(r);
    return /^\d+$/.test(e) ? e : r;
  }, "parseBigInteger"), Ui = a(function(r) {
    return r ? Ve.parse(r, St(JSON.parse)) : null;
  }, "parseJsonArray"), cr = a(function(r) {
    return r[0] !== "(" ? null : (r = r.substring(1, r.length - 1).split(","), { x: parseFloat(r[0]), y: parseFloat(r[1]) });
  }, "parsePoint"), eu = a(function(r) {
    if (r[0] !== "<" && r[1] !== "(")
      return null;
    for (var e = "(", t = "", n = false, i = 2;i < r.length - 1; i++) {
      if (n || (e += r[i]), r[i] === ")") {
        n = true;
        continue;
      } else if (!n)
        continue;
      r[i] !== "," && (t += r[i]);
    }
    var s = cr(e);
    return s.radius = parseFloat(t), s;
  }, "parseCircle"), tu = a(function(r) {
    r(20, Qi), r(21, ur), r(23, ur), r(26, ur), r(700, parseFloat), r(701, parseFloat), r(16, qi), r(1082, xt), r(1114, xt), r(1184, xt), r(600, cr), r(651, re), r(718, eu), r(1000, za), r(1001, Xa), r(1005, sr), r(1007, sr), r(1028, sr), r(1016, Ya), r(1017, Za), r(1021, or2), r(1022, or2), r(1231, or2), r(1014, re), r(1015, re), r(1008, re), r(1009, re), r(1040, re), r(1041, re), r(1115, ar), r(1182, ar), r(1185, ar), r(1186, Di), r(1187, Ja), r(17, Oi), r(114, JSON.parse.bind(JSON)), r(3802, JSON.parse.bind(JSON)), r(199, Ui), r(3807, Ui), r(3907, re), r(2951, re), r(791, re), r(1183, re), r(1270, re);
  }, "init");
  Ni.exports = { init: tu };
});
var Hi = T((mf, ji) => {
  p();
  var z = 1e6;
  function ru(r) {
    var e = r.readInt32BE(0), t = r.readUInt32BE(4), n = "";
    e < 0 && (e = ~e + (t === 0), t = ~t + 1 >>> 0, n = "-");
    var i = "", s, o, u, c, l, f;
    {
      if (s = e % z, e = e / z >>> 0, o = 4294967296 * s + t, t = o / z >>> 0, u = "" + (o - z * t), t === 0 && e === 0)
        return n + u + i;
      for (c = "", l = 6 - u.length, f = 0;f < l; f++)
        c += "0";
      i = c + u + i;
    }
    {
      if (s = e % z, e = e / z >>> 0, o = 4294967296 * s + t, t = o / z >>> 0, u = "" + (o - z * t), t === 0 && e === 0)
        return n + u + i;
      for (c = "", l = 6 - u.length, f = 0;f < l; f++)
        c += "0";
      i = c + u + i;
    }
    {
      if (s = e % z, e = e / z >>> 0, o = 4294967296 * s + t, t = o / z >>> 0, u = "" + (o - z * t), t === 0 && e === 0)
        return n + u + i;
      for (c = "", l = 6 - u.length, f = 0;f < l; f++)
        c += "0";
      i = c + u + i;
    }
    return s = e % z, o = 4294967296 * s + t, u = "" + o % z, n + u + i;
  }
  a(ru, "readInt8");
  ji.exports = ru;
});
var Ki = T((bf, zi) => {
  p();
  var nu = Hi(), L = a(function(r, e, t, n, i) {
    t = t || 0, n = n || false, i = i || function(A, C, D) {
      return A * Math.pow(2, D) + C;
    };
    var s = t >> 3, o = a(function(A) {
      return n ? ~A & 255 : A;
    }, "inv"), u = 255, c = 8 - t % 8;
    e < c && (u = 255 << 8 - e & 255, c = e), t && (u = u >> t % 8);
    var l = 0;
    t % 8 + e >= 8 && (l = i(0, o(r[s]) & u, c));
    for (var f = e + t >> 3, y = s + 1;y < f; y++)
      l = i(l, o(r[y]), 8);
    var g = (e + t) % 8;
    return g > 0 && (l = i(l, o(r[f]) >> 8 - g, g)), l;
  }, "parseBits"), Vi = a(function(r, e, t) {
    var n = Math.pow(2, t - 1) - 1, i = L(r, 1), s = L(r, t, 1);
    if (s === 0)
      return 0;
    var o = 1, u = a(function(l, f, y) {
      l === 0 && (l = 1);
      for (var g = 1;g <= y; g++)
        o /= 2, (f & 1 << y - g) > 0 && (l += o);
      return l;
    }, "parsePrecisionBits"), c = L(r, e, t + 1, false, u);
    return s == Math.pow(2, t + 1) - 1 ? c === 0 ? i === 0 ? 1 / 0 : -1 / 0 : NaN : (i === 0 ? 1 : -1) * Math.pow(2, s - n) * c;
  }, "parseFloatFromBits"), iu = a(function(r) {
    return L(r, 1) == 1 ? -1 * (L(r, 15, 1, true) + 1) : L(r, 15, 1);
  }, "parseInt16"), $i = a(function(r) {
    return L(r, 1) == 1 ? -1 * (L(r, 31, 1, true) + 1) : L(r, 31, 1);
  }, "parseInt32"), su = a(function(r) {
    return Vi(r, 23, 8);
  }, "parseFloat32"), ou = a(function(r) {
    return Vi(r, 52, 11);
  }, "parseFloat64"), au = a(function(r) {
    var e = L(r, 16, 32);
    if (e == 49152)
      return NaN;
    for (var t = Math.pow(1e4, L(r, 16, 16)), n = 0, i = [], s = L(r, 16), o = 0;o < s; o++)
      n += L(r, 16, 64 + 16 * o) * t, t /= 1e4;
    var u = Math.pow(10, L(r, 16, 48));
    return (e === 0 ? 1 : -1) * Math.round(n * u) / u;
  }, "parseNumeric"), Gi = a(function(r, e) {
    var t = L(e, 1), n = L(e, 63, 1), i = new Date((t === 0 ? 1 : -1) * n / 1000 + 946684800000);
    return r || i.setTime(i.getTime() + i.getTimezoneOffset() * 60000), i.usec = n % 1000, i.getMicroSeconds = function() {
      return this.usec;
    }, i.setMicroSeconds = function(s) {
      this.usec = s;
    }, i.getUTCMicroSeconds = function() {
      return this.usec;
    }, i;
  }, "parseDate"), Ke = a(function(r) {
    for (var e = L(r, 32), t = L(r, 32, 32), n = L(r, 32, 64), i = 96, s = [], o = 0;o < e; o++)
      s[o] = L(r, 32, i), i += 32, i += 32;
    var u = a(function(l) {
      var f = L(r, 32, i);
      if (i += 32, f == 4294967295)
        return null;
      var y;
      if (l == 23 || l == 20)
        return y = L(r, f * 8, i), i += f * 8, y;
      if (l == 25)
        return y = r.toString(this.encoding, i >> 3, (i += f << 3) >> 3), y;
      console.log("ERROR: ElementType not implemented: " + l);
    }, "parseElement"), c = a(function(l, f) {
      var y = [], g;
      if (l.length > 1) {
        var A = l.shift();
        for (g = 0;g < A; g++)
          y[g] = c(l, f);
        l.unshift(A);
      } else
        for (g = 0;g < l[0]; g++)
          y[g] = u(f);
      return y;
    }, "parse");
    return c(s, n);
  }, "parseArray"), uu = a(function(r) {
    return r.toString("utf8");
  }, "parseText"), cu = a(function(r) {
    return r === null ? null : L(r, 8) > 0;
  }, "parseBool"), lu = a(function(r) {
    r(20, nu), r(21, iu), r(23, $i), r(26, $i), r(1700, au), r(700, su), r(701, ou), r(16, cu), r(1114, Gi.bind(null, false)), r(1184, Gi.bind(null, true)), r(1000, Ke), r(1007, Ke), r(1016, Ke), r(1008, Ke), r(1009, Ke), r(25, uu);
  }, "init");
  zi.exports = { init: lu };
});
var Zi = T((Sf, Yi) => {
  p();
  Yi.exports = {
    BOOL: 16,
    BYTEA: 17,
    CHAR: 18,
    INT8: 20,
    INT2: 21,
    INT4: 23,
    REGPROC: 24,
    TEXT: 25,
    OID: 26,
    TID: 27,
    XID: 28,
    CID: 29,
    JSON: 114,
    XML: 142,
    PG_NODE_TREE: 194,
    SMGR: 210,
    PATH: 602,
    POLYGON: 604,
    CIDR: 650,
    FLOAT4: 700,
    FLOAT8: 701,
    ABSTIME: 702,
    RELTIME: 703,
    TINTERVAL: 704,
    CIRCLE: 718,
    MACADDR8: 774,
    MONEY: 790,
    MACADDR: 829,
    INET: 869,
    ACLITEM: 1033,
    BPCHAR: 1042,
    VARCHAR: 1043,
    DATE: 1082,
    TIME: 1083,
    TIMESTAMP: 1114,
    TIMESTAMPTZ: 1184,
    INTERVAL: 1186,
    TIMETZ: 1266,
    BIT: 1560,
    VARBIT: 1562,
    NUMERIC: 1700,
    REFCURSOR: 1790,
    REGPROCEDURE: 2202,
    REGOPER: 2203,
    REGOPERATOR: 2204,
    REGCLASS: 2205,
    REGTYPE: 2206,
    UUID: 2950,
    TXID_SNAPSHOT: 2970,
    PG_LSN: 3220,
    PG_NDISTINCT: 3361,
    PG_DEPENDENCIES: 3402,
    TSVECTOR: 3614,
    TSQUERY: 3615,
    GTSVECTOR: 3642,
    REGCONFIG: 3734,
    REGDICTIONARY: 3769,
    JSONB: 3802,
    REGNAMESPACE: 4089,
    REGROLE: 4096
  };
});
var Je = T((Ze) => {
  p();
  var fu = Wi(), hu = Ki(), pu = rr(), du = Zi();
  Ze.getTypeParser = yu;
  Ze.setTypeParser = mu;
  Ze.arrayParser = pu;
  Ze.builtins = du;
  var Ye = { text: {}, binary: {} };
  function Ji(r) {
    return String(r);
  }
  a(Ji, "noParse");
  function yu(r, e) {
    return e = e || "text", Ye[e] && Ye[e][r] || Ji;
  }
  a(yu, "getTypeParser");
  function mu(r, e, t) {
    typeof e == "function" && (t = e, e = "text"), Ye[e][r] = t;
  }
  a(mu, "setTypeParser");
  fu.init(function(r, e) {
    Ye.text[r] = e;
  });
  hu.init(function(r, e) {
    Ye.binary[r] = e;
  });
});
var At = T((If, Xi) => {
  p();
  var wu = Je();
  function Et(r) {
    this._types = r || wu, this.text = {}, this.binary = {};
  }
  a(Et, "TypeOverrides");
  Et.prototype.getOverrides = function(r) {
    switch (r) {
      case "text":
        return this.text;
      case "binary":
        return this.binary;
      default:
        return {};
    }
  };
  Et.prototype.setTypeParser = function(r, e, t) {
    typeof e == "function" && (t = e, e = "text"), this.getOverrides(e)[r] = t;
  };
  Et.prototype.getTypeParser = function(r, e) {
    return e = e || "text", this.getOverrides(e)[r] || this._types.getTypeParser(r, e);
  };
  Xi.exports = Et;
});
function Xe(r) {
  let e = 1779033703, t = 3144134277, n = 1013904242, i = 2773480762, s = 1359893119, o = 2600822924, u = 528734635, c = 1541459225, l = 0, f = 0, y = [
    1116352408,
    1899447441,
    3049323471,
    3921009573,
    961987163,
    1508970993,
    2453635748,
    2870763221,
    3624381080,
    310598401,
    607225278,
    1426881987,
    1925078388,
    2162078206,
    2614888103,
    3248222580,
    3835390401,
    4022224774,
    264347078,
    604807628,
    770255983,
    1249150122,
    1555081692,
    1996064986,
    2554220882,
    2821834349,
    2952996808,
    3210313671,
    3336571891,
    3584528711,
    113926993,
    338241895,
    666307205,
    773529912,
    1294757372,
    1396182291,
    1695183700,
    1986661051,
    2177026350,
    2456956037,
    2730485921,
    2820302411,
    3259730800,
    3345764771,
    3516065817,
    3600352804,
    4094571909,
    275423344,
    430227734,
    506948616,
    659060556,
    883997877,
    958139571,
    1322822218,
    1537002063,
    1747873779,
    1955562222,
    2024104815,
    2227730452,
    2361852424,
    2428436474,
    2756734187,
    3204031479,
    3329325298
  ], g = a((I, w) => I >>> w | I << 32 - w, "rrot"), A = new Uint32Array(64), C = new Uint8Array(64), D = a(() => {
    for (let R = 0, j = 0;R < 16; R++, j += 4)
      A[R] = C[j] << 24 | C[j + 1] << 16 | C[j + 2] << 8 | C[j + 3];
    for (let R = 16;R < 64; R++) {
      let j = g(A[R - 15], 7) ^ g(A[R - 15], 18) ^ A[R - 15] >>> 3, le = g(A[R - 2], 17) ^ g(A[R - 2], 19) ^ A[R - 2] >>> 10;
      A[R] = A[R - 16] + j + A[R - 7] + le | 0;
    }
    let I = e, w = t, Z = n, W = i, J = s, X = o, se = u, oe = c;
    for (let R = 0;R < 64; R++) {
      let j = g(J, 6) ^ g(J, 11) ^ g(J, 25), le = J & X ^ ~J & se, de = oe + j + le + y[R] + A[R] | 0, We = g(I, 2) ^ g(I, 13) ^ g(I, 22), fe = I & w ^ I & Z ^ w & Z, _e = We + fe | 0;
      oe = se, se = X, X = J, J = W + de | 0, W = Z, Z = w, w = I, I = de + _e | 0;
    }
    e = e + I | 0, t = t + w | 0, n = n + Z | 0, i = i + W | 0, s = s + J | 0, o = o + X | 0, u = u + se | 0, c = c + oe | 0, f = 0;
  }, "process"), Y = a((I) => {
    typeof I == "string" && (I = new TextEncoder().encode(I));
    for (let w = 0;w < I.length; w++)
      C[f++] = I[w], f === 64 && D();
    l += I.length;
  }, "add"), P = a(() => {
    if (C[f++] = 128, f == 64 && D(), f + 8 > 64) {
      for (;f < 64; )
        C[f++] = 0;
      D();
    }
    for (;f < 58; )
      C[f++] = 0;
    let I = l * 8;
    C[f++] = I / 1099511627776 & 255, C[f++] = I / 4294967296 & 255, C[f++] = I >>> 24, C[f++] = I >>> 16 & 255, C[f++] = I >>> 8 & 255, C[f++] = I & 255, D();
    let w = new Uint8Array(32);
    return w[0] = e >>> 24, w[1] = e >>> 16 & 255, w[2] = e >>> 8 & 255, w[3] = e & 255, w[4] = t >>> 24, w[5] = t >>> 16 & 255, w[6] = t >>> 8 & 255, w[7] = t & 255, w[8] = n >>> 24, w[9] = n >>> 16 & 255, w[10] = n >>> 8 & 255, w[11] = n & 255, w[12] = i >>> 24, w[13] = i >>> 16 & 255, w[14] = i >>> 8 & 255, w[15] = i & 255, w[16] = s >>> 24, w[17] = s >>> 16 & 255, w[18] = s >>> 8 & 255, w[19] = s & 255, w[20] = o >>> 24, w[21] = o >>> 16 & 255, w[22] = o >>> 8 & 255, w[23] = o & 255, w[24] = u >>> 24, w[25] = u >>> 16 & 255, w[26] = u >>> 8 & 255, w[27] = u & 255, w[28] = c >>> 24, w[29] = c >>> 16 & 255, w[30] = c >>> 8 & 255, w[31] = c & 255, w;
  }, "digest");
  return r === undefined ? { add: Y, digest: P } : (Y(r), P());
}
var es = G(() => {
  p();
  a(Xe, "sha256");
});
var U;
var et;
var ts = G(() => {
  p();
  U = class U2 {
    constructor() {
      E(this, "_dataLength", 0);
      E(this, "_bufferLength", 0);
      E(this, "_state", new Int32Array(4));
      E(this, "_buffer", new ArrayBuffer(68));
      E(this, "_buffer8");
      E(this, "_buffer32");
      this._buffer8 = new Uint8Array(this._buffer, 0, 68), this._buffer32 = new Uint32Array(this._buffer, 0, 17), this.start();
    }
    static hashByteArray(e, t = false) {
      return this.onePassHasher.start().appendByteArray(e).end(t);
    }
    static hashStr(e, t = false) {
      return this.onePassHasher.start().appendStr(e).end(t);
    }
    static hashAsciiStr(e, t = false) {
      return this.onePassHasher.start().appendAsciiStr(e).end(t);
    }
    static _hex(e) {
      let { hexChars: t, hexOut: n } = U2, i, s, o, u;
      for (u = 0;u < 4; u += 1)
        for (s = u * 8, i = e[u], o = 0;o < 8; o += 2)
          n[s + 1 + o] = t.charAt(i & 15), i >>>= 4, n[s + 0 + o] = t.charAt(i & 15), i >>>= 4;
      return n.join("");
    }
    static _md5cycle(e, t) {
      let n = e[0], i = e[1], s = e[2], o = e[3];
      n += (i & s | ~i & o) + t[0] - 680876936 | 0, n = (n << 7 | n >>> 25) + i | 0, o += (n & i | ~n & s) + t[1] - 389564586 | 0, o = (o << 12 | o >>> 20) + n | 0, s += (o & n | ~o & i) + t[2] + 606105819 | 0, s = (s << 17 | s >>> 15) + o | 0, i += (s & o | ~s & n) + t[3] - 1044525330 | 0, i = (i << 22 | i >>> 10) + s | 0, n += (i & s | ~i & o) + t[4] - 176418897 | 0, n = (n << 7 | n >>> 25) + i | 0, o += (n & i | ~n & s) + t[5] + 1200080426 | 0, o = (o << 12 | o >>> 20) + n | 0, s += (o & n | ~o & i) + t[6] - 1473231341 | 0, s = (s << 17 | s >>> 15) + o | 0, i += (s & o | ~s & n) + t[7] - 45705983 | 0, i = (i << 22 | i >>> 10) + s | 0, n += (i & s | ~i & o) + t[8] + 1770035416 | 0, n = (n << 7 | n >>> 25) + i | 0, o += (n & i | ~n & s) + t[9] - 1958414417 | 0, o = (o << 12 | o >>> 20) + n | 0, s += (o & n | ~o & i) + t[10] - 42063 | 0, s = (s << 17 | s >>> 15) + o | 0, i += (s & o | ~s & n) + t[11] - 1990404162 | 0, i = (i << 22 | i >>> 10) + s | 0, n += (i & s | ~i & o) + t[12] + 1804603682 | 0, n = (n << 7 | n >>> 25) + i | 0, o += (n & i | ~n & s) + t[13] - 40341101 | 0, o = (o << 12 | o >>> 20) + n | 0, s += (o & n | ~o & i) + t[14] - 1502002290 | 0, s = (s << 17 | s >>> 15) + o | 0, i += (s & o | ~s & n) + t[15] + 1236535329 | 0, i = (i << 22 | i >>> 10) + s | 0, n += (i & o | s & ~o) + t[1] - 165796510 | 0, n = (n << 5 | n >>> 27) + i | 0, o += (n & s | i & ~s) + t[6] - 1069501632 | 0, o = (o << 9 | o >>> 23) + n | 0, s += (o & i | n & ~i) + t[11] + 643717713 | 0, s = (s << 14 | s >>> 18) + o | 0, i += (s & n | o & ~n) + t[0] - 373897302 | 0, i = (i << 20 | i >>> 12) + s | 0, n += (i & o | s & ~o) + t[5] - 701558691 | 0, n = (n << 5 | n >>> 27) + i | 0, o += (n & s | i & ~s) + t[10] + 38016083 | 0, o = (o << 9 | o >>> 23) + n | 0, s += (o & i | n & ~i) + t[15] - 660478335 | 0, s = (s << 14 | s >>> 18) + o | 0, i += (s & n | o & ~n) + t[4] - 405537848 | 0, i = (i << 20 | i >>> 12) + s | 0, n += (i & o | s & ~o) + t[9] + 568446438 | 0, n = (n << 5 | n >>> 27) + i | 0, o += (n & s | i & ~s) + t[14] - 1019803690 | 0, o = (o << 9 | o >>> 23) + n | 0, s += (o & i | n & ~i) + t[3] - 187363961 | 0, s = (s << 14 | s >>> 18) + o | 0, i += (s & n | o & ~n) + t[8] + 1163531501 | 0, i = (i << 20 | i >>> 12) + s | 0, n += (i & o | s & ~o) + t[13] - 1444681467 | 0, n = (n << 5 | n >>> 27) + i | 0, o += (n & s | i & ~s) + t[2] - 51403784 | 0, o = (o << 9 | o >>> 23) + n | 0, s += (o & i | n & ~i) + t[7] + 1735328473 | 0, s = (s << 14 | s >>> 18) + o | 0, i += (s & n | o & ~n) + t[12] - 1926607734 | 0, i = (i << 20 | i >>> 12) + s | 0, n += (i ^ s ^ o) + t[5] - 378558 | 0, n = (n << 4 | n >>> 28) + i | 0, o += (n ^ i ^ s) + t[8] - 2022574463 | 0, o = (o << 11 | o >>> 21) + n | 0, s += (o ^ n ^ i) + t[11] + 1839030562 | 0, s = (s << 16 | s >>> 16) + o | 0, i += (s ^ o ^ n) + t[14] - 35309556 | 0, i = (i << 23 | i >>> 9) + s | 0, n += (i ^ s ^ o) + t[1] - 1530992060 | 0, n = (n << 4 | n >>> 28) + i | 0, o += (n ^ i ^ s) + t[4] + 1272893353 | 0, o = (o << 11 | o >>> 21) + n | 0, s += (o ^ n ^ i) + t[7] - 155497632 | 0, s = (s << 16 | s >>> 16) + o | 0, i += (s ^ o ^ n) + t[10] - 1094730640 | 0, i = (i << 23 | i >>> 9) + s | 0, n += (i ^ s ^ o) + t[13] + 681279174 | 0, n = (n << 4 | n >>> 28) + i | 0, o += (n ^ i ^ s) + t[0] - 358537222 | 0, o = (o << 11 | o >>> 21) + n | 0, s += (o ^ n ^ i) + t[3] - 722521979 | 0, s = (s << 16 | s >>> 16) + o | 0, i += (s ^ o ^ n) + t[6] + 76029189 | 0, i = (i << 23 | i >>> 9) + s | 0, n += (i ^ s ^ o) + t[9] - 640364487 | 0, n = (n << 4 | n >>> 28) + i | 0, o += (n ^ i ^ s) + t[12] - 421815835 | 0, o = (o << 11 | o >>> 21) + n | 0, s += (o ^ n ^ i) + t[15] + 530742520 | 0, s = (s << 16 | s >>> 16) + o | 0, i += (s ^ o ^ n) + t[2] - 995338651 | 0, i = (i << 23 | i >>> 9) + s | 0, n += (s ^ (i | ~o)) + t[0] - 198630844 | 0, n = (n << 6 | n >>> 26) + i | 0, o += (i ^ (n | ~s)) + t[7] + 1126891415 | 0, o = (o << 10 | o >>> 22) + n | 0, s += (n ^ (o | ~i)) + t[14] - 1416354905 | 0, s = (s << 15 | s >>> 17) + o | 0, i += (o ^ (s | ~n)) + t[5] - 57434055 | 0, i = (i << 21 | i >>> 11) + s | 0, n += (s ^ (i | ~o)) + t[12] + 1700485571 | 0, n = (n << 6 | n >>> 26) + i | 0, o += (i ^ (n | ~s)) + t[3] - 1894986606 | 0, o = (o << 10 | o >>> 22) + n | 0, s += (n ^ (o | ~i)) + t[10] - 1051523 | 0, s = (s << 15 | s >>> 17) + o | 0, i += (o ^ (s | ~n)) + t[1] - 2054922799 | 0, i = (i << 21 | i >>> 11) + s | 0, n += (s ^ (i | ~o)) + t[8] + 1873313359 | 0, n = (n << 6 | n >>> 26) + i | 0, o += (i ^ (n | ~s)) + t[15] - 30611744 | 0, o = (o << 10 | o >>> 22) + n | 0, s += (n ^ (o | ~i)) + t[6] - 1560198380 | 0, s = (s << 15 | s >>> 17) + o | 0, i += (o ^ (s | ~n)) + t[13] + 1309151649 | 0, i = (i << 21 | i >>> 11) + s | 0, n += (s ^ (i | ~o)) + t[4] - 145523070 | 0, n = (n << 6 | n >>> 26) + i | 0, o += (i ^ (n | ~s)) + t[11] - 1120210379 | 0, o = (o << 10 | o >>> 22) + n | 0, s += (n ^ (o | ~i)) + t[2] + 718787259 | 0, s = (s << 15 | s >>> 17) + o | 0, i += (o ^ (s | ~n)) + t[9] - 343485551 | 0, i = (i << 21 | i >>> 11) + s | 0, e[0] = n + e[0] | 0, e[1] = i + e[1] | 0, e[2] = s + e[2] | 0, e[3] = o + e[3] | 0;
    }
    start() {
      return this._dataLength = 0, this._bufferLength = 0, this._state.set(U2.stateIdentity), this;
    }
    appendStr(e) {
      let t = this._buffer8, n = this._buffer32, i = this._bufferLength, s, o;
      for (o = 0;o < e.length; o += 1) {
        if (s = e.charCodeAt(o), s < 128)
          t[i++] = s;
        else if (s < 2048)
          t[i++] = (s >>> 6) + 192, t[i++] = s & 63 | 128;
        else if (s < 55296 || s > 56319)
          t[i++] = (s >>> 12) + 224, t[i++] = s >>> 6 & 63 | 128, t[i++] = s & 63 | 128;
        else {
          if (s = (s - 55296) * 1024 + (e.charCodeAt(++o) - 56320) + 65536, s > 1114111)
            throw new Error("Unicode standard supports code points up to U+10FFFF");
          t[i++] = (s >>> 18) + 240, t[i++] = s >>> 12 & 63 | 128, t[i++] = s >>> 6 & 63 | 128, t[i++] = s & 63 | 128;
        }
        i >= 64 && (this._dataLength += 64, U2._md5cycle(this._state, n), i -= 64, n[0] = n[16]);
      }
      return this._bufferLength = i, this;
    }
    appendAsciiStr(e) {
      let t = this._buffer8, n = this._buffer32, i = this._bufferLength, s, o = 0;
      for (;; ) {
        for (s = Math.min(e.length - o, 64 - i);s--; )
          t[i++] = e.charCodeAt(o++);
        if (i < 64)
          break;
        this._dataLength += 64, U2._md5cycle(this._state, n), i = 0;
      }
      return this._bufferLength = i, this;
    }
    appendByteArray(e) {
      let t = this._buffer8, n = this._buffer32, i = this._bufferLength, s, o = 0;
      for (;; ) {
        for (s = Math.min(e.length - o, 64 - i);s--; )
          t[i++] = e[o++];
        if (i < 64)
          break;
        this._dataLength += 64, U2._md5cycle(this._state, n), i = 0;
      }
      return this._bufferLength = i, this;
    }
    getState() {
      let e = this._state;
      return { buffer: String.fromCharCode.apply(null, Array.from(this._buffer8)), buflen: this._bufferLength, length: this._dataLength, state: [e[0], e[1], e[2], e[3]] };
    }
    setState(e) {
      let { buffer: t, state: n } = e, i = this._state, s;
      for (this._dataLength = e.length, this._bufferLength = e.buflen, i[0] = n[0], i[1] = n[1], i[2] = n[2], i[3] = n[3], s = 0;s < t.length; s += 1)
        this._buffer8[s] = t.charCodeAt(s);
    }
    end(e = false) {
      let t = this._bufferLength, n = this._buffer8, i = this._buffer32, s = (t >> 2) + 1;
      this._dataLength += t;
      let o = this._dataLength * 8;
      if (n[t] = 128, n[t + 1] = n[t + 2] = n[t + 3] = 0, i.set(U2.buffer32Identity.subarray(s), s), t > 55 && (U2._md5cycle(this._state, i), i.set(U2.buffer32Identity)), o <= 4294967295)
        i[14] = o;
      else {
        let u = o.toString(16).match(/(.*?)(.{0,8})$/);
        if (u === null)
          return;
        let c = parseInt(u[2], 16), l = parseInt(u[1], 16) || 0;
        i[14] = c, i[15] = l;
      }
      return U2._md5cycle(this._state, i), e ? this._state : U2._hex(this._state);
    }
  };
  a(U, "Md5"), E(U, "stateIdentity", new Int32Array([1732584193, -271733879, -1732584194, 271733878])), E(U, "buffer32Identity", new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), E(U, "hexChars", "0123456789abcdef"), E(U, "hexOut", []), E(U, "onePassHasher", new U);
  et = U;
});
var lr = {};
ie(lr, { createHash: () => bu, createHmac: () => vu, randomBytes: () => gu });
function gu(r) {
  return crypto.getRandomValues(d.alloc(r));
}
function bu(r) {
  if (r === "sha256")
    return { update: a(function(e) {
      return { digest: a(function() {
        return d.from(Xe(e));
      }, "digest") };
    }, "update") };
  if (r === "md5")
    return { update: a(function(e) {
      return {
        digest: a(function() {
          return typeof e == "string" ? et.hashStr(e) : et.hashByteArray(e);
        }, "digest")
      };
    }, "update") };
  throw new Error(`Hash type '${r}' not supported`);
}
function vu(r, e) {
  if (r !== "sha256")
    throw new Error(`Only sha256 is supported (requested: '${r}')`);
  return { update: a(function(t) {
    return { digest: a(function() {
      typeof e == "string" && (e = new TextEncoder().encode(e)), typeof t == "string" && (t = new TextEncoder().encode(t));
      let n = e.length;
      if (n > 64)
        e = Xe(e);
      else if (n < 64) {
        let c = new Uint8Array(64);
        c.set(e), e = c;
      }
      let i = new Uint8Array(64), s = new Uint8Array(64);
      for (let c = 0;c < 64; c++)
        i[c] = 54 ^ e[c], s[c] = 92 ^ e[c];
      let o = new Uint8Array(t.length + 64);
      o.set(i, 0), o.set(t, 64);
      let u = new Uint8Array(96);
      return u.set(s, 0), u.set(Xe(o), 64), d.from(Xe(u));
    }, "digest") };
  }, "update") };
}
var fr = G(() => {
  p();
  es();
  ts();
  a(gu, "randomBytes");
  a(bu, "createHash");
  a(vu, "createHmac");
});
var tt = T((Qf, hr) => {
  p();
  hr.exports = {
    host: "localhost",
    user: m.platform === "win32" ? m.env.USERNAME : m.env.USER,
    database: undefined,
    password: null,
    connectionString: undefined,
    port: 5432,
    rows: 0,
    binary: false,
    max: 10,
    idleTimeoutMillis: 30000,
    client_encoding: "",
    ssl: false,
    application_name: undefined,
    fallback_application_name: undefined,
    options: undefined,
    parseInputDatesAsUTC: false,
    statement_timeout: false,
    lock_timeout: false,
    idle_in_transaction_session_timeout: false,
    query_timeout: false,
    connect_timeout: 0,
    keepalives: 1,
    keepalives_idle: 0
  };
  var Me = Je(), xu = Me.getTypeParser(20, "text"), Su = Me.getTypeParser(1016, "text");
  hr.exports.__defineSetter__("parseInt8", function(r) {
    Me.setTypeParser(20, "text", r ? Me.getTypeParser(23, "text") : xu), Me.setTypeParser(1016, "text", r ? Me.getTypeParser(1007, "text") : Su);
  });
});
var rt = T((Wf, ns) => {
  p();
  var Eu = (fr(), O(lr)), Au = tt();
  function Cu(r) {
    var e = r.replace(/\\/g, "\\\\").replace(/"/g, "\\\"");
    return '"' + e + '"';
  }
  a(Cu, "escapeElement");
  function rs(r) {
    for (var e = "{", t = 0;t < r.length; t++)
      t > 0 && (e = e + ","), r[t] === null || typeof r[t] > "u" ? e = e + "NULL" : Array.isArray(r[t]) ? e = e + rs(r[t]) : r[t] instanceof d ? e += "\\\\x" + r[t].toString("hex") : e += Cu(Ct(r[t]));
    return e = e + "}", e;
  }
  a(rs, "arrayString");
  var Ct = a(function(r, e) {
    if (r == null)
      return null;
    if (r instanceof d)
      return r;
    if (ArrayBuffer.isView(r)) {
      var t = d.from(r.buffer, r.byteOffset, r.byteLength);
      return t.length === r.byteLength ? t : t.slice(r.byteOffset, r.byteOffset + r.byteLength);
    }
    return r instanceof Date ? Au.parseInputDatesAsUTC ? Tu(r) : Iu(r) : Array.isArray(r) ? rs(r) : typeof r == "object" ? _u(r, e) : r.toString();
  }, "prepareValue");
  function _u(r, e) {
    if (r && typeof r.toPostgres == "function") {
      if (e = e || [], e.indexOf(r) !== -1)
        throw new Error('circular reference detected while preparing "' + r + '" for query');
      return e.push(r), Ct(r.toPostgres(Ct), e);
    }
    return JSON.stringify(r);
  }
  a(_u, "prepareObject");
  function N(r, e) {
    for (r = "" + r;r.length < e; )
      r = "0" + r;
    return r;
  }
  a(N, "pad");
  function Iu(r) {
    var e = -r.getTimezoneOffset(), t = r.getFullYear(), n = t < 1;
    n && (t = Math.abs(t) + 1);
    var i = N(t, 4) + "-" + N(r.getMonth() + 1, 2) + "-" + N(r.getDate(), 2) + "T" + N(r.getHours(), 2) + ":" + N(r.getMinutes(), 2) + ":" + N(r.getSeconds(), 2) + "." + N(r.getMilliseconds(), 3);
    return e < 0 ? (i += "-", e *= -1) : i += "+", i += N(Math.floor(e / 60), 2) + ":" + N(e % 60, 2), n && (i += " BC"), i;
  }
  a(Iu, "dateToString");
  function Tu(r) {
    var e = r.getUTCFullYear(), t = e < 1;
    t && (e = Math.abs(e) + 1);
    var n = N(e, 4) + "-" + N(r.getUTCMonth() + 1, 2) + "-" + N(r.getUTCDate(), 2) + "T" + N(r.getUTCHours(), 2) + ":" + N(r.getUTCMinutes(), 2) + ":" + N(r.getUTCSeconds(), 2) + "." + N(r.getUTCMilliseconds(), 3);
    return n += "+00:00", t && (n += " BC"), n;
  }
  a(Tu, "dateToStringUTC");
  function Pu(r, e, t) {
    return r = typeof r == "string" ? { text: r } : r, e && (typeof e == "function" ? r.callback = e : r.values = e), t && (r.callback = t), r;
  }
  a(Pu, "normalizeQueryConfig");
  var pr = a(function(r) {
    return Eu.createHash("md5").update(r, "utf-8").digest("hex");
  }, "md5"), Bu = a(function(r, e, t) {
    var n = pr(e + r), i = pr(d.concat([d.from(n), t]));
    return "md5" + i;
  }, "postgresMd5PasswordHash");
  ns.exports = {
    prepareValue: a(function(e) {
      return Ct(e);
    }, "prepareValueWrapper"),
    normalizeQueryConfig: Pu,
    postgresMd5PasswordHash: Bu,
    md5: pr
  };
});
var nt = {};
ie(nt, { default: () => ku });
var ku;
var it = G(() => {
  p();
  ku = {};
});
var ds = T((th, ps) => {
  p();
  var yr = (fr(), O(lr));
  function Mu(r) {
    if (r.indexOf("SCRAM-SHA-256") === -1)
      throw new Error("SASL: Only mechanism SCRAM-SHA-256 is currently supported");
    let e = yr.randomBytes(18).toString("base64");
    return { mechanism: "SCRAM-SHA-256", clientNonce: e, response: "n,,n=*,r=" + e, message: "SASLInitialResponse" };
  }
  a(Mu, "startSession");
  function Uu(r, e, t) {
    if (r.message !== "SASLInitialResponse")
      throw new Error("SASL: Last message was not SASLInitialResponse");
    if (typeof e != "string")
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string");
    if (typeof t != "string")
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string");
    let n = qu(t);
    if (n.nonce.startsWith(r.clientNonce)) {
      if (n.nonce.length === r.clientNonce.length)
        throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short");
    } else
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce");
    var i = d.from(n.salt, "base64"), s = Wu(e, i, n.iteration), o = Ue(s, "Client Key"), u = Nu(o), c = "n=*,r=" + r.clientNonce, l = "r=" + n.nonce + ",s=" + n.salt + ",i=" + n.iteration, f = "c=biws,r=" + n.nonce, y = c + "," + l + "," + f, g = Ue(u, y), A = hs(o, g), C = A.toString("base64"), D = Ue(s, "Server Key"), Y = Ue(D, y);
    r.message = "SASLResponse", r.serverSignature = Y.toString("base64"), r.response = f + ",p=" + C;
  }
  a(Uu, "continueSession");
  function Du(r, e) {
    if (r.message !== "SASLResponse")
      throw new Error("SASL: Last message was not SASLResponse");
    if (typeof e != "string")
      throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string");
    let { serverSignature: t } = Qu(e);
    if (t !== r.serverSignature)
      throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match");
  }
  a(Du, "finalizeSession");
  function Ou(r) {
    if (typeof r != "string")
      throw new TypeError("SASL: text must be a string");
    return r.split("").map((e, t) => r.charCodeAt(t)).every((e) => e >= 33 && e <= 43 || e >= 45 && e <= 126);
  }
  a(Ou, "isPrintableChars");
  function ls(r) {
    return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(r);
  }
  a(ls, "isBase64");
  function fs(r) {
    if (typeof r != "string")
      throw new TypeError("SASL: attribute pairs text must be a string");
    return new Map(r.split(",").map((e) => {
      if (!/^.=/.test(e))
        throw new Error("SASL: Invalid attribute pair entry");
      let t = e[0], n = e.substring(2);
      return [t, n];
    }));
  }
  a(fs, "parseAttributePairs");
  function qu(r) {
    let e = fs(r), t = e.get("r");
    if (t) {
      if (!Ou(t))
        throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters");
    } else
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing");
    let n = e.get("s");
    if (n) {
      if (!ls(n))
        throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64");
    } else
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing");
    let i = e.get("i");
    if (i) {
      if (!/^[1-9][0-9]*$/.test(i))
        throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count");
    } else
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing");
    let s = parseInt(i, 10);
    return { nonce: t, salt: n, iteration: s };
  }
  a(qu, "parseServerFirstMessage");
  function Qu(r) {
    let t = fs(r).get("v");
    if (t) {
      if (!ls(t))
        throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64");
    } else
      throw new Error("SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing");
    return { serverSignature: t };
  }
  a(Qu, "parseServerFinalMessage");
  function hs(r, e) {
    if (!d.isBuffer(r))
      throw new TypeError("first argument must be a Buffer");
    if (!d.isBuffer(e))
      throw new TypeError("second argument must be a Buffer");
    if (r.length !== e.length)
      throw new Error("Buffer lengths must match");
    if (r.length === 0)
      throw new Error("Buffers cannot be empty");
    return d.from(r.map((t, n) => r[n] ^ e[n]));
  }
  a(hs, "xorBuffers");
  function Nu(r) {
    return yr.createHash("sha256").update(r).digest();
  }
  a(Nu, "sha256");
  function Ue(r, e) {
    return yr.createHmac("sha256", r).update(e).digest();
  }
  a(Ue, "hmacSha256");
  function Wu(r, e, t) {
    for (var n = Ue(r, d.concat([e, d.from([0, 0, 0, 1])])), i = n, s = 0;s < t - 1; s++)
      n = Ue(r, n), i = hs(i, n);
    return i;
  }
  a(Wu, "Hi");
  ps.exports = { startSession: Mu, continueSession: Uu, finalizeSession: Du };
});
var mr = {};
ie(mr, { join: () => ju });
function ju(...r) {
  return r.join("/");
}
var wr = G(() => {
  p();
  a(ju, "join");
});
var gr = {};
ie(gr, { stat: () => Hu });
function Hu(r, e) {
  e(new Error("No filesystem"));
}
var br = G(() => {
  p();
  a(Hu, "stat");
});
var vr = {};
ie(vr, { default: () => $u });
var $u;
var xr = G(() => {
  p();
  $u = {};
});
var ys = {};
ie(ys, { StringDecoder: () => Sr });
var Er;
var Sr;
var ms = G(() => {
  p();
  Er = class Er2 {
    constructor(e) {
      E(this, "td");
      this.td = new TextDecoder(e);
    }
    write(e) {
      return this.td.decode(e, { stream: true });
    }
    end(e) {
      return this.td.decode(e);
    }
  };
  a(Er, "StringDecoder");
  Sr = Er;
});
var vs = T((fh, bs) => {
  p();
  var { Transform: Gu } = (xr(), O(vr)), { StringDecoder: Vu } = (ms(), O(ys)), ve = Symbol("last"), It = Symbol("decoder");
  function zu(r, e, t) {
    let n;
    if (this.overflow) {
      if (n = this[It].write(r).split(this.matcher), n.length === 1)
        return t();
      n.shift(), this.overflow = false;
    } else
      this[ve] += this[It].write(r), n = this[ve].split(this.matcher);
    this[ve] = n.pop();
    for (let i = 0;i < n.length; i++)
      try {
        gs(this, this.mapper(n[i]));
      } catch (s) {
        return t(s);
      }
    if (this.overflow = this[ve].length > this.maxLength, this.overflow && !this.skipOverflow) {
      t(new Error("maximum buffer reached"));
      return;
    }
    t();
  }
  a(zu, "transform");
  function Ku(r) {
    if (this[ve] += this[It].end(), this[ve])
      try {
        gs(this, this.mapper(this[ve]));
      } catch (e) {
        return r(e);
      }
    r();
  }
  a(Ku, "flush");
  function gs(r, e) {
    e !== undefined && r.push(e);
  }
  a(gs, "push");
  function ws(r) {
    return r;
  }
  a(ws, "noop");
  function Yu(r, e, t) {
    switch (r = r || /\r?\n/, e = e || ws, t = t || {}, arguments.length) {
      case 1:
        typeof r == "function" ? (e = r, r = /\r?\n/) : typeof r == "object" && !(r instanceof RegExp) && !r[Symbol.split] && (t = r, r = /\r?\n/);
        break;
      case 2:
        typeof r == "function" ? (t = e, e = r, r = /\r?\n/) : typeof e == "object" && (t = e, e = ws);
    }
    t = Object.assign({}, t), t.autoDestroy = true, t.transform = zu, t.flush = Ku, t.readableObjectMode = true;
    let n = new Gu(t);
    return n[ve] = "", n[It] = new Vu("utf8"), n.matcher = r, n.mapper = e, n.maxLength = t.maxLength, n.skipOverflow = t.skipOverflow || false, n.overflow = false, n._destroy = function(i, s) {
      this._writableState.errorEmitted = false, s(i);
    }, n;
  }
  a(Yu, "split");
  bs.exports = Yu;
});
var Es = T((dh, pe) => {
  p();
  var xs = (wr(), O(mr)), Zu = (xr(), O(vr)).Stream, Ju = vs(), Ss = (it(), O(nt)), Xu = 5432, Tt = m.platform === "win32", st = m.stderr, ec = 56, tc = 7, rc = 61440, nc = 32768;
  function ic(r) {
    return (r & rc) == nc;
  }
  a(ic, "isRegFile");
  var De = ["host", "port", "database", "user", "password"], Ar = De.length, sc = De[Ar - 1];
  function Cr() {
    var r = st instanceof Zu && st.writable === true;
    if (r) {
      var e = Array.prototype.slice.call(arguments).concat(`
`);
      st.write(Ss.format.apply(Ss, e));
    }
  }
  a(Cr, "warn");
  Object.defineProperty(pe.exports, "isWin", { get: a(function() {
    return Tt;
  }, "get"), set: a(function(r) {
    Tt = r;
  }, "set") });
  pe.exports.warnTo = function(r) {
    var e = st;
    return st = r, e;
  };
  pe.exports.getFileName = function(r) {
    var e = r || m.env, t = e.PGPASSFILE || (Tt ? xs.join(e.APPDATA || "./", "postgresql", "pgpass.conf") : xs.join(e.HOME || "./", ".pgpass"));
    return t;
  };
  pe.exports.usePgPass = function(r, e) {
    return Object.prototype.hasOwnProperty.call(m.env, "PGPASSWORD") ? false : Tt ? true : (e = e || "<unkn>", ic(r.mode) ? r.mode & (ec | tc) ? (Cr('WARNING: password file "%s" has group or world access; permissions should be u=rw (0600) or less', e), false) : true : (Cr('WARNING: password file "%s" is not a plain file', e), false));
  };
  var oc = pe.exports.match = function(r, e) {
    return De.slice(0, -1).reduce(function(t, n, i) {
      return i == 1 && Number(r[n] || Xu) === Number(e[n]) ? t && true : t && (e[n] === "*" || e[n] === r[n]);
    }, true);
  };
  pe.exports.getPassword = function(r, e, t) {
    var n, i = e.pipe(Ju());
    function s(c) {
      var l = ac(c);
      l && uc(l) && oc(r, l) && (n = l[sc], i.end());
    }
    a(s, "onLine");
    var o = a(function() {
      e.destroy(), t(n);
    }, "onEnd"), u = a(function(c) {
      e.destroy(), Cr("WARNING: error on reading file: %s", c), t(undefined);
    }, "onErr");
    e.on("error", u), i.on("data", s).on("end", o).on("error", u);
  };
  var ac = pe.exports.parseLine = function(r) {
    if (r.length < 11 || r.match(/^\s+#/))
      return null;
    for (var e = "", t = "", n = 0, i = 0, s = 0, o = {}, u = false, c = a(function(f, y, g) {
      var A = r.substring(y, g);
      Object.hasOwnProperty.call(m.env, "PGPASS_NO_DEESCAPE") || (A = A.replace(/\\([:\\])/g, "$1")), o[De[f]] = A;
    }, "addToObj"), l = 0;l < r.length - 1; l += 1) {
      if (e = r.charAt(l + 1), t = r.charAt(l), u = n == Ar - 1, u) {
        c(n, i);
        break;
      }
      l >= 0 && e == ":" && t !== "\\" && (c(n, i, l + 1), i = l + 2, n += 1);
    }
    return o = Object.keys(o).length === Ar ? o : null, o;
  }, uc = pe.exports.isValidEntry = function(r) {
    for (var e = { 0: function(o) {
      return o.length > 0;
    }, 1: function(o) {
      return o === "*" ? true : (o = Number(o), isFinite(o) && o > 0 && o < 9007199254740992 && Math.floor(o) === o);
    }, 2: function(o) {
      return o.length > 0;
    }, 3: function(o) {
      return o.length > 0;
    }, 4: function(o) {
      return o.length > 0;
    } }, t = 0;t < De.length; t += 1) {
      var n = e[t], i = r[De[t]] || "", s = n(i);
      if (!s)
        return false;
    }
    return true;
  };
});
var Cs = T((gh, _r) => {
  p();
  var wh = (wr(), O(mr)), As = (br(), O(gr)), Pt = Es();
  _r.exports = function(r, e) {
    var t = Pt.getFileName();
    As.stat(t, function(n, i) {
      if (n || !Pt.usePgPass(i, t))
        return e(undefined);
      var s = As.createReadStream(t);
      Pt.getPassword(r, s, e);
    });
  };
  _r.exports.warnTo = Pt.warnTo;
});
var _s = {};
ie(_s, { default: () => cc });
var cc;
var Is = G(() => {
  p();
  cc = {};
});
var Ps = T((xh, Ts) => {
  p();
  var lc = (Zt(), O(gi)), Ir = (br(), O(gr));
  function Tr(r) {
    if (r.charAt(0) === "/") {
      var t = r.split(" ");
      return { host: t[0], database: t[1] };
    }
    var e = lc.parse(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(r) ? encodeURI(r).replace(/\%25(\d\d)/g, "%$1") : r, true), t = e.query;
    for (var n in t)
      Array.isArray(t[n]) && (t[n] = t[n][t[n].length - 1]);
    var i = (e.auth || ":").split(":");
    if (t.user = i[0], t.password = i.splice(1).join(":"), t.port = e.port, e.protocol == "socket:")
      return t.host = decodeURI(e.pathname), t.database = e.query.db, t.client_encoding = e.query.encoding, t;
    t.host || (t.host = e.hostname);
    var s = e.pathname;
    if (!t.host && s && /^%2f/i.test(s)) {
      var o = s.split("/");
      t.host = decodeURIComponent(o[0]), s = o.splice(1).join("/");
    }
    switch (s && s.charAt(0) === "/" && (s = s.slice(1) || null), t.database = s && decodeURI(s), (t.ssl === "true" || t.ssl === "1") && (t.ssl = true), t.ssl === "0" && (t.ssl = false), (t.sslcert || t.sslkey || t.sslrootcert || t.sslmode) && (t.ssl = {}), t.sslcert && (t.ssl.cert = Ir.readFileSync(t.sslcert).toString()), t.sslkey && (t.ssl.key = Ir.readFileSync(t.sslkey).toString()), t.sslrootcert && (t.ssl.ca = Ir.readFileSync(t.sslrootcert).toString()), t.sslmode) {
      case "disable": {
        t.ssl = false;
        break;
      }
      case "prefer":
      case "require":
      case "verify-ca":
      case "verify-full":
        break;
      case "no-verify": {
        t.ssl.rejectUnauthorized = false;
        break;
      }
    }
    return t;
  }
  a(Tr, "parse");
  Ts.exports = Tr;
  Tr.parse = Tr;
});
var Bt = T((Ah, Ls) => {
  p();
  var fc = (Is(), O(_s)), Rs = tt(), Bs = Ps().parse, H = a(function(r, e, t) {
    return t === undefined ? t = m.env["PG" + r.toUpperCase()] : t === false || (t = m.env[t]), e[r] || t || Rs[r];
  }, "val"), hc = a(function() {
    switch (m.env.PGSSLMODE) {
      case "disable":
        return false;
      case "prefer":
      case "require":
      case "verify-ca":
      case "verify-full":
        return true;
      case "no-verify":
        return { rejectUnauthorized: false };
    }
    return Rs.ssl;
  }, "readSSLConfigFromEnvironment"), Oe = a(function(r) {
    return "'" + ("" + r).replace(/\\/g, "\\\\").replace(/'/g, "\\'") + "'";
  }, "quoteParamValue"), ne2 = a(function(r, e, t) {
    var n = e[t];
    n != null && r.push(t + "=" + Oe(n));
  }, "add"), Br = class Br2 {
    constructor(e) {
      e = typeof e == "string" ? Bs(e) : e || {}, e.connectionString && (e = Object.assign({}, e, Bs(e.connectionString))), this.user = H("user", e), this.database = H("database", e), this.database === undefined && (this.database = this.user), this.port = parseInt(H("port", e), 10), this.host = H("host", e), Object.defineProperty(this, "password", {
        configurable: true,
        enumerable: false,
        writable: true,
        value: H("password", e)
      }), this.binary = H("binary", e), this.options = H("options", e), this.ssl = typeof e.ssl > "u" ? hc() : e.ssl, typeof this.ssl == "string" && this.ssl === "true" && (this.ssl = true), this.ssl === "no-verify" && (this.ssl = { rejectUnauthorized: false }), this.ssl && this.ssl.key && Object.defineProperty(this.ssl, "key", { enumerable: false }), this.client_encoding = H("client_encoding", e), this.replication = H("replication", e), this.isDomainSocket = !(this.host || "").indexOf("/"), this.application_name = H("application_name", e, "PGAPPNAME"), this.fallback_application_name = H("fallback_application_name", e, false), this.statement_timeout = H("statement_timeout", e, false), this.lock_timeout = H("lock_timeout", e, false), this.idle_in_transaction_session_timeout = H("idle_in_transaction_session_timeout", e, false), this.query_timeout = H("query_timeout", e, false), e.connectionTimeoutMillis === undefined ? this.connect_timeout = m.env.PGCONNECT_TIMEOUT || 0 : this.connect_timeout = Math.floor(e.connectionTimeoutMillis / 1000), e.keepAlive === false ? this.keepalives = 0 : e.keepAlive === true && (this.keepalives = 1), typeof e.keepAliveInitialDelayMillis == "number" && (this.keepalives_idle = Math.floor(e.keepAliveInitialDelayMillis / 1000));
    }
    getLibpqConnectionString(e) {
      var t = [];
      ne2(t, this, "user"), ne2(t, this, "password"), ne2(t, this, "port"), ne2(t, this, "application_name"), ne2(t, this, "fallback_application_name"), ne2(t, this, "connect_timeout"), ne2(t, this, "options");
      var n = typeof this.ssl == "object" ? this.ssl : this.ssl ? { sslmode: this.ssl } : {};
      if (ne2(t, n, "sslmode"), ne2(t, n, "sslca"), ne2(t, n, "sslkey"), ne2(t, n, "sslcert"), ne2(t, n, "sslrootcert"), this.database && t.push("dbname=" + Oe(this.database)), this.replication && t.push("replication=" + Oe(this.replication)), this.host && t.push("host=" + Oe(this.host)), this.isDomainSocket)
        return e(null, t.join(" "));
      this.client_encoding && t.push("client_encoding=" + Oe(this.client_encoding)), fc.lookup(this.host, function(i, s) {
        return i ? e(i, null) : (t.push("hostaddr=" + Oe(s)), e(null, t.join(" ")));
      });
    }
  };
  a(Br, "ConnectionParameters");
  var Pr = Br;
  Ls.exports = Pr;
});
var Ms = T((Ih, ks) => {
  p();
  var pc = Je(), Fs = /^([A-Za-z]+)(?: (\d+))?(?: (\d+))?/, Lr = class Lr2 {
    constructor(e, t) {
      this.command = null, this.rowCount = null, this.oid = null, this.rows = [], this.fields = [], this._parsers = undefined, this._types = t, this.RowCtor = null, this.rowAsArray = e === "array", this.rowAsArray && (this.parseRow = this._parseRowAsArray);
    }
    addCommandComplete(e) {
      var t;
      e.text ? t = Fs.exec(e.text) : t = Fs.exec(e.command), t && (this.command = t[1], t[3] ? (this.oid = parseInt(t[2], 10), this.rowCount = parseInt(t[3], 10)) : t[2] && (this.rowCount = parseInt(t[2], 10)));
    }
    _parseRowAsArray(e) {
      for (var t = new Array(e.length), n = 0, i = e.length;n < i; n++) {
        var s = e[n];
        s !== null ? t[n] = this._parsers[n](s) : t[n] = null;
      }
      return t;
    }
    parseRow(e) {
      for (var t = {}, n = 0, i = e.length;n < i; n++) {
        var s = e[n], o = this.fields[n].name;
        s !== null ? t[o] = this._parsers[n](s) : t[o] = null;
      }
      return t;
    }
    addRow(e) {
      this.rows.push(e);
    }
    addFields(e) {
      this.fields = e, this.fields.length && (this._parsers = new Array(e.length));
      for (var t = 0;t < e.length; t++) {
        var n = e[t];
        this._types ? this._parsers[t] = this._types.getTypeParser(n.dataTypeID, n.format || "text") : this._parsers[t] = pc.getTypeParser(n.dataTypeID, n.format || "text");
      }
    }
  };
  a(Lr, "Result");
  var Rr = Lr;
  ks.exports = Rr;
});
var qs = T((Bh, Os) => {
  p();
  var { EventEmitter: dc } = ge(), Us = Ms(), Ds = rt(), kr = class kr2 extends dc {
    constructor(e, t, n) {
      super(), e = Ds.normalizeQueryConfig(e, t, n), this.text = e.text, this.values = e.values, this.rows = e.rows, this.types = e.types, this.name = e.name, this.binary = e.binary, this.portal = e.portal || "", this.callback = e.callback, this._rowMode = e.rowMode, m.domain && e.callback && (this.callback = m.domain.bind(e.callback)), this._result = new Us(this._rowMode, this.types), this._results = this._result, this.isPreparedStatement = false, this._canceledDueToError = false, this._promise = null;
    }
    requiresPreparation() {
      return this.name || this.rows ? true : !this.text || !this.values ? false : this.values.length > 0;
    }
    _checkForMultirow() {
      this._result.command && (Array.isArray(this._results) || (this._results = [this._result]), this._result = new Us(this._rowMode, this.types), this._results.push(this._result));
    }
    handleRowDescription(e) {
      this._checkForMultirow(), this._result.addFields(e.fields), this._accumulateRows = this.callback || !this.listeners("row").length;
    }
    handleDataRow(e) {
      let t;
      if (!this._canceledDueToError) {
        try {
          t = this._result.parseRow(e.fields);
        } catch (n) {
          this._canceledDueToError = n;
          return;
        }
        this.emit("row", t, this._result), this._accumulateRows && this._result.addRow(t);
      }
    }
    handleCommandComplete(e, t) {
      this._checkForMultirow(), this._result.addCommandComplete(e), this.rows && t.sync();
    }
    handleEmptyQuery(e) {
      this.rows && e.sync();
    }
    handleError(e, t) {
      if (this._canceledDueToError && (e = this._canceledDueToError, this._canceledDueToError = false), this.callback)
        return this.callback(e);
      this.emit("error", e);
    }
    handleReadyForQuery(e) {
      if (this._canceledDueToError)
        return this.handleError(this._canceledDueToError, e);
      if (this.callback)
        try {
          this.callback(null, this._results);
        } catch (t) {
          m.nextTick(() => {
            throw t;
          });
        }
      this.emit("end", this._results);
    }
    submit(e) {
      if (typeof this.text != "string" && typeof this.name != "string")
        return new Error("A query must have either text or a name. Supplying neither is unsupported.");
      let t = e.parsedStatements[this.name];
      return this.text && t && this.text !== t ? new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`) : this.values && !Array.isArray(this.values) ? new Error("Query values must be an array") : (this.requiresPreparation() ? this.prepare(e) : e.query(this.text), null);
    }
    hasBeenParsed(e) {
      return this.name && e.parsedStatements[this.name];
    }
    handlePortalSuspended(e) {
      this._getRows(e, this.rows);
    }
    _getRows(e, t) {
      e.execute({ portal: this.portal, rows: t }), t ? e.flush() : e.sync();
    }
    prepare(e) {
      this.isPreparedStatement = true, this.hasBeenParsed(e) || e.parse({ text: this.text, name: this.name, types: this.types });
      try {
        e.bind({ portal: this.portal, statement: this.name, values: this.values, binary: this.binary, valueMapper: Ds.prepareValue });
      } catch (t) {
        this.handleError(t, e);
        return;
      }
      e.describe({ type: "P", name: this.portal || "" }), this._getRows(e, this.rows);
    }
    handleCopyInResponse(e) {
      e.sendCopyFail("No source stream defined");
    }
    handleCopyData(e, t) {}
  };
  a(kr, "Query");
  var Fr = kr;
  Os.exports = Fr;
});
var ln = T((_) => {
  p();
  Object.defineProperty(_, "__esModule", { value: true });
  _.NoticeMessage = _.DataRowMessage = _.CommandCompleteMessage = _.ReadyForQueryMessage = _.NotificationResponseMessage = _.BackendKeyDataMessage = _.AuthenticationMD5Password = _.ParameterStatusMessage = _.ParameterDescriptionMessage = _.RowDescriptionMessage = _.Field = _.CopyResponse = _.CopyDataMessage = _.DatabaseError = _.copyDone = _.emptyQuery = _.replicationStart = _.portalSuspended = _.noData = _.closeComplete = _.bindComplete = _.parseComplete = undefined;
  _.parseComplete = { name: "parseComplete", length: 5 };
  _.bindComplete = { name: "bindComplete", length: 5 };
  _.closeComplete = { name: "closeComplete", length: 5 };
  _.noData = { name: "noData", length: 5 };
  _.portalSuspended = { name: "portalSuspended", length: 5 };
  _.replicationStart = { name: "replicationStart", length: 4 };
  _.emptyQuery = { name: "emptyQuery", length: 4 };
  _.copyDone = { name: "copyDone", length: 4 };
  var Kr = class Kr2 extends Error {
    constructor(e, t, n) {
      super(e), this.length = t, this.name = n;
    }
  };
  a(Kr, "DatabaseError");
  var Mr = Kr;
  _.DatabaseError = Mr;
  var Yr = class Yr2 {
    constructor(e, t) {
      this.length = e, this.chunk = t, this.name = "copyData";
    }
  };
  a(Yr, "CopyDataMessage");
  var Ur = Yr;
  _.CopyDataMessage = Ur;
  var Zr = class Zr2 {
    constructor(e, t, n, i) {
      this.length = e, this.name = t, this.binary = n, this.columnTypes = new Array(i);
    }
  };
  a(Zr, "CopyResponse");
  var Dr = Zr;
  _.CopyResponse = Dr;
  var Jr = class Jr2 {
    constructor(e, t, n, i, s, o, u) {
      this.name = e, this.tableID = t, this.columnID = n, this.dataTypeID = i, this.dataTypeSize = s, this.dataTypeModifier = o, this.format = u;
    }
  };
  a(Jr, "Field");
  var Or = Jr;
  _.Field = Or;
  var Xr = class Xr2 {
    constructor(e, t) {
      this.length = e, this.fieldCount = t, this.name = "rowDescription", this.fields = new Array(this.fieldCount);
    }
  };
  a(Xr, "RowDescriptionMessage");
  var qr = Xr;
  _.RowDescriptionMessage = qr;
  var en = class en2 {
    constructor(e, t) {
      this.length = e, this.parameterCount = t, this.name = "parameterDescription", this.dataTypeIDs = new Array(this.parameterCount);
    }
  };
  a(en, "ParameterDescriptionMessage");
  var Qr = en;
  _.ParameterDescriptionMessage = Qr;
  var tn = class tn2 {
    constructor(e, t, n) {
      this.length = e, this.parameterName = t, this.parameterValue = n, this.name = "parameterStatus";
    }
  };
  a(tn, "ParameterStatusMessage");
  var Nr = tn;
  _.ParameterStatusMessage = Nr;
  var rn = class rn2 {
    constructor(e, t) {
      this.length = e, this.salt = t, this.name = "authenticationMD5Password";
    }
  };
  a(rn, "AuthenticationMD5Password");
  var Wr = rn;
  _.AuthenticationMD5Password = Wr;
  var nn = class nn2 {
    constructor(e, t, n) {
      this.length = e, this.processID = t, this.secretKey = n, this.name = "backendKeyData";
    }
  };
  a(nn, "BackendKeyDataMessage");
  var jr = nn;
  _.BackendKeyDataMessage = jr;
  var sn = class sn2 {
    constructor(e, t, n, i) {
      this.length = e, this.processId = t, this.channel = n, this.payload = i, this.name = "notification";
    }
  };
  a(sn, "NotificationResponseMessage");
  var Hr = sn;
  _.NotificationResponseMessage = Hr;
  var on = class on2 {
    constructor(e, t) {
      this.length = e, this.status = t, this.name = "readyForQuery";
    }
  };
  a(on, "ReadyForQueryMessage");
  var $r = on;
  _.ReadyForQueryMessage = $r;
  var an = class an2 {
    constructor(e, t) {
      this.length = e, this.text = t, this.name = "commandComplete";
    }
  };
  a(an, "CommandCompleteMessage");
  var Gr = an;
  _.CommandCompleteMessage = Gr;
  var un = class un2 {
    constructor(e, t) {
      this.length = e, this.fields = t, this.name = "dataRow", this.fieldCount = t.length;
    }
  };
  a(un, "DataRowMessage");
  var Vr = un;
  _.DataRowMessage = Vr;
  var cn = class cn2 {
    constructor(e, t) {
      this.length = e, this.message = t, this.name = "notice";
    }
  };
  a(cn, "NoticeMessage");
  var zr = cn;
  _.NoticeMessage = zr;
});
var Qs = T((Rt) => {
  p();
  Object.defineProperty(Rt, "__esModule", { value: true });
  Rt.Writer = undefined;
  var hn = class hn2 {
    constructor(e = 256) {
      this.size = e, this.offset = 5, this.headerPosition = 0, this.buffer = d.allocUnsafe(e);
    }
    ensure(e) {
      if (this.buffer.length - this.offset < e) {
        let n = this.buffer, i = n.length + (n.length >> 1) + e;
        this.buffer = d.allocUnsafe(i), n.copy(this.buffer);
      }
    }
    addInt32(e) {
      return this.ensure(4), this.buffer[this.offset++] = e >>> 24 & 255, this.buffer[this.offset++] = e >>> 16 & 255, this.buffer[this.offset++] = e >>> 8 & 255, this.buffer[this.offset++] = e >>> 0 & 255, this;
    }
    addInt16(e) {
      return this.ensure(2), this.buffer[this.offset++] = e >>> 8 & 255, this.buffer[this.offset++] = e >>> 0 & 255, this;
    }
    addCString(e) {
      if (!e)
        this.ensure(1);
      else {
        let t = d.byteLength(e);
        this.ensure(t + 1), this.buffer.write(e, this.offset, "utf-8"), this.offset += t;
      }
      return this.buffer[this.offset++] = 0, this;
    }
    addString(e = "") {
      let t = d.byteLength(e);
      return this.ensure(t), this.buffer.write(e, this.offset), this.offset += t, this;
    }
    add(e) {
      return this.ensure(e.length), e.copy(this.buffer, this.offset), this.offset += e.length, this;
    }
    join(e) {
      if (e) {
        this.buffer[this.headerPosition] = e;
        let t = this.offset - (this.headerPosition + 1);
        this.buffer.writeInt32BE(t, this.headerPosition + 1);
      }
      return this.buffer.slice(e ? 0 : 5, this.offset);
    }
    flush(e) {
      let t = this.join(e);
      return this.offset = 5, this.headerPosition = 0, this.buffer = d.allocUnsafe(this.size), t;
    }
  };
  a(hn, "Writer");
  var fn = hn;
  Rt.Writer = fn;
});
var Ws = T((Ft) => {
  p();
  Object.defineProperty(Ft, "__esModule", { value: true });
  Ft.serialize = undefined;
  var pn = Qs(), F = new pn.Writer, yc = a((r) => {
    F.addInt16(3).addInt16(0);
    for (let n of Object.keys(r))
      F.addCString(n).addCString(r[n]);
    F.addCString("client_encoding").addCString("UTF8");
    let e = F.addCString("").flush(), t = e.length + 4;
    return new pn.Writer().addInt32(t).add(e).flush();
  }, "startup"), mc = a(() => {
    let r = d.allocUnsafe(8);
    return r.writeInt32BE(8, 0), r.writeInt32BE(80877103, 4), r;
  }, "requestSsl"), wc = a((r) => F.addCString(r).flush(112), "password"), gc = a(function(r, e) {
    return F.addCString(r).addInt32(d.byteLength(e)).addString(e), F.flush(112);
  }, "sendSASLInitialResponseMessage"), bc = a(function(r) {
    return F.addString(r).flush(112);
  }, "sendSCRAMClientFinalMessage"), vc = a((r) => F.addCString(r).flush(81), "query"), Ns = [], xc = a((r) => {
    let e = r.name || "";
    e.length > 63 && (console.error("Warning! Postgres only supports 63 characters for query names."), console.error("You supplied %s (%s)", e, e.length), console.error("This can cause conflicts and silent errors executing queries"));
    let t = r.types || Ns, n = t.length, i = F.addCString(e).addCString(r.text).addInt16(n);
    for (let s = 0;s < n; s++)
      i.addInt32(t[s]);
    return F.flush(80);
  }, "parse"), qe = new pn.Writer, Sc = a(function(r, e) {
    for (let t = 0;t < r.length; t++) {
      let n = e ? e(r[t], t) : r[t];
      n == null ? (F.addInt16(0), qe.addInt32(-1)) : n instanceof d ? (F.addInt16(1), qe.addInt32(n.length), qe.add(n)) : (F.addInt16(0), qe.addInt32(d.byteLength(n)), qe.addString(n));
    }
  }, "writeValues"), Ec = a((r = {}) => {
    let e = r.portal || "", t = r.statement || "", n = r.binary || false, i = r.values || Ns, s = i.length;
    return F.addCString(e).addCString(t), F.addInt16(s), Sc(i, r.valueMapper), F.addInt16(s), F.add(qe.flush()), F.addInt16(n ? 1 : 0), F.flush(66);
  }, "bind"), Ac = d.from([69, 0, 0, 0, 9, 0, 0, 0, 0, 0]), Cc = a((r) => {
    if (!r || !r.portal && !r.rows)
      return Ac;
    let e = r.portal || "", t = r.rows || 0, n = d.byteLength(e), i = 4 + n + 1 + 4, s = d.allocUnsafe(1 + i);
    return s[0] = 69, s.writeInt32BE(i, 1), s.write(e, 5, "utf-8"), s[n + 5] = 0, s.writeUInt32BE(t, s.length - 4), s;
  }, "execute"), _c = a((r, e) => {
    let t = d.allocUnsafe(16);
    return t.writeInt32BE(16, 0), t.writeInt16BE(1234, 4), t.writeInt16BE(5678, 6), t.writeInt32BE(r, 8), t.writeInt32BE(e, 12), t;
  }, "cancel"), dn = a((r, e) => {
    let n = 4 + d.byteLength(e) + 1, i = d.allocUnsafe(1 + n);
    return i[0] = r, i.writeInt32BE(n, 1), i.write(e, 5, "utf-8"), i[n] = 0, i;
  }, "cstringMessage"), Ic = F.addCString("P").flush(68), Tc = F.addCString("S").flush(68), Pc = a((r) => r.name ? dn(68, `${r.type}${r.name || ""}`) : r.type === "P" ? Ic : Tc, "describe"), Bc = a((r) => {
    let e = `${r.type}${r.name || ""}`;
    return dn(67, e);
  }, "close"), Rc = a((r) => F.add(r).flush(100), "copyData"), Lc = a((r) => dn(102, r), "copyFail"), Lt = a((r) => d.from([r, 0, 0, 0, 4]), "codeOnlyBuffer"), Fc = Lt(72), kc = Lt(83), Mc = Lt(88), Uc = Lt(99), Dc = {
    startup: yc,
    password: wc,
    requestSsl: mc,
    sendSASLInitialResponseMessage: gc,
    sendSCRAMClientFinalMessage: bc,
    query: vc,
    parse: xc,
    bind: Ec,
    execute: Cc,
    describe: Pc,
    close: Bc,
    flush: a(() => Fc, "flush"),
    sync: a(() => kc, "sync"),
    end: a(() => Mc, "end"),
    copyData: Rc,
    copyDone: a(() => Uc, "copyDone"),
    copyFail: Lc,
    cancel: _c
  };
  Ft.serialize = Dc;
});
var js = T((kt) => {
  p();
  Object.defineProperty(kt, "__esModule", { value: true });
  kt.BufferReader = undefined;
  var Oc = d.allocUnsafe(0), mn = class mn2 {
    constructor(e = 0) {
      this.offset = e, this.buffer = Oc, this.encoding = "utf-8";
    }
    setBuffer(e, t) {
      this.offset = e, this.buffer = t;
    }
    int16() {
      let e = this.buffer.readInt16BE(this.offset);
      return this.offset += 2, e;
    }
    byte() {
      let e = this.buffer[this.offset];
      return this.offset++, e;
    }
    int32() {
      let e = this.buffer.readInt32BE(this.offset);
      return this.offset += 4, e;
    }
    uint32() {
      let e = this.buffer.readUInt32BE(this.offset);
      return this.offset += 4, e;
    }
    string(e) {
      let t = this.buffer.toString(this.encoding, this.offset, this.offset + e);
      return this.offset += e, t;
    }
    cstring() {
      let e = this.offset, t = e;
      for (;this.buffer[t++] !== 0; )
        ;
      return this.offset = t, this.buffer.toString(this.encoding, e, t - 1);
    }
    bytes(e) {
      let t = this.buffer.slice(this.offset, this.offset + e);
      return this.offset += e, t;
    }
  };
  a(mn, "BufferReader");
  var yn = mn;
  kt.BufferReader = yn;
});
var Gs = T((Mt) => {
  p();
  Object.defineProperty(Mt, "__esModule", { value: true });
  Mt.Parser = undefined;
  var k = ln(), qc = js(), wn = 1, Qc = 4, Hs = wn + Qc, $s = d.allocUnsafe(0), bn = class bn2 {
    constructor(e) {
      if (this.buffer = $s, this.bufferLength = 0, this.bufferOffset = 0, this.reader = new qc.BufferReader, e?.mode === "binary")
        throw new Error("Binary mode not supported yet");
      this.mode = e?.mode || "text";
    }
    parse(e, t) {
      this.mergeBuffer(e);
      let n = this.bufferOffset + this.bufferLength, i = this.bufferOffset;
      for (;i + Hs <= n; ) {
        let s = this.buffer[i], o = this.buffer.readUInt32BE(i + wn), u = wn + o;
        if (u + i <= n) {
          let c = this.handlePacket(i + Hs, s, o, this.buffer);
          t(c), i += u;
        } else
          break;
      }
      i === n ? (this.buffer = $s, this.bufferLength = 0, this.bufferOffset = 0) : (this.bufferLength = n - i, this.bufferOffset = i);
    }
    mergeBuffer(e) {
      if (this.bufferLength > 0) {
        let t = this.bufferLength + e.byteLength;
        if (t + this.bufferOffset > this.buffer.byteLength) {
          let i;
          if (t <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength)
            i = this.buffer;
          else {
            let s = this.buffer.byteLength * 2;
            for (;t >= s; )
              s *= 2;
            i = d.allocUnsafe(s);
          }
          this.buffer.copy(i, 0, this.bufferOffset, this.bufferOffset + this.bufferLength), this.buffer = i, this.bufferOffset = 0;
        }
        e.copy(this.buffer, this.bufferOffset + this.bufferLength), this.bufferLength = t;
      } else
        this.buffer = e, this.bufferOffset = 0, this.bufferLength = e.byteLength;
    }
    handlePacket(e, t, n, i) {
      switch (t) {
        case 50:
          return k.bindComplete;
        case 49:
          return k.parseComplete;
        case 51:
          return k.closeComplete;
        case 110:
          return k.noData;
        case 115:
          return k.portalSuspended;
        case 99:
          return k.copyDone;
        case 87:
          return k.replicationStart;
        case 73:
          return k.emptyQuery;
        case 68:
          return this.parseDataRowMessage(e, n, i);
        case 67:
          return this.parseCommandCompleteMessage(e, n, i);
        case 90:
          return this.parseReadyForQueryMessage(e, n, i);
        case 65:
          return this.parseNotificationMessage(e, n, i);
        case 82:
          return this.parseAuthenticationResponse(e, n, i);
        case 83:
          return this.parseParameterStatusMessage(e, n, i);
        case 75:
          return this.parseBackendKeyData(e, n, i);
        case 69:
          return this.parseErrorMessage(e, n, i, "error");
        case 78:
          return this.parseErrorMessage(e, n, i, "notice");
        case 84:
          return this.parseRowDescriptionMessage(e, n, i);
        case 116:
          return this.parseParameterDescriptionMessage(e, n, i);
        case 71:
          return this.parseCopyInMessage(e, n, i);
        case 72:
          return this.parseCopyOutMessage(e, n, i);
        case 100:
          return this.parseCopyData(e, n, i);
        default:
          return new k.DatabaseError("received invalid response: " + t.toString(16), n, "error");
      }
    }
    parseReadyForQueryMessage(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.string(1);
      return new k.ReadyForQueryMessage(t, i);
    }
    parseCommandCompleteMessage(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.cstring();
      return new k.CommandCompleteMessage(t, i);
    }
    parseCopyData(e, t, n) {
      let i = n.slice(e, e + (t - 4));
      return new k.CopyDataMessage(t, i);
    }
    parseCopyInMessage(e, t, n) {
      return this.parseCopyMessage(e, t, n, "copyInResponse");
    }
    parseCopyOutMessage(e, t, n) {
      return this.parseCopyMessage(e, t, n, "copyOutResponse");
    }
    parseCopyMessage(e, t, n, i) {
      this.reader.setBuffer(e, n);
      let s = this.reader.byte() !== 0, o = this.reader.int16(), u = new k.CopyResponse(t, i, s, o);
      for (let c = 0;c < o; c++)
        u.columnTypes[c] = this.reader.int16();
      return u;
    }
    parseNotificationMessage(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.int32(), s = this.reader.cstring(), o = this.reader.cstring();
      return new k.NotificationResponseMessage(t, i, s, o);
    }
    parseRowDescriptionMessage(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.int16(), s = new k.RowDescriptionMessage(t, i);
      for (let o = 0;o < i; o++)
        s.fields[o] = this.parseField();
      return s;
    }
    parseField() {
      let e = this.reader.cstring(), t = this.reader.uint32(), n = this.reader.int16(), i = this.reader.uint32(), s = this.reader.int16(), o = this.reader.int32(), u = this.reader.int16() === 0 ? "text" : "binary";
      return new k.Field(e, t, n, i, s, o, u);
    }
    parseParameterDescriptionMessage(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.int16(), s = new k.ParameterDescriptionMessage(t, i);
      for (let o = 0;o < i; o++)
        s.dataTypeIDs[o] = this.reader.int32();
      return s;
    }
    parseDataRowMessage(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.int16(), s = new Array(i);
      for (let o = 0;o < i; o++) {
        let u = this.reader.int32();
        s[o] = u === -1 ? null : this.reader.string(u);
      }
      return new k.DataRowMessage(t, s);
    }
    parseParameterStatusMessage(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.cstring(), s = this.reader.cstring();
      return new k.ParameterStatusMessage(t, i, s);
    }
    parseBackendKeyData(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.int32(), s = this.reader.int32();
      return new k.BackendKeyDataMessage(t, i, s);
    }
    parseAuthenticationResponse(e, t, n) {
      this.reader.setBuffer(e, n);
      let i = this.reader.int32(), s = { name: "authenticationOk", length: t };
      switch (i) {
        case 0:
          break;
        case 3:
          s.length === 8 && (s.name = "authenticationCleartextPassword");
          break;
        case 5:
          if (s.length === 12) {
            s.name = "authenticationMD5Password";
            let o = this.reader.bytes(4);
            return new k.AuthenticationMD5Password(t, o);
          }
          break;
        case 10:
          {
            s.name = "authenticationSASL", s.mechanisms = [];
            let o;
            do
              o = this.reader.cstring(), o && s.mechanisms.push(o);
            while (o);
          }
          break;
        case 11:
          s.name = "authenticationSASLContinue", s.data = this.reader.string(t - 8);
          break;
        case 12:
          s.name = "authenticationSASLFinal", s.data = this.reader.string(t - 8);
          break;
        default:
          throw new Error("Unknown authenticationOk message type " + i);
      }
      return s;
    }
    parseErrorMessage(e, t, n, i) {
      this.reader.setBuffer(e, n);
      let s = {}, o = this.reader.string(1);
      for (;o !== "\x00"; )
        s[o] = this.reader.cstring(), o = this.reader.string(1);
      let u = s.M, c = i === "notice" ? new k.NoticeMessage(t, u) : new k.DatabaseError(u, t, i);
      return c.severity = s.S, c.code = s.C, c.detail = s.D, c.hint = s.H, c.position = s.P, c.internalPosition = s.p, c.internalQuery = s.q, c.where = s.W, c.schema = s.s, c.table = s.t, c.column = s.c, c.dataType = s.d, c.constraint = s.n, c.file = s.F, c.line = s.L, c.routine = s.R, c;
    }
  };
  a(bn, "Parser");
  var gn = bn;
  Mt.Parser = gn;
});
var vn = T((xe) => {
  p();
  Object.defineProperty(xe, "__esModule", { value: true });
  xe.DatabaseError = xe.serialize = xe.parse = undefined;
  var Nc = ln();
  Object.defineProperty(xe, "DatabaseError", { enumerable: true, get: a(function() {
    return Nc.DatabaseError;
  }, "get") });
  var Wc = Ws();
  Object.defineProperty(xe, "serialize", {
    enumerable: true,
    get: a(function() {
      return Wc.serialize;
    }, "get")
  });
  var jc = Gs();
  function Hc(r, e) {
    let t = new jc.Parser;
    return r.on("data", (n) => t.parse(n, e)), new Promise((n) => r.on("end", () => n()));
  }
  a(Hc, "parse");
  xe.parse = Hc;
});
var Vs = {};
ie(Vs, { connect: () => $c });
function $c({ socket: r, servername: e }) {
  return r.startTls(e), r;
}
var zs = G(() => {
  p();
  a($c, "connect");
});
var En = T((Xh, Zs) => {
  p();
  var Ks = (Fe(), O(wi)), Gc = ge().EventEmitter, { parse: Vc, serialize: Q } = vn(), Ys = Q.flush(), zc = Q.sync(), Kc = Q.end(), Sn = class Sn2 extends Gc {
    constructor(e) {
      super(), e = e || {}, this.stream = e.stream || new Ks.Socket, this._keepAlive = e.keepAlive, this._keepAliveInitialDelayMillis = e.keepAliveInitialDelayMillis, this.lastBuffer = false, this.parsedStatements = {}, this.ssl = e.ssl || false, this._ending = false, this._emitMessage = false;
      var t = this;
      this.on("newListener", function(n) {
        n === "message" && (t._emitMessage = true);
      });
    }
    connect(e, t) {
      var n = this;
      this._connecting = true, this.stream.setNoDelay(true), this.stream.connect(e, t), this.stream.once("connect", function() {
        n._keepAlive && n.stream.setKeepAlive(true, n._keepAliveInitialDelayMillis), n.emit("connect");
      });
      let i = a(function(s) {
        n._ending && (s.code === "ECONNRESET" || s.code === "EPIPE") || n.emit("error", s);
      }, "reportStreamError");
      if (this.stream.on("error", i), this.stream.on("close", function() {
        n.emit("end");
      }), !this.ssl)
        return this.attachListeners(this.stream);
      this.stream.once("data", function(s) {
        var o = s.toString("utf8");
        switch (o) {
          case "S":
            break;
          case "N":
            return n.stream.end(), n.emit("error", new Error("The server does not support SSL connections"));
          default:
            return n.stream.end(), n.emit("error", new Error("There was an error establishing an SSL connection"));
        }
        var u = (zs(), O(Vs));
        let c = { socket: n.stream };
        n.ssl !== true && (Object.assign(c, n.ssl), ("key" in n.ssl) && (c.key = n.ssl.key)), Ks.isIP(t) === 0 && (c.servername = t);
        try {
          n.stream = u.connect(c);
        } catch (l) {
          return n.emit("error", l);
        }
        n.attachListeners(n.stream), n.stream.on("error", i), n.emit("sslconnect");
      });
    }
    attachListeners(e) {
      e.on("end", () => {
        this.emit("end");
      }), Vc(e, (t) => {
        var n = t.name === "error" ? "errorMessage" : t.name;
        this._emitMessage && this.emit("message", t), this.emit(n, t);
      });
    }
    requestSsl() {
      this.stream.write(Q.requestSsl());
    }
    startup(e) {
      this.stream.write(Q.startup(e));
    }
    cancel(e, t) {
      this._send(Q.cancel(e, t));
    }
    password(e) {
      this._send(Q.password(e));
    }
    sendSASLInitialResponseMessage(e, t) {
      this._send(Q.sendSASLInitialResponseMessage(e, t));
    }
    sendSCRAMClientFinalMessage(e) {
      this._send(Q.sendSCRAMClientFinalMessage(e));
    }
    _send(e) {
      return this.stream.writable ? this.stream.write(e) : false;
    }
    query(e) {
      this._send(Q.query(e));
    }
    parse(e) {
      this._send(Q.parse(e));
    }
    bind(e) {
      this._send(Q.bind(e));
    }
    execute(e) {
      this._send(Q.execute(e));
    }
    flush() {
      this.stream.writable && this.stream.write(Ys);
    }
    sync() {
      this._ending = true, this._send(Ys), this._send(zc);
    }
    ref() {
      this.stream.ref();
    }
    unref() {
      this.stream.unref();
    }
    end() {
      if (this._ending = true, !this._connecting || !this.stream.writable) {
        this.stream.end();
        return;
      }
      return this.stream.write(Kc, () => {
        this.stream.end();
      });
    }
    close(e) {
      this._send(Q.close(e));
    }
    describe(e) {
      this._send(Q.describe(e));
    }
    sendCopyFromChunk(e) {
      this._send(Q.copyData(e));
    }
    endCopyFrom() {
      this._send(Q.copyDone());
    }
    sendCopyFail(e) {
      this._send(Q.copyFail(e));
    }
  };
  a(Sn, "Connection");
  var xn = Sn;
  Zs.exports = xn;
});
var eo = T((np, Xs) => {
  p();
  var Yc = ge().EventEmitter, rp = (it(), O(nt)), Zc = rt(), An = ds(), Jc = Cs(), Xc = At(), el = Bt(), Js = qs(), tl = tt(), rl = En(), Cn = class Cn2 extends Yc {
    constructor(e) {
      super(), this.connectionParameters = new el(e), this.user = this.connectionParameters.user, this.database = this.connectionParameters.database, this.port = this.connectionParameters.port, this.host = this.connectionParameters.host, Object.defineProperty(this, "password", { configurable: true, enumerable: false, writable: true, value: this.connectionParameters.password }), this.replication = this.connectionParameters.replication;
      var t = e || {};
      this._Promise = t.Promise || b.Promise, this._types = new Xc(t.types), this._ending = false, this._connecting = false, this._connected = false, this._connectionError = false, this._queryable = true, this.connection = t.connection || new rl({ stream: t.stream, ssl: this.connectionParameters.ssl, keepAlive: t.keepAlive || false, keepAliveInitialDelayMillis: t.keepAliveInitialDelayMillis || 0, encoding: this.connectionParameters.client_encoding || "utf8" }), this.queryQueue = [], this.binary = t.binary || tl.binary, this.processID = null, this.secretKey = null, this.ssl = this.connectionParameters.ssl || false, this.ssl && this.ssl.key && Object.defineProperty(this.ssl, "key", { enumerable: false }), this._connectionTimeoutMillis = t.connectionTimeoutMillis || 0;
    }
    _errorAllQueries(e) {
      let t = a((n) => {
        m.nextTick(() => {
          n.handleError(e, this.connection);
        });
      }, "enqueueError");
      this.activeQuery && (t(this.activeQuery), this.activeQuery = null), this.queryQueue.forEach(t), this.queryQueue.length = 0;
    }
    _connect(e) {
      var t = this, n = this.connection;
      if (this._connectionCallback = e, this._connecting || this._connected) {
        let i = new Error("Client has already been connected. You cannot reuse a client.");
        m.nextTick(() => {
          e(i);
        });
        return;
      }
      this._connecting = true, this.connectionTimeoutHandle, this._connectionTimeoutMillis > 0 && (this.connectionTimeoutHandle = setTimeout(() => {
        n._ending = true, n.stream.destroy(new Error("timeout expired"));
      }, this._connectionTimeoutMillis)), this.host && this.host.indexOf("/") === 0 ? n.connect(this.host + "/.s.PGSQL." + this.port) : n.connect(this.port, this.host), n.on("connect", function() {
        t.ssl ? n.requestSsl() : n.startup(t.getStartupConf());
      }), n.on("sslconnect", function() {
        n.startup(t.getStartupConf());
      }), this._attachListeners(n), n.once("end", () => {
        let i = this._ending ? new Error("Connection terminated") : new Error("Connection terminated unexpectedly");
        clearTimeout(this.connectionTimeoutHandle), this._errorAllQueries(i), this._ending || (this._connecting && !this._connectionError ? this._connectionCallback ? this._connectionCallback(i) : this._handleErrorEvent(i) : this._connectionError || this._handleErrorEvent(i)), m.nextTick(() => {
          this.emit("end");
        });
      });
    }
    connect(e) {
      if (e) {
        this._connect(e);
        return;
      }
      return new this._Promise((t, n) => {
        this._connect((i) => {
          i ? n(i) : t();
        });
      });
    }
    _attachListeners(e) {
      e.on("authenticationCleartextPassword", this._handleAuthCleartextPassword.bind(this)), e.on("authenticationMD5Password", this._handleAuthMD5Password.bind(this)), e.on("authenticationSASL", this._handleAuthSASL.bind(this)), e.on("authenticationSASLContinue", this._handleAuthSASLContinue.bind(this)), e.on("authenticationSASLFinal", this._handleAuthSASLFinal.bind(this)), e.on("backendKeyData", this._handleBackendKeyData.bind(this)), e.on("error", this._handleErrorEvent.bind(this)), e.on("errorMessage", this._handleErrorMessage.bind(this)), e.on("readyForQuery", this._handleReadyForQuery.bind(this)), e.on("notice", this._handleNotice.bind(this)), e.on("rowDescription", this._handleRowDescription.bind(this)), e.on("dataRow", this._handleDataRow.bind(this)), e.on("portalSuspended", this._handlePortalSuspended.bind(this)), e.on("emptyQuery", this._handleEmptyQuery.bind(this)), e.on("commandComplete", this._handleCommandComplete.bind(this)), e.on("parseComplete", this._handleParseComplete.bind(this)), e.on("copyInResponse", this._handleCopyInResponse.bind(this)), e.on("copyData", this._handleCopyData.bind(this)), e.on("notification", this._handleNotification.bind(this));
    }
    _checkPgPass(e) {
      let t = this.connection;
      typeof this.password == "function" ? this._Promise.resolve().then(() => this.password()).then((n) => {
        if (n !== undefined) {
          if (typeof n != "string") {
            t.emit("error", new TypeError("Password must be a string"));
            return;
          }
          this.connectionParameters.password = this.password = n;
        } else
          this.connectionParameters.password = this.password = null;
        e();
      }).catch((n) => {
        t.emit("error", n);
      }) : this.password !== null ? e() : Jc(this.connectionParameters, (n) => {
        n !== undefined && (this.connectionParameters.password = this.password = n), e();
      });
    }
    _handleAuthCleartextPassword(e) {
      this._checkPgPass(() => {
        this.connection.password(this.password);
      });
    }
    _handleAuthMD5Password(e) {
      this._checkPgPass(() => {
        let t = Zc.postgresMd5PasswordHash(this.user, this.password, e.salt);
        this.connection.password(t);
      });
    }
    _handleAuthSASL(e) {
      this._checkPgPass(() => {
        this.saslSession = An.startSession(e.mechanisms), this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response);
      });
    }
    _handleAuthSASLContinue(e) {
      An.continueSession(this.saslSession, this.password, e.data), this.connection.sendSCRAMClientFinalMessage(this.saslSession.response);
    }
    _handleAuthSASLFinal(e) {
      An.finalizeSession(this.saslSession, e.data), this.saslSession = null;
    }
    _handleBackendKeyData(e) {
      this.processID = e.processID, this.secretKey = e.secretKey;
    }
    _handleReadyForQuery(e) {
      this._connecting && (this._connecting = false, this._connected = true, clearTimeout(this.connectionTimeoutHandle), this._connectionCallback && (this._connectionCallback(null, this), this._connectionCallback = null), this.emit("connect"));
      let { activeQuery: t } = this;
      this.activeQuery = null, this.readyForQuery = true, t && t.handleReadyForQuery(this.connection), this._pulseQueryQueue();
    }
    _handleErrorWhileConnecting(e) {
      if (!this._connectionError) {
        if (this._connectionError = true, clearTimeout(this.connectionTimeoutHandle), this._connectionCallback)
          return this._connectionCallback(e);
        this.emit("error", e);
      }
    }
    _handleErrorEvent(e) {
      if (this._connecting)
        return this._handleErrorWhileConnecting(e);
      this._queryable = false, this._errorAllQueries(e), this.emit("error", e);
    }
    _handleErrorMessage(e) {
      if (this._connecting)
        return this._handleErrorWhileConnecting(e);
      let t = this.activeQuery;
      if (!t) {
        this._handleErrorEvent(e);
        return;
      }
      this.activeQuery = null, t.handleError(e, this.connection);
    }
    _handleRowDescription(e) {
      this.activeQuery.handleRowDescription(e);
    }
    _handleDataRow(e) {
      this.activeQuery.handleDataRow(e);
    }
    _handlePortalSuspended(e) {
      this.activeQuery.handlePortalSuspended(this.connection);
    }
    _handleEmptyQuery(e) {
      this.activeQuery.handleEmptyQuery(this.connection);
    }
    _handleCommandComplete(e) {
      this.activeQuery.handleCommandComplete(e, this.connection);
    }
    _handleParseComplete(e) {
      this.activeQuery.name && (this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text);
    }
    _handleCopyInResponse(e) {
      this.activeQuery.handleCopyInResponse(this.connection);
    }
    _handleCopyData(e) {
      this.activeQuery.handleCopyData(e, this.connection);
    }
    _handleNotification(e) {
      this.emit("notification", e);
    }
    _handleNotice(e) {
      this.emit("notice", e);
    }
    getStartupConf() {
      var e = this.connectionParameters, t = { user: e.user, database: e.database }, n = e.application_name || e.fallback_application_name;
      return n && (t.application_name = n), e.replication && (t.replication = "" + e.replication), e.statement_timeout && (t.statement_timeout = String(parseInt(e.statement_timeout, 10))), e.lock_timeout && (t.lock_timeout = String(parseInt(e.lock_timeout, 10))), e.idle_in_transaction_session_timeout && (t.idle_in_transaction_session_timeout = String(parseInt(e.idle_in_transaction_session_timeout, 10))), e.options && (t.options = e.options), t;
    }
    cancel(e, t) {
      if (e.activeQuery === t) {
        var n = this.connection;
        this.host && this.host.indexOf("/") === 0 ? n.connect(this.host + "/.s.PGSQL." + this.port) : n.connect(this.port, this.host), n.on("connect", function() {
          n.cancel(e.processID, e.secretKey);
        });
      } else
        e.queryQueue.indexOf(t) !== -1 && e.queryQueue.splice(e.queryQueue.indexOf(t), 1);
    }
    setTypeParser(e, t, n) {
      return this._types.setTypeParser(e, t, n);
    }
    getTypeParser(e, t) {
      return this._types.getTypeParser(e, t);
    }
    escapeIdentifier(e) {
      return '"' + e.replace(/"/g, '""') + '"';
    }
    escapeLiteral(e) {
      for (var t = false, n = "'", i = 0;i < e.length; i++) {
        var s = e[i];
        s === "'" ? n += s + s : s === "\\" ? (n += s + s, t = true) : n += s;
      }
      return n += "'", t === true && (n = " E" + n), n;
    }
    _pulseQueryQueue() {
      if (this.readyForQuery === true)
        if (this.activeQuery = this.queryQueue.shift(), this.activeQuery) {
          this.readyForQuery = false, this.hasExecuted = true;
          let e = this.activeQuery.submit(this.connection);
          e && m.nextTick(() => {
            this.activeQuery.handleError(e, this.connection), this.readyForQuery = true, this._pulseQueryQueue();
          });
        } else
          this.hasExecuted && (this.activeQuery = null, this.emit("drain"));
    }
    query(e, t, n) {
      var i, s, o, u, c;
      if (e == null)
        throw new TypeError("Client was passed a null or undefined query");
      return typeof e.submit == "function" ? (o = e.query_timeout || this.connectionParameters.query_timeout, s = i = e, typeof t == "function" && (i.callback = i.callback || t)) : (o = this.connectionParameters.query_timeout, i = new Js(e, t, n), i.callback || (s = new this._Promise((l, f) => {
        i.callback = (y, g) => y ? f(y) : l(g);
      }))), o && (c = i.callback, u = setTimeout(() => {
        var l = new Error("Query read timeout");
        m.nextTick(() => {
          i.handleError(l, this.connection);
        }), c(l), i.callback = () => {};
        var f = this.queryQueue.indexOf(i);
        f > -1 && this.queryQueue.splice(f, 1), this._pulseQueryQueue();
      }, o), i.callback = (l, f) => {
        clearTimeout(u), c(l, f);
      }), this.binary && !i.binary && (i.binary = true), i._result && !i._result._types && (i._result._types = this._types), this._queryable ? this._ending ? (m.nextTick(() => {
        i.handleError(new Error("Client was closed and is not queryable"), this.connection);
      }), s) : (this.queryQueue.push(i), this._pulseQueryQueue(), s) : (m.nextTick(() => {
        i.handleError(new Error("Client has encountered a connection error and is not queryable"), this.connection);
      }), s);
    }
    ref() {
      this.connection.ref();
    }
    unref() {
      this.connection.unref();
    }
    end(e) {
      if (this._ending = true, !this.connection._connecting)
        if (e)
          e();
        else
          return this._Promise.resolve();
      if (this.activeQuery || !this._queryable ? this.connection.stream.destroy() : this.connection.end(), e)
        this.connection.once("end", e);
      else
        return new this._Promise((t) => {
          this.connection.once("end", t);
        });
    }
  };
  a(Cn, "Client");
  var Ut = Cn;
  Ut.Query = Js;
  Xs.exports = Ut;
});
var io = T((op, no) => {
  p();
  var nl = ge().EventEmitter, to = a(function() {}, "NOOP"), ro = a((r, e) => {
    let t = r.findIndex(e);
    return t === -1 ? undefined : r.splice(t, 1)[0];
  }, "removeWhere"), Tn = class Tn2 {
    constructor(e, t, n) {
      this.client = e, this.idleListener = t, this.timeoutId = n;
    }
  };
  a(Tn, "IdleItem");
  var _n = Tn, Pn = class Pn2 {
    constructor(e) {
      this.callback = e;
    }
  };
  a(Pn, "PendingItem");
  var Qe = Pn;
  function il() {
    throw new Error("Release called on client which has already been released to the pool.");
  }
  a(il, "throwOnDoubleRelease");
  function Dt(r, e) {
    if (e)
      return { callback: e, result: undefined };
    let t, n, i = a(function(o, u) {
      o ? t(o) : n(u);
    }, "cb"), s = new r(function(o, u) {
      n = o, t = u;
    }).catch((o) => {
      throw Error.captureStackTrace(o), o;
    });
    return { callback: i, result: s };
  }
  a(Dt, "promisify");
  function sl(r, e) {
    return a(function t(n) {
      n.client = e, e.removeListener("error", t), e.on("error", () => {
        r.log("additional client error after disconnection due to error", n);
      }), r._remove(e), r.emit("error", n, e);
    }, "idleListener");
  }
  a(sl, "makeIdleListener");
  var Bn = class Bn2 extends nl {
    constructor(e, t) {
      super(), this.options = Object.assign({}, e), e != null && "password" in e && Object.defineProperty(this.options, "password", {
        configurable: true,
        enumerable: false,
        writable: true,
        value: e.password
      }), e != null && e.ssl && e.ssl.key && Object.defineProperty(this.options.ssl, "key", { enumerable: false }), this.options.max = this.options.max || this.options.poolSize || 10, this.options.min = this.options.min || 0, this.options.maxUses = this.options.maxUses || 1 / 0, this.options.allowExitOnIdle = this.options.allowExitOnIdle || false, this.options.maxLifetimeSeconds = this.options.maxLifetimeSeconds || 0, this.log = this.options.log || function() {}, this.Client = this.options.Client || t || ot().Client, this.Promise = this.options.Promise || b.Promise, typeof this.options.idleTimeoutMillis > "u" && (this.options.idleTimeoutMillis = 1e4), this._clients = [], this._idle = [], this._expired = new WeakSet, this._pendingQueue = [], this._endCallback = undefined, this.ending = false, this.ended = false;
    }
    _isFull() {
      return this._clients.length >= this.options.max;
    }
    _isAboveMin() {
      return this._clients.length > this.options.min;
    }
    _pulseQueue() {
      if (this.log("pulse queue"), this.ended) {
        this.log("pulse queue ended");
        return;
      }
      if (this.ending) {
        this.log("pulse queue on ending"), this._idle.length && this._idle.slice().map((t) => {
          this._remove(t.client);
        }), this._clients.length || (this.ended = true, this._endCallback());
        return;
      }
      if (!this._pendingQueue.length) {
        this.log("no queued requests");
        return;
      }
      if (!this._idle.length && this._isFull())
        return;
      let e = this._pendingQueue.shift();
      if (this._idle.length) {
        let t = this._idle.pop();
        clearTimeout(t.timeoutId);
        let n = t.client;
        n.ref && n.ref();
        let i = t.idleListener;
        return this._acquireClient(n, e, i, false);
      }
      if (!this._isFull())
        return this.newClient(e);
      throw new Error("unexpected condition");
    }
    _remove(e) {
      let t = ro(this._idle, (n) => n.client === e);
      t !== undefined && clearTimeout(t.timeoutId), this._clients = this._clients.filter((n) => n !== e), e.end(), this.emit("remove", e);
    }
    connect(e) {
      if (this.ending) {
        let i = new Error("Cannot use a pool after calling end on the pool");
        return e ? e(i) : this.Promise.reject(i);
      }
      let t = Dt(this.Promise, e), n = t.result;
      if (this._isFull() || this._idle.length) {
        if (this._idle.length && m.nextTick(() => this._pulseQueue()), !this.options.connectionTimeoutMillis)
          return this._pendingQueue.push(new Qe(t.callback)), n;
        let i = a((u, c, l) => {
          clearTimeout(o), t.callback(u, c, l);
        }, "queueCallback"), s = new Qe(i), o = setTimeout(() => {
          ro(this._pendingQueue, (u) => u.callback === i), s.timedOut = true, t.callback(new Error("timeout exceeded when trying to connect"));
        }, this.options.connectionTimeoutMillis);
        return o.unref && o.unref(), this._pendingQueue.push(s), n;
      }
      return this.newClient(new Qe(t.callback)), n;
    }
    newClient(e) {
      let t = new this.Client(this.options);
      this._clients.push(t);
      let n = sl(this, t);
      this.log("checking client timeout");
      let i, s = false;
      this.options.connectionTimeoutMillis && (i = setTimeout(() => {
        this.log("ending client due to timeout"), s = true, t.connection ? t.connection.stream.destroy() : t.end();
      }, this.options.connectionTimeoutMillis)), this.log("connecting new client"), t.connect((o) => {
        if (i && clearTimeout(i), t.on("error", n), o)
          this.log("client failed to connect", o), this._clients = this._clients.filter((u) => u !== t), s && (o = new Error("Connection terminated due to connection timeout", { cause: o })), this._pulseQueue(), e.timedOut || e.callback(o, undefined, to);
        else {
          if (this.log("new client connected"), this.options.maxLifetimeSeconds !== 0) {
            let u = setTimeout(() => {
              this.log("ending client due to expired lifetime"), this._expired.add(t), this._idle.findIndex((l) => l.client === t) !== -1 && this._acquireClient(t, new Qe((l, f, y) => y()), n, false);
            }, this.options.maxLifetimeSeconds * 1000);
            u.unref(), t.once("end", () => clearTimeout(u));
          }
          return this._acquireClient(t, e, n, true);
        }
      });
    }
    _acquireClient(e, t, n, i) {
      i && this.emit("connect", e), this.emit("acquire", e), e.release = this._releaseOnce(e, n), e.removeListener("error", n), t.timedOut ? i && this.options.verify ? this.options.verify(e, e.release) : e.release() : i && this.options.verify ? this.options.verify(e, (s) => {
        if (s)
          return e.release(s), t.callback(s, undefined, to);
        t.callback(undefined, e, e.release);
      }) : t.callback(undefined, e, e.release);
    }
    _releaseOnce(e, t) {
      let n = false;
      return (i) => {
        n && il(), n = true, this._release(e, t, i);
      };
    }
    _release(e, t, n) {
      if (e.on("error", t), e._poolUseCount = (e._poolUseCount || 0) + 1, this.emit("release", n, e), n || this.ending || !e._queryable || e._ending || e._poolUseCount >= this.options.maxUses) {
        e._poolUseCount >= this.options.maxUses && this.log("remove expended client"), this._remove(e), this._pulseQueue();
        return;
      }
      if (this._expired.has(e)) {
        this.log("remove expired client"), this._expired.delete(e), this._remove(e), this._pulseQueue();
        return;
      }
      let s;
      this.options.idleTimeoutMillis && this._isAboveMin() && (s = setTimeout(() => {
        this.log("remove idle client"), this._remove(e);
      }, this.options.idleTimeoutMillis), this.options.allowExitOnIdle && s.unref()), this.options.allowExitOnIdle && e.unref(), this._idle.push(new _n(e, t, s)), this._pulseQueue();
    }
    query(e, t, n) {
      if (typeof e == "function") {
        let s = Dt(this.Promise, e);
        return v(function() {
          return s.callback(new Error("Passing a function as the first parameter to pool.query is not supported"));
        }), s.result;
      }
      typeof t == "function" && (n = t, t = undefined);
      let i = Dt(this.Promise, n);
      return n = i.callback, this.connect((s, o) => {
        if (s)
          return n(s);
        let u = false, c = a((l) => {
          u || (u = true, o.release(l), n(l));
        }, "onError");
        o.once("error", c), this.log("dispatching query");
        try {
          o.query(e, t, (l, f) => {
            if (this.log("query dispatched"), o.removeListener("error", c), !u)
              return u = true, o.release(l), l ? n(l) : n(undefined, f);
          });
        } catch (l) {
          return o.release(l), n(l);
        }
      }), i.result;
    }
    end(e) {
      if (this.log("ending"), this.ending) {
        let n = new Error("Called end on pool more than once");
        return e ? e(n) : this.Promise.reject(n);
      }
      this.ending = true;
      let t = Dt(this.Promise, e);
      return this._endCallback = t.callback, this._pulseQueue(), t.result;
    }
    get waitingCount() {
      return this._pendingQueue.length;
    }
    get idleCount() {
      return this._idle.length;
    }
    get expiredCount() {
      return this._clients.reduce((e, t) => e + (this._expired.has(t) ? 1 : 0), 0);
    }
    get totalCount() {
      return this._clients.length;
    }
  };
  a(Bn, "Pool");
  var In = Bn;
  no.exports = In;
});
var so = {};
ie(so, { default: () => ol });
var ol;
var oo = G(() => {
  p();
  ol = {};
});
var ao = T((lp, al) => {
  al.exports = { name: "pg", version: "8.8.0", description: "PostgreSQL client - pure javascript & libpq with the same API", keywords: [
    "database",
    "libpq",
    "pg",
    "postgre",
    "postgres",
    "postgresql",
    "rdbms"
  ], homepage: "https://github.com/brianc/node-postgres", repository: { type: "git", url: "git://github.com/brianc/node-postgres.git", directory: "packages/pg" }, author: "Brian Carlson <brian.m.carlson@gmail.com>", main: "./lib", dependencies: { "buffer-writer": "2.0.0", "packet-reader": "1.0.0", "pg-connection-string": "^2.5.0", "pg-pool": "^3.5.2", "pg-protocol": "^1.5.0", "pg-types": "^2.1.0", pgpass: "1.x" }, devDependencies: {
    async: "2.6.4",
    bluebird: "3.5.2",
    co: "4.6.0",
    "pg-copy-streams": "0.3.0"
  }, peerDependencies: { "pg-native": ">=3.0.1" }, peerDependenciesMeta: { "pg-native": { optional: true } }, scripts: { test: "make test-all" }, files: ["lib", "SPONSORS.md"], license: "MIT", engines: { node: ">= 8.0.0" }, gitHead: "c99fb2c127ddf8d712500db2c7b9a5491a178655" };
});
var lo = T((fp, co) => {
  p();
  var uo = ge().EventEmitter, ul = (it(), O(nt)), Rn = rt(), Ne = co.exports = function(r, e, t) {
    uo.call(this), r = Rn.normalizeQueryConfig(r, e, t), this.text = r.text, this.values = r.values, this.name = r.name, this.callback = r.callback, this.state = "new", this._arrayMode = r.rowMode === "array", this._emitRowEvents = false, this.on("newListener", function(n) {
      n === "row" && (this._emitRowEvents = true);
    }.bind(this));
  };
  ul.inherits(Ne, uo);
  var cl = { sqlState: "code", statementPosition: "position", messagePrimary: "message", context: "where", schemaName: "schema", tableName: "table", columnName: "column", dataTypeName: "dataType", constraintName: "constraint", sourceFile: "file", sourceLine: "line", sourceFunction: "routine" };
  Ne.prototype.handleError = function(r) {
    var e = this.native.pq.resultErrorFields();
    if (e)
      for (var t in e) {
        var n = cl[t] || t;
        r[n] = e[t];
      }
    this.callback ? this.callback(r) : this.emit("error", r), this.state = "error";
  };
  Ne.prototype.then = function(r, e) {
    return this._getPromise().then(r, e);
  };
  Ne.prototype.catch = function(r) {
    return this._getPromise().catch(r);
  };
  Ne.prototype._getPromise = function() {
    return this._promise ? this._promise : (this._promise = new Promise(function(r, e) {
      this._once("end", r), this._once("error", e);
    }.bind(this)), this._promise);
  };
  Ne.prototype.submit = function(r) {
    this.state = "running";
    var e = this;
    this.native = r.native, r.native.arrayMode = this._arrayMode;
    var t = a(function(s, o, u) {
      if (r.native.arrayMode = false, v(function() {
        e.emit("_done");
      }), s)
        return e.handleError(s);
      e._emitRowEvents && (u.length > 1 ? o.forEach((c, l) => {
        c.forEach((f) => {
          e.emit("row", f, u[l]);
        });
      }) : o.forEach(function(c) {
        e.emit("row", c, u);
      })), e.state = "end", e.emit("end", u), e.callback && e.callback(null, u);
    }, "after");
    if (m.domain && (t = m.domain.bind(t)), this.name) {
      this.name.length > 63 && (console.error("Warning! Postgres only supports 63 characters for query names."), console.error("You supplied %s (%s)", this.name, this.name.length), console.error("This can cause conflicts and silent errors executing queries"));
      var n = (this.values || []).map(Rn.prepareValue);
      if (r.namedQueries[this.name]) {
        if (this.text && r.namedQueries[this.name] !== this.text) {
          let s = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`);
          return t(s);
        }
        return r.native.execute(this.name, n, t);
      }
      return r.native.prepare(this.name, this.text, n.length, function(s) {
        return s ? t(s) : (r.namedQueries[e.name] = e.text, e.native.execute(e.name, n, t));
      });
    } else if (this.values) {
      if (!Array.isArray(this.values)) {
        let s = new Error("Query values must be an array");
        return t(s);
      }
      var i = this.values.map(Rn.prepareValue);
      r.native.query(this.text, i, t);
    } else
      r.native.query(this.text, t);
  };
});
var yo = T((yp, po) => {
  p();
  var ll = (oo(), O(so)), fl = At(), dp = ao(), fo = ge().EventEmitter, hl = (it(), O(nt)), pl = Bt(), ho = lo(), K = po.exports = function(r) {
    fo.call(this), r = r || {}, this._Promise = r.Promise || b.Promise, this._types = new fl(r.types), this.native = new ll({ types: this._types }), this._queryQueue = [], this._ending = false, this._connecting = false, this._connected = false, this._queryable = true;
    var e = this.connectionParameters = new pl(r);
    this.user = e.user, Object.defineProperty(this, "password", { configurable: true, enumerable: false, writable: true, value: e.password }), this.database = e.database, this.host = e.host, this.port = e.port, this.namedQueries = {};
  };
  K.Query = ho;
  hl.inherits(K, fo);
  K.prototype._errorAllQueries = function(r) {
    let e = a((t) => {
      m.nextTick(() => {
        t.native = this.native, t.handleError(r);
      });
    }, "enqueueError");
    this._hasActiveQuery() && (e(this._activeQuery), this._activeQuery = null), this._queryQueue.forEach(e), this._queryQueue.length = 0;
  };
  K.prototype._connect = function(r) {
    var e = this;
    if (this._connecting) {
      m.nextTick(() => r(new Error("Client has already been connected. You cannot reuse a client.")));
      return;
    }
    this._connecting = true, this.connectionParameters.getLibpqConnectionString(function(t, n) {
      if (t)
        return r(t);
      e.native.connect(n, function(i) {
        if (i)
          return e.native.end(), r(i);
        e._connected = true, e.native.on("error", function(s) {
          e._queryable = false, e._errorAllQueries(s), e.emit("error", s);
        }), e.native.on("notification", function(s) {
          e.emit("notification", { channel: s.relname, payload: s.extra });
        }), e.emit("connect"), e._pulseQueryQueue(true), r();
      });
    });
  };
  K.prototype.connect = function(r) {
    if (r) {
      this._connect(r);
      return;
    }
    return new this._Promise((e, t) => {
      this._connect((n) => {
        n ? t(n) : e();
      });
    });
  };
  K.prototype.query = function(r, e, t) {
    var n, i, s, o, u;
    if (r == null)
      throw new TypeError("Client was passed a null or undefined query");
    if (typeof r.submit == "function")
      s = r.query_timeout || this.connectionParameters.query_timeout, i = n = r, typeof e == "function" && (r.callback = e);
    else if (s = this.connectionParameters.query_timeout, n = new ho(r, e, t), !n.callback) {
      let c, l;
      i = new this._Promise((f, y) => {
        c = f, l = y;
      }), n.callback = (f, y) => f ? l(f) : c(y);
    }
    return s && (u = n.callback, o = setTimeout(() => {
      var c = new Error("Query read timeout");
      m.nextTick(() => {
        n.handleError(c, this.connection);
      }), u(c), n.callback = () => {};
      var l = this._queryQueue.indexOf(n);
      l > -1 && this._queryQueue.splice(l, 1), this._pulseQueryQueue();
    }, s), n.callback = (c, l) => {
      clearTimeout(o), u(c, l);
    }), this._queryable ? this._ending ? (n.native = this.native, m.nextTick(() => {
      n.handleError(new Error("Client was closed and is not queryable"));
    }), i) : (this._queryQueue.push(n), this._pulseQueryQueue(), i) : (n.native = this.native, m.nextTick(() => {
      n.handleError(new Error("Client has encountered a connection error and is not queryable"));
    }), i);
  };
  K.prototype.end = function(r) {
    var e = this;
    this._ending = true, this._connected || this.once("connect", this.end.bind(this, r));
    var t;
    return r || (t = new this._Promise(function(n, i) {
      r = a((s) => s ? i(s) : n(), "cb");
    })), this.native.end(function() {
      e._errorAllQueries(new Error("Connection terminated")), m.nextTick(() => {
        e.emit("end"), r && r();
      });
    }), t;
  };
  K.prototype._hasActiveQuery = function() {
    return this._activeQuery && this._activeQuery.state !== "error" && this._activeQuery.state !== "end";
  };
  K.prototype._pulseQueryQueue = function(r) {
    if (this._connected && !this._hasActiveQuery()) {
      var e = this._queryQueue.shift();
      if (!e) {
        r || this.emit("drain");
        return;
      }
      this._activeQuery = e, e.submit(this);
      var t = this;
      e.once("_done", function() {
        t._pulseQueryQueue();
      });
    }
  };
  K.prototype.cancel = function(r) {
    this._activeQuery === r ? this.native.cancel(function() {}) : this._queryQueue.indexOf(r) !== -1 && this._queryQueue.splice(this._queryQueue.indexOf(r), 1);
  };
  K.prototype.ref = function() {};
  K.prototype.unref = function() {};
  K.prototype.setTypeParser = function(r, e, t) {
    return this._types.setTypeParser(r, e, t);
  };
  K.prototype.getTypeParser = function(r, e) {
    return this._types.getTypeParser(r, e);
  };
});
var Ln = T((gp, mo) => {
  p();
  mo.exports = yo();
});
var ot = T((vp, at) => {
  p();
  var dl = eo(), yl = tt(), ml = En(), wl = io(), { DatabaseError: gl } = vn(), bl = a((r) => {
    var e;
    return e = class extends wl {
      constructor(n) {
        super(n, r);
      }
    }, a(e, "BoundPool"), e;
  }, "poolFactory"), Fn = a(function(r) {
    this.defaults = yl, this.Client = r, this.Query = this.Client.Query, this.Pool = bl(this.Client), this._pools = [], this.Connection = ml, this.types = Je(), this.DatabaseError = gl;
  }, "PG");
  typeof m.env.NODE_PG_FORCE_NATIVE < "u" ? at.exports = new Fn(Ln()) : (at.exports = new Fn(dl), Object.defineProperty(at.exports, "native", {
    configurable: true,
    enumerable: false,
    get() {
      var r = null;
      try {
        r = new Fn(Ln());
      } catch (e) {
        if (e.code !== "MODULE_NOT_FOUND")
          throw e;
      }
      return Object.defineProperty(at.exports, "native", { value: r }), r;
    }
  }));
});
p();
p();
Fe();
Zt();
p();
var pa = Object.defineProperty;
var da = Object.defineProperties;
var ya = Object.getOwnPropertyDescriptors;
var bi = Object.getOwnPropertySymbols;
var ma = Object.prototype.hasOwnProperty;
var wa = Object.prototype.propertyIsEnumerable;
var vi = a((r, e, t) => (e in r) ? pa(r, e, { enumerable: true, configurable: true, writable: true, value: t }) : r[e] = t, "__defNormalProp");
var ga = a((r, e) => {
  for (var t in e || (e = {}))
    ma.call(e, t) && vi(r, t, e[t]);
  if (bi)
    for (var t of bi(e))
      wa.call(e, t) && vi(r, t, e[t]);
  return r;
}, "__spreadValues");
var ba = a((r, e) => da(r, ya(e)), "__spreadProps");
var va = 1008000;
var xi = new Uint8Array(new Uint16Array([258]).buffer)[0] === 2;
var xa = new TextDecoder;
var Jt = new TextEncoder;
var yt = Jt.encode("0123456789abcdef");
var mt = Jt.encode("0123456789ABCDEF");
var Sa = Jt.encode("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
var Si = Sa.slice();
Si[62] = 45;
Si[63] = 95;
var He;
var wt;
function Ea(r, { alphabet: e, scratchArr: t } = {}) {
  if (!He)
    if (He = new Uint16Array(256), wt = new Uint16Array(256), xi)
      for (let C = 0;C < 256; C++)
        He[C] = yt[C & 15] << 8 | yt[C >>> 4], wt[C] = mt[C & 15] << 8 | mt[C >>> 4];
    else
      for (let C = 0;C < 256; C++)
        He[C] = yt[C & 15] | yt[C >>> 4] << 8, wt[C] = mt[C & 15] | mt[C >>> 4] << 8;
  r.byteOffset % 4 !== 0 && (r = new Uint8Array(r));
  let n = r.length, i = n >>> 1, s = n >>> 2, o = t || new Uint16Array(n), u = new Uint32Array(r.buffer, r.byteOffset, s), c = new Uint32Array(o.buffer, o.byteOffset, i), l = e === "upper" ? wt : He, f = 0, y = 0, g;
  if (xi)
    for (;f < s; )
      g = u[f++], c[y++] = l[g >>> 8 & 255] << 16 | l[g & 255], c[y++] = l[g >>> 24] << 16 | l[g >>> 16 & 255];
  else
    for (;f < s; )
      g = u[f++], c[y++] = l[g >>> 24] << 16 | l[g >>> 16 & 255], c[y++] = l[g >>> 8 & 255] << 16 | l[g & 255];
  for (f <<= 2;f < n; )
    o[f] = l[r[f++]];
  return xa.decode(o.subarray(0, n));
}
a(Ea, "_toHex");
function Aa(r, e = {}) {
  let t = "", n = r.length, i = va >>> 1, s = Math.ceil(n / i), o = new Uint16Array(s > 1 ? i : n);
  for (let u = 0;u < s; u++) {
    let c = u * i, l = c + i;
    t += Ea(r.subarray(c, l), ba(ga({}, e), { scratchArr: o }));
  }
  return t;
}
a(Aa, "_toHexChunked");
function Ei(r, e = {}) {
  return e.alphabet !== "upper" && typeof r.toHex == "function" ? r.toHex() : Aa(r, e);
}
a(Ei, "toHex");
p();
var gt2 = class gt3 {
  constructor(e, t) {
    this.strings = e;
    this.values = t;
  }
  toParameterizedQuery(e = { query: "", params: [] }) {
    let { strings: t, values: n } = this;
    for (let i = 0, s = t.length;i < s; i++)
      if (e.query += t[i], i < n.length) {
        let o = n[i];
        if (o instanceof Ge)
          e.query += o.sql;
        else if (o instanceof Ce)
          if (o.queryData instanceof gt3)
            o.queryData.toParameterizedQuery(e);
          else {
            if (o.queryData.params?.length)
              throw new Error("This query is not composable");
            e.query += o.queryData.query;
          }
        else {
          let { params: u } = e;
          u.push(o), e.query += "$" + u.length, (o instanceof d || ArrayBuffer.isView(o)) && (e.query += "::bytea");
        }
      }
    return e;
  }
};
a(gt2, "SqlTemplate");
var $e = gt2;
var Xt = class Xt2 {
  constructor(e) {
    this.sql = e;
  }
};
a(Xt, "UnsafeRawSql");
var Ge = Xt;
p();
function bt() {
  typeof window < "u" && typeof document < "u" && typeof console < "u" && typeof console.warn == "function" && console.warn(`          
        ************************************************************
        *                                                          *
        *  WARNING: Running SQL directly from the browser can have *
        *  security implications. Even if your database is         *
        *  protected by Row-Level Security (RLS), use it at your   *
        *  own risk. This approach is great for fast prototyping,  *
        *  but ensure proper safeguards are in place to prevent    *
        *  misuse or execution of expensive SQL queries by your    *
        *  end users.                                              *
        *                                                          *
        *  If you've assessed the risks, suppress this message     *
        *  using the disableWarningInBrowsers configuration        *
        *  parameter.                                              *
        *                                                          *
        ************************************************************`);
}
a(bt, "warnIfBrowser");
Fe();
var as = Se(At());
var us = Se(rt());
var _t = class _t2 extends Error {
  constructor(t) {
    super(t);
    E(this, "name", "NeonDbError");
    E(this, "severity");
    E(this, "code");
    E(this, "detail");
    E(this, "hint");
    E(this, "position");
    E(this, "internalPosition");
    E(this, "internalQuery");
    E(this, "where");
    E(this, "schema");
    E(this, "table");
    E(this, "column");
    E(this, "dataType");
    E(this, "constraint");
    E(this, "file");
    E(this, "line");
    E(this, "routine");
    E(this, "sourceError");
    "captureStackTrace" in Error && typeof Error.captureStackTrace == "function" && Error.captureStackTrace(this, _t2);
  }
};
a(_t, "NeonDbError");
var be = _t;
var is2 = "transaction() expects an array of queries, or a function returning an array of queries";
var Ru = ["severity", "code", "detail", "hint", "position", "internalPosition", "internalQuery", "where", "schema", "table", "column", "dataType", "constraint", "file", "line", "routine"];
function Lu(r) {
  return r instanceof d ? "\\x" + Ei(r) : r;
}
a(Lu, "encodeBuffersAsBytea");
function ss(r) {
  let { query: e, params: t } = r instanceof $e ? r.toParameterizedQuery() : r;
  return { query: e, params: t.map((n) => Lu((0, us.prepareValue)(n))) };
}
a(ss, "prepareQuery");
function cs(r, {
  arrayMode: e,
  fullResults: t,
  fetchOptions: n,
  isolationLevel: i,
  readOnly: s,
  deferrable: o,
  authToken: u,
  disableWarningInBrowsers: c
} = {}) {
  if (!r)
    throw new Error("No database connection string was provided to `neon()`. Perhaps an environment variable has not been set?");
  let l;
  try {
    l = Yt(r);
  } catch {
    throw new Error("Database connection string provided to `neon()` is not a valid URL. Connection string: " + String(r));
  }
  let { protocol: f, username: y, hostname: g, port: A, pathname: C } = l;
  if (f !== "postgres:" && f !== "postgresql:" || !y || !g || !C)
    throw new Error("Database connection string format for `neon()` should be: postgresql://user:password@host.tld/dbname?option=value");
  function D(P, ...I) {
    if (!(Array.isArray(P) && Array.isArray(P.raw) && Array.isArray(I)))
      throw new Error('This function can now be called only as a tagged-template function: sql`SELECT ${value}`, not sql("SELECT $1", [value], options). For a conventional function call with value placeholders ($1, $2, etc.), use sql.query("SELECT $1", [value], options).');
    return new Ce(Y, new $e(P, I));
  }
  a(D, "templateFn"), D.query = (P, I, w) => new Ce(Y, { query: P, params: I ?? [] }, w), D.unsafe = (P) => new Ge(P), D.transaction = async (P, I) => {
    if (typeof P == "function" && (P = P(D)), !Array.isArray(P))
      throw new Error(is2);
    P.forEach((W) => {
      if (!(W instanceof Ce))
        throw new Error(is2);
    });
    let w = P.map((W) => W.queryData), Z = P.map((W) => W.opts ?? {});
    return Y(w, Z, I);
  };
  async function Y(P, I, w) {
    let { fetchEndpoint: Z, fetchFunction: W } = ce, J = Array.isArray(P) ? { queries: P.map((ee) => ss(ee)) } : ss(P), X = n ?? {}, se = e ?? false, oe = t ?? false, R = i, j = s, le = o;
    w !== undefined && (w.fetchOptions !== undefined && (X = { ...X, ...w.fetchOptions }), w.arrayMode !== undefined && (se = w.arrayMode), w.fullResults !== undefined && (oe = w.fullResults), w.isolationLevel !== undefined && (R = w.isolationLevel), w.readOnly !== undefined && (j = w.readOnly), w.deferrable !== undefined && (le = w.deferrable)), I !== undefined && !Array.isArray(I) && I.fetchOptions !== undefined && (X = { ...X, ...I.fetchOptions });
    let de = u;
    !Array.isArray(I) && I?.authToken !== undefined && (de = I.authToken);
    let We = typeof Z == "function" ? Z(g, A, { jwtAuth: de !== undefined }) : Z, fe = { "Neon-Connection-String": r, "Neon-Raw-Text-Output": "true", "Neon-Array-Mode": "true" }, _e = await Fu(de);
    _e && (fe.Authorization = `Bearer ${_e}`), Array.isArray(P) && (R !== undefined && (fe["Neon-Batch-Isolation-Level"] = R), j !== undefined && (fe["Neon-Batch-Read-Only"] = String(j)), le !== undefined && (fe["Neon-Batch-Deferrable"] = String(le))), c || ce.disableWarningInBrowsers || bt();
    let ye;
    try {
      ye = await (W ?? fetch)(We, { method: "POST", body: JSON.stringify(J), headers: fe, ...X });
    } catch (ee) {
      let M = new be(`Error connecting to database: ${ee}`);
      throw M.sourceError = ee, M;
    }
    if (ye.ok) {
      let ee = await ye.json();
      if (Array.isArray(P)) {
        let M = ee.results;
        if (!Array.isArray(M))
          throw new be("Neon internal error: unexpected result format");
        return M.map(($, me) => {
          let Ot = I[me] ?? {}, vo = Ot.arrayMode ?? se, xo = Ot.fullResults ?? oe;
          return os($, { arrayMode: vo, fullResults: xo, types: Ot.types });
        });
      } else {
        let M = I ?? {}, $ = M.arrayMode ?? se, me = M.fullResults ?? oe;
        return os(ee, { arrayMode: $, fullResults: me, types: M.types });
      }
    } else {
      let { status: ee } = ye;
      if (ee === 400) {
        let M = await ye.json(), $ = new be(M.message);
        for (let me of Ru)
          $[me] = M[me] ?? undefined;
        throw $;
      } else {
        let M = await ye.text();
        throw new be(`Server error (HTTP status ${ee}): ${M}`);
      }
    }
  }
  return a(Y, "execute"), D;
}
a(cs, "neon");
var dr = class dr2 {
  constructor(e, t, n) {
    this.execute = e;
    this.queryData = t;
    this.opts = n;
  }
  then(e, t) {
    return this.execute(this.queryData, this.opts).then(e, t);
  }
  catch(e) {
    return this.execute(this.queryData, this.opts).catch(e);
  }
  finally(e) {
    return this.execute(this.queryData, this.opts).finally(e);
  }
};
a(dr, "NeonQueryPromise");
var Ce = dr;
function os(r, {
  arrayMode: e,
  fullResults: t,
  types: n
}) {
  let i = new as.default(n), s = r.fields.map((c) => c.name), o = r.fields.map((c) => i.getTypeParser(c.dataTypeID)), u = e === true ? r.rows.map((c) => c.map((l, f) => l === null ? null : o[f](l))) : r.rows.map((c) => Object.fromEntries(c.map((l, f) => [s[f], l === null ? null : o[f](l)])));
  return t ? (r.viaNeonFetch = true, r.rowAsArray = e, r.rows = u, r._parsers = o, r._types = i, r) : u;
}
a(os, "processQueryResult");
async function Fu(r) {
  if (typeof r == "string")
    return r;
  if (typeof r == "function")
    try {
      return await Promise.resolve(r());
    } catch (e) {
      let t = new be("Error getting auth token.");
      throw e instanceof Error && (t = new be(`Error getting auth token: ${e.message}`)), t;
    }
}
a(Fu, "getAuthToken");
p();
var go = Se(ot());
p();
var wo = Se(ot());
var kn = class kn2 extends wo.Client {
  constructor(t) {
    super(t);
    this.config = t;
  }
  get neonConfig() {
    return this.connection.stream;
  }
  connect(t) {
    let { neonConfig: n } = this;
    n.forceDisablePgSSL && (this.ssl = this.connection.ssl = false), this.ssl && n.useSecureWebSocket && console.warn("SSL is enabled for both Postgres (e.g. ?sslmode=require in the connection string + forceDisablePgSSL = false) and the WebSocket tunnel (useSecureWebSocket = true). Double encryption will increase latency and CPU usage. It may be appropriate to disable SSL in the Postgres connection parameters or set forceDisablePgSSL = true.");
    let i = typeof this.config != "string" && this.config?.host !== undefined || typeof this.config != "string" && this.config?.connectionString !== undefined || m.env.PGHOST !== undefined, s = m.env.USER ?? m.env.USERNAME;
    if (!i && this.host === "localhost" && this.user === s && this.database === s && this.password === null)
      throw new Error(`No database host or connection string was set, and key parameters have default values (host: localhost, user: ${s}, db: ${s}, password: null). Is an environment variable missing? Alternatively, if you intended to connect with these parameters, please set the host to 'localhost' explicitly.`);
    let o = super.connect(t), u = n.pipelineTLS && this.ssl, c = n.pipelineConnect === "password";
    if (!u && !n.pipelineConnect)
      return o;
    let l = this.connection;
    if (u && l.on("connect", () => l.stream.emit("data", "S")), c) {
      l.removeAllListeners("authenticationCleartextPassword"), l.removeAllListeners("readyForQuery"), l.once("readyForQuery", () => l.on("readyForQuery", this._handleReadyForQuery.bind(this)));
      let f = this.ssl ? "sslconnect" : "connect";
      l.on(f, () => {
        this.neonConfig.disableWarningInBrowsers || bt(), this._handleAuthCleartextPassword(), this._handleReadyForQuery();
      });
    }
    return o;
  }
  async _handleAuthSASLContinue(t) {
    if (typeof crypto > "u" || crypto.subtle === undefined || crypto.subtle.importKey === undefined)
      throw new Error("Cannot use SASL auth when `crypto.subtle` is not defined");
    let n = crypto.subtle, i = this.saslSession, s = this.password, o = t.data;
    if (i.message !== "SASLInitialResponse" || typeof s != "string" || typeof o != "string")
      throw new Error("SASL: protocol error");
    let u = Object.fromEntries(o.split(",").map((M) => {
      if (!/^.=/.test(M))
        throw new Error("SASL: Invalid attribute pair entry");
      let $ = M[0], me = M.substring(2);
      return [$, me];
    })), c = u.r, l = u.s, f = u.i;
    if (!c || !/^[!-+--~]+$/.test(c))
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing/unprintable");
    if (!l || !/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(l))
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing/not base64");
    if (!f || !/^[1-9][0-9]*$/.test(f))
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: missing/invalid iteration count");
    if (!c.startsWith(i.clientNonce))
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce");
    if (c.length === i.clientNonce.length)
      throw new Error("SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short");
    let y = parseInt(f, 10), g = d.from(l, "base64"), A = new TextEncoder, C = A.encode(s), D = await n.importKey("raw", C, { name: "HMAC", hash: { name: "SHA-256" } }, false, ["sign"]), Y = new Uint8Array(await n.sign("HMAC", D, d.concat([g, d.from([0, 0, 0, 1])]))), P = Y;
    for (var I = 0;I < y - 1; I++)
      Y = new Uint8Array(await n.sign("HMAC", D, Y)), P = d.from(P.map((M, $) => P[$] ^ Y[$]));
    let w = P, Z = await n.importKey("raw", w, { name: "HMAC", hash: { name: "SHA-256" } }, false, ["sign"]), W = new Uint8Array(await n.sign("HMAC", Z, A.encode("Client Key"))), J = await n.digest("SHA-256", W), X = "n=*,r=" + i.clientNonce, se = "r=" + c + ",s=" + l + ",i=" + y, oe = "c=biws,r=" + c, R = X + "," + se + "," + oe, j = await n.importKey("raw", J, { name: "HMAC", hash: { name: "SHA-256" } }, false, ["sign"]);
    var le = new Uint8Array(await n.sign("HMAC", j, A.encode(R))), de = d.from(W.map((M, $) => W[$] ^ le[$])), We = de.toString("base64");
    let fe = await n.importKey("raw", w, { name: "HMAC", hash: { name: "SHA-256" } }, false, ["sign"]), _e = await n.sign("HMAC", fe, A.encode("Server Key")), ye = await n.importKey("raw", _e, { name: "HMAC", hash: { name: "SHA-256" } }, false, ["sign"]);
    var ee = d.from(await n.sign("HMAC", ye, A.encode(R)));
    i.message = "SASLResponse", i.serverSignature = ee.toString("base64"), i.response = oe + ",p=" + We, this.connection.sendSCRAMClientFinalMessage(this.saslSession.response);
  }
};
a(kn, "NeonClient");
var ut = kn;
Fe();
var bo = Se(Bt());
function vl(r, e) {
  if (e)
    return { callback: e, result: undefined };
  let t, n, i = a(function(o, u) {
    o ? t(o) : n(u);
  }, "cb"), s = new r(function(o, u) {
    n = o, t = u;
  });
  return { callback: i, result: s };
}
a(vl, "promisify");
var Un = class Un2 extends go.Pool {
  constructor() {
    super(...arguments);
    E(this, "Client", ut);
    E(this, "hasFetchUnsupportedListeners", false);
    E(this, "addListener", this.on);
  }
  on(t, n) {
    return t !== "error" && (this.hasFetchUnsupportedListeners = true), super.on(t, n);
  }
  query(t, n, i) {
    if (!ce.poolQueryViaFetch || this.hasFetchUnsupportedListeners || typeof t == "function")
      return super.query(t, n, i);
    typeof n == "function" && (i = n, n = undefined);
    let s = vl(this.Promise, i);
    i = s.callback;
    try {
      let o = new bo.default(this.options), u = encodeURIComponent, c = encodeURI, l = `postgresql://${u(o.user)}:${u(o.password)}@${u(o.host)}/${c(o.database)}`, f = typeof t == "string" ? t : t.text, y = n ?? t.values ?? [];
      cs(l, { fullResults: true, arrayMode: t.rowMode === "array" }).query(f, y, { types: t.types ?? this.options?.types }).then((A) => i(undefined, A)).catch((A) => i(A));
    } catch (o) {
      i(o);
    }
    return s.result;
  }
};
a(Un, "NeonPool");
Fe();
var ct = Se(ot());
var export_DatabaseError = ct.DatabaseError;
var export_defaults = ct.defaults;
var export_escapeIdentifier = ct.escapeIdentifier;
var export_escapeLiteral = ct.escapeLiteral;
var export_types = ct.types;
/*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)
*/

// node_modules/drizzle-orm/neon-http/session.js
var rawQueryConfig = {
  arrayMode: false,
  fullResults: true
};
var queryConfig = {
  arrayMode: true,
  fullResults: true
};

class NeonHttpPreparedQuery extends PgPreparedQuery {
  constructor(client, query, logger, cache, queryMetadata, cacheConfig, fields, _isResponseInArrayMode, customResultMapper) {
    super(query, cache, queryMetadata, cacheConfig);
    this.client = client;
    this.logger = logger;
    this.fields = fields;
    this._isResponseInArrayMode = _isResponseInArrayMode;
    this.customResultMapper = customResultMapper;
    this.clientQuery = client.query ?? client;
  }
  static [entityKind] = "NeonHttpPreparedQuery";
  clientQuery;
  async execute(placeholderValues = {}, token = this.authToken) {
    const params = fillPlaceholders(this.query.params, placeholderValues);
    this.logger.logQuery(this.query.sql, params);
    const { fields, clientQuery, query, customResultMapper } = this;
    if (!fields && !customResultMapper) {
      return this.queryWithCache(query.sql, params, async () => {
        return clientQuery(query.sql, params, token === undefined ? rawQueryConfig : {
          ...rawQueryConfig,
          authToken: token
        });
      });
    }
    const result = await this.queryWithCache(query.sql, params, async () => {
      return await clientQuery(query.sql, params, token === undefined ? queryConfig : {
        ...queryConfig,
        authToken: token
      });
    });
    return this.mapResult(result);
  }
  mapResult(result) {
    if (!this.fields && !this.customResultMapper) {
      return result;
    }
    const rows = result.rows;
    if (this.customResultMapper) {
      return this.customResultMapper(rows);
    }
    return rows.map((row) => mapResultRow(this.fields, row, this.joinsNotNullableMap));
  }
  all(placeholderValues = {}) {
    const params = fillPlaceholders(this.query.params, placeholderValues);
    this.logger.logQuery(this.query.sql, params);
    return this.clientQuery(this.query.sql, params, this.authToken === undefined ? rawQueryConfig : {
      ...rawQueryConfig,
      authToken: this.authToken
    }).then((result) => result.rows);
  }
  values(placeholderValues = {}, token) {
    const params = fillPlaceholders(this.query.params, placeholderValues);
    this.logger.logQuery(this.query.sql, params);
    return this.clientQuery(this.query.sql, params, { arrayMode: true, fullResults: true, authToken: token }).then((result) => result.rows);
  }
  isResponseInArrayMode() {
    return this._isResponseInArrayMode;
  }
}

class NeonHttpSession extends PgSession {
  constructor(client, dialect, schema, options = {}) {
    super(dialect);
    this.client = client;
    this.schema = schema;
    this.options = options;
    this.clientQuery = client.query ?? client;
    this.logger = options.logger ?? new NoopLogger;
    this.cache = options.cache ?? new NoopCache;
  }
  static [entityKind] = "NeonHttpSession";
  clientQuery;
  logger;
  cache;
  prepareQuery(query, fields, name, isResponseInArrayMode, customResultMapper, queryMetadata, cacheConfig) {
    return new NeonHttpPreparedQuery(this.client, query, this.logger, this.cache, queryMetadata, cacheConfig, fields, isResponseInArrayMode, customResultMapper);
  }
  async batch(queries) {
    const preparedQueries = [];
    const builtQueries = [];
    for (const query of queries) {
      const preparedQuery = query._prepare();
      const builtQuery = preparedQuery.getQuery();
      preparedQueries.push(preparedQuery);
      builtQueries.push(this.clientQuery(builtQuery.sql, builtQuery.params, {
        fullResults: true,
        arrayMode: preparedQuery.isResponseInArrayMode()
      }));
    }
    const batchResults = await this.client.transaction(builtQueries, queryConfig);
    return batchResults.map((result, i) => preparedQueries[i].mapResult(result, true));
  }
  async query(query, params) {
    this.logger.logQuery(query, params);
    const result = await this.clientQuery(query, params, { arrayMode: true, fullResults: true });
    return result;
  }
  async queryObjects(query, params) {
    return this.clientQuery(query, params, { arrayMode: false, fullResults: true });
  }
  async count(sql2, token) {
    const res = await this.execute(sql2, token);
    return Number(res["rows"][0]["count"]);
  }
  async transaction(_transaction, _config = {}) {
    throw new Error("No transactions support in neon-http driver");
  }
}

// node_modules/drizzle-orm/neon-http/driver.js
class NeonHttpDriver {
  constructor(client, dialect, options = {}) {
    this.client = client;
    this.dialect = dialect;
    this.options = options;
    this.initMappers();
  }
  static [entityKind] = "NeonHttpDriver";
  createSession(schema) {
    return new NeonHttpSession(this.client, this.dialect, schema, {
      logger: this.options.logger,
      cache: this.options.cache
    });
  }
  initMappers() {
    export_types.setTypeParser(export_types.builtins.TIMESTAMPTZ, (val) => val);
    export_types.setTypeParser(export_types.builtins.TIMESTAMP, (val) => val);
    export_types.setTypeParser(export_types.builtins.DATE, (val) => val);
    export_types.setTypeParser(export_types.builtins.INTERVAL, (val) => val);
    export_types.setTypeParser(1231, (val) => val);
    export_types.setTypeParser(1115, (val) => val);
    export_types.setTypeParser(1185, (val) => val);
    export_types.setTypeParser(1187, (val) => val);
    export_types.setTypeParser(1182, (val) => val);
  }
}
function wrap(target, token, cb, deep) {
  return new Proxy(target, {
    get(target2, p2) {
      const element = target2[p2];
      if (typeof element !== "function" && (typeof element !== "object" || element === null))
        return element;
      if (deep)
        return wrap(element, token, cb);
      if (p2 === "query")
        return wrap(element, token, cb, true);
      return new Proxy(element, {
        apply(target3, thisArg, argArray) {
          const res = target3.call(thisArg, ...argArray);
          if (typeof res === "object" && res !== null && "setToken" in res && typeof res.setToken === "function") {
            res.setToken(token);
          }
          return cb(target3, p2, res);
        }
      });
    }
  });
}

class NeonHttpDatabase extends PgDatabase {
  static [entityKind] = "NeonHttpDatabase";
  $withAuth(token) {
    this.authToken = token;
    return wrap(this, token, (target, p2, res) => {
      if (p2 === "with") {
        return wrap(res, token, (_, __, res2) => res2);
      }
      return res;
    });
  }
  async batch(batch) {
    return this.session.batch(batch);
  }
}
function construct(client, config = {}) {
  const dialect = new PgDialect({ casing: config.casing });
  let logger;
  if (config.logger === true) {
    logger = new DefaultLogger;
  } else if (config.logger !== false) {
    logger = config.logger;
  }
  let schema;
  if (config.schema) {
    const tablesConfig = extractTablesRelationalConfig(config.schema, createTableRelationsHelpers);
    schema = {
      fullSchema: config.schema,
      schema: tablesConfig.tables,
      tableNamesMap: tablesConfig.tableNamesMap
    };
  }
  const driver = new NeonHttpDriver(client, dialect, { logger, cache: config.cache });
  const session = driver.createSession(schema);
  const db = new NeonHttpDatabase(dialect, session, schema);
  db.$client = client;
  db.$cache = config.cache;
  if (db.$cache) {
    db.$cache["invalidate"] = config.cache?.onMutate;
  }
  return db;
}
function drizzle(...params) {
  if (typeof params[0] === "string") {
    const instance = cs(params[0]);
    return construct(instance, params[1]);
  }
  if (isConfig(params[0])) {
    const { connection, client, ...drizzleConfig } = params[0];
    if (client)
      return construct(client, drizzleConfig);
    if (typeof connection === "object") {
      const { connectionString, ...options } = connection;
      const instance2 = cs(connectionString, options);
      return construct(instance2, drizzleConfig);
    }
    const instance = cs(connection);
    return construct(instance, drizzleConfig);
  }
  return construct(params[0], params[1]);
}
((drizzle2) => {
  function mock(config) {
    return construct({}, config);
  }
  drizzle2.mock = mock;
})(drizzle || (drizzle = {}));

// src/db/schema.ts
var exports_schema = {};
__export(exports_schema, {
  workoutTable: () => workoutTable2,
  workoutRelations: () => workoutRelations2,
  workoutRelationWithUser: () => workoutRelationWithUser2,
  workoutDetailsTable: () => workoutDetailsTable2,
  workoutDetailRelationWithExercise: () => workoutDetailRelationWithExercise2,
  workoutDetailRelation: () => workoutDetailRelation2,
  weightUnitsTable: () => weightUnitsTable2,
  weightTable: () => weightTable2,
  weightRelations: () => weightRelations2,
  usersTable: () => usersTable2,
  userRelations: () => userRelations2,
  userProgrammeTable: () => userProgrammeTable2,
  roomsTable: () => roomsTable2,
  roomRelations: () => roomRelations2,
  roomMembersTable: () => roomMembersTable2,
  roomMembersRelations: () => roomMembersRelations2,
  programmesTable: () => programmesTable2,
  programmeWorkoutTable: () => programmeWorkoutTable2,
  programmeWorkoutRelation: () => programmeWorkoutRelation2,
  programmeWorkoutDetailRelation: () => programmeWorkoutDetailRelation2,
  programmeUserRelationWithUser: () => programmeUserRelationWithUser2,
  programmeUserRelationWithProgramme: () => programmeUserRelationWithProgramme2,
  programmeRelationsWithUser: () => programmeRelationsWithUser2,
  programmeRelationWithProgramme: () => programmeRelationWithProgramme2,
  programmeDetailsTable: () => programmeDetailsTable2,
  programmeDetailsRelationWithProgramme: () => programmeDetailsRelationWithProgramme2,
  programmeDetailRelationWithExercise: () => programmeDetailRelationWithExercise2,
  parent_child: () => parent_child2,
  nutritionTable: () => nutritionTable2,
  nutritionRelations: () => nutritionRelations2,
  messagesTable: () => messagesTable2,
  messagesRelations: () => messagesRelations2,
  measurementsTable: () => measurementsTable2,
  measurementsDataTable: () => measurementsDataTable2,
  measurementRelationwithData: () => measurementRelationwithData2,
  measurementDataTableWithMeasurement: () => measurementDataTableWithMeasurement2,
  latestActivitiesTable: () => latestActivitiesTable2,
  heightUnitTable: () => heightUnitTable2,
  exerciseWorkoutRelation: () => exerciseWorkoutRelation2,
  exerciseTable: () => exerciseTable2,
  customFoodTable: () => customFoodTable2,
  customFoodRelation: () => customFoodRelation2,
  customExerciseTable: () => customExerciseTable2,
  customExerciseRelationWithUser: () => customExerciseRelationWithUser2,
  childRelationwithParent: () => childRelationwithParent2,
  activtiesRelation: () => activtiesRelation2
});
var usersTable2 = pgTable("users", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  age: integer("age").notNull(),
  notes: text("notes"),
  user_id: text("user_id"),
  parent_id: integer("parent_id")
});
var measurementsTable2 = pgTable("measurements", {
  id: serial("id").primaryKey(),
  name: text("name").notNull()
});
var measurementsDataTable2 = pgTable("measurementsData", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").notNull().references(() => usersTable2.id),
  measurement_id: integer("measurement_id").references(() => measurementsTable2.id),
  value: numeric("value"),
  created_at: timestamp("created_at", { mode: "string" })
});
var weightTable2 = pgTable("weight", {
  id: serial("id").primaryKey(),
  scaleWeight: numeric("scaleWeight"),
  created_at: timestamp("created_at"),
  trendWeight: numeric("trendWeight"),
  user_id: integer("user_id").notNull().references(() => usersTable2.id)
});
var nutritionTable2 = pgTable("nutrition", {
  id: serial("id").primaryKey(),
  calories: numeric("calories"),
  protein: numeric("protein"),
  fat: numeric("fat"),
  carbs: numeric("carbs"),
  created_at: timestamp("created_at"),
  user_id: integer("user_id").notNull().references(() => usersTable2.id)
});
var weightUnitsTable2 = pgTable("weightUnits", {
  id: serial("id").primaryKey(),
  unit: text("unit").notNull()
});
var customFoodTable2 = pgTable("foodsTable", {
  id: serial("id").primaryKey(),
  foodName: text("foodName"),
  defaultProtein: numeric("defaultProtein"),
  defaultServing: numeric("defaultServing"),
  defaultCalories: numeric("defaultCalories"),
  defaultCarbs: numeric("defaultCarbs"),
  defaultFat: numeric("defaultFat"),
  user_id: integer("user_id").references(() => usersTable2.id)
});
var heightUnitTable2 = pgTable("heightUnit", {
  id: serial("id").primaryKey(),
  unit: text("unit").notNull()
});
var programmesTable2 = pgTable("programme", {
  id: serial("id").primaryKey(),
  name: text("name"),
  description: text("description"),
  user_id: integer("user_id").references(() => usersTable2.id),
  assigned_to: integer("assigned_to").references(() => usersTable2.id)
});
var exerciseTable2 = pgTable("exercise", {
  id: serial("id").primaryKey(),
  name: text("name"),
  equipment: text("equipment"),
  type: text("type"),
  instructions: text("instructions"),
  photo: text("photo")
});
var customExerciseTable2 = pgTable("customExercise", {
  id: serial("id").primaryKey(),
  name: text("name"),
  equipment: text("equipment"),
  type: text("type"),
  instructions: text("instructions"),
  photo: text("photo"),
  user_id: integer("user_id").references(() => usersTable2.id)
});
var workoutTable2 = pgTable("workout", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").references(() => usersTable2.id),
  name: text("name"),
  programme_id: integer("programme_id").references(() => programmesTable2.id),
  created_at: timestamp("created_at")
});
var userProgrammeTable2 = pgTable("userProgramme", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").references(() => usersTable2.id),
  programme_id: integer("programme_id").references(() => programmesTable2.id),
  status: text("status")
});
var latestActivitiesTable2 = pgTable("latestActivities", {
  id: serial("id").primaryKey(),
  sender_id: integer("sender_id").references(() => usersTable2.id),
  reciever_id: integer("reciever_id").references(() => usersTable2.id),
  message: text("message")
});
var programmeWorkoutTable2 = pgTable("programmeWorkout", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  programme_id: integer("programme_id").references(() => programmesTable2.id)
});
var programmeDetailsTable2 = pgTable("programmeDetails", {
  id: serial("id").primaryKey(),
  exercise_id: integer("exercise_id").references(() => exerciseTable2.id),
  repRange: text("repRange"),
  programme_workoutId: integer("programme_workoutId").references(() => programmeWorkoutTable2.id),
  sets: integer("sets")
});
var roomsTable2 = pgTable("rooms", {
  id: serial("id").primaryKey(),
  name: text("name"),
  user_id: integer("user_id").references(() => usersTable2.id)
});
var roomMembersTable2 = pgTable("roomMembers", {
  id: serial("id").primaryKey(),
  user_id: integer("user_id").references(() => usersTable2.id),
  room_id: integer("room_id").references(() => roomsTable2.id)
});
var messagesTable2 = pgTable("messages", {
  id: serial("id").primaryKey(),
  content: text("content"),
  created_at: timestamp("created_at"),
  user_id: integer("user_id").references(() => usersTable2.id),
  room_id: integer("room_id").references(() => roomsTable2.id)
});
var workoutDetailsTable2 = pgTable("workoutDetails", {
  id: serial("id").primaryKey(),
  workout_id: integer("workout_id").references(() => workoutTable2.id),
  set: numeric("set"),
  reps: numeric("reps"),
  weight: numeric("weight"),
  rir: numeric("rir"),
  exercise_id: integer("exercise_id").references(() => exerciseTable2.id)
});
var userRelations2 = relations(usersTable2, ({ many }) => ({
  weight: many(weightTable2),
  nutrients: many(nutritionTable2),
  measurementData: many(measurementsDataTable2),
  workout: many(workoutTable2),
  customFood: many(customFoodTable2),
  programmes: many(programmesTable2),
  userProgramme: many(userProgrammeTable2),
  rooms: many(roomsTable2),
  room_members: many(roomMembersTable2),
  messages: many(messagesTable2),
  customExercises: many(customExerciseTable2),
  sender: many(latestActivitiesTable2, {
    relationName: "senderActivity"
  }),
  reciever: many(latestActivitiesTable2, {
    relationName: "receiverActivity"
  })
}));
var roomRelations2 = relations(roomsTable2, ({ one, many }) => ({
  roomMembers: many(roomMembersTable2),
  messages: many(messagesTable2),
  user: one(usersTable2, {
    fields: [roomsTable2.user_id],
    references: [usersTable2.id]
  })
}));
var messagesRelations2 = relations(messagesTable2, ({ one, many }) => ({
  user: one(usersTable2, {
    fields: [messagesTable2.user_id],
    references: [usersTable2.id]
  }),
  room: one(roomsTable2, {
    fields: [messagesTable2.room_id],
    references: [roomsTable2.id]
  })
}));
var roomMembersRelations2 = relations(roomMembersTable2, ({ one }) => ({
  user: one(usersTable2, {
    fields: [roomMembersTable2.user_id],
    references: [usersTable2.id]
  }),
  room: one(roomsTable2, {
    fields: [roomMembersTable2.room_id],
    references: [roomsTable2.id]
  })
}));
var measurementRelationwithData2 = relations(measurementsTable2, ({ many }) => ({
  measurementData: many(measurementsDataTable2)
}));
var measurementDataTableWithMeasurement2 = relations(measurementsDataTable2, ({ one }) => ({
  measurement: one(measurementsTable2, {
    fields: [measurementsDataTable2.measurement_id],
    references: [measurementsTable2.id]
  }),
  user: one(usersTable2, {
    fields: [measurementsDataTable2.user_id],
    references: [usersTable2.id]
  })
}));
var parent_child2 = relations(usersTable2, ({ one, many }) => ({
  parent: one(usersTable2, {
    fields: [usersTable2.parent_id],
    references: [usersTable2.id],
    relationName: "children"
  }),
  children: many(usersTable2, {
    relationName: "children"
  })
}));
var weightRelations2 = relations(weightTable2, ({ one }) => ({
  user: one(usersTable2, {
    fields: [weightTable2.user_id],
    references: [usersTable2.id]
  })
}));
var nutritionRelations2 = relations(nutritionTable2, ({ one }) => ({
  user: one(usersTable2, {
    fields: [nutritionTable2.user_id],
    references: [usersTable2.id]
  })
}));
var customExerciseRelationWithUser2 = relations(customExerciseTable2, ({ one }) => ({
  user: one(usersTable2, {
    fields: [customExerciseTable2.user_id],
    references: [usersTable2.id]
  })
}));
var programmeUserRelationWithUser2 = relations(userProgrammeTable2, ({ one }) => ({
  user: one(usersTable2, {
    fields: [userProgrammeTable2.user_id],
    references: [usersTable2.id]
  })
}));
var programmeUserRelationWithProgramme2 = relations(userProgrammeTable2, ({ one }) => ({
  programme: one(programmesTable2, {
    fields: [userProgrammeTable2.programme_id],
    references: [programmesTable2.id]
  })
}));
var workoutDetailRelationWithExercise2 = relations(workoutDetailsTable2, ({ one }) => ({
  exercise: one(exerciseTable2, {
    fields: [workoutDetailsTable2.exercise_id],
    references: [exerciseTable2.id]
  })
}));
var programmeRelationsWithUser2 = relations(programmesTable2, ({ one }) => ({
  usersTable: one(usersTable2, {
    fields: [programmesTable2.user_id],
    references: [usersTable2.id]
  })
}));
var childRelationwithParent2 = relations(usersTable2, ({ one }) => ({
  parent: one(usersTable2, {
    fields: [usersTable2.parent_id],
    references: [usersTable2.id]
  })
}));
var workoutRelationWithUser2 = relations(workoutTable2, ({ one }) => ({
  user: one(usersTable2, {
    fields: [workoutTable2.user_id],
    references: [usersTable2.id]
  }),
  programme: one(programmesTable2, {
    fields: [workoutTable2.programme_id],
    references: [programmesTable2.id]
  })
}));
var exerciseWorkoutRelation2 = relations(exerciseTable2, ({ many }) => ({
  workout: many(workoutDetailsTable2),
  programmeDetails: many(programmeDetailsTable2)
}));
var workoutRelations2 = relations(workoutTable2, ({ many }) => ({
  workoutDetail: many(workoutDetailsTable2)
}));
var workoutDetailRelation2 = relations(workoutDetailsTable2, ({ one }) => ({
  workout: one(workoutTable2, {
    fields: [workoutDetailsTable2.workout_id],
    references: [workoutTable2.id]
  })
}));
var programmeDetailsRelationWithProgramme2 = relations(programmeDetailsTable2, ({ one }) => ({
  programmeWorkout: one(programmeWorkoutTable2, {
    fields: [programmeDetailsTable2.programme_workoutId],
    references: [programmeWorkoutTable2.id]
  })
}));
var programmeRelationWithProgramme2 = relations(programmesTable2, ({ many }) => ({
  userProgramme: many(userProgrammeTable2),
  workout: many(workoutTable2),
  programmeWorkout: many(programmeWorkoutTable2)
}));
var programmeWorkoutRelation2 = relations(programmeWorkoutTable2, ({ one }) => ({
  programme: one(programmesTable2, {
    fields: [programmeWorkoutTable2.programme_id],
    references: [programmesTable2.id]
  })
}));
var programmeWorkoutDetailRelation2 = relations(programmeWorkoutTable2, ({ many }) => ({
  programmeDetails: many(programmeDetailsTable2)
}));
var programmeDetailRelationWithExercise2 = relations(programmeDetailsTable2, ({ one }) => ({
  exercise: one(exerciseTable2, {
    fields: [programmeDetailsTable2.exercise_id],
    references: [exerciseTable2.id]
  })
}));
var customFoodRelation2 = relations(customFoodTable2, ({ one }) => ({
  user: one(usersTable2, {
    fields: [customFoodTable2.user_id],
    references: [usersTable2.id]
  })
}));
var activtiesRelation2 = relations(latestActivitiesTable2, ({ one }) => ({
  sender: one(usersTable2, {
    fields: [latestActivitiesTable2.sender_id],
    references: [usersTable2.id],
    relationName: "senderActivity"
  }),
  reciever: one(usersTable2, {
    fields: [latestActivitiesTable2.reciever_id],
    references: [usersTable2.id],
    relationName: "receiverActivity"
  })
}));

// src/db/db.js
var import_dotenv = __toESM(require_main(), 1);
var import_config = __toESM(require_config(), 1);
import_dotenv.config({ path: ".env" });
var sql2 = cs(process.env.DATABASE_URL);
var db = drizzle(sql2, { schema: exports_schema });

// node_modules/hono/dist/middleware/cors/index.js
var cors = (options) => {
  const defaults = {
    origin: "*",
    allowMethods: ["GET", "HEAD", "PUT", "POST", "DELETE", "PATCH"],
    allowHeaders: [],
    exposeHeaders: []
  };
  const opts = {
    ...defaults,
    ...options
  };
  const findAllowOrigin = ((optsOrigin) => {
    if (typeof optsOrigin === "string") {
      if (optsOrigin === "*") {
        return () => optsOrigin;
      } else {
        return (origin) => optsOrigin === origin ? origin : null;
      }
    } else if (typeof optsOrigin === "function") {
      return optsOrigin;
    } else {
      return (origin) => optsOrigin.includes(origin) ? origin : null;
    }
  })(opts.origin);
  return async function cors2(c3, next) {
    function set(key, value) {
      c3.res.headers.set(key, value);
    }
    const allowOrigin = findAllowOrigin(c3.req.header("origin") || "", c3);
    if (allowOrigin) {
      set("Access-Control-Allow-Origin", allowOrigin);
    }
    if (opts.origin !== "*") {
      const existingVary = c3.req.header("Vary");
      if (existingVary) {
        set("Vary", existingVary);
      } else {
        set("Vary", "Origin");
      }
    }
    if (opts.credentials) {
      set("Access-Control-Allow-Credentials", "true");
    }
    if (opts.exposeHeaders?.length) {
      set("Access-Control-Expose-Headers", opts.exposeHeaders.join(","));
    }
    if (c3.req.method === "OPTIONS") {
      if (opts.maxAge != null) {
        set("Access-Control-Max-Age", opts.maxAge.toString());
      }
      if (opts.allowMethods?.length) {
        set("Access-Control-Allow-Methods", opts.allowMethods.join(","));
      }
      let headers = opts.allowHeaders;
      if (!headers?.length) {
        const requestHeaders = c3.req.header("Access-Control-Request-Headers");
        if (requestHeaders) {
          headers = requestHeaders.split(/\s*,\s*/);
        }
      }
      if (headers?.length) {
        set("Access-Control-Allow-Headers", headers.join(","));
        c3.res.headers.append("Vary", "Access-Control-Request-Headers");
      }
      c3.res.headers.delete("Content-Length");
      c3.res.headers.delete("Content-Type");
      return new Response(null, {
        headers: c3.res.headers,
        status: 204,
        statusText: "No Content"
      });
    }
    await next();
  };
};

// node_modules/@asteasolutions/zod-to-openapi/dist/index.mjs
function __rest(s2, e) {
  var t = {};
  for (var p4 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p4) && e.indexOf(p4) < 0)
      t[p4] = s2[p4];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p4 = Object.getOwnPropertySymbols(s2);i < p4.length; i++) {
      if (e.indexOf(p4[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p4[i]))
        t[p4[i]] = s2[p4[i]];
    }
  return t;
}
function isZodType(schema, typeName) {
  var _a;
  return ((_a = schema === null || schema === undefined ? undefined : schema._def) === null || _a === undefined ? undefined : _a.typeName) === typeName;
}
function preserveMetadataFromModifier(zod, modifier) {
  const zodModifier = zod.ZodType.prototype[modifier];
  zod.ZodType.prototype[modifier] = function(...args) {
    const result = zodModifier.apply(this, args);
    result._def.openapi = this._def.openapi;
    return result;
  };
}
function extendZodWithOpenApi(zod) {
  if (typeof zod.ZodType.prototype.openapi !== "undefined") {
    return;
  }
  zod.ZodType.prototype.openapi = function(refOrOpenapi, metadata) {
    var _a, _b2, _c, _d2, _e, _f;
    const openapi = typeof refOrOpenapi === "string" ? metadata : refOrOpenapi;
    const _g = openapi !== null && openapi !== undefined ? openapi : {}, { param } = _g, restOfOpenApi = __rest(_g, ["param"]);
    const _internal = Object.assign(Object.assign({}, (_a = this._def.openapi) === null || _a === undefined ? undefined : _a._internal), typeof refOrOpenapi === "string" ? { refId: refOrOpenapi } : undefined);
    const resultMetadata = Object.assign(Object.assign(Object.assign({}, (_b2 = this._def.openapi) === null || _b2 === undefined ? undefined : _b2.metadata), restOfOpenApi), ((_d2 = (_c = this._def.openapi) === null || _c === undefined ? undefined : _c.metadata) === null || _d2 === undefined ? undefined : _d2.param) || param ? {
      param: Object.assign(Object.assign({}, (_f = (_e = this._def.openapi) === null || _e === undefined ? undefined : _e.metadata) === null || _f === undefined ? undefined : _f.param), param)
    } : undefined);
    const result = new this.constructor(Object.assign(Object.assign({}, this._def), { openapi: Object.assign(Object.assign({}, Object.keys(_internal).length > 0 ? { _internal } : undefined), Object.keys(resultMetadata).length > 0 ? { metadata: resultMetadata } : undefined) }));
    if (isZodType(this, "ZodObject")) {
      const originalExtend = this.extend;
      result.extend = function(...args) {
        var _a2, _b3, _c2, _d3, _e2, _f2;
        const extendedResult = originalExtend.apply(this, args);
        extendedResult._def.openapi = {
          _internal: {
            extendedFrom: ((_b3 = (_a2 = this._def.openapi) === null || _a2 === undefined ? undefined : _a2._internal) === null || _b3 === undefined ? undefined : _b3.refId) ? { refId: (_d3 = (_c2 = this._def.openapi) === null || _c2 === undefined ? undefined : _c2._internal) === null || _d3 === undefined ? undefined : _d3.refId, schema: this } : (_e2 = this._def.openapi) === null || _e2 === undefined ? undefined : _e2._internal.extendedFrom
          },
          metadata: (_f2 = extendedResult._def.openapi) === null || _f2 === undefined ? undefined : _f2.metadata
        };
        return extendedResult;
      };
    }
    return result;
  };
  preserveMetadataFromModifier(zod, "optional");
  preserveMetadataFromModifier(zod, "nullable");
  preserveMetadataFromModifier(zod, "default");
  preserveMetadataFromModifier(zod, "transform");
  preserveMetadataFromModifier(zod, "refine");
  const zodDeepPartial = zod.ZodObject.prototype.deepPartial;
  zod.ZodObject.prototype.deepPartial = function() {
    const initialShape = this._def.shape();
    const result = zodDeepPartial.apply(this);
    const resultShape = result._def.shape();
    Object.entries(resultShape).forEach(([key, value]) => {
      var _a, _b2;
      value._def.openapi = (_b2 = (_a = initialShape[key]) === null || _a === undefined ? undefined : _a._def) === null || _b2 === undefined ? undefined : _b2.openapi;
    });
    result._def.openapi = undefined;
    return result;
  };
  const zodPick = zod.ZodObject.prototype.pick;
  zod.ZodObject.prototype.pick = function(...args) {
    const result = zodPick.apply(this, args);
    result._def.openapi = undefined;
    return result;
  };
  const zodOmit = zod.ZodObject.prototype.omit;
  zod.ZodObject.prototype.omit = function(...args) {
    const result = zodOmit.apply(this, args);
    result._def.openapi = undefined;
    return result;
  };
}

// node_modules/zod/dist/esm/v3/external.js
var exports_external = {};
__export(exports_external, {
  void: () => voidType,
  util: () => util,
  unknown: () => unknownType,
  union: () => unionType,
  undefined: () => undefinedType,
  tuple: () => tupleType,
  transformer: () => effectsType,
  symbol: () => symbolType,
  string: () => stringType,
  strictObject: () => strictObjectType,
  setErrorMap: () => setErrorMap,
  set: () => setType,
  record: () => recordType,
  quotelessJson: () => quotelessJson,
  promise: () => promiseType,
  preprocess: () => preprocessType,
  pipeline: () => pipelineType,
  ostring: () => ostring,
  optional: () => optionalType,
  onumber: () => onumber,
  oboolean: () => oboolean,
  objectUtil: () => objectUtil,
  object: () => objectType,
  number: () => numberType,
  nullable: () => nullableType,
  null: () => nullType,
  never: () => neverType,
  nativeEnum: () => nativeEnumType,
  nan: () => nanType,
  map: () => mapType,
  makeIssue: () => makeIssue,
  literal: () => literalType,
  lazy: () => lazyType,
  late: () => late,
  isValid: () => isValid,
  isDirty: () => isDirty,
  isAsync: () => isAsync,
  isAborted: () => isAborted,
  intersection: () => intersectionType,
  instanceof: () => instanceOfType,
  getParsedType: () => getParsedType,
  getErrorMap: () => getErrorMap,
  function: () => functionType,
  enum: () => enumType,
  effect: () => effectsType,
  discriminatedUnion: () => discriminatedUnionType,
  defaultErrorMap: () => en_default,
  datetimeRegex: () => datetimeRegex,
  date: () => dateType,
  custom: () => custom,
  coerce: () => coerce,
  boolean: () => booleanType,
  bigint: () => bigIntType,
  array: () => arrayType,
  any: () => anyType,
  addIssueToContext: () => addIssueToContext,
  ZodVoid: () => ZodVoid,
  ZodUnknown: () => ZodUnknown,
  ZodUnion: () => ZodUnion,
  ZodUndefined: () => ZodUndefined,
  ZodType: () => ZodType,
  ZodTuple: () => ZodTuple,
  ZodTransformer: () => ZodEffects,
  ZodSymbol: () => ZodSymbol,
  ZodString: () => ZodString,
  ZodSet: () => ZodSet,
  ZodSchema: () => ZodType,
  ZodRecord: () => ZodRecord,
  ZodReadonly: () => ZodReadonly,
  ZodPromise: () => ZodPromise,
  ZodPipeline: () => ZodPipeline,
  ZodParsedType: () => ZodParsedType,
  ZodOptional: () => ZodOptional,
  ZodObject: () => ZodObject,
  ZodNumber: () => ZodNumber,
  ZodNullable: () => ZodNullable,
  ZodNull: () => ZodNull,
  ZodNever: () => ZodNever,
  ZodNativeEnum: () => ZodNativeEnum,
  ZodNaN: () => ZodNaN,
  ZodMap: () => ZodMap,
  ZodLiteral: () => ZodLiteral,
  ZodLazy: () => ZodLazy,
  ZodIssueCode: () => ZodIssueCode,
  ZodIntersection: () => ZodIntersection,
  ZodFunction: () => ZodFunction,
  ZodFirstPartyTypeKind: () => ZodFirstPartyTypeKind,
  ZodError: () => ZodError,
  ZodEnum: () => ZodEnum,
  ZodEffects: () => ZodEffects,
  ZodDiscriminatedUnion: () => ZodDiscriminatedUnion,
  ZodDefault: () => ZodDefault,
  ZodDate: () => ZodDate,
  ZodCatch: () => ZodCatch,
  ZodBranded: () => ZodBranded,
  ZodBoolean: () => ZodBoolean,
  ZodBigInt: () => ZodBigInt,
  ZodArray: () => ZodArray,
  ZodAny: () => ZodAny,
  Schema: () => ZodType,
  ParseStatus: () => ParseStatus,
  OK: () => OK,
  NEVER: () => NEVER,
  INVALID: () => INVALID,
  EMPTY_PATH: () => EMPTY_PATH,
  DIRTY: () => DIRTY,
  BRAND: () => BRAND
});

// node_modules/zod/dist/esm/v3/helpers/util.js
var util;
(function(util2) {
  util2.assertEqual = (_3) => {};
  function assertIs(_arg) {}
  util2.assertIs = assertIs;
  function assertNever(_x) {
    throw new Error;
  }
  util2.assertNever = assertNever;
  util2.arrayToEnum = (items) => {
    const obj = {};
    for (const item of items) {
      obj[item] = item;
    }
    return obj;
  };
  util2.getValidEnumValues = (obj) => {
    const validKeys = util2.objectKeys(obj).filter((k3) => typeof obj[obj[k3]] !== "number");
    const filtered = {};
    for (const k3 of validKeys) {
      filtered[k3] = obj[k3];
    }
    return util2.objectValues(filtered);
  };
  util2.objectValues = (obj) => {
    return util2.objectKeys(obj).map(function(e) {
      return obj[e];
    });
  };
  util2.objectKeys = typeof Object.keys === "function" ? (obj) => Object.keys(obj) : (object) => {
    const keys = [];
    for (const key in object) {
      if (Object.prototype.hasOwnProperty.call(object, key)) {
        keys.push(key);
      }
    }
    return keys;
  };
  util2.find = (arr, checker) => {
    for (const item of arr) {
      if (checker(item))
        return item;
    }
    return;
  };
  util2.isInteger = typeof Number.isInteger === "function" ? (val) => Number.isInteger(val) : (val) => typeof val === "number" && Number.isFinite(val) && Math.floor(val) === val;
  function joinValues(array, separator = " | ") {
    return array.map((val) => typeof val === "string" ? `'${val}'` : val).join(separator);
  }
  util2.joinValues = joinValues;
  util2.jsonStringifyReplacer = (_3, value) => {
    if (typeof value === "bigint") {
      return value.toString();
    }
    return value;
  };
})(util || (util = {}));
var objectUtil;
(function(objectUtil2) {
  objectUtil2.mergeShapes = (first, second) => {
    return {
      ...first,
      ...second
    };
  };
})(objectUtil || (objectUtil = {}));
var ZodParsedType = util.arrayToEnum([
  "string",
  "nan",
  "number",
  "integer",
  "float",
  "boolean",
  "date",
  "bigint",
  "symbol",
  "function",
  "undefined",
  "null",
  "array",
  "object",
  "unknown",
  "promise",
  "void",
  "never",
  "map",
  "set"
]);
var getParsedType = (data) => {
  const t = typeof data;
  switch (t) {
    case "undefined":
      return ZodParsedType.undefined;
    case "string":
      return ZodParsedType.string;
    case "number":
      return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;
    case "boolean":
      return ZodParsedType.boolean;
    case "function":
      return ZodParsedType.function;
    case "bigint":
      return ZodParsedType.bigint;
    case "symbol":
      return ZodParsedType.symbol;
    case "object":
      if (Array.isArray(data)) {
        return ZodParsedType.array;
      }
      if (data === null) {
        return ZodParsedType.null;
      }
      if (data.then && typeof data.then === "function" && data.catch && typeof data.catch === "function") {
        return ZodParsedType.promise;
      }
      if (typeof Map !== "undefined" && data instanceof Map) {
        return ZodParsedType.map;
      }
      if (typeof Set !== "undefined" && data instanceof Set) {
        return ZodParsedType.set;
      }
      if (typeof Date !== "undefined" && data instanceof Date) {
        return ZodParsedType.date;
      }
      return ZodParsedType.object;
    default:
      return ZodParsedType.unknown;
  }
};

// node_modules/zod/dist/esm/v3/ZodError.js
var ZodIssueCode = util.arrayToEnum([
  "invalid_type",
  "invalid_literal",
  "custom",
  "invalid_union",
  "invalid_union_discriminator",
  "invalid_enum_value",
  "unrecognized_keys",
  "invalid_arguments",
  "invalid_return_type",
  "invalid_date",
  "invalid_string",
  "too_small",
  "too_big",
  "invalid_intersection_types",
  "not_multiple_of",
  "not_finite"
]);
var quotelessJson = (obj) => {
  const json2 = JSON.stringify(obj, null, 2);
  return json2.replace(/"([^"]+)":/g, "$1:");
};

class ZodError extends Error {
  get errors() {
    return this.issues;
  }
  constructor(issues) {
    super();
    this.issues = [];
    this.addIssue = (sub) => {
      this.issues = [...this.issues, sub];
    };
    this.addIssues = (subs = []) => {
      this.issues = [...this.issues, ...subs];
    };
    const actualProto = new.target.prototype;
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(this, actualProto);
    } else {
      this.__proto__ = actualProto;
    }
    this.name = "ZodError";
    this.issues = issues;
  }
  format(_mapper) {
    const mapper = _mapper || function(issue) {
      return issue.message;
    };
    const fieldErrors = { _errors: [] };
    const processError = (error) => {
      for (const issue of error.issues) {
        if (issue.code === "invalid_union") {
          issue.unionErrors.map(processError);
        } else if (issue.code === "invalid_return_type") {
          processError(issue.returnTypeError);
        } else if (issue.code === "invalid_arguments") {
          processError(issue.argumentsError);
        } else if (issue.path.length === 0) {
          fieldErrors._errors.push(mapper(issue));
        } else {
          let curr = fieldErrors;
          let i = 0;
          while (i < issue.path.length) {
            const el2 = issue.path[i];
            const terminal = i === issue.path.length - 1;
            if (!terminal) {
              curr[el2] = curr[el2] || { _errors: [] };
            } else {
              curr[el2] = curr[el2] || { _errors: [] };
              curr[el2]._errors.push(mapper(issue));
            }
            curr = curr[el2];
            i++;
          }
        }
      }
    };
    processError(this);
    return fieldErrors;
  }
  static assert(value) {
    if (!(value instanceof ZodError)) {
      throw new Error(`Not a ZodError: ${value}`);
    }
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(mapper = (issue) => issue.message) {
    const fieldErrors = {};
    const formErrors = [];
    for (const sub of this.issues) {
      if (sub.path.length > 0) {
        fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];
        fieldErrors[sub.path[0]].push(mapper(sub));
      } else {
        formErrors.push(mapper(sub));
      }
    }
    return { formErrors, fieldErrors };
  }
  get formErrors() {
    return this.flatten();
  }
}
ZodError.create = (issues) => {
  const error = new ZodError(issues);
  return error;
};

// node_modules/zod/dist/esm/v3/locales/en.js
var errorMap = (issue, _ctx) => {
  let message;
  switch (issue.code) {
    case ZodIssueCode.invalid_type:
      if (issue.received === ZodParsedType.undefined) {
        message = "Required";
      } else {
        message = `Expected ${issue.expected}, received ${issue.received}`;
      }
      break;
    case ZodIssueCode.invalid_literal:
      message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;
      break;
    case ZodIssueCode.unrecognized_keys:
      message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, ", ")}`;
      break;
    case ZodIssueCode.invalid_union:
      message = `Invalid input`;
      break;
    case ZodIssueCode.invalid_union_discriminator:
      message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;
      break;
    case ZodIssueCode.invalid_enum_value:
      message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;
      break;
    case ZodIssueCode.invalid_arguments:
      message = `Invalid function arguments`;
      break;
    case ZodIssueCode.invalid_return_type:
      message = `Invalid function return type`;
      break;
    case ZodIssueCode.invalid_date:
      message = `Invalid date`;
      break;
    case ZodIssueCode.invalid_string:
      if (typeof issue.validation === "object") {
        if ("includes" in issue.validation) {
          message = `Invalid input: must include "${issue.validation.includes}"`;
          if (typeof issue.validation.position === "number") {
            message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;
          }
        } else if ("startsWith" in issue.validation) {
          message = `Invalid input: must start with "${issue.validation.startsWith}"`;
        } else if ("endsWith" in issue.validation) {
          message = `Invalid input: must end with "${issue.validation.endsWith}"`;
        } else {
          util.assertNever(issue.validation);
        }
      } else if (issue.validation !== "regex") {
        message = `Invalid ${issue.validation}`;
      } else {
        message = "Invalid";
      }
      break;
    case ZodIssueCode.too_small:
      if (issue.type === "array")
        message = `Array must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;
      else if (issue.type === "string")
        message = `String must contain ${issue.exact ? "exactly" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;
      else if (issue.type === "number")
        message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;
      else if (issue.type === "date")
        message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;
      else
        message = "Invalid input";
      break;
    case ZodIssueCode.too_big:
      if (issue.type === "array")
        message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;
      else if (issue.type === "string")
        message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;
      else if (issue.type === "number")
        message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "bigint")
        message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;
      else if (issue.type === "date")
        message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;
      else
        message = "Invalid input";
      break;
    case ZodIssueCode.custom:
      message = `Invalid input`;
      break;
    case ZodIssueCode.invalid_intersection_types:
      message = `Intersection results could not be merged`;
      break;
    case ZodIssueCode.not_multiple_of:
      message = `Number must be a multiple of ${issue.multipleOf}`;
      break;
    case ZodIssueCode.not_finite:
      message = "Number must be finite";
      break;
    default:
      message = _ctx.defaultError;
      util.assertNever(issue);
  }
  return { message };
};
var en_default = errorMap;

// node_modules/zod/dist/esm/v3/errors.js
var overrideErrorMap = en_default;
function setErrorMap(map) {
  overrideErrorMap = map;
}
function getErrorMap() {
  return overrideErrorMap;
}
// node_modules/zod/dist/esm/v3/helpers/parseUtil.js
var makeIssue = (params) => {
  const { data, path, errorMaps, issueData } = params;
  const fullPath = [...path, ...issueData.path || []];
  const fullIssue = {
    ...issueData,
    path: fullPath
  };
  if (issueData.message !== undefined) {
    return {
      ...issueData,
      path: fullPath,
      message: issueData.message
    };
  }
  let errorMessage = "";
  const maps = errorMaps.filter((m3) => !!m3).slice().reverse();
  for (const map of maps) {
    errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;
  }
  return {
    ...issueData,
    path: fullPath,
    message: errorMessage
  };
};
var EMPTY_PATH = [];
function addIssueToContext(ctx, issueData) {
  const overrideMap = getErrorMap();
  const issue = makeIssue({
    issueData,
    data: ctx.data,
    path: ctx.path,
    errorMaps: [
      ctx.common.contextualErrorMap,
      ctx.schemaErrorMap,
      overrideMap,
      overrideMap === en_default ? undefined : en_default
    ].filter((x4) => !!x4)
  });
  ctx.common.issues.push(issue);
}

class ParseStatus {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    if (this.value === "valid")
      this.value = "dirty";
  }
  abort() {
    if (this.value !== "aborted")
      this.value = "aborted";
  }
  static mergeArray(status, results) {
    const arrayValue = [];
    for (const s2 of results) {
      if (s2.status === "aborted")
        return INVALID;
      if (s2.status === "dirty")
        status.dirty();
      arrayValue.push(s2.value);
    }
    return { status: status.value, value: arrayValue };
  }
  static async mergeObjectAsync(status, pairs) {
    const syncPairs = [];
    for (const pair of pairs) {
      const key = await pair.key;
      const value = await pair.value;
      syncPairs.push({
        key,
        value
      });
    }
    return ParseStatus.mergeObjectSync(status, syncPairs);
  }
  static mergeObjectSync(status, pairs) {
    const finalObject = {};
    for (const pair of pairs) {
      const { key, value } = pair;
      if (key.status === "aborted")
        return INVALID;
      if (value.status === "aborted")
        return INVALID;
      if (key.status === "dirty")
        status.dirty();
      if (value.status === "dirty")
        status.dirty();
      if (key.value !== "__proto__" && (typeof value.value !== "undefined" || pair.alwaysSet)) {
        finalObject[key.value] = value.value;
      }
    }
    return { status: status.value, value: finalObject };
  }
}
var INVALID = Object.freeze({
  status: "aborted"
});
var DIRTY = (value) => ({ status: "dirty", value });
var OK = (value) => ({ status: "valid", value });
var isAborted = (x4) => x4.status === "aborted";
var isDirty = (x4) => x4.status === "dirty";
var isValid = (x4) => x4.status === "valid";
var isAsync = (x4) => typeof Promise !== "undefined" && x4 instanceof Promise;
// node_modules/zod/dist/esm/v3/helpers/errorUtil.js
var errorUtil;
(function(errorUtil2) {
  errorUtil2.errToObj = (message) => typeof message === "string" ? { message } : message || {};
  errorUtil2.toString = (message) => typeof message === "string" ? message : message?.message;
})(errorUtil || (errorUtil = {}));

// node_modules/zod/dist/esm/v3/types.js
class ParseInputLazyPath {
  constructor(parent, value, path, key) {
    this._cachedPath = [];
    this.parent = parent;
    this.data = value;
    this._path = path;
    this._key = key;
  }
  get path() {
    if (!this._cachedPath.length) {
      if (Array.isArray(this._key)) {
        this._cachedPath.push(...this._path, ...this._key);
      } else {
        this._cachedPath.push(...this._path, this._key);
      }
    }
    return this._cachedPath;
  }
}
var handleResult = (ctx, result) => {
  if (isValid(result)) {
    return { success: true, data: result.value };
  } else {
    if (!ctx.common.issues.length) {
      throw new Error("Validation failed but no issues detected.");
    }
    return {
      success: false,
      get error() {
        if (this._error)
          return this._error;
        const error = new ZodError(ctx.common.issues);
        this._error = error;
        return this._error;
      }
    };
  }
};
function processCreateParams(params) {
  if (!params)
    return {};
  const { errorMap: errorMap2, invalid_type_error, required_error, description } = params;
  if (errorMap2 && (invalid_type_error || required_error)) {
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  }
  if (errorMap2)
    return { errorMap: errorMap2, description };
  const customMap = (iss, ctx) => {
    const { message } = params;
    if (iss.code === "invalid_enum_value") {
      return { message: message ?? ctx.defaultError };
    }
    if (typeof ctx.data === "undefined") {
      return { message: message ?? required_error ?? ctx.defaultError };
    }
    if (iss.code !== "invalid_type")
      return { message: ctx.defaultError };
    return { message: message ?? invalid_type_error ?? ctx.defaultError };
  };
  return { errorMap: customMap, description };
}

class ZodType {
  get description() {
    return this._def.description;
  }
  _getType(input) {
    return getParsedType(input.data);
  }
  _getOrReturnCtx(input, ctx) {
    return ctx || {
      common: input.parent.common,
      data: input.data,
      parsedType: getParsedType(input.data),
      schemaErrorMap: this._def.errorMap,
      path: input.path,
      parent: input.parent
    };
  }
  _processInputParams(input) {
    return {
      status: new ParseStatus,
      ctx: {
        common: input.parent.common,
        data: input.data,
        parsedType: getParsedType(input.data),
        schemaErrorMap: this._def.errorMap,
        path: input.path,
        parent: input.parent
      }
    };
  }
  _parseSync(input) {
    const result = this._parse(input);
    if (isAsync(result)) {
      throw new Error("Synchronous parse encountered promise.");
    }
    return result;
  }
  _parseAsync(input) {
    const result = this._parse(input);
    return Promise.resolve(result);
  }
  parse(data, params) {
    const result = this.safeParse(data, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  safeParse(data, params) {
    const ctx = {
      common: {
        issues: [],
        async: params?.async ?? false,
        contextualErrorMap: params?.errorMap
      },
      path: params?.path || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data,
      parsedType: getParsedType(data)
    };
    const result = this._parseSync({ data, path: ctx.path, parent: ctx });
    return handleResult(ctx, result);
  }
  "~validate"(data) {
    const ctx = {
      common: {
        issues: [],
        async: !!this["~standard"].async
      },
      path: [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data,
      parsedType: getParsedType(data)
    };
    if (!this["~standard"].async) {
      try {
        const result = this._parseSync({ data, path: [], parent: ctx });
        return isValid(result) ? {
          value: result.value
        } : {
          issues: ctx.common.issues
        };
      } catch (err) {
        if (err?.message?.toLowerCase()?.includes("encountered")) {
          this["~standard"].async = true;
        }
        ctx.common = {
          issues: [],
          async: true
        };
      }
    }
    return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result) ? {
      value: result.value
    } : {
      issues: ctx.common.issues
    });
  }
  async parseAsync(data, params) {
    const result = await this.safeParseAsync(data, params);
    if (result.success)
      return result.data;
    throw result.error;
  }
  async safeParseAsync(data, params) {
    const ctx = {
      common: {
        issues: [],
        contextualErrorMap: params?.errorMap,
        async: true
      },
      path: params?.path || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data,
      parsedType: getParsedType(data)
    };
    const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });
    const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));
    return handleResult(ctx, result);
  }
  refine(check, message) {
    const getIssueProperties = (val) => {
      if (typeof message === "string" || typeof message === "undefined") {
        return { message };
      } else if (typeof message === "function") {
        return message(val);
      } else {
        return message;
      }
    };
    return this._refinement((val, ctx) => {
      const result = check(val);
      const setError = () => ctx.addIssue({
        code: ZodIssueCode.custom,
        ...getIssueProperties(val)
      });
      if (typeof Promise !== "undefined" && result instanceof Promise) {
        return result.then((data) => {
          if (!data) {
            setError();
            return false;
          } else {
            return true;
          }
        });
      }
      if (!result) {
        setError();
        return false;
      } else {
        return true;
      }
    });
  }
  refinement(check, refinementData) {
    return this._refinement((val, ctx) => {
      if (!check(val)) {
        ctx.addIssue(typeof refinementData === "function" ? refinementData(val, ctx) : refinementData);
        return false;
      } else {
        return true;
      }
    });
  }
  _refinement(refinement) {
    return new ZodEffects({
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "refinement", refinement }
    });
  }
  superRefine(refinement) {
    return this._refinement(refinement);
  }
  constructor(def) {
    this.spa = this.safeParseAsync;
    this._def = def;
    this.parse = this.parse.bind(this);
    this.safeParse = this.safeParse.bind(this);
    this.parseAsync = this.parseAsync.bind(this);
    this.safeParseAsync = this.safeParseAsync.bind(this);
    this.spa = this.spa.bind(this);
    this.refine = this.refine.bind(this);
    this.refinement = this.refinement.bind(this);
    this.superRefine = this.superRefine.bind(this);
    this.optional = this.optional.bind(this);
    this.nullable = this.nullable.bind(this);
    this.nullish = this.nullish.bind(this);
    this.array = this.array.bind(this);
    this.promise = this.promise.bind(this);
    this.or = this.or.bind(this);
    this.and = this.and.bind(this);
    this.transform = this.transform.bind(this);
    this.brand = this.brand.bind(this);
    this.default = this.default.bind(this);
    this.catch = this.catch.bind(this);
    this.describe = this.describe.bind(this);
    this.pipe = this.pipe.bind(this);
    this.readonly = this.readonly.bind(this);
    this.isNullable = this.isNullable.bind(this);
    this.isOptional = this.isOptional.bind(this);
    this["~standard"] = {
      version: 1,
      vendor: "zod",
      validate: (data) => this["~validate"](data)
    };
  }
  optional() {
    return ZodOptional.create(this, this._def);
  }
  nullable() {
    return ZodNullable.create(this, this._def);
  }
  nullish() {
    return this.nullable().optional();
  }
  array() {
    return ZodArray.create(this);
  }
  promise() {
    return ZodPromise.create(this, this._def);
  }
  or(option) {
    return ZodUnion.create([this, option], this._def);
  }
  and(incoming) {
    return ZodIntersection.create(this, incoming, this._def);
  }
  transform(transform) {
    return new ZodEffects({
      ...processCreateParams(this._def),
      schema: this,
      typeName: ZodFirstPartyTypeKind.ZodEffects,
      effect: { type: "transform", transform }
    });
  }
  default(def) {
    const defaultValueFunc = typeof def === "function" ? def : () => def;
    return new ZodDefault({
      ...processCreateParams(this._def),
      innerType: this,
      defaultValue: defaultValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodDefault
    });
  }
  brand() {
    return new ZodBranded({
      typeName: ZodFirstPartyTypeKind.ZodBranded,
      type: this,
      ...processCreateParams(this._def)
    });
  }
  catch(def) {
    const catchValueFunc = typeof def === "function" ? def : () => def;
    return new ZodCatch({
      ...processCreateParams(this._def),
      innerType: this,
      catchValue: catchValueFunc,
      typeName: ZodFirstPartyTypeKind.ZodCatch
    });
  }
  describe(description) {
    const This = this.constructor;
    return new This({
      ...this._def,
      description
    });
  }
  pipe(target) {
    return ZodPipeline.create(this, target);
  }
  readonly() {
    return ZodReadonly.create(this);
  }
  isOptional() {
    return this.safeParse(undefined).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
}
var cuidRegex = /^c[^\s-]{8,}$/i;
var cuid2Regex = /^[0-9a-z]+$/;
var ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;
var uuidRegex = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;
var nanoidRegex = /^[a-z0-9_-]{21}$/i;
var jwtRegex = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/;
var durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/;
var emailRegex = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;
var _emojiRegex = `^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$`;
var emojiRegex;
var ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;
var ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/;
var ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;
var ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;
var base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;
var base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;
var dateRegexSource = `((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))`;
var dateRegex = new RegExp(`^${dateRegexSource}$`);
function timeRegexSource(args) {
  let secondsRegexSource = `[0-5]\\d`;
  if (args.precision) {
    secondsRegexSource = `${secondsRegexSource}\\.\\d{${args.precision}}`;
  } else if (args.precision == null) {
    secondsRegexSource = `${secondsRegexSource}(\\.\\d+)?`;
  }
  const secondsQuantifier = args.precision ? "+" : "?";
  return `([01]\\d|2[0-3]):[0-5]\\d(:${secondsRegexSource})${secondsQuantifier}`;
}
function timeRegex(args) {
  return new RegExp(`^${timeRegexSource(args)}$`);
}
function datetimeRegex(args) {
  let regex = `${dateRegexSource}T${timeRegexSource(args)}`;
  const opts = [];
  opts.push(args.local ? `Z?` : `Z`);
  if (args.offset)
    opts.push(`([+-]\\d{2}:?\\d{2})`);
  regex = `${regex}(${opts.join("|")})`;
  return new RegExp(`^${regex}$`);
}
function isValidIP(ip2, version2) {
  if ((version2 === "v4" || !version2) && ipv4Regex.test(ip2)) {
    return true;
  }
  if ((version2 === "v6" || !version2) && ipv6Regex.test(ip2)) {
    return true;
  }
  return false;
}
function isValidJWT(jwt, alg) {
  if (!jwtRegex.test(jwt))
    return false;
  try {
    const [header] = jwt.split(".");
    const base64 = header.replace(/-/g, "+").replace(/_/g, "/").padEnd(header.length + (4 - header.length % 4) % 4, "=");
    const decoded = JSON.parse(atob(base64));
    if (typeof decoded !== "object" || decoded === null)
      return false;
    if ("typ" in decoded && decoded?.typ !== "JWT")
      return false;
    if (!decoded.alg)
      return false;
    if (alg && decoded.alg !== alg)
      return false;
    return true;
  } catch {
    return false;
  }
}
function isValidCidr(ip2, version2) {
  if ((version2 === "v4" || !version2) && ipv4CidrRegex.test(ip2)) {
    return true;
  }
  if ((version2 === "v6" || !version2) && ipv6CidrRegex.test(ip2)) {
    return true;
  }
  return false;
}

class ZodString extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = String(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.string) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.string,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    const status = new ParseStatus;
    let ctx = undefined;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.length < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.length > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "string",
            inclusive: true,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "length") {
        const tooBig = input.data.length > check.value;
        const tooSmall = input.data.length < check.value;
        if (tooBig || tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          if (tooBig) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_big,
              maximum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          } else if (tooSmall) {
            addIssueToContext(ctx, {
              code: ZodIssueCode.too_small,
              minimum: check.value,
              type: "string",
              inclusive: true,
              exact: true,
              message: check.message
            });
          }
          status.dirty();
        }
      } else if (check.kind === "email") {
        if (!emailRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "email",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "emoji") {
        if (!emojiRegex) {
          emojiRegex = new RegExp(_emojiRegex, "u");
        }
        if (!emojiRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "emoji",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "uuid") {
        if (!uuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "uuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "nanoid") {
        if (!nanoidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "nanoid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid") {
        if (!cuidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cuid2") {
        if (!cuid2Regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cuid2",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ulid") {
        if (!ulidRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ulid",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "url") {
        try {
          new URL(input.data);
        } catch {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "url",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "regex") {
        check.regex.lastIndex = 0;
        const testResult = check.regex.test(input.data);
        if (!testResult) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "regex",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "trim") {
        input.data = input.data.trim();
      } else if (check.kind === "includes") {
        if (!input.data.includes(check.value, check.position)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { includes: check.value, position: check.position },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "toLowerCase") {
        input.data = input.data.toLowerCase();
      } else if (check.kind === "toUpperCase") {
        input.data = input.data.toUpperCase();
      } else if (check.kind === "startsWith") {
        if (!input.data.startsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { startsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "endsWith") {
        if (!input.data.endsWith(check.value)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: { endsWith: check.value },
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "datetime") {
        const regex = datetimeRegex(check);
        if (!regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: "datetime",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "date") {
        const regex = dateRegex;
        if (!regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: "date",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "time") {
        const regex = timeRegex(check);
        if (!regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_string,
            validation: "time",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "duration") {
        if (!durationRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "duration",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "ip") {
        if (!isValidIP(input.data, check.version)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "ip",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "jwt") {
        if (!isValidJWT(input.data, check.alg)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "jwt",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "cidr") {
        if (!isValidCidr(input.data, check.version)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "cidr",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "base64") {
        if (!base64Regex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "base64",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "base64url") {
        if (!base64urlRegex.test(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            validation: "base64url",
            code: ZodIssueCode.invalid_string,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  _regex(regex, validation, message) {
    return this.refinement((data) => regex.test(data), {
      validation,
      code: ZodIssueCode.invalid_string,
      ...errorUtil.errToObj(message)
    });
  }
  _addCheck(check) {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  email(message) {
    return this._addCheck({ kind: "email", ...errorUtil.errToObj(message) });
  }
  url(message) {
    return this._addCheck({ kind: "url", ...errorUtil.errToObj(message) });
  }
  emoji(message) {
    return this._addCheck({ kind: "emoji", ...errorUtil.errToObj(message) });
  }
  uuid(message) {
    return this._addCheck({ kind: "uuid", ...errorUtil.errToObj(message) });
  }
  nanoid(message) {
    return this._addCheck({ kind: "nanoid", ...errorUtil.errToObj(message) });
  }
  cuid(message) {
    return this._addCheck({ kind: "cuid", ...errorUtil.errToObj(message) });
  }
  cuid2(message) {
    return this._addCheck({ kind: "cuid2", ...errorUtil.errToObj(message) });
  }
  ulid(message) {
    return this._addCheck({ kind: "ulid", ...errorUtil.errToObj(message) });
  }
  base64(message) {
    return this._addCheck({ kind: "base64", ...errorUtil.errToObj(message) });
  }
  base64url(message) {
    return this._addCheck({
      kind: "base64url",
      ...errorUtil.errToObj(message)
    });
  }
  jwt(options) {
    return this._addCheck({ kind: "jwt", ...errorUtil.errToObj(options) });
  }
  ip(options) {
    return this._addCheck({ kind: "ip", ...errorUtil.errToObj(options) });
  }
  cidr(options) {
    return this._addCheck({ kind: "cidr", ...errorUtil.errToObj(options) });
  }
  datetime(options) {
    if (typeof options === "string") {
      return this._addCheck({
        kind: "datetime",
        precision: null,
        offset: false,
        local: false,
        message: options
      });
    }
    return this._addCheck({
      kind: "datetime",
      precision: typeof options?.precision === "undefined" ? null : options?.precision,
      offset: options?.offset ?? false,
      local: options?.local ?? false,
      ...errorUtil.errToObj(options?.message)
    });
  }
  date(message) {
    return this._addCheck({ kind: "date", message });
  }
  time(options) {
    if (typeof options === "string") {
      return this._addCheck({
        kind: "time",
        precision: null,
        message: options
      });
    }
    return this._addCheck({
      kind: "time",
      precision: typeof options?.precision === "undefined" ? null : options?.precision,
      ...errorUtil.errToObj(options?.message)
    });
  }
  duration(message) {
    return this._addCheck({ kind: "duration", ...errorUtil.errToObj(message) });
  }
  regex(regex, message) {
    return this._addCheck({
      kind: "regex",
      regex,
      ...errorUtil.errToObj(message)
    });
  }
  includes(value, options) {
    return this._addCheck({
      kind: "includes",
      value,
      position: options?.position,
      ...errorUtil.errToObj(options?.message)
    });
  }
  startsWith(value, message) {
    return this._addCheck({
      kind: "startsWith",
      value,
      ...errorUtil.errToObj(message)
    });
  }
  endsWith(value, message) {
    return this._addCheck({
      kind: "endsWith",
      value,
      ...errorUtil.errToObj(message)
    });
  }
  min(minLength, message) {
    return this._addCheck({
      kind: "min",
      value: minLength,
      ...errorUtil.errToObj(message)
    });
  }
  max(maxLength, message) {
    return this._addCheck({
      kind: "max",
      value: maxLength,
      ...errorUtil.errToObj(message)
    });
  }
  length(len, message) {
    return this._addCheck({
      kind: "length",
      value: len,
      ...errorUtil.errToObj(message)
    });
  }
  nonempty(message) {
    return this.min(1, errorUtil.errToObj(message));
  }
  trim() {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "trim" }]
    });
  }
  toLowerCase() {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toLowerCase" }]
    });
  }
  toUpperCase() {
    return new ZodString({
      ...this._def,
      checks: [...this._def.checks, { kind: "toUpperCase" }]
    });
  }
  get isDatetime() {
    return !!this._def.checks.find((ch2) => ch2.kind === "datetime");
  }
  get isDate() {
    return !!this._def.checks.find((ch2) => ch2.kind === "date");
  }
  get isTime() {
    return !!this._def.checks.find((ch2) => ch2.kind === "time");
  }
  get isDuration() {
    return !!this._def.checks.find((ch2) => ch2.kind === "duration");
  }
  get isEmail() {
    return !!this._def.checks.find((ch2) => ch2.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((ch2) => ch2.kind === "url");
  }
  get isEmoji() {
    return !!this._def.checks.find((ch2) => ch2.kind === "emoji");
  }
  get isUUID() {
    return !!this._def.checks.find((ch2) => ch2.kind === "uuid");
  }
  get isNANOID() {
    return !!this._def.checks.find((ch2) => ch2.kind === "nanoid");
  }
  get isCUID() {
    return !!this._def.checks.find((ch2) => ch2.kind === "cuid");
  }
  get isCUID2() {
    return !!this._def.checks.find((ch2) => ch2.kind === "cuid2");
  }
  get isULID() {
    return !!this._def.checks.find((ch2) => ch2.kind === "ulid");
  }
  get isIP() {
    return !!this._def.checks.find((ch2) => ch2.kind === "ip");
  }
  get isCIDR() {
    return !!this._def.checks.find((ch2) => ch2.kind === "cidr");
  }
  get isBase64() {
    return !!this._def.checks.find((ch2) => ch2.kind === "base64");
  }
  get isBase64url() {
    return !!this._def.checks.find((ch2) => ch2.kind === "base64url");
  }
  get minLength() {
    let min = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min === null || ch2.value > min)
          min = ch2.value;
      }
    }
    return min;
  }
  get maxLength() {
    let max = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max === null || ch2.value < max)
          max = ch2.value;
      }
    }
    return max;
  }
}
ZodString.create = (params) => {
  return new ZodString({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodString,
    coerce: params?.coerce ?? false,
    ...processCreateParams(params)
  });
};
function floatSafeRemainder(val, step) {
  const valDecCount = (val.toString().split(".")[1] || "").length;
  const stepDecCount = (step.toString().split(".")[1] || "").length;
  const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;
  const valInt = Number.parseInt(val.toFixed(decCount).replace(".", ""));
  const stepInt = Number.parseInt(step.toFixed(decCount).replace(".", ""));
  return valInt % stepInt / 10 ** decCount;
}

class ZodNumber extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
    this.step = this.multipleOf;
  }
  _parse(input) {
    if (this._def.coerce) {
      input.data = Number(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.number) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.number,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    let ctx = undefined;
    const status = new ParseStatus;
    for (const check of this._def.checks) {
      if (check.kind === "int") {
        if (!util.isInteger(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.invalid_type,
            expected: "integer",
            received: "float",
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            minimum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            maximum: check.value,
            type: "number",
            inclusive: check.inclusive,
            exact: false,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (floatSafeRemainder(input.data, check.value) !== 0) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "finite") {
        if (!Number.isFinite(input.data)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_finite,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  gte(value, message) {
    return this.setLimit("min", value, true, errorUtil.toString(message));
  }
  gt(value, message) {
    return this.setLimit("min", value, false, errorUtil.toString(message));
  }
  lte(value, message) {
    return this.setLimit("max", value, true, errorUtil.toString(message));
  }
  lt(value, message) {
    return this.setLimit("max", value, false, errorUtil.toString(message));
  }
  setLimit(kind, value, inclusive, message) {
    return new ZodNumber({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message)
        }
      ]
    });
  }
  _addCheck(check) {
    return new ZodNumber({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  int(message) {
    return this._addCheck({
      kind: "int",
      message: errorUtil.toString(message)
    });
  }
  positive(message) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  negative(message) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  nonpositive(message) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  nonnegative(message) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  multipleOf(value, message) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message)
    });
  }
  finite(message) {
    return this._addCheck({
      kind: "finite",
      message: errorUtil.toString(message)
    });
  }
  safe(message) {
    return this._addCheck({
      kind: "min",
      inclusive: true,
      value: Number.MIN_SAFE_INTEGER,
      message: errorUtil.toString(message)
    })._addCheck({
      kind: "max",
      inclusive: true,
      value: Number.MAX_SAFE_INTEGER,
      message: errorUtil.toString(message)
    });
  }
  get minValue() {
    let min = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min === null || ch2.value > min)
          min = ch2.value;
      }
    }
    return min;
  }
  get maxValue() {
    let max = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max === null || ch2.value < max)
          max = ch2.value;
      }
    }
    return max;
  }
  get isInt() {
    return !!this._def.checks.find((ch2) => ch2.kind === "int" || ch2.kind === "multipleOf" && util.isInteger(ch2.value));
  }
  get isFinite() {
    let max = null;
    let min = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "finite" || ch2.kind === "int" || ch2.kind === "multipleOf") {
        return true;
      } else if (ch2.kind === "min") {
        if (min === null || ch2.value > min)
          min = ch2.value;
      } else if (ch2.kind === "max") {
        if (max === null || ch2.value < max)
          max = ch2.value;
      }
    }
    return Number.isFinite(min) && Number.isFinite(max);
  }
}
ZodNumber.create = (params) => {
  return new ZodNumber({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodNumber,
    coerce: params?.coerce || false,
    ...processCreateParams(params)
  });
};

class ZodBigInt extends ZodType {
  constructor() {
    super(...arguments);
    this.min = this.gte;
    this.max = this.lte;
  }
  _parse(input) {
    if (this._def.coerce) {
      try {
        input.data = BigInt(input.data);
      } catch {
        return this._getInvalidInput(input);
      }
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.bigint) {
      return this._getInvalidInput(input);
    }
    let ctx = undefined;
    const status = new ParseStatus;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;
        if (tooSmall) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            type: "bigint",
            minimum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;
        if (tooBig) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            type: "bigint",
            maximum: check.value,
            inclusive: check.inclusive,
            message: check.message
          });
          status.dirty();
        }
      } else if (check.kind === "multipleOf") {
        if (input.data % check.value !== BigInt(0)) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.not_multiple_of,
            multipleOf: check.value,
            message: check.message
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return { status: status.value, value: input.data };
  }
  _getInvalidInput(input) {
    const ctx = this._getOrReturnCtx(input);
    addIssueToContext(ctx, {
      code: ZodIssueCode.invalid_type,
      expected: ZodParsedType.bigint,
      received: ctx.parsedType
    });
    return INVALID;
  }
  gte(value, message) {
    return this.setLimit("min", value, true, errorUtil.toString(message));
  }
  gt(value, message) {
    return this.setLimit("min", value, false, errorUtil.toString(message));
  }
  lte(value, message) {
    return this.setLimit("max", value, true, errorUtil.toString(message));
  }
  lt(value, message) {
    return this.setLimit("max", value, false, errorUtil.toString(message));
  }
  setLimit(kind, value, inclusive, message) {
    return new ZodBigInt({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind,
          value,
          inclusive,
          message: errorUtil.toString(message)
        }
      ]
    });
  }
  _addCheck(check) {
    return new ZodBigInt({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  positive(message) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  negative(message) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: false,
      message: errorUtil.toString(message)
    });
  }
  nonpositive(message) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  nonnegative(message) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: true,
      message: errorUtil.toString(message)
    });
  }
  multipleOf(value, message) {
    return this._addCheck({
      kind: "multipleOf",
      value,
      message: errorUtil.toString(message)
    });
  }
  get minValue() {
    let min = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min === null || ch2.value > min)
          min = ch2.value;
      }
    }
    return min;
  }
  get maxValue() {
    let max = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max === null || ch2.value < max)
          max = ch2.value;
      }
    }
    return max;
  }
}
ZodBigInt.create = (params) => {
  return new ZodBigInt({
    checks: [],
    typeName: ZodFirstPartyTypeKind.ZodBigInt,
    coerce: params?.coerce ?? false,
    ...processCreateParams(params)
  });
};

class ZodBoolean extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = Boolean(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.boolean) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.boolean,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodBoolean.create = (params) => {
  return new ZodBoolean({
    typeName: ZodFirstPartyTypeKind.ZodBoolean,
    coerce: params?.coerce || false,
    ...processCreateParams(params)
  });
};

class ZodDate extends ZodType {
  _parse(input) {
    if (this._def.coerce) {
      input.data = new Date(input.data);
    }
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.date) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.date,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    if (Number.isNaN(input.data.getTime())) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_date
      });
      return INVALID;
    }
    const status = new ParseStatus;
    let ctx = undefined;
    for (const check of this._def.checks) {
      if (check.kind === "min") {
        if (input.data.getTime() < check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_small,
            message: check.message,
            inclusive: true,
            exact: false,
            minimum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else if (check.kind === "max") {
        if (input.data.getTime() > check.value) {
          ctx = this._getOrReturnCtx(input, ctx);
          addIssueToContext(ctx, {
            code: ZodIssueCode.too_big,
            message: check.message,
            inclusive: true,
            exact: false,
            maximum: check.value,
            type: "date"
          });
          status.dirty();
        }
      } else {
        util.assertNever(check);
      }
    }
    return {
      status: status.value,
      value: new Date(input.data.getTime())
    };
  }
  _addCheck(check) {
    return new ZodDate({
      ...this._def,
      checks: [...this._def.checks, check]
    });
  }
  min(minDate, message) {
    return this._addCheck({
      kind: "min",
      value: minDate.getTime(),
      message: errorUtil.toString(message)
    });
  }
  max(maxDate, message) {
    return this._addCheck({
      kind: "max",
      value: maxDate.getTime(),
      message: errorUtil.toString(message)
    });
  }
  get minDate() {
    let min = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "min") {
        if (min === null || ch2.value > min)
          min = ch2.value;
      }
    }
    return min != null ? new Date(min) : null;
  }
  get maxDate() {
    let max = null;
    for (const ch2 of this._def.checks) {
      if (ch2.kind === "max") {
        if (max === null || ch2.value < max)
          max = ch2.value;
      }
    }
    return max != null ? new Date(max) : null;
  }
}
ZodDate.create = (params) => {
  return new ZodDate({
    checks: [],
    coerce: params?.coerce || false,
    typeName: ZodFirstPartyTypeKind.ZodDate,
    ...processCreateParams(params)
  });
};

class ZodSymbol extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.symbol) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.symbol,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodSymbol.create = (params) => {
  return new ZodSymbol({
    typeName: ZodFirstPartyTypeKind.ZodSymbol,
    ...processCreateParams(params)
  });
};

class ZodUndefined extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.undefined,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodUndefined.create = (params) => {
  return new ZodUndefined({
    typeName: ZodFirstPartyTypeKind.ZodUndefined,
    ...processCreateParams(params)
  });
};

class ZodNull extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.null) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.null,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodNull.create = (params) => {
  return new ZodNull({
    typeName: ZodFirstPartyTypeKind.ZodNull,
    ...processCreateParams(params)
  });
};

class ZodAny extends ZodType {
  constructor() {
    super(...arguments);
    this._any = true;
  }
  _parse(input) {
    return OK(input.data);
  }
}
ZodAny.create = (params) => {
  return new ZodAny({
    typeName: ZodFirstPartyTypeKind.ZodAny,
    ...processCreateParams(params)
  });
};

class ZodUnknown extends ZodType {
  constructor() {
    super(...arguments);
    this._unknown = true;
  }
  _parse(input) {
    return OK(input.data);
  }
}
ZodUnknown.create = (params) => {
  return new ZodUnknown({
    typeName: ZodFirstPartyTypeKind.ZodUnknown,
    ...processCreateParams(params)
  });
};

class ZodNever extends ZodType {
  _parse(input) {
    const ctx = this._getOrReturnCtx(input);
    addIssueToContext(ctx, {
      code: ZodIssueCode.invalid_type,
      expected: ZodParsedType.never,
      received: ctx.parsedType
    });
    return INVALID;
  }
}
ZodNever.create = (params) => {
  return new ZodNever({
    typeName: ZodFirstPartyTypeKind.ZodNever,
    ...processCreateParams(params)
  });
};

class ZodVoid extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.undefined) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.void,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return OK(input.data);
  }
}
ZodVoid.create = (params) => {
  return new ZodVoid({
    typeName: ZodFirstPartyTypeKind.ZodVoid,
    ...processCreateParams(params)
  });
};

class ZodArray extends ZodType {
  _parse(input) {
    const { ctx, status } = this._processInputParams(input);
    const def = this._def;
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID;
    }
    if (def.exactLength !== null) {
      const tooBig = ctx.data.length > def.exactLength.value;
      const tooSmall = ctx.data.length < def.exactLength.value;
      if (tooBig || tooSmall) {
        addIssueToContext(ctx, {
          code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,
          minimum: tooSmall ? def.exactLength.value : undefined,
          maximum: tooBig ? def.exactLength.value : undefined,
          type: "array",
          inclusive: true,
          exact: true,
          message: def.exactLength.message
        });
        status.dirty();
      }
    }
    if (def.minLength !== null) {
      if (ctx.data.length < def.minLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.minLength.message
        });
        status.dirty();
      }
    }
    if (def.maxLength !== null) {
      if (ctx.data.length > def.maxLength.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxLength.value,
          type: "array",
          inclusive: true,
          exact: false,
          message: def.maxLength.message
        });
        status.dirty();
      }
    }
    if (ctx.common.async) {
      return Promise.all([...ctx.data].map((item, i) => {
        return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));
      })).then((result2) => {
        return ParseStatus.mergeArray(status, result2);
      });
    }
    const result = [...ctx.data].map((item, i) => {
      return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));
    });
    return ParseStatus.mergeArray(status, result);
  }
  get element() {
    return this._def.type;
  }
  min(minLength, message) {
    return new ZodArray({
      ...this._def,
      minLength: { value: minLength, message: errorUtil.toString(message) }
    });
  }
  max(maxLength, message) {
    return new ZodArray({
      ...this._def,
      maxLength: { value: maxLength, message: errorUtil.toString(message) }
    });
  }
  length(len, message) {
    return new ZodArray({
      ...this._def,
      exactLength: { value: len, message: errorUtil.toString(message) }
    });
  }
  nonempty(message) {
    return this.min(1, message);
  }
}
ZodArray.create = (schema, params) => {
  return new ZodArray({
    type: schema,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: ZodFirstPartyTypeKind.ZodArray,
    ...processCreateParams(params)
  });
};
function deepPartialify(schema) {
  if (schema instanceof ZodObject) {
    const newShape = {};
    for (const key in schema.shape) {
      const fieldSchema = schema.shape[key];
      newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));
    }
    return new ZodObject({
      ...schema._def,
      shape: () => newShape
    });
  } else if (schema instanceof ZodArray) {
    return new ZodArray({
      ...schema._def,
      type: deepPartialify(schema.element)
    });
  } else if (schema instanceof ZodOptional) {
    return ZodOptional.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodNullable) {
    return ZodNullable.create(deepPartialify(schema.unwrap()));
  } else if (schema instanceof ZodTuple) {
    return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));
  } else {
    return schema;
  }
}

class ZodObject extends ZodType {
  constructor() {
    super(...arguments);
    this._cached = null;
    this.nonstrict = this.passthrough;
    this.augment = this.extend;
  }
  _getCached() {
    if (this._cached !== null)
      return this._cached;
    const shape = this._def.shape();
    const keys = util.objectKeys(shape);
    this._cached = { shape, keys };
    return this._cached;
  }
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.object) {
      const ctx2 = this._getOrReturnCtx(input);
      addIssueToContext(ctx2, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx2.parsedType
      });
      return INVALID;
    }
    const { status, ctx } = this._processInputParams(input);
    const { shape, keys: shapeKeys } = this._getCached();
    const extraKeys = [];
    if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === "strip")) {
      for (const key in ctx.data) {
        if (!shapeKeys.includes(key)) {
          extraKeys.push(key);
        }
      }
    }
    const pairs = [];
    for (const key of shapeKeys) {
      const keyValidator = shape[key];
      const value = ctx.data[key];
      pairs.push({
        key: { status: "valid", value: key },
        value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),
        alwaysSet: key in ctx.data
      });
    }
    if (this._def.catchall instanceof ZodNever) {
      const unknownKeys = this._def.unknownKeys;
      if (unknownKeys === "passthrough") {
        for (const key of extraKeys) {
          pairs.push({
            key: { status: "valid", value: key },
            value: { status: "valid", value: ctx.data[key] }
          });
        }
      } else if (unknownKeys === "strict") {
        if (extraKeys.length > 0) {
          addIssueToContext(ctx, {
            code: ZodIssueCode.unrecognized_keys,
            keys: extraKeys
          });
          status.dirty();
        }
      } else if (unknownKeys === "strip") {} else {
        throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);
      }
    } else {
      const catchall = this._def.catchall;
      for (const key of extraKeys) {
        const value = ctx.data[key];
        pairs.push({
          key: { status: "valid", value: key },
          value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),
          alwaysSet: key in ctx.data
        });
      }
    }
    if (ctx.common.async) {
      return Promise.resolve().then(async () => {
        const syncPairs = [];
        for (const pair of pairs) {
          const key = await pair.key;
          const value = await pair.value;
          syncPairs.push({
            key,
            value,
            alwaysSet: pair.alwaysSet
          });
        }
        return syncPairs;
      }).then((syncPairs) => {
        return ParseStatus.mergeObjectSync(status, syncPairs);
      });
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get shape() {
    return this._def.shape();
  }
  strict(message) {
    errorUtil.errToObj;
    return new ZodObject({
      ...this._def,
      unknownKeys: "strict",
      ...message !== undefined ? {
        errorMap: (issue, ctx) => {
          const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;
          if (issue.code === "unrecognized_keys")
            return {
              message: errorUtil.errToObj(message).message ?? defaultError
            };
          return {
            message: defaultError
          };
        }
      } : {}
    });
  }
  strip() {
    return new ZodObject({
      ...this._def,
      unknownKeys: "strip"
    });
  }
  passthrough() {
    return new ZodObject({
      ...this._def,
      unknownKeys: "passthrough"
    });
  }
  extend(augmentation) {
    return new ZodObject({
      ...this._def,
      shape: () => ({
        ...this._def.shape(),
        ...augmentation
      })
    });
  }
  merge(merging) {
    const merged = new ZodObject({
      unknownKeys: merging._def.unknownKeys,
      catchall: merging._def.catchall,
      shape: () => ({
        ...this._def.shape(),
        ...merging._def.shape()
      }),
      typeName: ZodFirstPartyTypeKind.ZodObject
    });
    return merged;
  }
  setKey(key, schema) {
    return this.augment({ [key]: schema });
  }
  catchall(index) {
    return new ZodObject({
      ...this._def,
      catchall: index
    });
  }
  pick(mask) {
    const shape = {};
    for (const key of util.objectKeys(mask)) {
      if (mask[key] && this.shape[key]) {
        shape[key] = this.shape[key];
      }
    }
    return new ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  omit(mask) {
    const shape = {};
    for (const key of util.objectKeys(this.shape)) {
      if (!mask[key]) {
        shape[key] = this.shape[key];
      }
    }
    return new ZodObject({
      ...this._def,
      shape: () => shape
    });
  }
  deepPartial() {
    return deepPartialify(this);
  }
  partial(mask) {
    const newShape = {};
    for (const key of util.objectKeys(this.shape)) {
      const fieldSchema = this.shape[key];
      if (mask && !mask[key]) {
        newShape[key] = fieldSchema;
      } else {
        newShape[key] = fieldSchema.optional();
      }
    }
    return new ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  required(mask) {
    const newShape = {};
    for (const key of util.objectKeys(this.shape)) {
      if (mask && !mask[key]) {
        newShape[key] = this.shape[key];
      } else {
        const fieldSchema = this.shape[key];
        let newField = fieldSchema;
        while (newField instanceof ZodOptional) {
          newField = newField._def.innerType;
        }
        newShape[key] = newField;
      }
    }
    return new ZodObject({
      ...this._def,
      shape: () => newShape
    });
  }
  keyof() {
    return createZodEnum(util.objectKeys(this.shape));
  }
}
ZodObject.create = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.strictCreate = (shape, params) => {
  return new ZodObject({
    shape: () => shape,
    unknownKeys: "strict",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};
ZodObject.lazycreate = (shape, params) => {
  return new ZodObject({
    shape,
    unknownKeys: "strip",
    catchall: ZodNever.create(),
    typeName: ZodFirstPartyTypeKind.ZodObject,
    ...processCreateParams(params)
  });
};

class ZodUnion extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const options = this._def.options;
    function handleResults(results) {
      for (const result of results) {
        if (result.result.status === "valid") {
          return result.result;
        }
      }
      for (const result of results) {
        if (result.result.status === "dirty") {
          ctx.common.issues.push(...result.ctx.common.issues);
          return result.result;
        }
      }
      const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID;
    }
    if (ctx.common.async) {
      return Promise.all(options.map(async (option) => {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        return {
          result: await option._parseAsync({
            data: ctx.data,
            path: ctx.path,
            parent: childCtx
          }),
          ctx: childCtx
        };
      })).then(handleResults);
    } else {
      let dirty = undefined;
      const issues = [];
      for (const option of options) {
        const childCtx = {
          ...ctx,
          common: {
            ...ctx.common,
            issues: []
          },
          parent: null
        };
        const result = option._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: childCtx
        });
        if (result.status === "valid") {
          return result;
        } else if (result.status === "dirty" && !dirty) {
          dirty = { result, ctx: childCtx };
        }
        if (childCtx.common.issues.length) {
          issues.push(childCtx.common.issues);
        }
      }
      if (dirty) {
        ctx.common.issues.push(...dirty.ctx.common.issues);
        return dirty.result;
      }
      const unionErrors = issues.map((issues2) => new ZodError(issues2));
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union,
        unionErrors
      });
      return INVALID;
    }
  }
  get options() {
    return this._def.options;
  }
}
ZodUnion.create = (types, params) => {
  return new ZodUnion({
    options: types,
    typeName: ZodFirstPartyTypeKind.ZodUnion,
    ...processCreateParams(params)
  });
};
var getDiscriminator = (type) => {
  if (type instanceof ZodLazy) {
    return getDiscriminator(type.schema);
  } else if (type instanceof ZodEffects) {
    return getDiscriminator(type.innerType());
  } else if (type instanceof ZodLiteral) {
    return [type.value];
  } else if (type instanceof ZodEnum) {
    return type.options;
  } else if (type instanceof ZodNativeEnum) {
    return util.objectValues(type.enum);
  } else if (type instanceof ZodDefault) {
    return getDiscriminator(type._def.innerType);
  } else if (type instanceof ZodUndefined) {
    return [undefined];
  } else if (type instanceof ZodNull) {
    return [null];
  } else if (type instanceof ZodOptional) {
    return [undefined, ...getDiscriminator(type.unwrap())];
  } else if (type instanceof ZodNullable) {
    return [null, ...getDiscriminator(type.unwrap())];
  } else if (type instanceof ZodBranded) {
    return getDiscriminator(type.unwrap());
  } else if (type instanceof ZodReadonly) {
    return getDiscriminator(type.unwrap());
  } else if (type instanceof ZodCatch) {
    return getDiscriminator(type._def.innerType);
  } else {
    return [];
  }
};

class ZodDiscriminatedUnion extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const discriminator = this.discriminator;
    const discriminatorValue = ctx.data[discriminator];
    const option = this.optionsMap.get(discriminatorValue);
    if (!option) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_union_discriminator,
        options: Array.from(this.optionsMap.keys()),
        path: [discriminator]
      });
      return INVALID;
    }
    if (ctx.common.async) {
      return option._parseAsync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    } else {
      return option._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
    }
  }
  get discriminator() {
    return this._def.discriminator;
  }
  get options() {
    return this._def.options;
  }
  get optionsMap() {
    return this._def.optionsMap;
  }
  static create(discriminator, options, params) {
    const optionsMap = new Map;
    for (const type of options) {
      const discriminatorValues = getDiscriminator(type.shape[discriminator]);
      if (!discriminatorValues.length) {
        throw new Error(`A discriminator value for key \`${discriminator}\` could not be extracted from all schema options`);
      }
      for (const value of discriminatorValues) {
        if (optionsMap.has(value)) {
          throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);
        }
        optionsMap.set(value, type);
      }
    }
    return new ZodDiscriminatedUnion({
      typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,
      discriminator,
      options,
      optionsMap,
      ...processCreateParams(params)
    });
  }
}
function mergeValues(a3, b3) {
  const aType = getParsedType(a3);
  const bType = getParsedType(b3);
  if (a3 === b3) {
    return { valid: true, data: a3 };
  } else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {
    const bKeys = util.objectKeys(b3);
    const sharedKeys = util.objectKeys(a3).filter((key) => bKeys.indexOf(key) !== -1);
    const newObj = { ...a3, ...b3 };
    for (const key of sharedKeys) {
      const sharedValue = mergeValues(a3[key], b3[key]);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newObj[key] = sharedValue.data;
    }
    return { valid: true, data: newObj };
  } else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {
    if (a3.length !== b3.length) {
      return { valid: false };
    }
    const newArray = [];
    for (let index = 0;index < a3.length; index++) {
      const itemA = a3[index];
      const itemB = b3[index];
      const sharedValue = mergeValues(itemA, itemB);
      if (!sharedValue.valid) {
        return { valid: false };
      }
      newArray.push(sharedValue.data);
    }
    return { valid: true, data: newArray };
  } else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a3 === +b3) {
    return { valid: true, data: a3 };
  } else {
    return { valid: false };
  }
}

class ZodIntersection extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const handleParsed = (parsedLeft, parsedRight) => {
      if (isAborted(parsedLeft) || isAborted(parsedRight)) {
        return INVALID;
      }
      const merged = mergeValues(parsedLeft.value, parsedRight.value);
      if (!merged.valid) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.invalid_intersection_types
        });
        return INVALID;
      }
      if (isDirty(parsedLeft) || isDirty(parsedRight)) {
        status.dirty();
      }
      return { status: status.value, value: merged.data };
    };
    if (ctx.common.async) {
      return Promise.all([
        this._def.left._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        }),
        this._def.right._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        })
      ]).then(([left, right]) => handleParsed(left, right));
    } else {
      return handleParsed(this._def.left._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }), this._def.right._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      }));
    }
  }
}
ZodIntersection.create = (left, right, params) => {
  return new ZodIntersection({
    left,
    right,
    typeName: ZodFirstPartyTypeKind.ZodIntersection,
    ...processCreateParams(params)
  });
};

class ZodTuple extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.array) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.array,
        received: ctx.parsedType
      });
      return INVALID;
    }
    if (ctx.data.length < this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_small,
        minimum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      return INVALID;
    }
    const rest = this._def.rest;
    if (!rest && ctx.data.length > this._def.items.length) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.too_big,
        maximum: this._def.items.length,
        inclusive: true,
        exact: false,
        type: "array"
      });
      status.dirty();
    }
    const items = [...ctx.data].map((item, itemIndex) => {
      const schema = this._def.items[itemIndex] || this._def.rest;
      if (!schema)
        return null;
      return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));
    }).filter((x4) => !!x4);
    if (ctx.common.async) {
      return Promise.all(items).then((results) => {
        return ParseStatus.mergeArray(status, results);
      });
    } else {
      return ParseStatus.mergeArray(status, items);
    }
  }
  get items() {
    return this._def.items;
  }
  rest(rest) {
    return new ZodTuple({
      ...this._def,
      rest
    });
  }
}
ZodTuple.create = (schemas, params) => {
  if (!Array.isArray(schemas)) {
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  }
  return new ZodTuple({
    items: schemas,
    typeName: ZodFirstPartyTypeKind.ZodTuple,
    rest: null,
    ...processCreateParams(params)
  });
};

class ZodRecord extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.object) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.object,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const pairs = [];
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    for (const key in ctx.data) {
      pairs.push({
        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),
        value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),
        alwaysSet: key in ctx.data
      });
    }
    if (ctx.common.async) {
      return ParseStatus.mergeObjectAsync(status, pairs);
    } else {
      return ParseStatus.mergeObjectSync(status, pairs);
    }
  }
  get element() {
    return this._def.valueType;
  }
  static create(first, second, third) {
    if (second instanceof ZodType) {
      return new ZodRecord({
        keyType: first,
        valueType: second,
        typeName: ZodFirstPartyTypeKind.ZodRecord,
        ...processCreateParams(third)
      });
    }
    return new ZodRecord({
      keyType: ZodString.create(),
      valueType: first,
      typeName: ZodFirstPartyTypeKind.ZodRecord,
      ...processCreateParams(second)
    });
  }
}

class ZodMap extends ZodType {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.map) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.map,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const keyType = this._def.keyType;
    const valueType = this._def.valueType;
    const pairs = [...ctx.data.entries()].map(([key, value], index) => {
      return {
        key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, "key"])),
        value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, "value"]))
      };
    });
    if (ctx.common.async) {
      const finalMap = new Map;
      return Promise.resolve().then(async () => {
        for (const pair of pairs) {
          const key = await pair.key;
          const value = await pair.value;
          if (key.status === "aborted" || value.status === "aborted") {
            return INVALID;
          }
          if (key.status === "dirty" || value.status === "dirty") {
            status.dirty();
          }
          finalMap.set(key.value, value.value);
        }
        return { status: status.value, value: finalMap };
      });
    } else {
      const finalMap = new Map;
      for (const pair of pairs) {
        const key = pair.key;
        const value = pair.value;
        if (key.status === "aborted" || value.status === "aborted") {
          return INVALID;
        }
        if (key.status === "dirty" || value.status === "dirty") {
          status.dirty();
        }
        finalMap.set(key.value, value.value);
      }
      return { status: status.value, value: finalMap };
    }
  }
}
ZodMap.create = (keyType, valueType, params) => {
  return new ZodMap({
    valueType,
    keyType,
    typeName: ZodFirstPartyTypeKind.ZodMap,
    ...processCreateParams(params)
  });
};

class ZodSet extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.set) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.set,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const def = this._def;
    if (def.minSize !== null) {
      if (ctx.data.size < def.minSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_small,
          minimum: def.minSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.minSize.message
        });
        status.dirty();
      }
    }
    if (def.maxSize !== null) {
      if (ctx.data.size > def.maxSize.value) {
        addIssueToContext(ctx, {
          code: ZodIssueCode.too_big,
          maximum: def.maxSize.value,
          type: "set",
          inclusive: true,
          exact: false,
          message: def.maxSize.message
        });
        status.dirty();
      }
    }
    const valueType = this._def.valueType;
    function finalizeSet(elements2) {
      const parsedSet = new Set;
      for (const element of elements2) {
        if (element.status === "aborted")
          return INVALID;
        if (element.status === "dirty")
          status.dirty();
        parsedSet.add(element.value);
      }
      return { status: status.value, value: parsedSet };
    }
    const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));
    if (ctx.common.async) {
      return Promise.all(elements).then((elements2) => finalizeSet(elements2));
    } else {
      return finalizeSet(elements);
    }
  }
  min(minSize, message) {
    return new ZodSet({
      ...this._def,
      minSize: { value: minSize, message: errorUtil.toString(message) }
    });
  }
  max(maxSize, message) {
    return new ZodSet({
      ...this._def,
      maxSize: { value: maxSize, message: errorUtil.toString(message) }
    });
  }
  size(size, message) {
    return this.min(size, message).max(size, message);
  }
  nonempty(message) {
    return this.min(1, message);
  }
}
ZodSet.create = (valueType, params) => {
  return new ZodSet({
    valueType,
    minSize: null,
    maxSize: null,
    typeName: ZodFirstPartyTypeKind.ZodSet,
    ...processCreateParams(params)
  });
};

class ZodFunction extends ZodType {
  constructor() {
    super(...arguments);
    this.validate = this.implement;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.function) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.function,
        received: ctx.parsedType
      });
      return INVALID;
    }
    function makeArgsIssue(args, error) {
      return makeIssue({
        data: args,
        path: ctx.path,
        errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), en_default].filter((x4) => !!x4),
        issueData: {
          code: ZodIssueCode.invalid_arguments,
          argumentsError: error
        }
      });
    }
    function makeReturnsIssue(returns, error) {
      return makeIssue({
        data: returns,
        path: ctx.path,
        errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), en_default].filter((x4) => !!x4),
        issueData: {
          code: ZodIssueCode.invalid_return_type,
          returnTypeError: error
        }
      });
    }
    const params = { errorMap: ctx.common.contextualErrorMap };
    const fn = ctx.data;
    if (this._def.returns instanceof ZodPromise) {
      const me = this;
      return OK(async function(...args) {
        const error = new ZodError([]);
        const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {
          error.addIssue(makeArgsIssue(args, e));
          throw error;
        });
        const result = await Reflect.apply(fn, this, parsedArgs);
        const parsedReturns = await me._def.returns._def.type.parseAsync(result, params).catch((e) => {
          error.addIssue(makeReturnsIssue(result, e));
          throw error;
        });
        return parsedReturns;
      });
    } else {
      const me = this;
      return OK(function(...args) {
        const parsedArgs = me._def.args.safeParse(args, params);
        if (!parsedArgs.success) {
          throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);
        }
        const result = Reflect.apply(fn, this, parsedArgs.data);
        const parsedReturns = me._def.returns.safeParse(result, params);
        if (!parsedReturns.success) {
          throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);
        }
        return parsedReturns.data;
      });
    }
  }
  parameters() {
    return this._def.args;
  }
  returnType() {
    return this._def.returns;
  }
  args(...items) {
    return new ZodFunction({
      ...this._def,
      args: ZodTuple.create(items).rest(ZodUnknown.create())
    });
  }
  returns(returnType) {
    return new ZodFunction({
      ...this._def,
      returns: returnType
    });
  }
  implement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  strictImplement(func) {
    const validatedFunc = this.parse(func);
    return validatedFunc;
  }
  static create(args, returns, params) {
    return new ZodFunction({
      args: args ? args : ZodTuple.create([]).rest(ZodUnknown.create()),
      returns: returns || ZodUnknown.create(),
      typeName: ZodFirstPartyTypeKind.ZodFunction,
      ...processCreateParams(params)
    });
  }
}

class ZodLazy extends ZodType {
  get schema() {
    return this._def.getter();
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const lazySchema = this._def.getter();
    return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });
  }
}
ZodLazy.create = (getter, params) => {
  return new ZodLazy({
    getter,
    typeName: ZodFirstPartyTypeKind.ZodLazy,
    ...processCreateParams(params)
  });
};

class ZodLiteral extends ZodType {
  _parse(input) {
    if (input.data !== this._def.value) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_literal,
        expected: this._def.value
      });
      return INVALID;
    }
    return { status: "valid", value: input.data };
  }
  get value() {
    return this._def.value;
  }
}
ZodLiteral.create = (value, params) => {
  return new ZodLiteral({
    value,
    typeName: ZodFirstPartyTypeKind.ZodLiteral,
    ...processCreateParams(params)
  });
};
function createZodEnum(values, params) {
  return new ZodEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodEnum,
    ...processCreateParams(params)
  });
}

class ZodEnum extends ZodType {
  _parse(input) {
    if (typeof input.data !== "string") {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID;
    }
    if (!this._cache) {
      this._cache = new Set(this._def.values);
    }
    if (!this._cache.has(input.data)) {
      const ctx = this._getOrReturnCtx(input);
      const expectedValues = this._def.values;
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID;
    }
    return OK(input.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Values() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  get Enum() {
    const enumValues = {};
    for (const val of this._def.values) {
      enumValues[val] = val;
    }
    return enumValues;
  }
  extract(values, newDef = this._def) {
    return ZodEnum.create(values, {
      ...this._def,
      ...newDef
    });
  }
  exclude(values, newDef = this._def) {
    return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {
      ...this._def,
      ...newDef
    });
  }
}
ZodEnum.create = createZodEnum;

class ZodNativeEnum extends ZodType {
  _parse(input) {
    const nativeEnumValues = util.getValidEnumValues(this._def.values);
    const ctx = this._getOrReturnCtx(input);
    if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        expected: util.joinValues(expectedValues),
        received: ctx.parsedType,
        code: ZodIssueCode.invalid_type
      });
      return INVALID;
    }
    if (!this._cache) {
      this._cache = new Set(util.getValidEnumValues(this._def.values));
    }
    if (!this._cache.has(input.data)) {
      const expectedValues = util.objectValues(nativeEnumValues);
      addIssueToContext(ctx, {
        received: ctx.data,
        code: ZodIssueCode.invalid_enum_value,
        options: expectedValues
      });
      return INVALID;
    }
    return OK(input.data);
  }
  get enum() {
    return this._def.values;
  }
}
ZodNativeEnum.create = (values, params) => {
  return new ZodNativeEnum({
    values,
    typeName: ZodFirstPartyTypeKind.ZodNativeEnum,
    ...processCreateParams(params)
  });
};

class ZodPromise extends ZodType {
  unwrap() {
    return this._def.type;
  }
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.promise,
        received: ctx.parsedType
      });
      return INVALID;
    }
    const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);
    return OK(promisified.then((data) => {
      return this._def.type.parseAsync(data, {
        path: ctx.path,
        errorMap: ctx.common.contextualErrorMap
      });
    }));
  }
}
ZodPromise.create = (schema, params) => {
  return new ZodPromise({
    type: schema,
    typeName: ZodFirstPartyTypeKind.ZodPromise,
    ...processCreateParams(params)
  });
};

class ZodEffects extends ZodType {
  innerType() {
    return this._def.schema;
  }
  sourceType() {
    return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
  }
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    const effect = this._def.effect || null;
    const checkCtx = {
      addIssue: (arg) => {
        addIssueToContext(ctx, arg);
        if (arg.fatal) {
          status.abort();
        } else {
          status.dirty();
        }
      },
      get path() {
        return ctx.path;
      }
    };
    checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);
    if (effect.type === "preprocess") {
      const processed = effect.transform(ctx.data, checkCtx);
      if (ctx.common.async) {
        return Promise.resolve(processed).then(async (processed2) => {
          if (status.value === "aborted")
            return INVALID;
          const result = await this._def.schema._parseAsync({
            data: processed2,
            path: ctx.path,
            parent: ctx
          });
          if (result.status === "aborted")
            return INVALID;
          if (result.status === "dirty")
            return DIRTY(result.value);
          if (status.value === "dirty")
            return DIRTY(result.value);
          return result;
        });
      } else {
        if (status.value === "aborted")
          return INVALID;
        const result = this._def.schema._parseSync({
          data: processed,
          path: ctx.path,
          parent: ctx
        });
        if (result.status === "aborted")
          return INVALID;
        if (result.status === "dirty")
          return DIRTY(result.value);
        if (status.value === "dirty")
          return DIRTY(result.value);
        return result;
      }
    }
    if (effect.type === "refinement") {
      const executeRefinement = (acc) => {
        const result = effect.refinement(acc, checkCtx);
        if (ctx.common.async) {
          return Promise.resolve(result);
        }
        if (result instanceof Promise) {
          throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
        }
        return acc;
      };
      if (ctx.common.async === false) {
        const inner = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inner.status === "aborted")
          return INVALID;
        if (inner.status === "dirty")
          status.dirty();
        executeRefinement(inner.value);
        return { status: status.value, value: inner.value };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {
          if (inner.status === "aborted")
            return INVALID;
          if (inner.status === "dirty")
            status.dirty();
          return executeRefinement(inner.value).then(() => {
            return { status: status.value, value: inner.value };
          });
        });
      }
    }
    if (effect.type === "transform") {
      if (ctx.common.async === false) {
        const base = this._def.schema._parseSync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (!isValid(base))
          return INVALID;
        const result = effect.transform(base.value, checkCtx);
        if (result instanceof Promise) {
          throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);
        }
        return { status: status.value, value: result };
      } else {
        return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {
          if (!isValid(base))
            return INVALID;
          return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({
            status: status.value,
            value: result
          }));
        });
      }
    }
    util.assertNever(effect);
  }
}
ZodEffects.create = (schema, effect, params) => {
  return new ZodEffects({
    schema,
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    effect,
    ...processCreateParams(params)
  });
};
ZodEffects.createWithPreprocess = (preprocess, schema, params) => {
  return new ZodEffects({
    schema,
    effect: { type: "preprocess", transform: preprocess },
    typeName: ZodFirstPartyTypeKind.ZodEffects,
    ...processCreateParams(params)
  });
};
class ZodOptional extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.undefined) {
      return OK(undefined);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
}
ZodOptional.create = (type, params) => {
  return new ZodOptional({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodOptional,
    ...processCreateParams(params)
  });
};

class ZodNullable extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType === ZodParsedType.null) {
      return OK(null);
    }
    return this._def.innerType._parse(input);
  }
  unwrap() {
    return this._def.innerType;
  }
}
ZodNullable.create = (type, params) => {
  return new ZodNullable({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodNullable,
    ...processCreateParams(params)
  });
};

class ZodDefault extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    let data = ctx.data;
    if (ctx.parsedType === ZodParsedType.undefined) {
      data = this._def.defaultValue();
    }
    return this._def.innerType._parse({
      data,
      path: ctx.path,
      parent: ctx
    });
  }
  removeDefault() {
    return this._def.innerType;
  }
}
ZodDefault.create = (type, params) => {
  return new ZodDefault({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodDefault,
    defaultValue: typeof params.default === "function" ? params.default : () => params.default,
    ...processCreateParams(params)
  });
};

class ZodCatch extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const newCtx = {
      ...ctx,
      common: {
        ...ctx.common,
        issues: []
      }
    };
    const result = this._def.innerType._parse({
      data: newCtx.data,
      path: newCtx.path,
      parent: {
        ...newCtx
      }
    });
    if (isAsync(result)) {
      return result.then((result2) => {
        return {
          status: "valid",
          value: result2.status === "valid" ? result2.value : this._def.catchValue({
            get error() {
              return new ZodError(newCtx.common.issues);
            },
            input: newCtx.data
          })
        };
      });
    } else {
      return {
        status: "valid",
        value: result.status === "valid" ? result.value : this._def.catchValue({
          get error() {
            return new ZodError(newCtx.common.issues);
          },
          input: newCtx.data
        })
      };
    }
  }
  removeCatch() {
    return this._def.innerType;
  }
}
ZodCatch.create = (type, params) => {
  return new ZodCatch({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodCatch,
    catchValue: typeof params.catch === "function" ? params.catch : () => params.catch,
    ...processCreateParams(params)
  });
};

class ZodNaN extends ZodType {
  _parse(input) {
    const parsedType = this._getType(input);
    if (parsedType !== ZodParsedType.nan) {
      const ctx = this._getOrReturnCtx(input);
      addIssueToContext(ctx, {
        code: ZodIssueCode.invalid_type,
        expected: ZodParsedType.nan,
        received: ctx.parsedType
      });
      return INVALID;
    }
    return { status: "valid", value: input.data };
  }
}
ZodNaN.create = (params) => {
  return new ZodNaN({
    typeName: ZodFirstPartyTypeKind.ZodNaN,
    ...processCreateParams(params)
  });
};
var BRAND = Symbol("zod_brand");

class ZodBranded extends ZodType {
  _parse(input) {
    const { ctx } = this._processInputParams(input);
    const data = ctx.data;
    return this._def.type._parse({
      data,
      path: ctx.path,
      parent: ctx
    });
  }
  unwrap() {
    return this._def.type;
  }
}

class ZodPipeline extends ZodType {
  _parse(input) {
    const { status, ctx } = this._processInputParams(input);
    if (ctx.common.async) {
      const handleAsync = async () => {
        const inResult = await this._def.in._parseAsync({
          data: ctx.data,
          path: ctx.path,
          parent: ctx
        });
        if (inResult.status === "aborted")
          return INVALID;
        if (inResult.status === "dirty") {
          status.dirty();
          return DIRTY(inResult.value);
        } else {
          return this._def.out._parseAsync({
            data: inResult.value,
            path: ctx.path,
            parent: ctx
          });
        }
      };
      return handleAsync();
    } else {
      const inResult = this._def.in._parseSync({
        data: ctx.data,
        path: ctx.path,
        parent: ctx
      });
      if (inResult.status === "aborted")
        return INVALID;
      if (inResult.status === "dirty") {
        status.dirty();
        return {
          status: "dirty",
          value: inResult.value
        };
      } else {
        return this._def.out._parseSync({
          data: inResult.value,
          path: ctx.path,
          parent: ctx
        });
      }
    }
  }
  static create(a3, b3) {
    return new ZodPipeline({
      in: a3,
      out: b3,
      typeName: ZodFirstPartyTypeKind.ZodPipeline
    });
  }
}

class ZodReadonly extends ZodType {
  _parse(input) {
    const result = this._def.innerType._parse(input);
    const freeze = (data) => {
      if (isValid(data)) {
        data.value = Object.freeze(data.value);
      }
      return data;
    };
    return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);
  }
  unwrap() {
    return this._def.innerType;
  }
}
ZodReadonly.create = (type, params) => {
  return new ZodReadonly({
    innerType: type,
    typeName: ZodFirstPartyTypeKind.ZodReadonly,
    ...processCreateParams(params)
  });
};
function cleanParams(params, data) {
  const p4 = typeof params === "function" ? params(data) : typeof params === "string" ? { message: params } : params;
  const p22 = typeof p4 === "string" ? { message: p4 } : p4;
  return p22;
}
function custom(check, _params = {}, fatal) {
  if (check)
    return ZodAny.create().superRefine((data, ctx) => {
      const r = check(data);
      if (r instanceof Promise) {
        return r.then((r2) => {
          if (!r2) {
            const params = cleanParams(_params, data);
            const _fatal = params.fatal ?? fatal ?? true;
            ctx.addIssue({ code: "custom", ...params, fatal: _fatal });
          }
        });
      }
      if (!r) {
        const params = cleanParams(_params, data);
        const _fatal = params.fatal ?? fatal ?? true;
        ctx.addIssue({ code: "custom", ...params, fatal: _fatal });
      }
      return;
    });
  return ZodAny.create();
}
var late = {
  object: ZodObject.lazycreate
};
var ZodFirstPartyTypeKind;
(function(ZodFirstPartyTypeKind2) {
  ZodFirstPartyTypeKind2["ZodString"] = "ZodString";
  ZodFirstPartyTypeKind2["ZodNumber"] = "ZodNumber";
  ZodFirstPartyTypeKind2["ZodNaN"] = "ZodNaN";
  ZodFirstPartyTypeKind2["ZodBigInt"] = "ZodBigInt";
  ZodFirstPartyTypeKind2["ZodBoolean"] = "ZodBoolean";
  ZodFirstPartyTypeKind2["ZodDate"] = "ZodDate";
  ZodFirstPartyTypeKind2["ZodSymbol"] = "ZodSymbol";
  ZodFirstPartyTypeKind2["ZodUndefined"] = "ZodUndefined";
  ZodFirstPartyTypeKind2["ZodNull"] = "ZodNull";
  ZodFirstPartyTypeKind2["ZodAny"] = "ZodAny";
  ZodFirstPartyTypeKind2["ZodUnknown"] = "ZodUnknown";
  ZodFirstPartyTypeKind2["ZodNever"] = "ZodNever";
  ZodFirstPartyTypeKind2["ZodVoid"] = "ZodVoid";
  ZodFirstPartyTypeKind2["ZodArray"] = "ZodArray";
  ZodFirstPartyTypeKind2["ZodObject"] = "ZodObject";
  ZodFirstPartyTypeKind2["ZodUnion"] = "ZodUnion";
  ZodFirstPartyTypeKind2["ZodDiscriminatedUnion"] = "ZodDiscriminatedUnion";
  ZodFirstPartyTypeKind2["ZodIntersection"] = "ZodIntersection";
  ZodFirstPartyTypeKind2["ZodTuple"] = "ZodTuple";
  ZodFirstPartyTypeKind2["ZodRecord"] = "ZodRecord";
  ZodFirstPartyTypeKind2["ZodMap"] = "ZodMap";
  ZodFirstPartyTypeKind2["ZodSet"] = "ZodSet";
  ZodFirstPartyTypeKind2["ZodFunction"] = "ZodFunction";
  ZodFirstPartyTypeKind2["ZodLazy"] = "ZodLazy";
  ZodFirstPartyTypeKind2["ZodLiteral"] = "ZodLiteral";
  ZodFirstPartyTypeKind2["ZodEnum"] = "ZodEnum";
  ZodFirstPartyTypeKind2["ZodEffects"] = "ZodEffects";
  ZodFirstPartyTypeKind2["ZodNativeEnum"] = "ZodNativeEnum";
  ZodFirstPartyTypeKind2["ZodOptional"] = "ZodOptional";
  ZodFirstPartyTypeKind2["ZodNullable"] = "ZodNullable";
  ZodFirstPartyTypeKind2["ZodDefault"] = "ZodDefault";
  ZodFirstPartyTypeKind2["ZodCatch"] = "ZodCatch";
  ZodFirstPartyTypeKind2["ZodPromise"] = "ZodPromise";
  ZodFirstPartyTypeKind2["ZodBranded"] = "ZodBranded";
  ZodFirstPartyTypeKind2["ZodPipeline"] = "ZodPipeline";
  ZodFirstPartyTypeKind2["ZodReadonly"] = "ZodReadonly";
})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));
var instanceOfType = (cls, params = {
  message: `Input not instance of ${cls.name}`
}) => custom((data) => data instanceof cls, params);
var stringType = ZodString.create;
var numberType = ZodNumber.create;
var nanType = ZodNaN.create;
var bigIntType = ZodBigInt.create;
var booleanType = ZodBoolean.create;
var dateType = ZodDate.create;
var symbolType = ZodSymbol.create;
var undefinedType = ZodUndefined.create;
var nullType = ZodNull.create;
var anyType = ZodAny.create;
var unknownType = ZodUnknown.create;
var neverType = ZodNever.create;
var voidType = ZodVoid.create;
var arrayType = ZodArray.create;
var objectType = ZodObject.create;
var strictObjectType = ZodObject.strictCreate;
var unionType = ZodUnion.create;
var discriminatedUnionType = ZodDiscriminatedUnion.create;
var intersectionType = ZodIntersection.create;
var tupleType = ZodTuple.create;
var recordType = ZodRecord.create;
var mapType = ZodMap.create;
var setType = ZodSet.create;
var functionType = ZodFunction.create;
var lazyType = ZodLazy.create;
var literalType = ZodLiteral.create;
var enumType = ZodEnum.create;
var nativeEnumType = ZodNativeEnum.create;
var promiseType = ZodPromise.create;
var effectsType = ZodEffects.create;
var optionalType = ZodOptional.create;
var nullableType = ZodNullable.create;
var preprocessType = ZodEffects.createWithPreprocess;
var pipelineType = ZodPipeline.create;
var ostring = () => stringType().optional();
var onumber = () => numberType().optional();
var oboolean = () => booleanType().optional();
var coerce = {
  string: (arg) => ZodString.create({ ...arg, coerce: true }),
  number: (arg) => ZodNumber.create({ ...arg, coerce: true }),
  boolean: (arg) => ZodBoolean.create({
    ...arg,
    coerce: true
  }),
  bigint: (arg) => ZodBigInt.create({ ...arg, coerce: true }),
  date: (arg) => ZodDate.create({ ...arg, coerce: true })
};
var NEVER = INVALID;
// node_modules/@hono/zod-openapi/dist/index.mjs
extendZodWithOpenApi(exports_external);

// src/zod/weightSchema.js
var weightSchema = exports_external.object({
  user_id: exports_external.number().openapi({
    example: 1
  }),
  created_at: exports_external.string().date(),
  scaleWeight: exports_external.number().openapi({
    example: 73.2
  })
}).openapi("Weight");
var removeWeightSchema = exports_external.object({
  id: exports_external.number().openapi({
    example: 1232
  })
});

// node_modules/@clerk/shared/dist/chunk-I6MTSTOF.mjs
var DEV_OR_STAGING_SUFFIXES = [
  ".lcl.dev",
  ".stg.dev",
  ".lclstage.dev",
  ".stgstage.dev",
  ".dev.lclclerk.com",
  ".stg.lclclerk.com",
  ".accounts.lclclerk.com",
  "accountsstage.dev",
  "accounts.dev"
];

// node_modules/@clerk/shared/dist/chunk-7ELT755Q.mjs
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter) => (__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// node_modules/@clerk/shared/dist/chunk-N2V3PKFE.mjs
var defaultOptions = {
  initialDelay: 125,
  maxDelayBetweenRetries: 0,
  factor: 2,
  shouldRetry: (_3, iteration) => iteration < 5,
  retryImmediately: false,
  jitter: true
};
var RETRY_IMMEDIATELY_DELAY = 100;
var sleep = async (ms2) => new Promise((s2) => setTimeout(s2, ms2));
var applyJitter = (delay, jitter) => {
  return jitter ? delay * (1 + Math.random()) : delay;
};
var createExponentialDelayAsyncFn = (opts) => {
  let timesCalled = 0;
  const calculateDelayInMs = () => {
    const constant = opts.initialDelay;
    const base = opts.factor;
    let delay = constant * Math.pow(base, timesCalled);
    delay = applyJitter(delay, opts.jitter);
    return Math.min(opts.maxDelayBetweenRetries || delay, delay);
  };
  return async () => {
    await sleep(calculateDelayInMs());
    timesCalled++;
  };
};
var retry = async (callback, options = {}) => {
  let iterations = 0;
  const { shouldRetry, initialDelay, maxDelayBetweenRetries, factor, retryImmediately, jitter } = {
    ...defaultOptions,
    ...options
  };
  const delay = createExponentialDelayAsyncFn({
    initialDelay,
    maxDelayBetweenRetries,
    factor,
    jitter
  });
  while (true) {
    try {
      return await callback();
    } catch (e) {
      iterations++;
      if (!shouldRetry(e, iterations)) {
        throw e;
      }
      if (retryImmediately && iterations === 1) {
        await sleep(applyJitter(RETRY_IMMEDIATELY_DELAY, jitter));
      } else {
        await delay();
      }
    }
  }
};

// node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs
var isomorphicAtob = (data) => {
  if (typeof atob !== "undefined" && typeof atob === "function") {
    return atob(data);
  } else if (typeof global !== "undefined" && global.Buffer) {
    return new global.Buffer(data, "base64").toString();
  }
  return data;
};

// node_modules/@clerk/shared/dist/chunk-KOH7GTJO.mjs
var isomorphicBtoa = (data) => {
  if (typeof btoa !== "undefined" && typeof btoa === "function") {
    return btoa(data);
  } else if (typeof global !== "undefined" && global.Buffer) {
    return new global.Buffer(data).toString("base64");
  }
  return data;
};

// node_modules/@clerk/shared/dist/chunk-G3VP5PJE.mjs
var PUBLISHABLE_KEY_LIVE_PREFIX = "pk_live_";
var PUBLISHABLE_KEY_TEST_PREFIX = "pk_test_";
function parsePublishableKey(key, options = {}) {
  key = key || "";
  if (!key || !isPublishableKey(key)) {
    if (options.fatal && !key) {
      throw new Error("Publishable key is missing. Ensure that your publishable key is correctly configured. Double-check your environment configuration for your keys, or access them here: https://dashboard.clerk.com/last-active?path=api-keys");
    }
    if (options.fatal && !isPublishableKey(key)) {
      throw new Error("Publishable key not valid.");
    }
    return null;
  }
  const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? "production" : "development";
  let frontendApi = isomorphicAtob(key.split("_")[2]);
  frontendApi = frontendApi.slice(0, -1);
  if (options.proxyUrl) {
    frontendApi = options.proxyUrl;
  } else if (instanceType !== "development" && options.domain) {
    frontendApi = `clerk.${options.domain}`;
  }
  return {
    instanceType,
    frontendApi
  };
}
function isPublishableKey(key = "") {
  try {
    const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);
    const hasValidFrontendApiPostfix = isomorphicAtob(key.split("_")[2] || "").endsWith("$");
    return hasValidPrefix && hasValidFrontendApiPostfix;
  } catch {
    return false;
  }
}
function createDevOrStagingUrlCache() {
  const devOrStagingUrlCache = /* @__PURE__ */ new Map;
  return {
    isDevOrStagingUrl: (url) => {
      if (!url) {
        return false;
      }
      const hostname = typeof url === "string" ? url : url.hostname;
      let res = devOrStagingUrlCache.get(hostname);
      if (res === undefined) {
        res = DEV_OR_STAGING_SUFFIXES.some((s2) => hostname.endsWith(s2));
        devOrStagingUrlCache.set(hostname, res);
      }
      return res;
    }
  };
}
function isDevelopmentFromSecretKey(apiKey) {
  return apiKey.startsWith("test_") || apiKey.startsWith("sk_test_");
}
async function getCookieSuffix(publishableKey, subtle = globalThis.crypto.subtle) {
  const data = new TextEncoder().encode(publishableKey);
  const digest = await subtle.digest("sha-1", data);
  const stringDigest = String.fromCharCode(...new Uint8Array(digest));
  return isomorphicBtoa(stringDigest).replace(/\+/gi, "-").replace(/\//gi, "_").substring(0, 8);
}
var getSuffixedCookieName = (cookieName, cookieSuffix) => {
  return `${cookieName}_${cookieSuffix}`;
};

// node_modules/@clerk/shared/dist/chunk-7HPDNZ3R.mjs
var isTestEnvironment = () => {
  try {
    return false;
  } catch {}
  return false;
};
var isProductionEnvironment = () => {
  try {
    return false;
  } catch {}
  return false;
};

// node_modules/@clerk/shared/dist/chunk-UEY4AZIP.mjs
var displayedWarnings = /* @__PURE__ */ new Set;
var deprecated = (fnName, warning, key) => {
  const hideWarning = isTestEnvironment() || isProductionEnvironment();
  const messageId = key ?? fnName;
  if (displayedWarnings.has(messageId) || hideWarning) {
    return;
  }
  displayedWarnings.add(messageId);
  console.warn(`Clerk - DEPRECATION WARNING: "${fnName}" is deprecated and will be removed in the next major release.
${warning}`);
};

// node_modules/@clerk/shared/dist/chunk-3JHIKPLN.mjs
function parseErrors(data = []) {
  return data.length > 0 ? data.map(parseError) : [];
}
function parseError(error) {
  return {
    code: error.code,
    message: error.message,
    longMessage: error.long_message,
    meta: {
      paramName: error?.meta?.param_name,
      sessionId: error?.meta?.session_id,
      emailAddresses: error?.meta?.email_addresses,
      identifiers: error?.meta?.identifiers,
      zxcvbn: error?.meta?.zxcvbn
    }
  };
}
var ClerkAPIResponseError = class _ClerkAPIResponseError extends Error {
  constructor(message, { data, status, clerkTraceId, retryAfter }) {
    super(message);
    this.toString = () => {
      let message2 = `[${this.name}]
Message:${this.message}
Status:${this.status}
Serialized errors: ${this.errors.map((e) => JSON.stringify(e))}`;
      if (this.clerkTraceId) {
        message2 += `
Clerk Trace ID: ${this.clerkTraceId}`;
      }
      return message2;
    };
    Object.setPrototypeOf(this, _ClerkAPIResponseError.prototype);
    this.status = status;
    this.message = message;
    this.clerkTraceId = clerkTraceId;
    this.retryAfter = retryAfter;
    this.clerkError = true;
    this.errors = parseErrors(data);
  }
};
var DefaultMessages = Object.freeze({
  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,
  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,
  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,
  MissingSecretKeyErrorMessage: `Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,
  MissingClerkProvider: `{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider`
});
function buildErrorThrower({ packageName, customMessages }) {
  let pkg = packageName;
  const messages = {
    ...DefaultMessages,
    ...customMessages
  };
  function buildMessage(rawMessage, replacements) {
    if (!replacements) {
      return `${pkg}: ${rawMessage}`;
    }
    let msg = rawMessage;
    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);
    for (const match of matches) {
      const replacement = (replacements[match[1]] || "").toString();
      msg = msg.replace(`{{${match[1]}}}`, replacement);
    }
    return `${pkg}: ${msg}`;
  }
  return {
    setPackageName({ packageName: packageName2 }) {
      if (typeof packageName2 === "string") {
        pkg = packageName2;
      }
      return this;
    },
    setMessages({ customMessages: customMessages2 }) {
      Object.assign(messages, customMessages2 || {});
      return this;
    },
    throwInvalidPublishableKeyError(params) {
      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));
    },
    throwInvalidProxyUrl(params) {
      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));
    },
    throwMissingPublishableKeyError() {
      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));
    },
    throwMissingSecretKeyError() {
      throw new Error(buildMessage(messages.MissingSecretKeyErrorMessage));
    },
    throwMissingClerkProviderError(params) {
      throw new Error(buildMessage(messages.MissingClerkProvider, params));
    },
    throw(message) {
      throw new Error(buildMessage(message));
    }
  };
}

// node_modules/@clerk/backend/dist/chunk-LWOXHF4E.mjs
var errorThrower = buildErrorThrower({ packageName: "@clerk/backend" });
var { isDevOrStagingUrl } = createDevOrStagingUrlCache();

// node_modules/@clerk/backend/dist/chunk-5JS2VYLU.mjs
var TokenVerificationErrorCode = {
  InvalidSecretKey: "clerk_key_invalid"
};
var TokenVerificationErrorReason = {
  TokenExpired: "token-expired",
  TokenInvalid: "token-invalid",
  TokenInvalidAlgorithm: "token-invalid-algorithm",
  TokenInvalidAuthorizedParties: "token-invalid-authorized-parties",
  TokenInvalidSignature: "token-invalid-signature",
  TokenNotActiveYet: "token-not-active-yet",
  TokenIatInTheFuture: "token-iat-in-the-future",
  TokenVerificationFailed: "token-verification-failed",
  InvalidSecretKey: "secret-key-invalid",
  LocalJWKMissing: "jwk-local-missing",
  RemoteJWKFailedToLoad: "jwk-remote-failed-to-load",
  RemoteJWKInvalid: "jwk-remote-invalid",
  RemoteJWKMissing: "jwk-remote-missing",
  JWKFailedToResolve: "jwk-failed-to-resolve",
  JWKKidMismatch: "jwk-kid-mismatch"
};
var TokenVerificationErrorAction = {
  ContactSupport: "Contact support@clerk.com",
  EnsureClerkJWT: "Make sure that this is a valid Clerk generate JWT.",
  SetClerkJWTKey: "Set the CLERK_JWT_KEY environment variable.",
  SetClerkSecretKey: "Set the CLERK_SECRET_KEY environment variable.",
  EnsureClockSync: "Make sure your system clock is in sync (e.g. turn off and on automatic time synchronization)."
};
var TokenVerificationError = class _TokenVerificationError extends Error {
  constructor({
    action,
    message,
    reason
  }) {
    super(message);
    Object.setPrototypeOf(this, _TokenVerificationError.prototype);
    this.reason = reason;
    this.message = message;
    this.action = action;
  }
  getFullMessage() {
    return `${[this.message, this.action].filter((m3) => m3).join(" ")} (reason=${this.reason}, token-carrier=${this.tokenCarrier})`;
  }
};

// node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs
var webcrypto = crypto;

// node_modules/@clerk/backend/dist/chunk-AT3FJU3M.mjs
var globalFetch = fetch.bind(globalThis);
var runtime = {
  crypto: webcrypto,
  get fetch() {
    return globalFetch;
  },
  AbortController: globalThis.AbortController,
  Blob: globalThis.Blob,
  FormData: globalThis.FormData,
  Headers: globalThis.Headers,
  Request: globalThis.Request,
  Response: globalThis.Response
};
var base64url = {
  parse(string, opts) {
    return parse2(string, base64UrlEncoding, opts);
  },
  stringify(data, opts) {
    return stringify(data, base64UrlEncoding, opts);
  }
};
var base64UrlEncoding = {
  chars: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bits: 6
};
function parse2(string, encoding, opts = {}) {
  if (!encoding.codes) {
    encoding.codes = {};
    for (let i = 0;i < encoding.chars.length; ++i) {
      encoding.codes[encoding.chars[i]] = i;
    }
  }
  if (!opts.loose && string.length * encoding.bits & 7) {
    throw new SyntaxError("Invalid padding");
  }
  let end = string.length;
  while (string[end - 1] === "=") {
    --end;
    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {
      throw new SyntaxError("Invalid padding");
    }
  }
  const out = new (opts.out ?? Uint8Array)(end * encoding.bits / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i = 0;i < end; ++i) {
    const value = encoding.codes[string[i]];
    if (value === undefined) {
      throw new SyntaxError("Invalid character " + string[i]);
    }
    buffer = buffer << encoding.bits | value;
    bits += encoding.bits;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= encoding.bits || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
}
function stringify(data, encoding, opts = {}) {
  const { pad = true } = opts;
  const mask = (1 << encoding.bits) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i = 0;i < data.length; ++i) {
    buffer = buffer << 8 | 255 & data[i];
    bits += 8;
    while (bits > encoding.bits) {
      bits -= encoding.bits;
      out += encoding.chars[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += encoding.chars[mask & buffer << encoding.bits - bits];
  }
  if (pad) {
    while (out.length * encoding.bits & 7) {
      out += "=";
    }
  }
  return out;
}
var algToHash = {
  RS256: "SHA-256",
  RS384: "SHA-384",
  RS512: "SHA-512"
};
var RSA_ALGORITHM_NAME = "RSASSA-PKCS1-v1_5";
var jwksAlgToCryptoAlg = {
  RS256: RSA_ALGORITHM_NAME,
  RS384: RSA_ALGORITHM_NAME,
  RS512: RSA_ALGORITHM_NAME
};
var algs = Object.keys(algToHash);
function getCryptoAlgorithm(algorithmName) {
  const hash = algToHash[algorithmName];
  const name = jwksAlgToCryptoAlg[algorithmName];
  if (!hash || !name) {
    throw new Error(`Unsupported algorithm ${algorithmName}, expected one of ${algs.join(",")}.`);
  }
  return {
    hash: { name: algToHash[algorithmName] },
    name: jwksAlgToCryptoAlg[algorithmName]
  };
}
var isArrayString = (s2) => {
  return Array.isArray(s2) && s2.length > 0 && s2.every((a3) => typeof a3 === "string");
};
var assertAudienceClaim = (aud, audience) => {
  const audienceList = [audience].flat().filter((a3) => !!a3);
  const audList = [aud].flat().filter((a3) => !!a3);
  const shouldVerifyAudience = audienceList.length > 0 && audList.length > 0;
  if (!shouldVerifyAudience) {
    return;
  }
  if (typeof aud === "string") {
    if (!audienceList.includes(aud)) {
      throw new TokenVerificationError({
        action: TokenVerificationErrorAction.EnsureClerkJWT,
        reason: TokenVerificationErrorReason.TokenVerificationFailed,
        message: `Invalid JWT audience claim (aud) ${JSON.stringify(aud)}. Is not included in "${JSON.stringify(audienceList)}".`
      });
    }
  } else if (isArrayString(aud)) {
    if (!aud.some((a3) => audienceList.includes(a3))) {
      throw new TokenVerificationError({
        action: TokenVerificationErrorAction.EnsureClerkJWT,
        reason: TokenVerificationErrorReason.TokenVerificationFailed,
        message: `Invalid JWT audience claim array (aud) ${JSON.stringify(aud)}. Is not included in "${JSON.stringify(audienceList)}".`
      });
    }
  }
};
var assertHeaderType = (typ) => {
  if (typeof typ === "undefined") {
    return;
  }
  if (typ !== "JWT") {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.EnsureClerkJWT,
      reason: TokenVerificationErrorReason.TokenInvalid,
      message: `Invalid JWT type ${JSON.stringify(typ)}. Expected "JWT".`
    });
  }
};
var assertHeaderAlgorithm = (alg) => {
  if (!algs.includes(alg)) {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.EnsureClerkJWT,
      reason: TokenVerificationErrorReason.TokenInvalidAlgorithm,
      message: `Invalid JWT algorithm ${JSON.stringify(alg)}. Supported: ${algs}.`
    });
  }
};
var assertSubClaim = (sub) => {
  if (typeof sub !== "string") {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.EnsureClerkJWT,
      reason: TokenVerificationErrorReason.TokenVerificationFailed,
      message: `Subject claim (sub) is required and must be a string. Received ${JSON.stringify(sub)}.`
    });
  }
};
var assertAuthorizedPartiesClaim = (azp, authorizedParties) => {
  if (!azp || !authorizedParties || authorizedParties.length === 0) {
    return;
  }
  if (!authorizedParties.includes(azp)) {
    throw new TokenVerificationError({
      reason: TokenVerificationErrorReason.TokenInvalidAuthorizedParties,
      message: `Invalid JWT Authorized party claim (azp) ${JSON.stringify(azp)}. Expected "${authorizedParties}".`
    });
  }
};
var assertExpirationClaim = (exp, clockSkewInMs) => {
  if (typeof exp !== "number") {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.EnsureClerkJWT,
      reason: TokenVerificationErrorReason.TokenVerificationFailed,
      message: `Invalid JWT expiry date claim (exp) ${JSON.stringify(exp)}. Expected number.`
    });
  }
  const currentDate = new Date(Date.now());
  const expiryDate = /* @__PURE__ */ new Date(0);
  expiryDate.setUTCSeconds(exp);
  const expired = expiryDate.getTime() <= currentDate.getTime() - clockSkewInMs;
  if (expired) {
    throw new TokenVerificationError({
      reason: TokenVerificationErrorReason.TokenExpired,
      message: `JWT is expired. Expiry date: ${expiryDate.toUTCString()}, Current date: ${currentDate.toUTCString()}.`
    });
  }
};
var assertActivationClaim = (nbf, clockSkewInMs) => {
  if (typeof nbf === "undefined") {
    return;
  }
  if (typeof nbf !== "number") {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.EnsureClerkJWT,
      reason: TokenVerificationErrorReason.TokenVerificationFailed,
      message: `Invalid JWT not before date claim (nbf) ${JSON.stringify(nbf)}. Expected number.`
    });
  }
  const currentDate = new Date(Date.now());
  const notBeforeDate = /* @__PURE__ */ new Date(0);
  notBeforeDate.setUTCSeconds(nbf);
  const early = notBeforeDate.getTime() > currentDate.getTime() + clockSkewInMs;
  if (early) {
    throw new TokenVerificationError({
      reason: TokenVerificationErrorReason.TokenNotActiveYet,
      message: `JWT cannot be used prior to not before date claim (nbf). Not before date: ${notBeforeDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`
    });
  }
};
var assertIssuedAtClaim = (iat, clockSkewInMs) => {
  if (typeof iat === "undefined") {
    return;
  }
  if (typeof iat !== "number") {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.EnsureClerkJWT,
      reason: TokenVerificationErrorReason.TokenVerificationFailed,
      message: `Invalid JWT issued at date claim (iat) ${JSON.stringify(iat)}. Expected number.`
    });
  }
  const currentDate = new Date(Date.now());
  const issuedAtDate = /* @__PURE__ */ new Date(0);
  issuedAtDate.setUTCSeconds(iat);
  const postIssued = issuedAtDate.getTime() > currentDate.getTime() + clockSkewInMs;
  if (postIssued) {
    throw new TokenVerificationError({
      reason: TokenVerificationErrorReason.TokenIatInTheFuture,
      message: `JWT issued at date claim (iat) is in the future. Issued at date: ${issuedAtDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`
    });
  }
};
function pemToBuffer(secret) {
  const trimmed = secret.replace(/-----BEGIN.*?-----/g, "").replace(/-----END.*?-----/g, "").replace(/\s/g, "");
  const decoded = isomorphicAtob(trimmed);
  const buffer = new ArrayBuffer(decoded.length);
  const bufView = new Uint8Array(buffer);
  for (let i = 0, strLen = decoded.length;i < strLen; i++) {
    bufView[i] = decoded.charCodeAt(i);
  }
  return bufView;
}
function importKey(key, algorithm, keyUsage) {
  if (typeof key === "object") {
    return runtime.crypto.subtle.importKey("jwk", key, algorithm, false, [keyUsage]);
  }
  const keyData = pemToBuffer(key);
  const format = keyUsage === "sign" ? "pkcs8" : "spki";
  return runtime.crypto.subtle.importKey(format, keyData, algorithm, false, [keyUsage]);
}
var DEFAULT_CLOCK_SKEW_IN_SECONDS = 5 * 1000;
async function hasValidSignature(jwt, key) {
  const { header, signature, raw: raw2 } = jwt;
  const encoder = new TextEncoder;
  const data = encoder.encode([raw2.header, raw2.payload].join("."));
  const algorithm = getCryptoAlgorithm(header.alg);
  try {
    const cryptoKey = await importKey(key, algorithm, "verify");
    const verified = await runtime.crypto.subtle.verify(algorithm.name, cryptoKey, signature, data);
    return { data: verified };
  } catch (error) {
    return {
      errors: [
        new TokenVerificationError({
          reason: TokenVerificationErrorReason.TokenInvalidSignature,
          message: error?.message
        })
      ]
    };
  }
}
function decodeJwt(token) {
  const tokenParts = (token || "").toString().split(".");
  if (tokenParts.length !== 3) {
    return {
      errors: [
        new TokenVerificationError({
          reason: TokenVerificationErrorReason.TokenInvalid,
          message: `Invalid JWT form. A JWT consists of three parts separated by dots.`
        })
      ]
    };
  }
  const [rawHeader, rawPayload, rawSignature] = tokenParts;
  const decoder = new TextDecoder;
  const header = JSON.parse(decoder.decode(base64url.parse(rawHeader, { loose: true })));
  const payload = JSON.parse(decoder.decode(base64url.parse(rawPayload, { loose: true })));
  const signature = base64url.parse(rawSignature, { loose: true });
  const data = {
    header,
    payload,
    signature,
    raw: {
      header: rawHeader,
      payload: rawPayload,
      signature: rawSignature,
      text: token
    }
  };
  return { data };
}
async function verifyJwt(token, options) {
  const { audience, authorizedParties, clockSkewInMs, key } = options;
  const clockSkew = clockSkewInMs || DEFAULT_CLOCK_SKEW_IN_SECONDS;
  const { data: decoded, errors: errors2 } = decodeJwt(token);
  if (errors2) {
    return { errors: errors2 };
  }
  const { header, payload } = decoded;
  try {
    const { typ, alg } = header;
    assertHeaderType(typ);
    assertHeaderAlgorithm(alg);
    const { azp, sub, aud, iat, exp, nbf } = payload;
    assertSubClaim(sub);
    assertAudienceClaim([aud], [audience]);
    assertAuthorizedPartiesClaim(azp, authorizedParties);
    assertExpirationClaim(exp, clockSkew);
    assertActivationClaim(nbf, clockSkew);
    assertIssuedAtClaim(iat, clockSkew);
  } catch (err) {
    return { errors: [err] };
  }
  const { data: signatureValid, errors: signatureErrors } = await hasValidSignature(decoded, key);
  if (signatureErrors) {
    return {
      errors: [
        new TokenVerificationError({
          action: TokenVerificationErrorAction.EnsureClerkJWT,
          reason: TokenVerificationErrorReason.TokenVerificationFailed,
          message: `Error verifying JWT signature. ${signatureErrors[0]}`
        })
      ]
    };
  }
  if (!signatureValid) {
    return {
      errors: [
        new TokenVerificationError({
          reason: TokenVerificationErrorReason.TokenInvalidSignature,
          message: "JWT signature is invalid."
        })
      ]
    };
  }
  return { data: payload };
}

// node_modules/@clerk/backend/dist/chunk-DR4A5GLJ.mjs
var import_snakecase_keys = __toESM(require_snakecase_keys(), 1);

// node_modules/@clerk/shared/dist/chunk-E3NYSYOB.mjs
var TYPES_TO_OBJECTS = {
  strict_mfa: {
    afterMinutes: 10,
    level: "multi_factor"
  },
  strict: {
    afterMinutes: 10,
    level: "second_factor"
  },
  moderate: {
    afterMinutes: 60,
    level: "second_factor"
  },
  lax: {
    afterMinutes: 1440,
    level: "second_factor"
  }
};
var ALLOWED_LEVELS = /* @__PURE__ */ new Set(["first_factor", "second_factor", "multi_factor"]);
var ALLOWED_TYPES = /* @__PURE__ */ new Set(["strict_mfa", "strict", "moderate", "lax"]);
var isValidMaxAge = (maxAge) => typeof maxAge === "number" && maxAge > 0;
var isValidLevel = (level) => ALLOWED_LEVELS.has(level);
var isValidVerificationType = (type) => ALLOWED_TYPES.has(type);
var checkOrgAuthorization = (params, options) => {
  const { orgId, orgRole, orgPermissions } = options;
  if (!params.role && !params.permission) {
    return null;
  }
  if (!orgId || !orgRole || !orgPermissions) {
    return null;
  }
  if (params.permission) {
    return orgPermissions.includes(params.permission);
  }
  if (params.role) {
    return orgRole === params.role;
  }
  return null;
};
var validateReverificationConfig = (config2) => {
  if (!config2) {
    return false;
  }
  const convertConfigToObject = (config22) => {
    if (typeof config22 === "string") {
      return TYPES_TO_OBJECTS[config22];
    }
    return config22;
  };
  const isValidStringValue = typeof config2 === "string" && isValidVerificationType(config2);
  const isValidObjectValue = typeof config2 === "object" && isValidLevel(config2.level) && isValidMaxAge(config2.afterMinutes);
  if (isValidStringValue || isValidObjectValue) {
    return convertConfigToObject.bind(null, config2);
  }
  return false;
};
var checkReverificationAuthorization = (params, { factorVerificationAge }) => {
  if (!params.reverification || !factorVerificationAge) {
    return null;
  }
  const isValidReverification = validateReverificationConfig(params.reverification);
  if (!isValidReverification) {
    return null;
  }
  const { level, afterMinutes } = isValidReverification();
  const [factor1Age, factor2Age] = factorVerificationAge;
  const isValidFactor1 = factor1Age !== -1 ? afterMinutes > factor1Age : null;
  const isValidFactor2 = factor2Age !== -1 ? afterMinutes > factor2Age : null;
  switch (level) {
    case "first_factor":
      return isValidFactor1;
    case "second_factor":
      return factor2Age !== -1 ? isValidFactor2 : isValidFactor1;
    case "multi_factor":
      return factor2Age === -1 ? isValidFactor1 : isValidFactor1 && isValidFactor2;
  }
};
var createCheckAuthorization = (options) => {
  return (params) => {
    if (!options.userId) {
      return false;
    }
    const orgAuthorization = checkOrgAuthorization(params, options);
    const reverificationAuthorization = checkReverificationAuthorization(params, options);
    if ([orgAuthorization, reverificationAuthorization].some((a3) => a3 === null)) {
      return [orgAuthorization, reverificationAuthorization].some((a3) => a3 === true);
    }
    return [orgAuthorization, reverificationAuthorization].every((a3) => a3 === true);
  };
};

// node_modules/@clerk/backend/dist/chunk-DR4A5GLJ.mjs
var import_cookie3 = __toESM(require_dist5(), 1);

// node_modules/@clerk/shared/dist/chunk-JJHTUJGL.mjs
function _3(r) {
  for (var n = [], e = 0;e < r.length; ) {
    var a3 = r[e];
    if (a3 === "*" || a3 === "+" || a3 === "?") {
      n.push({
        type: "MODIFIER",
        index: e,
        value: r[e++]
      });
      continue;
    }
    if (a3 === "\\") {
      n.push({
        type: "ESCAPED_CHAR",
        index: e++,
        value: r[e++]
      });
      continue;
    }
    if (a3 === "{") {
      n.push({
        type: "OPEN",
        index: e,
        value: r[e++]
      });
      continue;
    }
    if (a3 === "}") {
      n.push({
        type: "CLOSE",
        index: e,
        value: r[e++]
      });
      continue;
    }
    if (a3 === ":") {
      for (var u3 = "", t = e + 1;t < r.length; ) {
        var c3 = r.charCodeAt(t);
        if (c3 >= 48 && c3 <= 57 || c3 >= 65 && c3 <= 90 || c3 >= 97 && c3 <= 122 || c3 === 95) {
          u3 += r[t++];
          continue;
        }
        break;
      }
      if (!u3)
        throw new TypeError("Missing parameter name at ".concat(e));
      n.push({
        type: "NAME",
        index: e,
        value: u3
      }), e = t;
      continue;
    }
    if (a3 === "(") {
      var o = 1, m3 = "", t = e + 1;
      if (r[t] === "?")
        throw new TypeError('Pattern cannot start with "?" at '.concat(t));
      for (;t < r.length; ) {
        if (r[t] === "\\") {
          m3 += r[t++] + r[t++];
          continue;
        }
        if (r[t] === ")") {
          if (o--, o === 0) {
            t++;
            break;
          }
        } else if (r[t] === "(" && (o++, r[t + 1] !== "?"))
          throw new TypeError("Capturing groups are not allowed at ".concat(t));
        m3 += r[t++];
      }
      if (o)
        throw new TypeError("Unbalanced pattern at ".concat(e));
      if (!m3)
        throw new TypeError("Missing pattern at ".concat(e));
      n.push({
        type: "PATTERN",
        index: e,
        value: m3
      }), e = t;
      continue;
    }
    n.push({
      type: "CHAR",
      index: e,
      value: r[e++]
    });
  }
  return n.push({
    type: "END",
    index: e,
    value: ""
  }), n;
}
function F(r, n) {
  n === undefined && (n = {});
  for (var e = _3(r), a3 = n.prefixes, u3 = a3 === undefined ? "./" : a3, t = n.delimiter, c3 = t === undefined ? "/#?" : t, o = [], m3 = 0, h4 = 0, p4 = "", f3 = function(l2) {
    if (h4 < e.length && e[h4].type === l2)
      return e[h4++].value;
  }, w = function(l2) {
    var v2 = f3(l2);
    if (v2 !== undefined)
      return v2;
    var E4 = e[h4], N3 = E4.type, S3 = E4.index;
    throw new TypeError("Unexpected ".concat(N3, " at ").concat(S3, ", expected ").concat(l2));
  }, d4 = function() {
    for (var l2 = "", v2;v2 = f3("CHAR") || f3("ESCAPED_CHAR"); )
      l2 += v2;
    return l2;
  }, M2 = function(l2) {
    for (var v2 = 0, E4 = c3;v2 < E4.length; v2++) {
      var N3 = E4[v2];
      if (l2.indexOf(N3) > -1)
        return true;
    }
    return false;
  }, A2 = function(l2) {
    var v2 = o[o.length - 1], E4 = l2 || (v2 && typeof v2 == "string" ? v2 : "");
    if (v2 && !E4)
      throw new TypeError('Must have text between two parameters, missing text after "'.concat(v2.name, '"'));
    return !E4 || M2(E4) ? "[^".concat(s2(c3), "]+?") : "(?:(?!".concat(s2(E4), ")[^").concat(s2(c3), "])+?");
  };h4 < e.length; ) {
    var T4 = f3("CHAR"), x4 = f3("NAME"), C = f3("PATTERN");
    if (x4 || C) {
      var g3 = T4 || "";
      u3.indexOf(g3) === -1 && (p4 += g3, g3 = ""), p4 && (o.push(p4), p4 = ""), o.push({
        name: x4 || m3++,
        prefix: g3,
        suffix: "",
        pattern: C || A2(g3),
        modifier: f3("MODIFIER") || ""
      });
      continue;
    }
    var i = T4 || f3("ESCAPED_CHAR");
    if (i) {
      p4 += i;
      continue;
    }
    p4 && (o.push(p4), p4 = "");
    var R2 = f3("OPEN");
    if (R2) {
      var g3 = d4(), y4 = f3("NAME") || "", O4 = f3("PATTERN") || "", b3 = d4();
      w("CLOSE"), o.push({
        name: y4 || (O4 ? m3++ : ""),
        pattern: y4 && !O4 ? A2(g3) : O4,
        prefix: g3,
        suffix: b3,
        modifier: f3("MODIFIER") || ""
      });
      continue;
    }
    w("END");
  }
  return o;
}
function H2(r, n) {
  var e = [], a3 = P3(r, e, n);
  return I3(a3, e, n);
}
function I3(r, n, e) {
  e === undefined && (e = {});
  var a3 = e.decode, u3 = a3 === undefined ? function(t) {
    return t;
  } : a3;
  return function(t) {
    var c3 = r.exec(t);
    if (!c3)
      return false;
    for (var o = c3[0], m3 = c3.index, h4 = /* @__PURE__ */ Object.create(null), p4 = function(w) {
      if (c3[w] === undefined)
        return "continue";
      var d4 = n[w - 1];
      d4.modifier === "*" || d4.modifier === "+" ? h4[d4.name] = c3[w].split(d4.prefix + d4.suffix).map(function(M2) {
        return u3(M2, d4);
      }) : h4[d4.name] = u3(c3[w], d4);
    }, f3 = 1;f3 < c3.length; f3++)
      p4(f3);
    return {
      path: o,
      index: m3,
      params: h4
    };
  };
}
function s2(r) {
  return r.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
function D2(r) {
  return r && r.sensitive ? "" : "i";
}
function $2(r, n) {
  if (!n)
    return r;
  for (var e = /\((?:\?<(.*?)>)?(?!\?)/g, a3 = 0, u3 = e.exec(r.source);u3; )
    n.push({
      name: u3[1] || a3++,
      prefix: "",
      suffix: "",
      modifier: "",
      pattern: ""
    }), u3 = e.exec(r.source);
  return r;
}
function W(r, n, e) {
  var a3 = r.map(function(u3) {
    return P3(u3, n, e).source;
  });
  return new RegExp("(?:".concat(a3.join("|"), ")"), D2(e));
}
function L4(r, n, e) {
  return U4(F(r, e), n, e);
}
function U4(r, n, e) {
  e === undefined && (e = {});
  for (var a3 = e.strict, u3 = a3 === undefined ? false : a3, t = e.start, c3 = t === undefined ? true : t, o = e.end, m3 = o === undefined ? true : o, h4 = e.encode, p4 = h4 === undefined ? function(v2) {
    return v2;
  } : h4, f3 = e.delimiter, w = f3 === undefined ? "/#?" : f3, d4 = e.endsWith, M2 = d4 === undefined ? "" : d4, A2 = "[".concat(s2(M2), "]|$"), T4 = "[".concat(s2(w), "]"), x4 = c3 ? "^" : "", C = 0, g3 = r;C < g3.length; C++) {
    var i = g3[C];
    if (typeof i == "string")
      x4 += s2(p4(i));
    else {
      var R2 = s2(p4(i.prefix)), y4 = s2(p4(i.suffix));
      if (i.pattern)
        if (n && n.push(i), R2 || y4)
          if (i.modifier === "+" || i.modifier === "*") {
            var O4 = i.modifier === "*" ? "?" : "";
            x4 += "(?:".concat(R2, "((?:").concat(i.pattern, ")(?:").concat(y4).concat(R2, "(?:").concat(i.pattern, "))*)").concat(y4, ")").concat(O4);
          } else
            x4 += "(?:".concat(R2, "(").concat(i.pattern, ")").concat(y4, ")").concat(i.modifier);
        else {
          if (i.modifier === "+" || i.modifier === "*")
            throw new TypeError('Can not repeat "'.concat(i.name, '" without a prefix and suffix'));
          x4 += "(".concat(i.pattern, ")").concat(i.modifier);
        }
      else
        x4 += "(?:".concat(R2).concat(y4, ")").concat(i.modifier);
    }
  }
  if (m3)
    u3 || (x4 += "".concat(T4, "?")), x4 += e.endsWith ? "(?=".concat(A2, ")") : "$";
  else {
    var b3 = r[r.length - 1], l2 = typeof b3 == "string" ? T4.indexOf(b3[b3.length - 1]) > -1 : b3 === undefined;
    u3 || (x4 += "(?:".concat(T4, "(?=").concat(A2, "))?")), l2 || (x4 += "(?=".concat(T4, "|").concat(A2, ")"));
  }
  return new RegExp(x4, D2(e));
}
function P3(r, n, e) {
  return r instanceof RegExp ? $2(r, n) : Array.isArray(r) ? W(r, n, e) : L4(r, n, e);
}
function match(str, options) {
  try {
    return H2(str, options);
  } catch (e) {
    throw new Error(`Invalid path and options: Consult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp/tree/6.x
${e.message}`);
  }
}

// node_modules/@clerk/backend/dist/chunk-DR4A5GLJ.mjs
var API_URL = "https://api.clerk.com";
var API_VERSION = "v1";
var USER_AGENT = `${"@clerk/backend"}@${"1.26.0"}`;
var MAX_CACHE_LAST_UPDATED_AT_SECONDS = 5 * 60;
var SUPPORTED_BAPI_VERSION = "2024-10-01";
var Attributes = {
  AuthToken: "__clerkAuthToken",
  AuthSignature: "__clerkAuthSignature",
  AuthStatus: "__clerkAuthStatus",
  AuthReason: "__clerkAuthReason",
  AuthMessage: "__clerkAuthMessage",
  ClerkUrl: "__clerkUrl"
};
var Cookies = {
  Session: "__session",
  Refresh: "__refresh",
  ClientUat: "__client_uat",
  Handshake: "__clerk_handshake",
  DevBrowser: "__clerk_db_jwt",
  RedirectCount: "__clerk_redirect_count"
};
var QueryParameters = {
  ClerkSynced: "__clerk_synced",
  SuffixedCookies: "suffixed_cookies",
  ClerkRedirectUrl: "__clerk_redirect_url",
  DevBrowser: Cookies.DevBrowser,
  Handshake: Cookies.Handshake,
  HandshakeHelp: "__clerk_help",
  LegacyDevBrowser: "__dev_session",
  HandshakeReason: "__clerk_hs_reason"
};
var Headers2 = {
  AuthToken: "x-clerk-auth-token",
  AuthSignature: "x-clerk-auth-signature",
  AuthStatus: "x-clerk-auth-status",
  AuthReason: "x-clerk-auth-reason",
  AuthMessage: "x-clerk-auth-message",
  ClerkUrl: "x-clerk-clerk-url",
  EnableDebug: "x-clerk-debug",
  ClerkRequestData: "x-clerk-request-data",
  ClerkRedirectTo: "x-clerk-redirect-to",
  CloudFrontForwardedProto: "cloudfront-forwarded-proto",
  Authorization: "authorization",
  ForwardedPort: "x-forwarded-port",
  ForwardedProto: "x-forwarded-proto",
  ForwardedHost: "x-forwarded-host",
  Accept: "accept",
  Referrer: "referer",
  UserAgent: "user-agent",
  Origin: "origin",
  Host: "host",
  ContentType: "content-type",
  SecFetchDest: "sec-fetch-dest",
  Location: "location",
  CacheControl: "cache-control"
};
var ContentTypes = {
  Json: "application/json"
};
var constants = {
  Attributes,
  Cookies,
  Headers: Headers2,
  ContentTypes,
  QueryParameters
};
var SEPARATOR = "/";
var MULTIPLE_SEPARATOR_REGEX = new RegExp("(?<!:)" + SEPARATOR + "{1,}", "g");
function joinPaths(...args) {
  return args.filter((p4) => p4).join(SEPARATOR).replace(MULTIPLE_SEPARATOR_REGEX, SEPARATOR);
}
var AbstractAPI = class {
  constructor(request) {
    this.request = request;
  }
  requireId(id2) {
    if (!id2) {
      throw new Error("A valid resource ID is required.");
    }
  }
};
var basePath = "/accountless_applications";
var AccountlessApplicationAPI = class extends AbstractAPI {
  async createAccountlessApplication() {
    return this.request({
      method: "POST",
      path: basePath
    });
  }
  async completeAccountlessApplicationOnboarding() {
    return this.request({
      method: "POST",
      path: joinPaths(basePath, "complete")
    });
  }
};
var basePath2 = "/allowlist_identifiers";
var AllowlistIdentifierAPI = class extends AbstractAPI {
  async getAllowlistIdentifierList() {
    return this.request({
      method: "GET",
      path: basePath2,
      queryParams: { paginated: true }
    });
  }
  async createAllowlistIdentifier(params) {
    return this.request({
      method: "POST",
      path: basePath2,
      bodyParams: params
    });
  }
  async deleteAllowlistIdentifier(allowlistIdentifierId) {
    this.requireId(allowlistIdentifierId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath2, allowlistIdentifierId)
    });
  }
};
var basePath3 = "/clients";
var ClientAPI = class extends AbstractAPI {
  async getClientList(params = {}) {
    return this.request({
      method: "GET",
      path: basePath3,
      queryParams: { ...params, paginated: true }
    });
  }
  async getClient(clientId) {
    this.requireId(clientId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath3, clientId)
    });
  }
  verifyClient(token) {
    return this.request({
      method: "POST",
      path: joinPaths(basePath3, "verify"),
      bodyParams: { token }
    });
  }
};
var basePath4 = "/domains";
var DomainAPI = class extends AbstractAPI {
  async deleteDomain(id2) {
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath4, id2)
    });
  }
};
var basePath5 = "/email_addresses";
var EmailAddressAPI = class extends AbstractAPI {
  async getEmailAddress(emailAddressId) {
    this.requireId(emailAddressId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath5, emailAddressId)
    });
  }
  async createEmailAddress(params) {
    return this.request({
      method: "POST",
      path: basePath5,
      bodyParams: params
    });
  }
  async updateEmailAddress(emailAddressId, params = {}) {
    this.requireId(emailAddressId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath5, emailAddressId),
      bodyParams: params
    });
  }
  async deleteEmailAddress(emailAddressId) {
    this.requireId(emailAddressId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath5, emailAddressId)
    });
  }
};
var basePath6 = "/invitations";
var InvitationAPI = class extends AbstractAPI {
  async getInvitationList(params = {}) {
    return this.request({
      method: "GET",
      path: basePath6,
      queryParams: { ...params, paginated: true }
    });
  }
  async createInvitation(params) {
    return this.request({
      method: "POST",
      path: basePath6,
      bodyParams: params
    });
  }
  async revokeInvitation(invitationId) {
    this.requireId(invitationId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath6, invitationId, "revoke")
    });
  }
};
var basePath7 = "/organizations";
var OrganizationAPI = class extends AbstractAPI {
  async getOrganizationList(params) {
    return this.request({
      method: "GET",
      path: basePath7,
      queryParams: params
    });
  }
  async createOrganization(params) {
    return this.request({
      method: "POST",
      path: basePath7,
      bodyParams: params
    });
  }
  async getOrganization(params) {
    const { includeMembersCount } = params;
    const organizationIdOrSlug = "organizationId" in params ? params.organizationId : params.slug;
    this.requireId(organizationIdOrSlug);
    return this.request({
      method: "GET",
      path: joinPaths(basePath7, organizationIdOrSlug),
      queryParams: {
        includeMembersCount
      }
    });
  }
  async updateOrganization(organizationId, params) {
    this.requireId(organizationId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath7, organizationId),
      bodyParams: params
    });
  }
  async updateOrganizationLogo(organizationId, params) {
    this.requireId(organizationId);
    const formData = new runtime.FormData;
    formData.append("file", params?.file);
    if (params?.uploaderUserId) {
      formData.append("uploader_user_id", params?.uploaderUserId);
    }
    return this.request({
      method: "PUT",
      path: joinPaths(basePath7, organizationId, "logo"),
      formData
    });
  }
  async deleteOrganizationLogo(organizationId) {
    this.requireId(organizationId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath7, organizationId, "logo")
    });
  }
  async updateOrganizationMetadata(organizationId, params) {
    this.requireId(organizationId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath7, organizationId, "metadata"),
      bodyParams: params
    });
  }
  async deleteOrganization(organizationId) {
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath7, organizationId)
    });
  }
  async getOrganizationMembershipList(params) {
    const { organizationId, ...queryParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath7, organizationId, "memberships"),
      queryParams
    });
  }
  async createOrganizationMembership(params) {
    const { organizationId, ...bodyParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath7, organizationId, "memberships"),
      bodyParams
    });
  }
  async updateOrganizationMembership(params) {
    const { organizationId, userId, ...bodyParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath7, organizationId, "memberships", userId),
      bodyParams
    });
  }
  async updateOrganizationMembershipMetadata(params) {
    const { organizationId, userId, ...bodyParams } = params;
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath7, organizationId, "memberships", userId, "metadata"),
      bodyParams
    });
  }
  async deleteOrganizationMembership(params) {
    const { organizationId, userId } = params;
    this.requireId(organizationId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath7, organizationId, "memberships", userId)
    });
  }
  async getOrganizationInvitationList(params) {
    const { organizationId, ...queryParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath7, organizationId, "invitations"),
      queryParams
    });
  }
  async createOrganizationInvitation(params) {
    const { organizationId, ...bodyParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath7, organizationId, "invitations"),
      bodyParams
    });
  }
  async getOrganizationInvitation(params) {
    const { organizationId, invitationId } = params;
    this.requireId(organizationId);
    this.requireId(invitationId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath7, organizationId, "invitations", invitationId)
    });
  }
  async revokeOrganizationInvitation(params) {
    const { organizationId, invitationId, ...bodyParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath7, organizationId, "invitations", invitationId, "revoke"),
      bodyParams
    });
  }
  async getOrganizationDomainList(params) {
    const { organizationId, ...queryParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath7, organizationId, "domains"),
      queryParams
    });
  }
  async createOrganizationDomain(params) {
    const { organizationId, ...bodyParams } = params;
    this.requireId(organizationId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath7, organizationId, "domains"),
      bodyParams: {
        ...bodyParams,
        verified: bodyParams.verified ?? true
      }
    });
  }
  async updateOrganizationDomain(params) {
    const { organizationId, domainId, ...bodyParams } = params;
    this.requireId(organizationId);
    this.requireId(domainId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath7, organizationId, "domains", domainId),
      bodyParams
    });
  }
  async deleteOrganizationDomain(params) {
    const { organizationId, domainId } = params;
    this.requireId(organizationId);
    this.requireId(domainId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath7, organizationId, "domains", domainId)
    });
  }
};
var basePath8 = "/phone_numbers";
var PhoneNumberAPI = class extends AbstractAPI {
  async getPhoneNumber(phoneNumberId) {
    this.requireId(phoneNumberId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath8, phoneNumberId)
    });
  }
  async createPhoneNumber(params) {
    return this.request({
      method: "POST",
      path: basePath8,
      bodyParams: params
    });
  }
  async updatePhoneNumber(phoneNumberId, params = {}) {
    this.requireId(phoneNumberId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath8, phoneNumberId),
      bodyParams: params
    });
  }
  async deletePhoneNumber(phoneNumberId) {
    this.requireId(phoneNumberId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath8, phoneNumberId)
    });
  }
};
var basePath9 = "/redirect_urls";
var RedirectUrlAPI = class extends AbstractAPI {
  async getRedirectUrlList() {
    return this.request({
      method: "GET",
      path: basePath9,
      queryParams: { paginated: true }
    });
  }
  async getRedirectUrl(redirectUrlId) {
    this.requireId(redirectUrlId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath9, redirectUrlId)
    });
  }
  async createRedirectUrl(params) {
    return this.request({
      method: "POST",
      path: basePath9,
      bodyParams: params
    });
  }
  async deleteRedirectUrl(redirectUrlId) {
    this.requireId(redirectUrlId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath9, redirectUrlId)
    });
  }
};
var basePath10 = "/sessions";
var SessionAPI = class extends AbstractAPI {
  async getSessionList(params = {}) {
    return this.request({
      method: "GET",
      path: basePath10,
      queryParams: { ...params, paginated: true }
    });
  }
  async getSession(sessionId) {
    this.requireId(sessionId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath10, sessionId)
    });
  }
  async revokeSession(sessionId) {
    this.requireId(sessionId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath10, sessionId, "revoke")
    });
  }
  async verifySession(sessionId, token) {
    this.requireId(sessionId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath10, sessionId, "verify"),
      bodyParams: { token }
    });
  }
  async getToken(sessionId, template) {
    this.requireId(sessionId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath10, sessionId, "tokens", template || "")
    });
  }
  async refreshSession(sessionId, params) {
    this.requireId(sessionId);
    const { suffixed_cookies, ...restParams } = params;
    return this.request({
      method: "POST",
      path: joinPaths(basePath10, sessionId, "refresh"),
      bodyParams: restParams,
      queryParams: { suffixed_cookies }
    });
  }
};
var basePath11 = "/sign_in_tokens";
var SignInTokenAPI = class extends AbstractAPI {
  async createSignInToken(params) {
    return this.request({
      method: "POST",
      path: basePath11,
      bodyParams: params
    });
  }
  async revokeSignInToken(signInTokenId) {
    this.requireId(signInTokenId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath11, signInTokenId, "revoke")
    });
  }
};
var basePath12 = "/users";
var UserAPI = class extends AbstractAPI {
  async getUserList(params = {}) {
    const { limit, offset, orderBy, ...userCountParams } = params;
    const [data, totalCount] = await Promise.all([
      this.request({
        method: "GET",
        path: basePath12,
        queryParams: params
      }),
      this.getCount(userCountParams)
    ]);
    return { data, totalCount };
  }
  async getUser(userId) {
    this.requireId(userId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath12, userId)
    });
  }
  async createUser(params) {
    return this.request({
      method: "POST",
      path: basePath12,
      bodyParams: params
    });
  }
  async updateUser(userId, params = {}) {
    this.requireId(userId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath12, userId),
      bodyParams: params
    });
  }
  async updateUserProfileImage(userId, params) {
    this.requireId(userId);
    const formData = new runtime.FormData;
    formData.append("file", params?.file);
    return this.request({
      method: "POST",
      path: joinPaths(basePath12, userId, "profile_image"),
      formData
    });
  }
  async updateUserMetadata(userId, params) {
    this.requireId(userId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath12, userId, "metadata"),
      bodyParams: params
    });
  }
  async deleteUser(userId) {
    this.requireId(userId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath12, userId)
    });
  }
  async getCount(params = {}) {
    return this.request({
      method: "GET",
      path: joinPaths(basePath12, "count"),
      queryParams: params
    });
  }
  async getUserOauthAccessToken(userId, provider) {
    this.requireId(userId);
    const hasPrefix = provider.startsWith("oauth_");
    const _provider = hasPrefix ? provider : `oauth_${provider}`;
    if (hasPrefix) {
      deprecated("getUserOauthAccessToken(userId, provider)", "Remove the `oauth_` prefix from the `provider` argument.");
    }
    return this.request({
      method: "GET",
      path: joinPaths(basePath12, userId, "oauth_access_tokens", _provider),
      queryParams: { paginated: true }
    });
  }
  async disableUserMFA(userId) {
    this.requireId(userId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath12, userId, "mfa")
    });
  }
  async getOrganizationMembershipList(params) {
    const { userId, limit, offset } = params;
    this.requireId(userId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath12, userId, "organization_memberships"),
      queryParams: { limit, offset }
    });
  }
  async verifyPassword(params) {
    const { userId, password } = params;
    this.requireId(userId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath12, userId, "verify_password"),
      bodyParams: { password }
    });
  }
  async verifyTOTP(params) {
    const { userId, code } = params;
    this.requireId(userId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath12, userId, "verify_totp"),
      bodyParams: { code }
    });
  }
  async banUser(userId) {
    this.requireId(userId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath12, userId, "ban")
    });
  }
  async unbanUser(userId) {
    this.requireId(userId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath12, userId, "unban")
    });
  }
  async lockUser(userId) {
    this.requireId(userId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath12, userId, "lock")
    });
  }
  async unlockUser(userId) {
    this.requireId(userId);
    return this.request({
      method: "POST",
      path: joinPaths(basePath12, userId, "unlock")
    });
  }
  async deleteUserProfileImage(userId) {
    this.requireId(userId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath12, userId, "profile_image")
    });
  }
};
var basePath13 = "/saml_connections";
var SamlConnectionAPI = class extends AbstractAPI {
  async getSamlConnectionList(params = {}) {
    return this.request({
      method: "GET",
      path: basePath13,
      queryParams: params
    });
  }
  async createSamlConnection(params) {
    return this.request({
      method: "POST",
      path: basePath13,
      bodyParams: params
    });
  }
  async getSamlConnection(samlConnectionId) {
    this.requireId(samlConnectionId);
    return this.request({
      method: "GET",
      path: joinPaths(basePath13, samlConnectionId)
    });
  }
  async updateSamlConnection(samlConnectionId, params = {}) {
    this.requireId(samlConnectionId);
    return this.request({
      method: "PATCH",
      path: joinPaths(basePath13, samlConnectionId),
      bodyParams: params
    });
  }
  async deleteSamlConnection(samlConnectionId) {
    this.requireId(samlConnectionId);
    return this.request({
      method: "DELETE",
      path: joinPaths(basePath13, samlConnectionId)
    });
  }
};
var basePath14 = "/testing_tokens";
var TestingTokenAPI = class extends AbstractAPI {
  async createTestingToken() {
    return this.request({
      method: "POST",
      path: basePath14
    });
  }
};
function assertValidSecretKey(val) {
  if (!val || typeof val !== "string") {
    throw Error("Missing Clerk Secret Key. Go to https://dashboard.clerk.com and get your key for your instance.");
  }
}
function assertValidPublishableKey(val) {
  parsePublishableKey(val, { fatal: true });
}
var AccountlessApplication = class _AccountlessApplication {
  constructor(publishableKey, secretKey, claimUrl, apiKeysUrl) {
    this.publishableKey = publishableKey;
    this.secretKey = secretKey;
    this.claimUrl = claimUrl;
    this.apiKeysUrl = apiKeysUrl;
  }
  static fromJSON(data) {
    return new _AccountlessApplication(data.publishable_key, data.secret_key, data.claim_url, data.api_keys_url);
  }
};
var AllowlistIdentifier = class _AllowlistIdentifier {
  constructor(id2, identifier, createdAt, updatedAt, invitationId) {
    this.id = id2;
    this.identifier = identifier;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.invitationId = invitationId;
  }
  static fromJSON(data) {
    return new _AllowlistIdentifier(data.id, data.identifier, data.created_at, data.updated_at, data.invitation_id);
  }
};
var SessionActivity = class _SessionActivity {
  constructor(id2, isMobile, ipAddress, city, country, browserVersion, browserName, deviceType) {
    this.id = id2;
    this.isMobile = isMobile;
    this.ipAddress = ipAddress;
    this.city = city;
    this.country = country;
    this.browserVersion = browserVersion;
    this.browserName = browserName;
    this.deviceType = deviceType;
  }
  static fromJSON(data) {
    return new _SessionActivity(data.id, data.is_mobile, data.ip_address, data.city, data.country, data.browser_version, data.browser_name, data.device_type);
  }
};
var Session = class _Session {
  constructor(id2, clientId, userId, status, lastActiveAt, expireAt, abandonAt, createdAt, updatedAt, lastActiveOrganizationId, latestActivity, actor = null) {
    this.id = id2;
    this.clientId = clientId;
    this.userId = userId;
    this.status = status;
    this.lastActiveAt = lastActiveAt;
    this.expireAt = expireAt;
    this.abandonAt = abandonAt;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.lastActiveOrganizationId = lastActiveOrganizationId;
    this.latestActivity = latestActivity;
    this.actor = actor;
  }
  static fromJSON(data) {
    return new _Session(data.id, data.client_id, data.user_id, data.status, data.last_active_at, data.expire_at, data.abandon_at, data.created_at, data.updated_at, data.last_active_organization_id, data.latest_activity && SessionActivity.fromJSON(data.latest_activity), data.actor);
  }
};
var Client = class _Client {
  constructor(id2, sessionIds, sessions, signInId, signUpId, lastActiveSessionId, createdAt, updatedAt) {
    this.id = id2;
    this.sessionIds = sessionIds;
    this.sessions = sessions;
    this.signInId = signInId;
    this.signUpId = signUpId;
    this.lastActiveSessionId = lastActiveSessionId;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }
  static fromJSON(data) {
    return new _Client(data.id, data.session_ids, data.sessions.map((x4) => Session.fromJSON(x4)), data.sign_in_id, data.sign_up_id, data.last_active_session_id, data.created_at, data.updated_at);
  }
};
var Cookies2 = class _Cookies {
  constructor(cookies) {
    this.cookies = cookies;
  }
  static fromJSON(data) {
    return new _Cookies(data.cookies);
  }
};
var DeletedObject = class _DeletedObject {
  constructor(object, id2, slug, deleted) {
    this.object = object;
    this.id = id2;
    this.slug = slug;
    this.deleted = deleted;
  }
  static fromJSON(data) {
    return new _DeletedObject(data.object, data.id || null, data.slug || null, data.deleted);
  }
};
var Email = class _Email {
  constructor(id2, fromEmailName, emailAddressId, toEmailAddress, subject, body, bodyPlain, status, slug, data, deliveredByClerk) {
    this.id = id2;
    this.fromEmailName = fromEmailName;
    this.emailAddressId = emailAddressId;
    this.toEmailAddress = toEmailAddress;
    this.subject = subject;
    this.body = body;
    this.bodyPlain = bodyPlain;
    this.status = status;
    this.slug = slug;
    this.data = data;
    this.deliveredByClerk = deliveredByClerk;
  }
  static fromJSON(data) {
    return new _Email(data.id, data.from_email_name, data.email_address_id, data.to_email_address, data.subject, data.body, data.body_plain, data.status, data.slug, data.data, data.delivered_by_clerk);
  }
};
var IdentificationLink = class _IdentificationLink {
  constructor(id2, type) {
    this.id = id2;
    this.type = type;
  }
  static fromJSON(data) {
    return new _IdentificationLink(data.id, data.type);
  }
};
var Verification = class _Verification {
  constructor(status, strategy, externalVerificationRedirectURL = null, attempts = null, expireAt = null, nonce = null, message = null) {
    this.status = status;
    this.strategy = strategy;
    this.externalVerificationRedirectURL = externalVerificationRedirectURL;
    this.attempts = attempts;
    this.expireAt = expireAt;
    this.nonce = nonce;
    this.message = message;
  }
  static fromJSON(data) {
    return new _Verification(data.status, data.strategy, data.external_verification_redirect_url ? new URL(data.external_verification_redirect_url) : null, data.attempts, data.expire_at, data.nonce);
  }
};
var EmailAddress = class _EmailAddress {
  constructor(id2, emailAddress, verification, linkedTo) {
    this.id = id2;
    this.emailAddress = emailAddress;
    this.verification = verification;
    this.linkedTo = linkedTo;
  }
  static fromJSON(data) {
    return new _EmailAddress(data.id, data.email_address, data.verification && Verification.fromJSON(data.verification), data.linked_to.map((link) => IdentificationLink.fromJSON(link)));
  }
};
var ExternalAccount = class _ExternalAccount {
  constructor(id2, provider, identificationId, externalId, approvedScopes, emailAddress, firstName, lastName, imageUrl, username, publicMetadata = {}, label, verification) {
    this.id = id2;
    this.provider = provider;
    this.identificationId = identificationId;
    this.externalId = externalId;
    this.approvedScopes = approvedScopes;
    this.emailAddress = emailAddress;
    this.firstName = firstName;
    this.lastName = lastName;
    this.imageUrl = imageUrl;
    this.username = username;
    this.publicMetadata = publicMetadata;
    this.label = label;
    this.verification = verification;
  }
  static fromJSON(data) {
    return new _ExternalAccount(data.id, data.provider, data.identification_id, data.provider_user_id, data.approved_scopes, data.email_address, data.first_name, data.last_name, data.image_url || "", data.username, data.public_metadata, data.label, data.verification && Verification.fromJSON(data.verification));
  }
};
var Invitation = class _Invitation {
  constructor(id2, emailAddress, publicMetadata, createdAt, updatedAt, status, url, revoked) {
    this.id = id2;
    this.emailAddress = emailAddress;
    this.publicMetadata = publicMetadata;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.status = status;
    this.url = url;
    this.revoked = revoked;
    this._raw = null;
  }
  get raw() {
    return this._raw;
  }
  static fromJSON(data) {
    const res = new _Invitation(data.id, data.email_address, data.public_metadata, data.created_at, data.updated_at, data.status, data.url, data.revoked);
    res._raw = data;
    return res;
  }
};
var ObjectType = {
  AccountlessApplication: "accountless_application",
  AllowlistIdentifier: "allowlist_identifier",
  Client: "client",
  Cookies: "cookies",
  Email: "email",
  EmailAddress: "email_address",
  ExternalAccount: "external_account",
  FacebookAccount: "facebook_account",
  GoogleAccount: "google_account",
  Invitation: "invitation",
  OauthAccessToken: "oauth_access_token",
  Organization: "organization",
  OrganizationDomain: "organization_domain",
  OrganizationInvitation: "organization_invitation",
  OrganizationMembership: "organization_membership",
  PhoneNumber: "phone_number",
  RedirectUrl: "redirect_url",
  SamlAccount: "saml_account",
  Session: "session",
  SignInAttempt: "sign_in_attempt",
  SignInToken: "sign_in_token",
  SignUpAttempt: "sign_up_attempt",
  SmsMessage: "sms_message",
  User: "user",
  WaitlistEntry: "waitlist_entry",
  Web3Wallet: "web3_wallet",
  Token: "token",
  TotalCount: "total_count",
  TestingToken: "testing_token",
  Role: "role",
  Permission: "permission"
};
var OauthAccessToken = class _OauthAccessToken {
  constructor(externalAccountId, provider, token, publicMetadata = {}, label, scopes, tokenSecret) {
    this.externalAccountId = externalAccountId;
    this.provider = provider;
    this.token = token;
    this.publicMetadata = publicMetadata;
    this.label = label;
    this.scopes = scopes;
    this.tokenSecret = tokenSecret;
  }
  static fromJSON(data) {
    return new _OauthAccessToken(data.external_account_id, data.provider, data.token, data.public_metadata, data.label || "", data.scopes, data.token_secret);
  }
};
var Organization = class _Organization {
  constructor(id2, name, slug, imageUrl, hasImage, createdAt, updatedAt, publicMetadata = {}, privateMetadata = {}, maxAllowedMemberships, adminDeleteEnabled, membersCount, createdBy) {
    this.id = id2;
    this.name = name;
    this.slug = slug;
    this.imageUrl = imageUrl;
    this.hasImage = hasImage;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.publicMetadata = publicMetadata;
    this.privateMetadata = privateMetadata;
    this.maxAllowedMemberships = maxAllowedMemberships;
    this.adminDeleteEnabled = adminDeleteEnabled;
    this.membersCount = membersCount;
    this.createdBy = createdBy;
    this._raw = null;
  }
  get raw() {
    return this._raw;
  }
  static fromJSON(data) {
    const res = new _Organization(data.id, data.name, data.slug, data.image_url || "", data.has_image, data.created_at, data.updated_at, data.public_metadata, data.private_metadata, data.max_allowed_memberships, data.admin_delete_enabled, data.members_count, data.created_by);
    res._raw = data;
    return res;
  }
};
var OrganizationInvitation = class _OrganizationInvitation {
  constructor(id2, emailAddress, role, organizationId, createdAt, updatedAt, status, publicMetadata = {}, privateMetadata = {}) {
    this.id = id2;
    this.emailAddress = emailAddress;
    this.role = role;
    this.organizationId = organizationId;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.status = status;
    this.publicMetadata = publicMetadata;
    this.privateMetadata = privateMetadata;
    this._raw = null;
  }
  get raw() {
    return this._raw;
  }
  static fromJSON(data) {
    const res = new _OrganizationInvitation(data.id, data.email_address, data.role, data.organization_id, data.created_at, data.updated_at, data.status, data.public_metadata, data.private_metadata);
    res._raw = data;
    return res;
  }
};
var OrganizationMembership = class _OrganizationMembership {
  constructor(id2, role, permissions, publicMetadata = {}, privateMetadata = {}, createdAt, updatedAt, organization, publicUserData) {
    this.id = id2;
    this.role = role;
    this.permissions = permissions;
    this.publicMetadata = publicMetadata;
    this.privateMetadata = privateMetadata;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.organization = organization;
    this.publicUserData = publicUserData;
    this._raw = null;
  }
  get raw() {
    return this._raw;
  }
  static fromJSON(data) {
    const res = new _OrganizationMembership(data.id, data.role, data.permissions, data.public_metadata, data.private_metadata, data.created_at, data.updated_at, Organization.fromJSON(data.organization), OrganizationMembershipPublicUserData.fromJSON(data.public_user_data));
    res._raw = data;
    return res;
  }
};
var OrganizationMembershipPublicUserData = class _OrganizationMembershipPublicUserData {
  constructor(identifier, firstName, lastName, imageUrl, hasImage, userId) {
    this.identifier = identifier;
    this.firstName = firstName;
    this.lastName = lastName;
    this.imageUrl = imageUrl;
    this.hasImage = hasImage;
    this.userId = userId;
  }
  static fromJSON(data) {
    return new _OrganizationMembershipPublicUserData(data.identifier, data.first_name, data.last_name, data.image_url, data.has_image, data.user_id);
  }
};
var PhoneNumber = class _PhoneNumber {
  constructor(id2, phoneNumber, reservedForSecondFactor, defaultSecondFactor, verification, linkedTo) {
    this.id = id2;
    this.phoneNumber = phoneNumber;
    this.reservedForSecondFactor = reservedForSecondFactor;
    this.defaultSecondFactor = defaultSecondFactor;
    this.verification = verification;
    this.linkedTo = linkedTo;
  }
  static fromJSON(data) {
    return new _PhoneNumber(data.id, data.phone_number, data.reserved_for_second_factor, data.default_second_factor, data.verification && Verification.fromJSON(data.verification), data.linked_to.map((link) => IdentificationLink.fromJSON(link)));
  }
};
var RedirectUrl = class _RedirectUrl {
  constructor(id2, url, createdAt, updatedAt) {
    this.id = id2;
    this.url = url;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }
  static fromJSON(data) {
    return new _RedirectUrl(data.id, data.url, data.created_at, data.updated_at);
  }
};
var SignInToken = class _SignInToken {
  constructor(id2, userId, token, status, url, createdAt, updatedAt) {
    this.id = id2;
    this.userId = userId;
    this.token = token;
    this.status = status;
    this.url = url;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }
  static fromJSON(data) {
    return new _SignInToken(data.id, data.user_id, data.token, data.status, data.url, data.created_at, data.updated_at);
  }
};
var SMSMessage = class _SMSMessage {
  constructor(id2, fromPhoneNumber, toPhoneNumber, message, status, phoneNumberId, data) {
    this.id = id2;
    this.fromPhoneNumber = fromPhoneNumber;
    this.toPhoneNumber = toPhoneNumber;
    this.message = message;
    this.status = status;
    this.phoneNumberId = phoneNumberId;
    this.data = data;
  }
  static fromJSON(data) {
    return new _SMSMessage(data.id, data.from_phone_number, data.to_phone_number, data.message, data.status, data.phone_number_id, data.data);
  }
};
var Token = class _Token {
  constructor(jwt) {
    this.jwt = jwt;
  }
  static fromJSON(data) {
    return new _Token(data.jwt);
  }
};
var SamlAccountConnection = class _SamlAccountConnection {
  constructor(id2, name, domain, active, provider, syncUserAttributes, allowSubdomains, allowIdpInitiated, createdAt, updatedAt) {
    this.id = id2;
    this.name = name;
    this.domain = domain;
    this.active = active;
    this.provider = provider;
    this.syncUserAttributes = syncUserAttributes;
    this.allowSubdomains = allowSubdomains;
    this.allowIdpInitiated = allowIdpInitiated;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }
  static fromJSON(data) {
    return new _SamlAccountConnection(data.id, data.name, data.domain, data.active, data.provider, data.sync_user_attributes, data.allow_subdomains, data.allow_idp_initiated, data.created_at, data.updated_at);
  }
};
var SamlAccount = class _SamlAccount {
  constructor(id2, provider, providerUserId, active, emailAddress, firstName, lastName, verification, samlConnection) {
    this.id = id2;
    this.provider = provider;
    this.providerUserId = providerUserId;
    this.active = active;
    this.emailAddress = emailAddress;
    this.firstName = firstName;
    this.lastName = lastName;
    this.verification = verification;
    this.samlConnection = samlConnection;
  }
  static fromJSON(data) {
    return new _SamlAccount(data.id, data.provider, data.provider_user_id, data.active, data.email_address, data.first_name, data.last_name, data.verification && Verification.fromJSON(data.verification), data.saml_connection && SamlAccountConnection.fromJSON(data.saml_connection));
  }
};
var Web3Wallet = class _Web3Wallet {
  constructor(id2, web3Wallet, verification) {
    this.id = id2;
    this.web3Wallet = web3Wallet;
    this.verification = verification;
  }
  static fromJSON(data) {
    return new _Web3Wallet(data.id, data.web3_wallet, data.verification && Verification.fromJSON(data.verification));
  }
};
var User = class _User {
  constructor(id2, passwordEnabled, totpEnabled, backupCodeEnabled, twoFactorEnabled, banned, locked, createdAt, updatedAt, imageUrl, hasImage, primaryEmailAddressId, primaryPhoneNumberId, primaryWeb3WalletId, lastSignInAt, externalId, username, firstName, lastName, publicMetadata = {}, privateMetadata = {}, unsafeMetadata = {}, emailAddresses = [], phoneNumbers = [], web3Wallets = [], externalAccounts = [], samlAccounts = [], lastActiveAt, createOrganizationEnabled, createOrganizationsLimit = null, deleteSelfEnabled, legalAcceptedAt) {
    this.id = id2;
    this.passwordEnabled = passwordEnabled;
    this.totpEnabled = totpEnabled;
    this.backupCodeEnabled = backupCodeEnabled;
    this.twoFactorEnabled = twoFactorEnabled;
    this.banned = banned;
    this.locked = locked;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.imageUrl = imageUrl;
    this.hasImage = hasImage;
    this.primaryEmailAddressId = primaryEmailAddressId;
    this.primaryPhoneNumberId = primaryPhoneNumberId;
    this.primaryWeb3WalletId = primaryWeb3WalletId;
    this.lastSignInAt = lastSignInAt;
    this.externalId = externalId;
    this.username = username;
    this.firstName = firstName;
    this.lastName = lastName;
    this.publicMetadata = publicMetadata;
    this.privateMetadata = privateMetadata;
    this.unsafeMetadata = unsafeMetadata;
    this.emailAddresses = emailAddresses;
    this.phoneNumbers = phoneNumbers;
    this.web3Wallets = web3Wallets;
    this.externalAccounts = externalAccounts;
    this.samlAccounts = samlAccounts;
    this.lastActiveAt = lastActiveAt;
    this.createOrganizationEnabled = createOrganizationEnabled;
    this.createOrganizationsLimit = createOrganizationsLimit;
    this.deleteSelfEnabled = deleteSelfEnabled;
    this.legalAcceptedAt = legalAcceptedAt;
    this._raw = null;
  }
  get raw() {
    return this._raw;
  }
  static fromJSON(data) {
    const res = new _User(data.id, data.password_enabled, data.totp_enabled, data.backup_code_enabled, data.two_factor_enabled, data.banned, data.locked, data.created_at, data.updated_at, data.image_url, data.has_image, data.primary_email_address_id, data.primary_phone_number_id, data.primary_web3_wallet_id, data.last_sign_in_at, data.external_id, data.username, data.first_name, data.last_name, data.public_metadata, data.private_metadata, data.unsafe_metadata, (data.email_addresses || []).map((x4) => EmailAddress.fromJSON(x4)), (data.phone_numbers || []).map((x4) => PhoneNumber.fromJSON(x4)), (data.web3_wallets || []).map((x4) => Web3Wallet.fromJSON(x4)), (data.external_accounts || []).map((x4) => ExternalAccount.fromJSON(x4)), (data.saml_accounts || []).map((x4) => SamlAccount.fromJSON(x4)), data.last_active_at, data.create_organization_enabled, data.create_organizations_limit, data.delete_self_enabled, data.legal_accepted_at);
    res._raw = data;
    return res;
  }
  get primaryEmailAddress() {
    return this.emailAddresses.find(({ id: id2 }) => id2 === this.primaryEmailAddressId) ?? null;
  }
  get primaryPhoneNumber() {
    return this.phoneNumbers.find(({ id: id2 }) => id2 === this.primaryPhoneNumberId) ?? null;
  }
  get primaryWeb3Wallet() {
    return this.web3Wallets.find(({ id: id2 }) => id2 === this.primaryWeb3WalletId) ?? null;
  }
  get fullName() {
    return [this.firstName, this.lastName].join(" ").trim() || null;
  }
};
function deserialize(payload) {
  let data, totalCount;
  if (Array.isArray(payload)) {
    const data2 = payload.map((item) => jsonToObject(item));
    return { data: data2 };
  } else if (isPaginated(payload)) {
    data = payload.data.map((item) => jsonToObject(item));
    totalCount = payload.total_count;
    return { data, totalCount };
  } else {
    return { data: jsonToObject(payload) };
  }
}
function isPaginated(payload) {
  if (!payload || typeof payload !== "object" || !("data" in payload)) {
    return false;
  }
  return Array.isArray(payload.data) && payload.data !== undefined;
}
function getCount(item) {
  return item.total_count;
}
function jsonToObject(item) {
  if (typeof item !== "string" && "object" in item && "deleted" in item) {
    return DeletedObject.fromJSON(item);
  }
  switch (item.object) {
    case ObjectType.AccountlessApplication:
      return AccountlessApplication.fromJSON(item);
    case ObjectType.AllowlistIdentifier:
      return AllowlistIdentifier.fromJSON(item);
    case ObjectType.Client:
      return Client.fromJSON(item);
    case ObjectType.Cookies:
      return Cookies2.fromJSON(item);
    case ObjectType.EmailAddress:
      return EmailAddress.fromJSON(item);
    case ObjectType.Email:
      return Email.fromJSON(item);
    case ObjectType.Invitation:
      return Invitation.fromJSON(item);
    case ObjectType.OauthAccessToken:
      return OauthAccessToken.fromJSON(item);
    case ObjectType.Organization:
      return Organization.fromJSON(item);
    case ObjectType.OrganizationInvitation:
      return OrganizationInvitation.fromJSON(item);
    case ObjectType.OrganizationMembership:
      return OrganizationMembership.fromJSON(item);
    case ObjectType.PhoneNumber:
      return PhoneNumber.fromJSON(item);
    case ObjectType.RedirectUrl:
      return RedirectUrl.fromJSON(item);
    case ObjectType.SignInToken:
      return SignInToken.fromJSON(item);
    case ObjectType.Session:
      return Session.fromJSON(item);
    case ObjectType.SmsMessage:
      return SMSMessage.fromJSON(item);
    case ObjectType.Token:
      return Token.fromJSON(item);
    case ObjectType.TotalCount:
      return getCount(item);
    case ObjectType.User:
      return User.fromJSON(item);
    default:
      return item;
  }
}
function buildRequest(options) {
  const requestFn = async (requestOptions) => {
    const {
      secretKey,
      requireSecretKey = true,
      apiUrl = API_URL,
      apiVersion = API_VERSION,
      userAgent = USER_AGENT
    } = options;
    const { path, method, queryParams, headerParams, bodyParams, formData } = requestOptions;
    if (requireSecretKey) {
      assertValidSecretKey(secretKey);
    }
    const url = joinPaths(apiUrl, apiVersion, path);
    const finalUrl = new URL(url);
    if (queryParams) {
      const snakecasedQueryParams = import_snakecase_keys.default({ ...queryParams });
      for (const [key, val] of Object.entries(snakecasedQueryParams)) {
        if (val) {
          [val].flat().forEach((v2) => finalUrl.searchParams.append(key, v2));
        }
      }
    }
    const headers = {
      "Clerk-API-Version": SUPPORTED_BAPI_VERSION,
      "User-Agent": userAgent,
      ...headerParams
    };
    if (secretKey) {
      headers.Authorization = `Bearer ${secretKey}`;
    }
    let res;
    try {
      if (formData) {
        res = await runtime.fetch(finalUrl.href, {
          method,
          headers,
          body: formData
        });
      } else {
        headers["Content-Type"] = "application/json";
        const hasBody = method !== "GET" && bodyParams && Object.keys(bodyParams).length > 0;
        const body = hasBody ? { body: JSON.stringify(import_snakecase_keys.default(bodyParams, { deep: false })) } : null;
        res = await runtime.fetch(finalUrl.href, {
          method,
          headers,
          ...body
        });
      }
      const isJSONResponse = res?.headers && res.headers?.get(constants.Headers.ContentType) === constants.ContentTypes.Json;
      const responseBody = await (isJSONResponse ? res.json() : res.text());
      if (!res.ok) {
        return {
          data: null,
          errors: parseErrors2(responseBody),
          status: res?.status,
          statusText: res?.statusText,
          clerkTraceId: getTraceId(responseBody, res?.headers),
          retryAfter: getRetryAfter(res?.headers)
        };
      }
      return {
        ...deserialize(responseBody),
        errors: null
      };
    } catch (err) {
      if (err instanceof Error) {
        return {
          data: null,
          errors: [
            {
              code: "unexpected_error",
              message: err.message || "Unexpected error"
            }
          ],
          clerkTraceId: getTraceId(err, res?.headers)
        };
      }
      return {
        data: null,
        errors: parseErrors2(err),
        status: res?.status,
        statusText: res?.statusText,
        clerkTraceId: getTraceId(err, res?.headers),
        retryAfter: getRetryAfter(res?.headers)
      };
    }
  };
  return withLegacyRequestReturn(requestFn);
}
function getTraceId(data, headers) {
  if (data && typeof data === "object" && "clerk_trace_id" in data && typeof data.clerk_trace_id === "string") {
    return data.clerk_trace_id;
  }
  const cfRay = headers?.get("cf-ray");
  return cfRay || "";
}
function getRetryAfter(headers) {
  const retryAfter = headers?.get("Retry-After");
  if (!retryAfter)
    return;
  const value = parseInt(retryAfter, 10);
  if (isNaN(value))
    return;
  return value;
}
function parseErrors2(data) {
  if (!!data && typeof data === "object" && "errors" in data) {
    const errors2 = data.errors;
    return errors2.length > 0 ? errors2.map(parseError) : [];
  }
  return [];
}
function withLegacyRequestReturn(cb) {
  return async (...args) => {
    const { data, errors: errors2, totalCount, status, statusText, clerkTraceId, retryAfter } = await cb(...args);
    if (errors2) {
      const error = new ClerkAPIResponseError(statusText || "", {
        data: [],
        status,
        clerkTraceId,
        retryAfter
      });
      error.errors = errors2;
      throw error;
    }
    if (typeof totalCount !== "undefined") {
      return { data, totalCount };
    }
    return data;
  };
}
function createBackendApiClient(options) {
  const request = buildRequest(options);
  return {
    __experimental_accountlessApplications: new AccountlessApplicationAPI(buildRequest({ ...options, requireSecretKey: false })),
    allowlistIdentifiers: new AllowlistIdentifierAPI(request),
    clients: new ClientAPI(request),
    emailAddresses: new EmailAddressAPI(request),
    invitations: new InvitationAPI(request),
    organizations: new OrganizationAPI(request),
    phoneNumbers: new PhoneNumberAPI(request),
    redirectUrls: new RedirectUrlAPI(request),
    sessions: new SessionAPI(request),
    signInTokens: new SignInTokenAPI(request),
    users: new UserAPI(request),
    domains: new DomainAPI(request),
    samlConnections: new SamlConnectionAPI(request),
    testingTokens: new TestingTokenAPI(request)
  };
}
var createDebug = (data) => {
  return () => {
    const res = { ...data };
    res.secretKey = (res.secretKey || "").substring(0, 7);
    res.jwtKey = (res.jwtKey || "").substring(0, 7);
    return { ...res };
  };
};
function signedInAuthObject(authenticateContext, sessionToken, sessionClaims) {
  const {
    act: actor,
    sid: sessionId,
    org_id: orgId,
    org_role: orgRole,
    org_slug: orgSlug,
    org_permissions: orgPermissions,
    sub: userId,
    fva,
    sts
  } = sessionClaims;
  const apiClient = createBackendApiClient(authenticateContext);
  const getToken = createGetToken({
    sessionId,
    sessionToken,
    fetcher: async (...args) => (await apiClient.sessions.getToken(...args)).jwt
  });
  const factorVerificationAge = fva ?? null;
  const sessionStatus = sts ?? null;
  return {
    actor,
    sessionClaims,
    sessionId,
    sessionStatus,
    userId,
    orgId,
    orgRole,
    orgSlug,
    orgPermissions,
    factorVerificationAge,
    getToken,
    has: createCheckAuthorization({ orgId, orgRole, orgPermissions, userId, factorVerificationAge }),
    debug: createDebug({ ...authenticateContext, sessionToken })
  };
}
function signedOutAuthObject(debugData) {
  return {
    sessionClaims: null,
    sessionId: null,
    sessionStatus: null,
    userId: null,
    actor: null,
    orgId: null,
    orgRole: null,
    orgSlug: null,
    orgPermissions: null,
    factorVerificationAge: null,
    getToken: () => Promise.resolve(null),
    has: () => false,
    debug: createDebug(debugData)
  };
}
var createGetToken = (params) => {
  const { fetcher, sessionToken, sessionId } = params || {};
  return async (options = {}) => {
    if (!sessionId) {
      return null;
    }
    if (options.template) {
      return fetcher(sessionId, options.template);
    }
    return sessionToken;
  };
};
var AuthStatus = {
  SignedIn: "signed-in",
  SignedOut: "signed-out",
  Handshake: "handshake"
};
var AuthErrorReason = {
  ClientUATWithoutSessionToken: "client-uat-but-no-session-token",
  DevBrowserMissing: "dev-browser-missing",
  DevBrowserSync: "dev-browser-sync",
  PrimaryRespondsToSyncing: "primary-responds-to-syncing",
  SatelliteCookieNeedsSyncing: "satellite-needs-syncing",
  SessionTokenAndUATMissing: "session-token-and-uat-missing",
  SessionTokenMissing: "session-token-missing",
  SessionTokenExpired: "session-token-expired",
  SessionTokenIATBeforeClientUAT: "session-token-iat-before-client-uat",
  SessionTokenNBF: "session-token-nbf",
  SessionTokenIatInTheFuture: "session-token-iat-in-the-future",
  SessionTokenWithoutClientUAT: "session-token-but-no-client-uat",
  ActiveOrganizationMismatch: "active-organization-mismatch",
  UnexpectedError: "unexpected-error"
};
function signedIn(authenticateContext, sessionClaims, headers = new Headers, token) {
  const authObject = signedInAuthObject(authenticateContext, token, sessionClaims);
  return {
    status: AuthStatus.SignedIn,
    reason: null,
    message: null,
    proxyUrl: authenticateContext.proxyUrl || "",
    publishableKey: authenticateContext.publishableKey || "",
    isSatellite: authenticateContext.isSatellite || false,
    domain: authenticateContext.domain || "",
    signInUrl: authenticateContext.signInUrl || "",
    signUpUrl: authenticateContext.signUpUrl || "",
    afterSignInUrl: authenticateContext.afterSignInUrl || "",
    afterSignUpUrl: authenticateContext.afterSignUpUrl || "",
    isSignedIn: true,
    toAuth: () => authObject,
    headers,
    token
  };
}
function signedOut(authenticateContext, reason, message = "", headers = new Headers) {
  return withDebugHeaders({
    status: AuthStatus.SignedOut,
    reason,
    message,
    proxyUrl: authenticateContext.proxyUrl || "",
    publishableKey: authenticateContext.publishableKey || "",
    isSatellite: authenticateContext.isSatellite || false,
    domain: authenticateContext.domain || "",
    signInUrl: authenticateContext.signInUrl || "",
    signUpUrl: authenticateContext.signUpUrl || "",
    afterSignInUrl: authenticateContext.afterSignInUrl || "",
    afterSignUpUrl: authenticateContext.afterSignUpUrl || "",
    isSignedIn: false,
    headers,
    toAuth: () => signedOutAuthObject({ ...authenticateContext, status: AuthStatus.SignedOut, reason, message }),
    token: null
  });
}
function handshake(authenticateContext, reason, message = "", headers) {
  return withDebugHeaders({
    status: AuthStatus.Handshake,
    reason,
    message,
    publishableKey: authenticateContext.publishableKey || "",
    isSatellite: authenticateContext.isSatellite || false,
    domain: authenticateContext.domain || "",
    proxyUrl: authenticateContext.proxyUrl || "",
    signInUrl: authenticateContext.signInUrl || "",
    signUpUrl: authenticateContext.signUpUrl || "",
    afterSignInUrl: authenticateContext.afterSignInUrl || "",
    afterSignUpUrl: authenticateContext.afterSignUpUrl || "",
    isSignedIn: false,
    headers,
    toAuth: () => null,
    token: null
  });
}
var withDebugHeaders = (requestState) => {
  const headers = new Headers(requestState.headers || {});
  if (requestState.message) {
    try {
      headers.set(constants.Headers.AuthMessage, requestState.message);
    } catch {}
  }
  if (requestState.reason) {
    try {
      headers.set(constants.Headers.AuthReason, requestState.reason);
    } catch {}
  }
  if (requestState.status) {
    try {
      headers.set(constants.Headers.AuthStatus, requestState.status);
    } catch {}
  }
  requestState.headers = headers;
  return requestState;
};
var ClerkUrl = class extends URL {
  isCrossOrigin(other) {
    return this.origin !== new URL(other.toString()).origin;
  }
};
var createClerkUrl = (...args) => {
  return new ClerkUrl(...args);
};
var ClerkRequest = class extends Request {
  constructor(input, init) {
    const url = typeof input !== "string" && "url" in input ? input.url : String(input);
    super(url, init || typeof input === "string" ? undefined : input);
    this.clerkUrl = this.deriveUrlFromHeaders(this);
    this.cookies = this.parseCookies(this);
  }
  toJSON() {
    return {
      url: this.clerkUrl.href,
      method: this.method,
      headers: JSON.stringify(Object.fromEntries(this.headers)),
      clerkUrl: this.clerkUrl.toString(),
      cookies: JSON.stringify(Object.fromEntries(this.cookies))
    };
  }
  deriveUrlFromHeaders(req) {
    const initialUrl = new URL(req.url);
    const forwardedProto = req.headers.get(constants.Headers.ForwardedProto);
    const forwardedHost = req.headers.get(constants.Headers.ForwardedHost);
    const host = req.headers.get(constants.Headers.Host);
    const protocol = initialUrl.protocol;
    const resolvedHost = this.getFirstValueFromHeader(forwardedHost) ?? host;
    const resolvedProtocol = this.getFirstValueFromHeader(forwardedProto) ?? protocol?.replace(/[:/]/, "");
    const origin = resolvedHost && resolvedProtocol ? `${resolvedProtocol}://${resolvedHost}` : initialUrl.origin;
    if (origin === initialUrl.origin) {
      return createClerkUrl(initialUrl);
    }
    return createClerkUrl(initialUrl.pathname + initialUrl.search, origin);
  }
  getFirstValueFromHeader(value) {
    return value?.split(",")[0];
  }
  parseCookies(req) {
    const cookiesRecord = import_cookie3.parse(this.decodeCookieValue(req.headers.get("cookie") || ""));
    return new Map(Object.entries(cookiesRecord));
  }
  decodeCookieValue(str) {
    return str ? str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent) : str;
  }
};
var createClerkRequest = (...args) => {
  return args[0] instanceof ClerkRequest ? args[0] : new ClerkRequest(...args);
};
var cache = {};
var lastUpdatedAt = 0;
function getFromCache(kid) {
  return cache[kid];
}
function getCacheValues() {
  return Object.values(cache);
}
function setInCache(jwk, shouldExpire = true) {
  cache[jwk.kid] = jwk;
  lastUpdatedAt = shouldExpire ? Date.now() : -1;
}
var LocalJwkKid = "local";
var PEM_HEADER = "-----BEGIN PUBLIC KEY-----";
var PEM_TRAILER = "-----END PUBLIC KEY-----";
var RSA_PREFIX = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA";
var RSA_SUFFIX = "IDAQAB";
function loadClerkJWKFromLocal(localKey) {
  if (!getFromCache(LocalJwkKid)) {
    if (!localKey) {
      throw new TokenVerificationError({
        action: TokenVerificationErrorAction.SetClerkJWTKey,
        message: "Missing local JWK.",
        reason: TokenVerificationErrorReason.LocalJWKMissing
      });
    }
    const modulus = localKey.replace(/\r\n|\n|\r/g, "").replace(PEM_HEADER, "").replace(PEM_TRAILER, "").replace(RSA_PREFIX, "").replace(RSA_SUFFIX, "").replace(/\+/g, "-").replace(/\//g, "_");
    setInCache({
      kid: "local",
      kty: "RSA",
      alg: "RS256",
      n: modulus,
      e: "AQAB"
    }, false);
  }
  return getFromCache(LocalJwkKid);
}
async function loadClerkJWKFromRemote({
  secretKey,
  apiUrl = API_URL,
  apiVersion = API_VERSION,
  kid,
  skipJwksCache
}) {
  if (skipJwksCache || cacheHasExpired() || !getFromCache(kid)) {
    if (!secretKey) {
      throw new TokenVerificationError({
        action: TokenVerificationErrorAction.ContactSupport,
        message: "Failed to load JWKS from Clerk Backend or Frontend API.",
        reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad
      });
    }
    const fetcher = () => fetchJWKSFromBAPI(apiUrl, secretKey, apiVersion);
    const { keys } = await retry(fetcher);
    if (!keys || !keys.length) {
      throw new TokenVerificationError({
        action: TokenVerificationErrorAction.ContactSupport,
        message: "The JWKS endpoint did not contain any signing keys. Contact support@clerk.com.",
        reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad
      });
    }
    keys.forEach((key) => setInCache(key));
  }
  const jwk = getFromCache(kid);
  if (!jwk) {
    const cacheValues = getCacheValues();
    const jwkKeys = cacheValues.map((jwk2) => jwk2.kid).sort().join(", ");
    throw new TokenVerificationError({
      action: `Go to your Dashboard and validate your secret and public keys are correct. ${TokenVerificationErrorAction.ContactSupport} if the issue persists.`,
      message: `Unable to find a signing key in JWKS that matches the kid='${kid}' of the provided session token. Please make sure that the __session cookie or the HTTP authorization header contain a Clerk-generated session JWT. The following kid is available: ${jwkKeys}`,
      reason: TokenVerificationErrorReason.JWKKidMismatch
    });
  }
  return jwk;
}
async function fetchJWKSFromBAPI(apiUrl, key, apiVersion) {
  if (!key) {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.SetClerkSecretKey,
      message: "Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.",
      reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad
    });
  }
  const url = new URL(apiUrl);
  url.pathname = joinPaths(url.pathname, apiVersion, "/jwks");
  const response = await runtime.fetch(url.href, {
    headers: {
      Authorization: `Bearer ${key}`,
      "Clerk-API-Version": SUPPORTED_BAPI_VERSION,
      "Content-Type": "application/json",
      "User-Agent": USER_AGENT
    }
  });
  if (!response.ok) {
    const json2 = await response.json();
    const invalidSecretKeyError = getErrorObjectByCode(json2?.errors, TokenVerificationErrorCode.InvalidSecretKey);
    if (invalidSecretKeyError) {
      const reason = TokenVerificationErrorReason.InvalidSecretKey;
      throw new TokenVerificationError({
        action: TokenVerificationErrorAction.ContactSupport,
        message: invalidSecretKeyError.message,
        reason
      });
    }
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.ContactSupport,
      message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,
      reason: TokenVerificationErrorReason.RemoteJWKFailedToLoad
    });
  }
  return response.json();
}
function cacheHasExpired() {
  if (lastUpdatedAt === -1) {
    return false;
  }
  const isExpired = Date.now() - lastUpdatedAt >= MAX_CACHE_LAST_UPDATED_AT_SECONDS * 1000;
  if (isExpired) {
    cache = {};
  }
  return isExpired;
}
var getErrorObjectByCode = (errors2, code) => {
  if (!errors2) {
    return null;
  }
  return errors2.find((err) => err.code === code);
};
async function verifyToken(token, options) {
  const { data: decodedResult, errors: errors2 } = decodeJwt(token);
  if (errors2) {
    return { errors: errors2 };
  }
  const { header } = decodedResult;
  const { kid } = header;
  try {
    let key;
    if (options.jwtKey) {
      key = loadClerkJWKFromLocal(options.jwtKey);
    } else if (options.secretKey) {
      key = await loadClerkJWKFromRemote({ ...options, kid });
    } else {
      return {
        errors: [
          new TokenVerificationError({
            action: TokenVerificationErrorAction.SetClerkJWTKey,
            message: "Failed to resolve JWK during verification.",
            reason: TokenVerificationErrorReason.JWKFailedToResolve
          })
        ]
      };
    }
    return await verifyJwt(token, { ...options, key });
  } catch (error) {
    return { errors: [error] };
  }
}
var AuthenticateContext = class {
  constructor(cookieSuffix, clerkRequest, options) {
    this.cookieSuffix = cookieSuffix;
    this.clerkRequest = clerkRequest;
    this.initPublishableKeyValues(options);
    this.initHeaderValues();
    this.initCookieValues();
    this.initHandshakeValues();
    Object.assign(this, options);
    this.clerkUrl = this.clerkRequest.clerkUrl;
  }
  get sessionToken() {
    return this.sessionTokenInCookie || this.sessionTokenInHeader;
  }
  usesSuffixedCookies() {
    const suffixedClientUat = this.getSuffixedCookie(constants.Cookies.ClientUat);
    const clientUat = this.getCookie(constants.Cookies.ClientUat);
    const suffixedSession = this.getSuffixedCookie(constants.Cookies.Session) || "";
    const session = this.getCookie(constants.Cookies.Session) || "";
    if (session && !this.tokenHasIssuer(session)) {
      return false;
    }
    if (session && !this.tokenBelongsToInstance(session)) {
      return true;
    }
    if (!suffixedClientUat && !suffixedSession) {
      return false;
    }
    const { data: sessionData } = decodeJwt(session);
    const sessionIat = sessionData?.payload.iat || 0;
    const { data: suffixedSessionData } = decodeJwt(suffixedSession);
    const suffixedSessionIat = suffixedSessionData?.payload.iat || 0;
    if (suffixedClientUat !== "0" && clientUat !== "0" && sessionIat > suffixedSessionIat) {
      return false;
    }
    if (suffixedClientUat === "0" && clientUat !== "0") {
      return false;
    }
    if (this.instanceType !== "production") {
      const isSuffixedSessionExpired = this.sessionExpired(suffixedSessionData);
      if (suffixedClientUat !== "0" && clientUat === "0" && isSuffixedSessionExpired) {
        return false;
      }
    }
    if (!suffixedClientUat && suffixedSession) {
      return false;
    }
    return true;
  }
  initPublishableKeyValues(options) {
    assertValidPublishableKey(options.publishableKey);
    this.publishableKey = options.publishableKey;
    const pk = parsePublishableKey(this.publishableKey, {
      fatal: true,
      proxyUrl: options.proxyUrl,
      domain: options.domain
    });
    this.instanceType = pk.instanceType;
    this.frontendApi = pk.frontendApi;
  }
  initHeaderValues() {
    this.sessionTokenInHeader = this.parseAuthorizationHeader(this.getHeader(constants.Headers.Authorization));
    this.origin = this.getHeader(constants.Headers.Origin);
    this.host = this.getHeader(constants.Headers.Host);
    this.forwardedHost = this.getHeader(constants.Headers.ForwardedHost);
    this.forwardedProto = this.getHeader(constants.Headers.CloudFrontForwardedProto) || this.getHeader(constants.Headers.ForwardedProto);
    this.referrer = this.getHeader(constants.Headers.Referrer);
    this.userAgent = this.getHeader(constants.Headers.UserAgent);
    this.secFetchDest = this.getHeader(constants.Headers.SecFetchDest);
    this.accept = this.getHeader(constants.Headers.Accept);
  }
  initCookieValues() {
    this.sessionTokenInCookie = this.getSuffixedOrUnSuffixedCookie(constants.Cookies.Session);
    this.refreshTokenInCookie = this.getSuffixedCookie(constants.Cookies.Refresh);
    this.clientUat = Number.parseInt(this.getSuffixedOrUnSuffixedCookie(constants.Cookies.ClientUat) || "") || 0;
  }
  initHandshakeValues() {
    this.devBrowserToken = this.getQueryParam(constants.QueryParameters.DevBrowser) || this.getSuffixedOrUnSuffixedCookie(constants.Cookies.DevBrowser);
    this.handshakeToken = this.getQueryParam(constants.QueryParameters.Handshake) || this.getCookie(constants.Cookies.Handshake);
    this.handshakeRedirectLoopCounter = Number(this.getCookie(constants.Cookies.RedirectCount)) || 0;
  }
  getQueryParam(name) {
    return this.clerkRequest.clerkUrl.searchParams.get(name);
  }
  getHeader(name) {
    return this.clerkRequest.headers.get(name) || undefined;
  }
  getCookie(name) {
    return this.clerkRequest.cookies.get(name) || undefined;
  }
  getSuffixedCookie(name) {
    return this.getCookie(getSuffixedCookieName(name, this.cookieSuffix)) || undefined;
  }
  getSuffixedOrUnSuffixedCookie(cookieName) {
    if (this.usesSuffixedCookies()) {
      return this.getSuffixedCookie(cookieName);
    }
    return this.getCookie(cookieName);
  }
  parseAuthorizationHeader(authorizationHeader) {
    if (!authorizationHeader) {
      return;
    }
    const [scheme, token] = authorizationHeader.split(" ", 2);
    if (!token) {
      return scheme;
    }
    if (scheme === "Bearer") {
      return token;
    }
    return;
  }
  tokenHasIssuer(token) {
    const { data, errors: errors2 } = decodeJwt(token);
    if (errors2) {
      return false;
    }
    return !!data.payload.iss;
  }
  tokenBelongsToInstance(token) {
    if (!token) {
      return false;
    }
    const { data, errors: errors2 } = decodeJwt(token);
    if (errors2) {
      return false;
    }
    const tokenIssuer = data.payload.iss.replace(/https?:\/\//gi, "");
    return this.frontendApi === tokenIssuer;
  }
  sessionExpired(jwt) {
    return !!jwt && jwt?.payload.exp <= Date.now() / 1000 >> 0;
  }
};
var createAuthenticateContext = async (clerkRequest, options) => {
  const cookieSuffix = options.publishableKey ? await getCookieSuffix(options.publishableKey, runtime.crypto.subtle) : "";
  return new AuthenticateContext(cookieSuffix, clerkRequest, options);
};
var getCookieName = (cookieDirective) => {
  return cookieDirective.split(";")[0]?.split("=")[0];
};
var getCookieValue = (cookieDirective) => {
  return cookieDirective.split(";")[0]?.split("=")[1];
};
async function verifyHandshakeJwt(token, { key }) {
  const { data: decoded, errors: errors2 } = decodeJwt(token);
  if (errors2) {
    throw errors2[0];
  }
  const { header, payload } = decoded;
  const { typ, alg } = header;
  assertHeaderType(typ);
  assertHeaderAlgorithm(alg);
  const { data: signatureValid, errors: signatureErrors } = await hasValidSignature(decoded, key);
  if (signatureErrors) {
    throw new TokenVerificationError({
      reason: TokenVerificationErrorReason.TokenVerificationFailed,
      message: `Error verifying handshake token. ${signatureErrors[0]}`
    });
  }
  if (!signatureValid) {
    throw new TokenVerificationError({
      reason: TokenVerificationErrorReason.TokenInvalidSignature,
      message: "Handshake signature is invalid."
    });
  }
  return payload;
}
async function verifyHandshakeToken(token, options) {
  const { secretKey, apiUrl, apiVersion, jwksCacheTtlInMs, jwtKey, skipJwksCache } = options;
  const { data, errors: errors2 } = decodeJwt(token);
  if (errors2) {
    throw errors2[0];
  }
  const { kid } = data.header;
  let key;
  if (jwtKey) {
    key = loadClerkJWKFromLocal(jwtKey);
  } else if (secretKey) {
    key = await loadClerkJWKFromRemote({ secretKey, apiUrl, apiVersion, kid, jwksCacheTtlInMs, skipJwksCache });
  } else {
    throw new TokenVerificationError({
      action: TokenVerificationErrorAction.SetClerkJWTKey,
      message: "Failed to resolve JWK during handshake verification.",
      reason: TokenVerificationErrorReason.JWKFailedToResolve
    });
  }
  return await verifyHandshakeJwt(token, {
    key
  });
}
var RefreshTokenErrorReason = {
  NonEligibleNoCookie: "non-eligible-no-refresh-cookie",
  NonEligibleNonGet: "non-eligible-non-get",
  InvalidSessionToken: "invalid-session-token",
  MissingApiClient: "missing-api-client",
  MissingSessionToken: "missing-session-token",
  MissingRefreshToken: "missing-refresh-token",
  ExpiredSessionTokenDecodeFailed: "expired-session-token-decode-failed",
  ExpiredSessionTokenMissingSidClaim: "expired-session-token-missing-sid-claim",
  FetchError: "fetch-error",
  UnexpectedSDKError: "unexpected-sdk-error",
  UnexpectedBAPIError: "unexpected-bapi-error"
};
function assertSignInUrlExists(signInUrl, key) {
  if (!signInUrl && isDevelopmentFromSecretKey(key)) {
    throw new Error(`Missing signInUrl. Pass a signInUrl for dev instances if an app is satellite`);
  }
}
function assertProxyUrlOrDomain(proxyUrlOrDomain) {
  if (!proxyUrlOrDomain) {
    throw new Error(`Missing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl`);
  }
}
function assertSignInUrlFormatAndOrigin(_signInUrl, origin) {
  let signInUrl;
  try {
    signInUrl = new URL(_signInUrl);
  } catch {
    throw new Error(`The signInUrl needs to have a absolute url format.`);
  }
  if (signInUrl.origin === origin) {
    throw new Error(`The signInUrl needs to be on a different origin than your satellite application.`);
  }
}
function isRequestEligibleForHandshake(authenticateContext) {
  const { accept, secFetchDest } = authenticateContext;
  if (secFetchDest === "document" || secFetchDest === "iframe") {
    return true;
  }
  if (!secFetchDest && accept?.startsWith("text/html")) {
    return true;
  }
  return false;
}
function isRequestEligibleForRefresh(err, authenticateContext, request) {
  return err.reason === TokenVerificationErrorReason.TokenExpired && !!authenticateContext.refreshTokenInCookie && request.method === "GET";
}
async function authenticateRequest(request, options) {
  const authenticateContext = await createAuthenticateContext(createClerkRequest(request), options);
  assertValidSecretKey(authenticateContext.secretKey);
  if (authenticateContext.isSatellite) {
    assertSignInUrlExists(authenticateContext.signInUrl, authenticateContext.secretKey);
    if (authenticateContext.signInUrl && authenticateContext.origin) {
      assertSignInUrlFormatAndOrigin(authenticateContext.signInUrl, authenticateContext.origin);
    }
    assertProxyUrlOrDomain(authenticateContext.proxyUrl || authenticateContext.domain);
  }
  const organizationSyncTargetMatchers = computeOrganizationSyncTargetMatchers(options.organizationSyncOptions);
  function removeDevBrowserFromURL(url) {
    const updatedURL = new URL(url);
    updatedURL.searchParams.delete(constants.QueryParameters.DevBrowser);
    updatedURL.searchParams.delete(constants.QueryParameters.LegacyDevBrowser);
    return updatedURL;
  }
  function buildRedirectToHandshake({ handshakeReason }) {
    const redirectUrl = removeDevBrowserFromURL(authenticateContext.clerkUrl);
    const frontendApiNoProtocol = authenticateContext.frontendApi.replace(/http(s)?:\/\//, "");
    const url = new URL(`https://${frontendApiNoProtocol}/v1/client/handshake`);
    url.searchParams.append("redirect_url", redirectUrl?.href || "");
    url.searchParams.append(constants.QueryParameters.SuffixedCookies, authenticateContext.usesSuffixedCookies().toString());
    url.searchParams.append(constants.QueryParameters.HandshakeReason, handshakeReason);
    if (authenticateContext.instanceType === "development" && authenticateContext.devBrowserToken) {
      url.searchParams.append(constants.QueryParameters.DevBrowser, authenticateContext.devBrowserToken);
    }
    const toActivate = getOrganizationSyncTarget(authenticateContext.clerkUrl, options.organizationSyncOptions, organizationSyncTargetMatchers);
    if (toActivate) {
      const params = getOrganizationSyncQueryParams(toActivate);
      params.forEach((value, key) => {
        url.searchParams.append(key, value);
      });
    }
    return new Headers({ [constants.Headers.Location]: url.href });
  }
  async function resolveHandshake() {
    const headers = new Headers({
      "Access-Control-Allow-Origin": "null",
      "Access-Control-Allow-Credentials": "true"
    });
    const handshakePayload = await verifyHandshakeToken(authenticateContext.handshakeToken, authenticateContext);
    const cookiesToSet = handshakePayload.handshake;
    let sessionToken = "";
    cookiesToSet.forEach((x4) => {
      headers.append("Set-Cookie", x4);
      if (getCookieName(x4).startsWith(constants.Cookies.Session)) {
        sessionToken = getCookieValue(x4);
      }
    });
    if (authenticateContext.instanceType === "development") {
      const newUrl = new URL(authenticateContext.clerkUrl);
      newUrl.searchParams.delete(constants.QueryParameters.Handshake);
      newUrl.searchParams.delete(constants.QueryParameters.HandshakeHelp);
      headers.append(constants.Headers.Location, newUrl.toString());
      headers.set(constants.Headers.CacheControl, "no-store");
    }
    if (sessionToken === "") {
      return signedOut(authenticateContext, AuthErrorReason.SessionTokenMissing, "", headers);
    }
    const { data, errors: [error] = [] } = await verifyToken(sessionToken, authenticateContext);
    if (data) {
      return signedIn(authenticateContext, data, headers, sessionToken);
    }
    if (authenticateContext.instanceType === "development" && (error?.reason === TokenVerificationErrorReason.TokenExpired || error?.reason === TokenVerificationErrorReason.TokenNotActiveYet || error?.reason === TokenVerificationErrorReason.TokenIatInTheFuture)) {
      error.tokenCarrier = "cookie";
      console.error(`Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will attempt to account for the clock skew in development.

To resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).

---

${error.getFullMessage()}`);
      const { data: retryResult, errors: [retryError] = [] } = await verifyToken(sessionToken, {
        ...authenticateContext,
        clockSkewInMs: 86400000
      });
      if (retryResult) {
        return signedIn(authenticateContext, retryResult, headers, sessionToken);
      }
      throw new Error(retryError?.message || "Clerk: Handshake retry failed.");
    }
    throw new Error(error?.message || "Clerk: Handshake failed.");
  }
  async function refreshToken(authenticateContext2) {
    if (!options.apiClient) {
      return {
        data: null,
        error: {
          message: "An apiClient is needed to perform token refresh.",
          cause: { reason: RefreshTokenErrorReason.MissingApiClient }
        }
      };
    }
    const { sessionToken: expiredSessionToken, refreshTokenInCookie: refreshToken2 } = authenticateContext2;
    if (!expiredSessionToken) {
      return {
        data: null,
        error: {
          message: "Session token must be provided.",
          cause: { reason: RefreshTokenErrorReason.MissingSessionToken }
        }
      };
    }
    if (!refreshToken2) {
      return {
        data: null,
        error: {
          message: "Refresh token must be provided.",
          cause: { reason: RefreshTokenErrorReason.MissingRefreshToken }
        }
      };
    }
    const { data: decodeResult, errors: decodedErrors } = decodeJwt(expiredSessionToken);
    if (!decodeResult || decodedErrors) {
      return {
        data: null,
        error: {
          message: "Unable to decode the expired session token.",
          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenDecodeFailed, errors: decodedErrors }
        }
      };
    }
    if (!decodeResult?.payload?.sid) {
      return {
        data: null,
        error: {
          message: "Expired session token is missing the `sid` claim.",
          cause: { reason: RefreshTokenErrorReason.ExpiredSessionTokenMissingSidClaim }
        }
      };
    }
    try {
      const response = await options.apiClient.sessions.refreshSession(decodeResult.payload.sid, {
        format: "cookie",
        suffixed_cookies: authenticateContext2.usesSuffixedCookies(),
        expired_token: expiredSessionToken || "",
        refresh_token: refreshToken2 || "",
        request_origin: authenticateContext2.clerkUrl.origin,
        request_headers: Object.fromEntries(Array.from(request.headers.entries()).map(([k3, v2]) => [k3, [v2]]))
      });
      return { data: response.cookies, error: null };
    } catch (err) {
      if (err?.errors?.length) {
        if (err.errors[0].code === "unexpected_error") {
          return {
            data: null,
            error: {
              message: `Fetch unexpected error`,
              cause: { reason: RefreshTokenErrorReason.FetchError, errors: err.errors }
            }
          };
        }
        return {
          data: null,
          error: {
            message: err.errors[0].code,
            cause: { reason: err.errors[0].code, errors: err.errors }
          }
        };
      } else {
        return {
          data: null,
          error: {
            message: `Unexpected Server/BAPI error`,
            cause: { reason: RefreshTokenErrorReason.UnexpectedBAPIError, errors: [err] }
          }
        };
      }
    }
  }
  async function attemptRefresh(authenticateContext2) {
    const { data: cookiesToSet, error } = await refreshToken(authenticateContext2);
    if (!cookiesToSet || cookiesToSet.length === 0) {
      return { data: null, error };
    }
    const headers = new Headers;
    let sessionToken = "";
    cookiesToSet.forEach((x4) => {
      headers.append("Set-Cookie", x4);
      if (getCookieName(x4).startsWith(constants.Cookies.Session)) {
        sessionToken = getCookieValue(x4);
      }
    });
    const { data: jwtPayload, errors: errors2 } = await verifyToken(sessionToken, authenticateContext2);
    if (errors2) {
      return {
        data: null,
        error: {
          message: `Clerk: unable to verify refreshed session token.`,
          cause: { reason: RefreshTokenErrorReason.InvalidSessionToken, errors: errors2 }
        }
      };
    }
    return { data: { jwtPayload, sessionToken, headers }, error: null };
  }
  function handleMaybeHandshakeStatus(authenticateContext2, reason, message, headers) {
    if (isRequestEligibleForHandshake(authenticateContext2)) {
      const handshakeHeaders = headers ?? buildRedirectToHandshake({ handshakeReason: reason });
      if (handshakeHeaders.get(constants.Headers.Location)) {
        handshakeHeaders.set(constants.Headers.CacheControl, "no-store");
      }
      const isRedirectLoop = setHandshakeInfiniteRedirectionLoopHeaders(handshakeHeaders);
      if (isRedirectLoop) {
        const msg = `Clerk: Refreshing the session token resulted in an infinite redirect loop. This usually means that your Clerk instance keys do not match - make sure to copy the correct publishable and secret keys from the Clerk dashboard.`;
        console.log(msg);
        return signedOut(authenticateContext2, reason, message);
      }
      return handshake(authenticateContext2, reason, message, handshakeHeaders);
    }
    return signedOut(authenticateContext2, reason, message);
  }
  function handleMaybeOrganizationSyncHandshake(authenticateContext2, auth) {
    const organizationSyncTarget = getOrganizationSyncTarget(authenticateContext2.clerkUrl, options.organizationSyncOptions, organizationSyncTargetMatchers);
    if (!organizationSyncTarget) {
      return null;
    }
    let mustActivate = false;
    if (organizationSyncTarget.type === "organization") {
      if (organizationSyncTarget.organizationSlug && organizationSyncTarget.organizationSlug !== auth.orgSlug) {
        mustActivate = true;
      }
      if (organizationSyncTarget.organizationId && organizationSyncTarget.organizationId !== auth.orgId) {
        mustActivate = true;
      }
    }
    if (organizationSyncTarget.type === "personalAccount" && auth.orgId) {
      mustActivate = true;
    }
    if (!mustActivate) {
      return null;
    }
    if (authenticateContext2.handshakeRedirectLoopCounter > 0) {
      console.warn("Clerk: Organization activation handshake loop detected. This is likely due to an invalid organization ID or slug. Skipping organization activation.");
      return null;
    }
    const handshakeState = handleMaybeHandshakeStatus(authenticateContext2, AuthErrorReason.ActiveOrganizationMismatch, "");
    if (handshakeState.status !== "handshake") {
      return null;
    }
    return handshakeState;
  }
  async function authenticateRequestWithTokenInHeader() {
    const { sessionTokenInHeader } = authenticateContext;
    try {
      const { data, errors: errors2 } = await verifyToken(sessionTokenInHeader, authenticateContext);
      if (errors2) {
        throw errors2[0];
      }
      return signedIn(authenticateContext, data, undefined, sessionTokenInHeader);
    } catch (err) {
      return handleError(err, "header");
    }
  }
  function setHandshakeInfiniteRedirectionLoopHeaders(headers) {
    if (authenticateContext.handshakeRedirectLoopCounter === 3) {
      return true;
    }
    const newCounterValue = authenticateContext.handshakeRedirectLoopCounter + 1;
    const cookieName = constants.Cookies.RedirectCount;
    headers.append("Set-Cookie", `${cookieName}=${newCounterValue}; SameSite=Lax; HttpOnly; Max-Age=3`);
    return false;
  }
  function handleHandshakeTokenVerificationErrorInDevelopment(error) {
    if (error.reason === TokenVerificationErrorReason.TokenInvalidSignature) {
      const msg = `Clerk: Handshake token verification failed due to an invalid signature. If you have switched Clerk keys locally, clear your cookies and try again.`;
      throw new Error(msg);
    }
    throw new Error(`Clerk: Handshake token verification failed: ${error.getFullMessage()}.`);
  }
  async function authenticateRequestWithTokenInCookie() {
    const hasActiveClient = authenticateContext.clientUat;
    const hasSessionToken = !!authenticateContext.sessionTokenInCookie;
    const hasDevBrowserToken = !!authenticateContext.devBrowserToken;
    if (authenticateContext.handshakeToken) {
      try {
        return await resolveHandshake();
      } catch (error) {
        if (error instanceof TokenVerificationError && authenticateContext.instanceType === "development") {
          handleHandshakeTokenVerificationErrorInDevelopment(error);
        } else {
          console.error("Clerk: unable to resolve handshake:", error);
        }
      }
    }
    if (authenticateContext.instanceType === "development" && authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.DevBrowser)) {
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserSync, "");
    }
    const isRequestEligibleForMultiDomainSync = authenticateContext.isSatellite && authenticateContext.secFetchDest === "document";
    if (authenticateContext.instanceType === "production" && isRequestEligibleForMultiDomainSync) {
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, "");
    }
    if (authenticateContext.instanceType === "development" && isRequestEligibleForMultiDomainSync && !authenticateContext.clerkUrl.searchParams.has(constants.QueryParameters.ClerkSynced)) {
      const redirectURL = new URL(authenticateContext.signInUrl);
      redirectURL.searchParams.append(constants.QueryParameters.ClerkRedirectUrl, authenticateContext.clerkUrl.toString());
      const headers = new Headers({ [constants.Headers.Location]: redirectURL.toString() });
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SatelliteCookieNeedsSyncing, "", headers);
    }
    const redirectUrl = new URL(authenticateContext.clerkUrl).searchParams.get(constants.QueryParameters.ClerkRedirectUrl);
    if (authenticateContext.instanceType === "development" && !authenticateContext.isSatellite && redirectUrl) {
      const redirectBackToSatelliteUrl = new URL(redirectUrl);
      if (authenticateContext.devBrowserToken) {
        redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.DevBrowser, authenticateContext.devBrowserToken);
      }
      redirectBackToSatelliteUrl.searchParams.append(constants.QueryParameters.ClerkSynced, "true");
      const headers = new Headers({ [constants.Headers.Location]: redirectBackToSatelliteUrl.toString() });
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.PrimaryRespondsToSyncing, "", headers);
    }
    if (authenticateContext.instanceType === "development" && !hasDevBrowserToken) {
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.DevBrowserMissing, "");
    }
    if (!hasActiveClient && !hasSessionToken) {
      return signedOut(authenticateContext, AuthErrorReason.SessionTokenAndUATMissing, "");
    }
    if (!hasActiveClient && hasSessionToken) {
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenWithoutClientUAT, "");
    }
    if (hasActiveClient && !hasSessionToken) {
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.ClientUATWithoutSessionToken, "");
    }
    const { data: decodeResult, errors: decodedErrors } = decodeJwt(authenticateContext.sessionTokenInCookie);
    if (decodedErrors) {
      return handleError(decodedErrors[0], "cookie");
    }
    if (decodeResult.payload.iat < authenticateContext.clientUat) {
      return handleMaybeHandshakeStatus(authenticateContext, AuthErrorReason.SessionTokenIATBeforeClientUAT, "");
    }
    try {
      const { data, errors: errors2 } = await verifyToken(authenticateContext.sessionTokenInCookie, authenticateContext);
      if (errors2) {
        throw errors2[0];
      }
      const signedInRequestState = signedIn(authenticateContext, data, undefined, authenticateContext.sessionTokenInCookie);
      const handshakeRequestState = handleMaybeOrganizationSyncHandshake(authenticateContext, signedInRequestState.toAuth());
      if (handshakeRequestState) {
        return handshakeRequestState;
      }
      return signedInRequestState;
    } catch (err) {
      return handleError(err, "cookie");
    }
    return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);
  }
  async function handleError(err, tokenCarrier) {
    if (!(err instanceof TokenVerificationError)) {
      return signedOut(authenticateContext, AuthErrorReason.UnexpectedError);
    }
    let refreshError;
    if (isRequestEligibleForRefresh(err, authenticateContext, request)) {
      const { data, error } = await attemptRefresh(authenticateContext);
      if (data) {
        return signedIn(authenticateContext, data.jwtPayload, data.headers, data.sessionToken);
      }
      if (error?.cause?.reason) {
        refreshError = error.cause.reason;
      } else {
        refreshError = RefreshTokenErrorReason.UnexpectedSDKError;
      }
    } else {
      if (request.method !== "GET") {
        refreshError = RefreshTokenErrorReason.NonEligibleNonGet;
      } else if (!authenticateContext.refreshTokenInCookie) {
        refreshError = RefreshTokenErrorReason.NonEligibleNoCookie;
      } else {
        refreshError = null;
      }
    }
    err.tokenCarrier = tokenCarrier;
    const reasonToHandshake = [
      TokenVerificationErrorReason.TokenExpired,
      TokenVerificationErrorReason.TokenNotActiveYet,
      TokenVerificationErrorReason.TokenIatInTheFuture
    ].includes(err.reason);
    if (reasonToHandshake) {
      return handleMaybeHandshakeStatus(authenticateContext, convertTokenVerificationErrorReasonToAuthErrorReason({ tokenError: err.reason, refreshError }), err.getFullMessage());
    }
    return signedOut(authenticateContext, err.reason, err.getFullMessage());
  }
  if (authenticateContext.sessionTokenInHeader) {
    return authenticateRequestWithTokenInHeader();
  }
  return authenticateRequestWithTokenInCookie();
}
var debugRequestState = (params) => {
  const { isSignedIn, proxyUrl, reason, message, publishableKey, isSatellite, domain } = params;
  return { isSignedIn, proxyUrl, reason, message, publishableKey, isSatellite, domain };
};
function computeOrganizationSyncTargetMatchers(options) {
  let personalAccountMatcher = null;
  if (options?.personalAccountPatterns) {
    try {
      personalAccountMatcher = match(options.personalAccountPatterns);
    } catch (e) {
      throw new Error(`Invalid personal account pattern "${options.personalAccountPatterns}": "${e}"`);
    }
  }
  let organizationMatcher = null;
  if (options?.organizationPatterns) {
    try {
      organizationMatcher = match(options.organizationPatterns);
    } catch (e) {
      throw new Error(`Clerk: Invalid organization pattern "${options.organizationPatterns}": "${e}"`);
    }
  }
  return {
    OrganizationMatcher: organizationMatcher,
    PersonalAccountMatcher: personalAccountMatcher
  };
}
function getOrganizationSyncTarget(url, options, matchers) {
  if (!options) {
    return null;
  }
  if (matchers.OrganizationMatcher) {
    let orgResult;
    try {
      orgResult = matchers.OrganizationMatcher(url.pathname);
    } catch (e) {
      console.error(`Clerk: Failed to apply organization pattern "${options.organizationPatterns}" to a path`, e);
      return null;
    }
    if (orgResult && "params" in orgResult) {
      const params = orgResult.params;
      if ("id" in params && typeof params.id === "string") {
        return { type: "organization", organizationId: params.id };
      }
      if ("slug" in params && typeof params.slug === "string") {
        return { type: "organization", organizationSlug: params.slug };
      }
      console.warn("Clerk: Detected an organization pattern match, but no organization ID or slug was found in the URL. Does the pattern include `:id` or `:slug`?");
    }
  }
  if (matchers.PersonalAccountMatcher) {
    let personalResult;
    try {
      personalResult = matchers.PersonalAccountMatcher(url.pathname);
    } catch (e) {
      console.error(`Failed to apply personal account pattern "${options.personalAccountPatterns}" to a path`, e);
      return null;
    }
    if (personalResult) {
      return { type: "personalAccount" };
    }
  }
  return null;
}
function getOrganizationSyncQueryParams(toActivate) {
  const ret = /* @__PURE__ */ new Map;
  if (toActivate.type === "personalAccount") {
    ret.set("organization_id", "");
  }
  if (toActivate.type === "organization") {
    if (toActivate.organizationId) {
      ret.set("organization_id", toActivate.organizationId);
    }
    if (toActivate.organizationSlug) {
      ret.set("organization_id", toActivate.organizationSlug);
    }
  }
  return ret;
}
var convertTokenVerificationErrorReasonToAuthErrorReason = ({
  tokenError,
  refreshError
}) => {
  switch (tokenError) {
    case TokenVerificationErrorReason.TokenExpired:
      return `${AuthErrorReason.SessionTokenExpired}-refresh-${refreshError}`;
    case TokenVerificationErrorReason.TokenNotActiveYet:
      return AuthErrorReason.SessionTokenNBF;
    case TokenVerificationErrorReason.TokenIatInTheFuture:
      return AuthErrorReason.SessionTokenIatInTheFuture;
    default:
      return AuthErrorReason.UnexpectedError;
  }
};
function mergePreDefinedOptions(preDefinedOptions, options) {
  return Object.keys(preDefinedOptions).reduce((obj, key) => {
    return { ...obj, [key]: options[key] || obj[key] };
  }, { ...preDefinedOptions });
}
var defaultOptions2 = {
  secretKey: "",
  jwtKey: "",
  apiUrl: undefined,
  apiVersion: undefined,
  proxyUrl: "",
  publishableKey: "",
  isSatellite: false,
  domain: "",
  audience: ""
};
function createAuthenticateRequest(params) {
  const buildTimeOptions = mergePreDefinedOptions(defaultOptions2, params.options);
  const apiClient = params.apiClient;
  const authenticateRequest2 = (request, options = {}) => {
    const { apiUrl, apiVersion } = buildTimeOptions;
    const runTimeOptions = mergePreDefinedOptions(buildTimeOptions, options);
    return authenticateRequest(request, {
      ...options,
      ...runTimeOptions,
      apiUrl,
      apiVersion,
      apiClient
    });
  };
  return {
    authenticateRequest: authenticateRequest2,
    debugRequestState
  };
}

// node_modules/@clerk/backend/dist/chunk-P263NW7Z.mjs
function withLegacyReturn(cb) {
  return async (...args) => {
    const { data, errors: errors2 } = await cb(...args);
    if (errors2) {
      throw errors2[0];
    }
    return data;
  };
}

// node_modules/@clerk/shared/dist/chunk-RWYTRAIK.mjs
function snakeToCamel(str) {
  return str ? str.replace(/([-_][a-z])/g, (match2) => match2.toUpperCase().replace(/-|_/, "")) : "";
}
function camelToSnake(str) {
  return str ? str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`) : "";
}
var createDeepObjectTransformer = (transform) => {
  const deepTransform = (obj) => {
    if (!obj) {
      return obj;
    }
    if (Array.isArray(obj)) {
      return obj.map((el2) => {
        if (typeof el2 === "object" || Array.isArray(el2)) {
          return deepTransform(el2);
        }
        return el2;
      });
    }
    const copy = { ...obj };
    const keys = Object.keys(copy);
    for (const oldName of keys) {
      const newName = transform(oldName.toString());
      if (newName !== oldName) {
        copy[newName] = copy[oldName];
        delete copy[oldName];
      }
      if (typeof copy[newName] === "object") {
        copy[newName] = deepTransform(copy[newName]);
      }
    }
    return copy;
  };
  return deepTransform;
};
var deepCamelToSnake = createDeepObjectTransformer(camelToSnake);
var deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);
function isTruthy(value) {
  if (typeof value === `boolean`) {
    return value;
  }
  if (value === undefined || value === null) {
    return false;
  }
  if (typeof value === `string`) {
    if (value.toLowerCase() === `true`) {
      return true;
    }
    if (value.toLowerCase() === `false`) {
      return false;
    }
  }
  const number = parseInt(value, 10);
  if (isNaN(number)) {
    return false;
  }
  if (number > 0) {
    return true;
  }
  return false;
}

// node_modules/@clerk/shared/dist/chunk-L6WULBPV.mjs
var DEFAULT_CACHE_TTL_MS = 86400000;
var _storageKey;
var _cacheTtl;
var _TelemetryEventThrottler_instances;
var generateKey_fn;
var cache_get;
var isValidBrowser_get;
var TelemetryEventThrottler = class {
  constructor() {
    __privateAdd(this, _TelemetryEventThrottler_instances);
    __privateAdd(this, _storageKey, "clerk_telemetry_throttler");
    __privateAdd(this, _cacheTtl, DEFAULT_CACHE_TTL_MS);
  }
  isEventThrottled(payload) {
    if (!__privateGet(this, _TelemetryEventThrottler_instances, isValidBrowser_get)) {
      return false;
    }
    const now = Date.now();
    const key = __privateMethod(this, _TelemetryEventThrottler_instances, generateKey_fn).call(this, payload);
    const entry = __privateGet(this, _TelemetryEventThrottler_instances, cache_get)?.[key];
    if (!entry) {
      const updatedCache = {
        ...__privateGet(this, _TelemetryEventThrottler_instances, cache_get),
        [key]: now
      };
      localStorage.setItem(__privateGet(this, _storageKey), JSON.stringify(updatedCache));
    }
    const shouldInvalidate = entry && now - entry > __privateGet(this, _cacheTtl);
    if (shouldInvalidate) {
      const updatedCache = __privateGet(this, _TelemetryEventThrottler_instances, cache_get);
      delete updatedCache[key];
      localStorage.setItem(__privateGet(this, _storageKey), JSON.stringify(updatedCache));
    }
    return !!entry;
  }
};
_storageKey = new WeakMap;
_cacheTtl = new WeakMap;
_TelemetryEventThrottler_instances = new WeakSet;
generateKey_fn = function(event) {
  const { sk: _sk, pk: _pk, payload, ...rest } = event;
  const sanitizedEvent = {
    ...payload,
    ...rest
  };
  return JSON.stringify(Object.keys({
    ...payload,
    ...rest
  }).sort().map((key) => sanitizedEvent[key]));
};
cache_get = function() {
  const cacheString = localStorage.getItem(__privateGet(this, _storageKey));
  if (!cacheString) {
    return {};
  }
  return JSON.parse(cacheString);
};
isValidBrowser_get = function() {
  if (typeof window === "undefined") {
    return false;
  }
  const storage = window.localStorage;
  if (!storage) {
    return false;
  }
  try {
    const testKey = "test";
    storage.setItem(testKey, testKey);
    storage.removeItem(testKey);
    return true;
  } catch (err) {
    const isQuotaExceededError = err instanceof DOMException && (err.name === "QuotaExceededError" || err.name === "NS_ERROR_DOM_QUOTA_REACHED");
    if (isQuotaExceededError && storage.length > 0) {
      storage.removeItem(__privateGet(this, _storageKey));
    }
    return false;
  }
};
var DEFAULT_CONFIG = {
  samplingRate: 1,
  maxBufferSize: 5,
  endpoint: "https://clerk-telemetry.com"
};
var _config;
var _eventThrottler;
var _metadata;
var _buffer;
var _pendingFlush;
var _TelemetryCollector_instances;
var shouldRecord_fn;
var shouldBeSampled_fn;
var scheduleFlush_fn;
var flush_fn;
var logEvent_fn;
var getSDKMetadata_fn;
var preparePayload_fn;
var TelemetryCollector = class {
  constructor(options) {
    __privateAdd(this, _TelemetryCollector_instances);
    __privateAdd(this, _config);
    __privateAdd(this, _eventThrottler);
    __privateAdd(this, _metadata, {});
    __privateAdd(this, _buffer, []);
    __privateAdd(this, _pendingFlush);
    __privateSet(this, _config, {
      maxBufferSize: options.maxBufferSize ?? DEFAULT_CONFIG.maxBufferSize,
      samplingRate: options.samplingRate ?? DEFAULT_CONFIG.samplingRate,
      disabled: options.disabled ?? false,
      debug: options.debug ?? false,
      endpoint: DEFAULT_CONFIG.endpoint
    });
    if (!options.clerkVersion && typeof window === "undefined") {
      __privateGet(this, _metadata).clerkVersion = "";
    } else {
      __privateGet(this, _metadata).clerkVersion = options.clerkVersion ?? "";
    }
    __privateGet(this, _metadata).sdk = options.sdk;
    __privateGet(this, _metadata).sdkVersion = options.sdkVersion;
    __privateGet(this, _metadata).publishableKey = options.publishableKey ?? "";
    const parsedKey = parsePublishableKey(options.publishableKey);
    if (parsedKey) {
      __privateGet(this, _metadata).instanceType = parsedKey.instanceType;
    }
    if (options.secretKey) {
      __privateGet(this, _metadata).secretKey = options.secretKey.substring(0, 16);
    }
    __privateSet(this, _eventThrottler, new TelemetryEventThrottler);
  }
  get isEnabled() {
    if (__privateGet(this, _metadata).instanceType !== "development") {
      return false;
    }
    if (__privateGet(this, _config).disabled || typeof process !== "undefined" && isTruthy(process.env.CLERK_TELEMETRY_DISABLED)) {
      return false;
    }
    if (typeof window !== "undefined" && !!window?.navigator?.webdriver) {
      return false;
    }
    return true;
  }
  get isDebug() {
    return __privateGet(this, _config).debug || typeof process !== "undefined" && isTruthy(process.env.CLERK_TELEMETRY_DEBUG);
  }
  record(event) {
    const preparedPayload = __privateMethod(this, _TelemetryCollector_instances, preparePayload_fn).call(this, event.event, event.payload);
    __privateMethod(this, _TelemetryCollector_instances, logEvent_fn).call(this, preparedPayload.event, preparedPayload);
    if (!__privateMethod(this, _TelemetryCollector_instances, shouldRecord_fn).call(this, preparedPayload, event.eventSamplingRate)) {
      return;
    }
    __privateGet(this, _buffer).push(preparedPayload);
    __privateMethod(this, _TelemetryCollector_instances, scheduleFlush_fn).call(this);
  }
};
_config = new WeakMap;
_eventThrottler = new WeakMap;
_metadata = new WeakMap;
_buffer = new WeakMap;
_pendingFlush = new WeakMap;
_TelemetryCollector_instances = new WeakSet;
shouldRecord_fn = function(preparedPayload, eventSamplingRate) {
  return this.isEnabled && !this.isDebug && __privateMethod(this, _TelemetryCollector_instances, shouldBeSampled_fn).call(this, preparedPayload, eventSamplingRate);
};
shouldBeSampled_fn = function(preparedPayload, eventSamplingRate) {
  const randomSeed = Math.random();
  const toBeSampled = randomSeed <= __privateGet(this, _config).samplingRate && (typeof eventSamplingRate === "undefined" || randomSeed <= eventSamplingRate);
  if (!toBeSampled) {
    return false;
  }
  return !__privateGet(this, _eventThrottler).isEventThrottled(preparedPayload);
};
scheduleFlush_fn = function() {
  if (typeof window === "undefined") {
    __privateMethod(this, _TelemetryCollector_instances, flush_fn).call(this);
    return;
  }
  const isBufferFull = __privateGet(this, _buffer).length >= __privateGet(this, _config).maxBufferSize;
  if (isBufferFull) {
    if (__privateGet(this, _pendingFlush)) {
      const cancel = typeof cancelIdleCallback !== "undefined" ? cancelIdleCallback : clearTimeout;
      cancel(__privateGet(this, _pendingFlush));
    }
    __privateMethod(this, _TelemetryCollector_instances, flush_fn).call(this);
    return;
  }
  if (__privateGet(this, _pendingFlush)) {
    return;
  }
  if ("requestIdleCallback" in window) {
    __privateSet(this, _pendingFlush, requestIdleCallback(() => {
      __privateMethod(this, _TelemetryCollector_instances, flush_fn).call(this);
    }));
  } else {
    __privateSet(this, _pendingFlush, setTimeout(() => {
      __privateMethod(this, _TelemetryCollector_instances, flush_fn).call(this);
    }, 0));
  }
};
flush_fn = function() {
  fetch(new URL("/v1/event", __privateGet(this, _config).endpoint), {
    method: "POST",
    body: JSON.stringify({
      events: __privateGet(this, _buffer)
    }),
    headers: {
      "Content-Type": "application/json"
    }
  }).catch(() => {
    return;
  }).then(() => {
    __privateSet(this, _buffer, []);
  }).catch(() => {
    return;
  });
};
logEvent_fn = function(event, payload) {
  if (!this.isDebug) {
    return;
  }
  if (typeof console.groupCollapsed !== "undefined") {
    console.groupCollapsed("[clerk/telemetry]", event);
    console.log(payload);
    console.groupEnd();
  } else {
    console.log("[clerk/telemetry]", event, payload);
  }
};
getSDKMetadata_fn = function() {
  let sdkMetadata = {
    name: __privateGet(this, _metadata).sdk,
    version: __privateGet(this, _metadata).sdkVersion
  };
  if (typeof window !== "undefined" && window.Clerk) {
    sdkMetadata = { ...sdkMetadata, ...window.Clerk.constructor.sdkMetadata };
  }
  return sdkMetadata;
};
preparePayload_fn = function(event, payload) {
  const sdkMetadata = __privateMethod(this, _TelemetryCollector_instances, getSDKMetadata_fn).call(this);
  return {
    event,
    cv: __privateGet(this, _metadata).clerkVersion ?? "",
    it: __privateGet(this, _metadata).instanceType ?? "",
    sdk: sdkMetadata.name,
    sdkv: sdkMetadata.version,
    ...__privateGet(this, _metadata).publishableKey ? { pk: __privateGet(this, _metadata).publishableKey } : {},
    ...__privateGet(this, _metadata).secretKey ? { sk: __privateGet(this, _metadata).secretKey } : {},
    payload
  };
};

// node_modules/@clerk/backend/dist/index.mjs
var verifyToken2 = withLegacyReturn(verifyToken);
function createClerkClient(options) {
  const opts = { ...options };
  const apiClient = createBackendApiClient(opts);
  const requestState = createAuthenticateRequest({ options: opts, apiClient });
  const telemetry = new TelemetryCollector({
    ...options.telemetry,
    publishableKey: opts.publishableKey,
    secretKey: opts.secretKey,
    samplingRate: 0.1,
    ...opts.sdkMetadata ? { sdk: opts.sdkMetadata.name, sdkVersion: opts.sdkMetadata.version } : {}
  });
  return {
    ...apiClient,
    ...requestState,
    telemetry
  };
}

// node_modules/hono/dist/helper/adapter/index.js
var env = (c3, runtime2) => {
  const global2 = globalThis;
  const globalEnv = global2?.process?.env;
  runtime2 ??= getRuntimeKey();
  const runtimeEnvHandlers = {
    bun: () => globalEnv,
    node: () => globalEnv,
    "edge-light": () => globalEnv,
    deno: () => {
      return Deno.env.toObject();
    },
    workerd: () => c3.env,
    fastly: () => ({}),
    other: () => ({})
  };
  return runtimeEnvHandlers[runtime2]();
};
var knownUserAgents = {
  deno: "Deno",
  bun: "Bun",
  workerd: "Cloudflare-Workers",
  node: "Node.js"
};
var getRuntimeKey = () => {
  const global2 = globalThis;
  const userAgentSupported = typeof navigator !== "undefined" && typeof navigator.userAgent === "string";
  if (userAgentSupported) {
    for (const [runtimeKey, userAgent] of Object.entries(knownUserAgents)) {
      if (checkUserAgentEquals(userAgent)) {
        return runtimeKey;
      }
    }
  }
  if (typeof global2?.EdgeRuntime === "string") {
    return "edge-light";
  }
  if (global2?.fastly !== undefined) {
    return "fastly";
  }
  if (global2?.process?.release?.name === "node") {
    return "node";
  }
  return "other";
};
var checkUserAgentEquals = (platform) => {
  const userAgent = navigator.userAgent;
  return userAgent.startsWith(platform);
};

// node_modules/@hono/clerk-auth/dist/index.js
var getAuth = (c3) => {
  return c3.get("clerkAuth");
};
var clerkMiddleware = (options) => {
  return async (c3, next) => {
    const clerkEnv = env(c3);
    const { secretKey, publishableKey, apiUrl, apiVersion, ...rest } = options || {
      secretKey: clerkEnv.CLERK_SECRET_KEY || "",
      publishableKey: clerkEnv.CLERK_PUBLISHABLE_KEY || "",
      apiUrl: clerkEnv.CLERK_API_URL,
      apiVersion: clerkEnv.CLERK_API_VERSION
    };
    if (!secretKey) {
      throw new Error("Missing Clerk Secret key");
    }
    if (!publishableKey) {
      throw new Error("Missing Clerk Publishable key");
    }
    const clerkClient = createClerkClient({
      ...rest,
      apiUrl,
      apiVersion,
      secretKey,
      publishableKey
    });
    const requestState = await clerkClient.authenticateRequest(c3.req.raw, {
      ...rest,
      secretKey,
      publishableKey
    });
    if (requestState.headers) {
      requestState.headers.forEach((value, key) => c3.res.headers.append(key, value));
      const locationHeader = requestState.headers.get("location");
      if (locationHeader) {
        return c3.redirect(locationHeader, 307);
      } else if (requestState.status === "handshake") {
        throw new Error("Clerk: unexpected handshake without redirect");
      }
    }
    c3.set("clerkAuth", requestState.toAuth());
    c3.set("clerk", clerkClient);
    await next();
  };
};

// src/routes/weight/index.js
var weightRoutes = new Hono2;
weightRoutes.get("/", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("Not found");
  }
  const user = await db.query.usersTable.findFirst({
    where: eq(usersTable.user_id, auth.userId)
  });
  const page = Number(c3.req.query("page"));
  const weight = await db.select().from(weightTable).orderBy(weightTable.id).limit(10).offset((page - 1) * 10).where(eq(weightTable.user_id, user.id));
  return c3.json(weight);
});
weightRoutes.post("/remove", async (c3) => {
  const body = await c3.req.json();
  const result = removeWeightSchema.safeParse(body);
  if (!result) {
    return c3.json({ error: "Validation error" });
  }
  const weight = await db.delete(weightTable).where(eq(weightTable.id, body.id));
  return c3.json("Weight has been deleted Successfully");
});
weightRoutes.post("/store", async (c3) => {
  const body = await c3.req.json();
  const user = getAuth(c3);
  if (!user?.userId) {
    return c3.json("not found");
  }
  return c3.json(user);
  const userFind = await db.query.usersTable.findFirst({
    where: eq(usersTable.user_id, user?.userId)
  });
  const result = weightSchema.safeParse({
    user_id: userFind?.id,
    scaleWeight: body.scaleWeight,
    created_at: body.created_at
  });
  if (!result.success) {
    return c3.json({ error: "Validation failed could not create a Weight", message: result.error.format() });
  } else {
    try {
      const currentDate = new Date(body.created_at);
      const weightFind = await db.select().from(weightTable).where(eq(weightTable.created_at, currentDate));
      if (!weightFind) {
        return c3.json("no");
      } else {
        const weightCheck = await db.select({ value: sum(weightTable.scaleWeight), count: count() }).from(weightTable).where(eq(weightTable.user_id, userFind?.id)).orderBy(desc(weightTable.id)).limit(6);
        const numberValue = Number(weightCheck[0].value);
        const totalWeight = numberValue + body.scaleWeight;
        const avgWeight = totalWeight / (weightCheck[0].count + 1);
        const newWeight = await db.insert(weightTable).values({ created_at: currentDate, scaleWeight: body.scaleWeight, trendWeight: avgWeight, user_id: userFind?.id }).returning();
      }
    } catch (error) {
      console.log(error);
    }
    if (userFind?.parent_id != null) {
      const latestWeight = await db.insert(latestActivitiesTable).values({
        sender_id: userFind.id,
        reciever_id: userFind.parent_id,
        message: `A new weight ${body.scaleWeight} has been recorded `
      });
      return c3.json(latestWeight);
    }
    const latestActivities = await db.insert(latestActivitiesTable).values({
      sender_id: userFind?.id
    });
    return c3.json(latestActivities);
  }
});
var weight_default = weightRoutes;

// src/zod/nutirtionSchema.js
var nutritionSchema = exports_external.object({
  user_id: exports_external.number().openapi({
    example: 1
  }),
  created_at: exports_external.string().date(),
  calories: exports_external.number().openapi({
    example: 300
  }),
  protein: exports_external.number().openapi({
    example: 140.2
  }),
  carbs: exports_external.number().openapi({
    example: 150.3
  }),
  fat: exports_external.number().openapi({
    example: 120
  })
});
var removeNutritionSchema = exports_external.object({
  id: exports_external.number().openapi({
    example: 11212
  }),
  user_id: exports_external.number().openapi({
    example: 1212
  })
});

// src/routes/nutrition/index.js
var nutritionRoutes = new Hono2;
nutritionRoutes.get("/", async (c3) => {
  const page = Number(c3.req.query("page"));
  console.log("from nutrition");
  const nutrition = await db.select({ calories: sum(nutritionTable.calories), protein: sum(nutritionTable.protein), created_at: nutritionTable.created_at, carbs: sum(nutritionTable.carbs), fat: nutritionTable.fat }).from(nutritionTable).limit(5).offset((page - 1) * 5).groupBy(nutritionTable.created_at);
  return c3.json(nutrition);
});
nutritionRoutes.get("/show", async (c3) => {
  const query = new Date(c3.req.query("date"));
  const data = await db.select().from(nutritionTable).where(eq(nutritionTable.created_at, query));
  return c3.json(data);
});
nutritionRoutes.post("/remove", async (c3) => {
  const body = await c3.req.json();
  const result = removeNutritionSchema.safeParse(body);
  if (!result.success) {
    return c3.json({ message: "Validation has been failed", error: result.error });
  } else {
    await db.delete(nutritionTable).where(eq(nutritionTable.id, body.id));
    return c3.json("deleted successfully");
  }
});
nutritionRoutes.post("/store", async (c3) => {
  const body = await c3.req.json();
  body.item.forEach((value) => {
    const result = nutritionSchema.safeParse(value);
    if (!result.success) {
      console.log("Failed");
    }
  });
  for (let index = 0;index < body.item.length; index++) {
    await db.insert(nutritionTable).values({
      protein: body.item[index].protein,
      carbs: body.item[index].carbs,
      fat: body.item[index].fat,
      calories: body.item[index].calories,
      user_id: body.item[index].user_id,
      created_at: new Date(body.item[index].created_at)
    });
  }
  return c3.json("nutrient created");
});
var nutrition_default = nutritionRoutes;

// src/routes/dashboard/dashboard.js
var dashboardRoutes = new Hono2;
dashboardRoutes.get("/", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ error: "Unauthorized" });
  }
  const data2 = await db.query.usersTable.findFirst();
  const person = await db.query.usersTable.findMany({
    where: eq(usersTable.user_id, auth.userId),
    with: {
      children: true,
      workout: true,
      weight: true
    }
  });
  if (person.length == 0) {
    return c3.json({ message: "No Clients" });
  }
  return c3.json(person);
});
var dashboard_default = dashboardRoutes;

// src/zod/workoutSchema.js
var exercise = exports_external.object({
  set: exports_external.number(),
  reps: exports_external.number(),
  weight: exports_external.number()
});
var workoutExercise = exports_external.object({
  id: exports_external.number(),
  name: exports_external.string(),
  exercise: exports_external.array(exercise)
});
var workoutSchema = exports_external.object({
  name: exports_external.string(),
  date: exports_external.string(),
  workout: exports_external.array(workoutExercise)
});
var workoutDeletionSchema = exports_external.object({
  id: exports_external.number().openapi({
    example: 12
  }),
  user_id: exports_external.number().openapi({
    example: 1231
  })
});

// src/routes/workout/index.js
var workoutRoutes = new Hono2;
workoutRoutes.get("/", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("error");
  }
  const findUser = await db.query.usersTable.findFirst({
    where: eq(usersTable.user_id, auth.userId)
  });
  if (!findUser) {
    return c3.json("not exist");
  }
  const data = await db.query.workoutTable.findMany({
    where: eq(weightTable.user_id, findUser?.id),
    with: {
      programme: true
    }
  });
  return c3.json(data);
});
workoutRoutes.post("/remove", async (c3) => {
  const data = await c3.req.json();
  const result = workoutDeletionSchema.safeParse(data.item);
  if (!result.success) {
    return c3.json({ message: "Validation has been failed", error: result.error });
  }
  try {
    await db.delete(workoutDetailsTable).where(eq(workoutDetailsTable.workout_id, data.item.id));
    await db.delete(workoutTable).where(eq(workoutTable.id, data.item.id)).returning();
  } catch (error) {
    return c3.json("Error");
  }
  return c3.json("no error");
});
workoutRoutes.get("/show", async (c3) => {
  const value = c3.req.query("date");
  const query = new Date(value);
  const data = await db.query.workoutTable.findFirst({
    where: eq(workoutTable.created_at, query),
    with: {
      workoutDetail: {
        with: {
          exercise: true
        }
      }
    }
  });
  if (!data) {
    return c3.json("No items");
  } else
    return c3.json(data);
});
workoutRoutes.get("/stats", async (c3) => {
  const query = c3.req.query("id");
  const data = await db.query.workoutDetailsTable.findMany({
    where: eq(workoutDetailsTable.exercise_id, query),
    with: {
      workout: true,
      exercise: true
    }
  });
  if (!data) {
    return c3.json("No items found");
  }
  return c3.json(data);
});
workoutRoutes.post("/update", async (c3) => {
  const body = await c3.req.json();
  body.item.forEach((value) => {
    console.log(value);
    const result = workoutSchema.safeParse({
      name: value.name,
      rir: value.rir,
      workout_id: value.workout_id,
      set: value.set,
      reps: value.reps,
      exercise_id: value.exercise_id
    });
    if (!result.success) {
      return c3.json("Failed");
    }
  });
  for (let index = 0;index < body.item.length; index++) {
    console.log(body.item[index].id);
    if (body.item && body.item[index].id != 0) {
      console.log(true);
      const data = await db.update(workoutDetailsTable).set({
        exercise_id: body.item[index].exercise_id,
        set: body.item[index].set,
        weight: body.item[index].weight,
        reps: body.item[index].reps,
        rir: body.item[index].rir,
        workout_id: body.item[index].workout_id
      }).where(eq(workoutDetailsTable.id, body.item[index].id)).returning();
    } else {
      console.log("function execution");
      const data1 = await db.insert(workoutDetailsTable).values({
        exercise_id: body.item[index].exercise_id,
        set: body.item[index].set,
        weight: body.item[index].weight,
        reps: body.item[index].reps,
        rir: body.item[index].rir,
        workout_id: 7
      }).returning();
    }
  }
  return c3.json("Updated");
});
workoutRoutes.post("/store", async (c3) => {
  const body = await c3.req.json();
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("not exist");
  }
  const user = await db.query.usersTable.findFirst({
    where: eq(usersTable.user_id, auth.userId)
  });
  let workoutId = {};
  if (body.programme === 0) {
    workoutId = await db.insert(workoutTable).values({
      user_id: user?.id,
      created_at: body.created_at
    }).returning();
  } else {
    workoutId = await db.insert(workoutTable).values({
      user_id: user?.id,
      created_at: new Date(body.created_at),
      programme_id: body.programme
    }).returning();
  }
  for (let i = 0;i < body.item.length; i++) {
    console.log(body.item[i]);
    const result2 = workoutSchema.safeParse({
      exercise_id: body.item[i].exercise_id,
      name: body.item[i].name,
      set: body.item[i].set,
      reps: body.item[i].reps,
      rir: body.item[i].rir,
      weight: body.item[i].weight,
      workout_id: workoutId[0].id
    });
    if (!result2.success) {
      console.log(result2.error);
      return c3.json("failed");
    }
  }
  return c3.json("passed");
  const result = workoutSchema.safeParse(body.item);
  if (!result.success) {
    console.log(result.error);
    return c3.json("failed");
  }
  return c3.json("passed");
  for (let index = 0;index < body.item.length; index++) {
    const data = await db.insert(workoutDetailsTable).values({
      exercise_id: body.item[index].exercise_id,
      set: body.item[index].set,
      weight: body.item[index].weight,
      reps: body.item[index].reps,
      rir: body.item[index].rir,
      workout_id: workoutId[0].id
    });
  }
  return c3.json("Workout Added");
});
var workout_default = workoutRoutes;

// src/zod/customFoodSchema.js
var customFoodSchema = objectType({
  user_id: exports_external.number().openapi({
    example: 122323
  }),
  food_name: exports_external.string().openapi({
    example: "hello"
  }),
  defaultCalories: exports_external.number().openapi({
    example: 24.242
  }),
  defaultCarbs: exports_external.number().openapi({
    example: 24.242
  }),
  defaultFat: exports_external.number().openapi({
    example: 24.242
  }),
  defaultProtein: exports_external.number().openapi({
    example: 24.242
  })
});

// src/routes/customFood/food.js
var customFoodRoute = new Hono2;
customFoodRoute.get("/", async (c3) => {
  const query = c3.req.query("foodName");
  const data = await db.select().from(customFoodTable).where(like(customFoodTable.foodName, `${query}%`));
  return c3.json(data);
});
customFoodRoute.post("/store", async (c3) => {
  const body = await c3.req.json();
  const result = customFoodSchema.safeParse(body);
  if (!result) {
    return c3.json("No");
  } else {
    const value = await db.insert(customFoodTable).values({
      foodName: body.foodName,
      defaultCalories: body.defaultCalories,
      defaultCarbs: body.defaultCalories,
      defaultFat: body.defaultCalories,
      defaultProtein: body.defaultProtein,
      user_id: 1,
      defaultServing: body.defaultServing
    });
    return c3.json(value);
  }
});
var food_default = customFoodRoute;

// src/zod/customExerciseSchema.js
var customExerciseSchema = exports_external.object({
  name: exports_external.string(),
  type: exports_external.string(),
  equipment: exports_external.string(),
  instructions: exports_external.string()
});

// src/routes/exercise/index.js
var exerciseRoutes = new Hono2;
var myExerciseRoute = exerciseRoutes.get("/all", async (c3) => {
  const exerciseName = c3.req.query("exerciseName") || "";
  const type = c3.req.query("type") || "";
  const equipment = c3.req.query("equipment") || "";
  console.log(exerciseName);
  const filters = [];
  const filtersCustomExercise = [];
  if (exerciseName != "") {
    console.log("yes");
    filters.push(like(exerciseTable.name, `%${exerciseName}%`));
    filtersCustomExercise.push(like(customExerciseTable.name, `%${customExerciseTable.name}%`));
  }
  if (equipment != "" && equipment != "Equipment") {
    filters.push(eq(exerciseTable.equipment, equipment));
    filtersCustomExercise.push(eq(customExerciseTable.equipment, equipment));
  }
  if (type != "" && type != "Type") {
    console.log("yes");
    filters.push(eq(exerciseTable.type, type));
    filtersCustomExercise.push(eq(customExerciseTable.type, type));
  }
  const body1 = await db.select().from(customExerciseTable).where(filters.length ? and(...filtersCustomExercise) : undefined);
  const body2 = body1.flatMap((item) => ({
    id: item.id,
    name: item.name,
    equipment: item.equipment,
    target: item.type,
    instructions: item.instructions?.split(".")
  }));
  const body = await db.select().from(exerciseTable).where(filters.length ? and(...filters) : undefined);
  const newBody = body.flatMap((item) => ({
    id: item?.id ?? "",
    name: item?.name ?? "",
    equipment: item?.name ?? "",
    instructions: item.instructions?.split(".") || [],
    photo: item?.photo ?? "",
    target: item?.type ?? ""
  }));
  const mergedArray = [...new Set([...newBody, ...body2])];
  return c3.json(mergedArray);
});
exerciseRoutes.get("/", async (c3) => {
  const query = c3.req.query("name");
  if (query == "") {
    const body2 = await db.select().from(exerciseTable).limit(5);
  }
  const body = await db.select().from(exerciseTable).where(like(exerciseTable.name, `${query}%`));
  return c3.json(body);
});
exerciseRoutes.post("/store", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverified" });
  }
  const userFind = await db.query.usersTable.findFirst({
    where: eq(usersTable.user_id, auth.userId)
  });
  const data = await c3.req.json();
  const verfication = customExerciseSchema.safeParse(data);
  if (verfication.error) {
    return c3.json({ error: verfication.error.flatten() });
  }
  const insertRecord = await db.insert(customExerciseTable).values({ name: data.name, equipment: data.equipment, instructions: data.instructions, type: data.type, user_id: userFind?.id }).returning();
  return c3.json(insertRecord);
});
var exercise_default = exerciseRoutes;

// src/db/db.ts
var import_dotenv2 = __toESM(require_main(), 1);
var import_config2 = __toESM(require_config(), 1);
import_dotenv2.config({ path: ".env" });
var sql3 = cs(process.env.DATABASE_URL);
var db2 = drizzle(sql3, { schema: exports_schema });

// src/zod/programmeSchema.ts
var programmeDeletionSchema = exports_external.object({
  id: exports_external.number()
});

// src/routes/programme/index.js
var programmeRoutes = new Hono2;
programmeRoutes.post("/delete", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Authentication Error" });
  }
  const body = await c3.req.json();
  const verification = programmeDeletionSchema.safeParse(body);
  if (verification.error) {
    return c3.json({ message: "Error Verification" });
  }
  const data = await db2.delete(programmesTable2).where(eq(programmesTable2.id, body.id));
  return c3.json("Item Deleted");
});
programmeRoutes.post("/store", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ error: "Unable to Verify User" });
  }
  const userFind = await db2.query.usersTable.findFirst({
    where: eq(usersTable2.user_id, auth.userId)
  });
  const body = await db2.insert(programmesTable2).values({
    user_id: userFind.id,
    name: "Untitled"
  }).returning({ id: programmesTable2.id });
  return c3.json(body);
});
programmeRoutes.post("/update", async (c3) => {
  const data = await c3.req.json();
  const programme = await db2.update(programmesTable2).set({ name: data?.name, description: data.description }).where(eq(programmesTable2.id, data.id)).returning();
  return c3.json("UPdated");
});
var programmes = programmeRoutes.get("/", async (c3) => {
  const auth = getAuth(c3);
  const user = await db2.query.usersTable.findFirst({
    where: eq(usersTable2.user_id, auth?.userId)
  });
  const data = await db2.query.programmesTable.findMany({
    where: or(eq(programmesTable2.user_id, user?.id), eq(programmesTable2.assigned_to, user?.id)),
    orderBy: [desc(programmesTable2.id)],
    with: {
      programmeWorkout: {
        with: {
          programmeDetails: {
            with: {
              exercise: true
            }
          }
        }
      }
    }
  });
  const programme = data.map((item) => ({
    id: item.id,
    name: item.name,
    description: item.description,
    workout: item.programmeWorkout?.map((value) => ({
      id: value.id,
      name: value.name,
      details: value.programmeDetails.map((detail) => ({
        id: detail.id,
        repRange: detail.repRange,
        sets: detail.sets,
        exercise: {
          id: detail.exercise.id,
          name: detail.exercise.name,
          equipment: detail.exercise.equipment
        }
      }))
    }))
  }));
  return c3.json(programme);
});
programmeRoutes.get("/client", async (c3) => {
  const query = c3.req.query("name");
  const data = await db2.query.usersTable.findMany({
    where: eq(usersTable2.name, query)
  });
  if (data.length == 0) {
    return c3.json("0");
  }
  return c3.json(data);
});
programmeRoutes.get("/details", async (c3) => {
  const data = c3.req.query("id");
  const body = await db2.query.programmesTable.findFirst({
    where: eq(programmesTable2.id, data),
    with: {
      programmeWorkout: true
    }
  });
  return c3.json(body);
});
var programme_default = programmeRoutes;

// src/routes/userProgramme/index.js
var userProgrammeRoute = new Hono2;
userProgrammeRoute.get("/", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("not validated");
  }
  const user = await db2.query.usersTable.findFirst({
    where: eq(usersTable2.user_id, auth?.userId)
  });
  const response = await db2.query.userProgrammeTable.findFirst({
    where: eq(userProgrammeTable2.user_id, user?.id),
    with: {
      programme: {
        with: {
          programmeWorkout: {
            with: {
              programmeDetails: {
                with: {
                  exercise: true
                }
              }
            }
          }
        }
      },
      user: true
    }
  });
  return c3.json([response]);
});
var userProgramme_default = userProgrammeRoute;

// src/zod/idSchema.ts
var idSchema = exports_external.object({
  id: exports_external.number().positive()
});

// src/zod/weightSchema.ts
var weightSchema2 = exports_external.object({
  user_id: exports_external.number().openapi({
    example: 1
  }),
  created_at: exports_external.string().date(),
  scaleWeight: exports_external.number().openapi({
    example: 73.2
  })
}).openapi("Weight");
var removeWeightSchema2 = exports_external.object({
  id: exports_external.number().openapi({
    example: 1232
  })
});

// src/zod/measurementsSchema.ts
var measurementSchema = exports_external.object({
  created_at: exports_external.string(),
  measurement_id: exports_external.number(),
  value: exports_external.number()
});
var insertWeightSchema = exports_external.object({
  created_at: exports_external.string(),
  scaleWeight: exports_external.number()
});
var measurementFieldSchema = exports_external.object({
  id: exports_external.number(),
  name: exports_external.string(),
  value: exports_external.number()
});
var insertMeasurementMultipleSchema = exports_external.object({
  measurement: {
    created_at: exports_external.string()
  },
  measurement: exports_external.array(measurementFieldSchema)
});
var deleteMeasurementSchema = exports_external.object({
  id: exports_external.number()
});
var updateMeasurementSchema = exports_external.object({
  id: exports_external.number(),
  value: exports_external.number(),
  created_at: exports_external.string()
});

// src/zod/clientSchema.ts
var clientUpdateSchema = exports_external.object({
  name: exports_external.string(),
  age: exports_external.number(),
  notes: exports_external.string()
});
var clientSchema = exports_external.object({
  name: exports_external.string().openapi({
    example: "Ebrahim"
  }),
  age: exports_external.number().openapi({
    example: 13
  }),
  email: exports_external.string().openapi({
    example: "ebrahimgreat@gmail.com"
  })
});
var clientDeletionSchema = exports_external.object({
  id: exports_external.number()
});

// src/zod/workoutSchema.ts
var exercise2 = exports_external.object({
  set: exports_external.number(),
  reps: exports_external.number(),
  weight: exports_external.number()
});
var workoutExercise2 = exports_external.object({
  id: exports_external.number(),
  name: exports_external.string(),
  exercise: exports_external.array(exercise2)
});
var workoutSchema2 = exports_external.object({
  name: exports_external.string(),
  date: exports_external.string(),
  workout: exports_external.array(workoutExercise2)
});
var workoutDeletionSchema2 = exports_external.object({
  id: exports_external.number().openapi({
    example: 12
  }),
  user_id: exports_external.number().openapi({
    example: 1231
  })
});

// src/zod/workoutHistorySchema.ts
var ExerciseSchema = exports_external.object({
  id: exports_external.number(),
  name: exports_external.string(),
  equipment: exports_external.string(),
  type: exports_external.string()
});
var workoutDetailSchema = exports_external.object({
  id: exports_external.number(),
  workout_id: exports_external.number(),
  set: exports_external.coerce.number().int(),
  reps: exports_external.coerce.number().int(),
  weight: exports_external.coerce.number().nonnegative(),
  exercise_id: exports_external.number(),
  exercise: ExerciseSchema
});
var workoutHistorySchema = exports_external.object({
  id: exports_external.number(),
  user_id: exports_external.number(),
  name: exports_external.string(),
  programme_id: exports_external.number().nullable(),
  created_at: exports_external.date(),
  workoutDetail: exports_external.array(workoutDetailSchema)
});

// src/zod/clientProgrammeschema.ts
var exerciseSchema = exports_external.object({
  id: exports_external.number(),
  name: exports_external.string(),
  equipment: exports_external.string(),
  type: exports_external.string()
});
var programmeDetailsSchema = exports_external.object({
  id: exports_external.number(),
  repRange: exports_external.string(),
  sets: exports_external.number(),
  exercise: exerciseSchema
});
var programmeWorkoutSchema = exports_external.object({
  id: exports_external.number(),
  name: exports_external.string(),
  programme_id: exports_external.number(),
  programmeDetails: exports_external.array(programmeDetailsSchema)
});
var programmeSchema = exports_external.object({
  id: exports_external.number(),
  name: exports_external.string(),
  description: exports_external.string(),
  user_id: exports_external.number(),
  programmeWorkout: exports_external.array(programmeWorkoutSchema)
});
var userProgrammeSchema = exports_external.object({
  id: exports_external.number(),
  programme_id: exports_external.number(),
  user_id: exports_external.number(),
  status: exports_external.string(),
  programme: programmeSchema
});
var updateClientProgrammeSchema = exports_external.object({
  id: exports_external.number()
});

// src/routes/clients/index.js
var clientRoutes = new Hono2;
function addDays(startDate, days) {
  const dateArray = [];
  for (let i = 0;i < days; i++) {
    const dateString = new Date(startDate.getTime() + i * 1 * 24 * 60 * 60 * 1000).toISOString().split("T")[0];
    dateArray.push(dateString);
    console.log(dateString);
  }
  return dateArray;
}
clientRoutes.post("/delete", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverfied" });
  }
  const body = await c3.req.json();
  const verfication = clientDeletionSchema.safeParse(body);
  if (verfication.error) {
    return c3.json({ message: "Error" });
  }
  const data = await db2.delete(usersTable2).where(eq(usersTable2.id, body.id));
  return c3.json("Data deleted");
});
clientRoutes.get("/:id/workoutStats", async (c3) => {
  let dateArray = [];
  let startDate = new Date;
  const query = String(c3.req.query("date"));
  if (query != "") {
    startDate = new Date(query);
  }
  dateArray = addDays(startDate, 7);
  const id2 = Number(c3.req.param("id"));
  const parse4 = idSchema.safeParse({ id: id2 });
  if (!parse4.success) {
    return c3.json({ error: '"Walidation Error"' });
  }
  const workout = await db2.select().from(workoutDetailsTable2).innerJoin(workoutTable2, eq(workoutDetailsTable2.workout_id, workoutTable2.id)).innerJoin(exerciseTable2, eq(workoutDetailsTable2.exercise_id, exerciseTable2.id)).where(and(eq(workoutTable2.user_id, id2), inArray(workoutTable2.created_at, dateArray)));
  return c3.json(workout);
  const myStats = new Map;
  const type = ["Chest", "Biceps", "Legs", "Triceps", "Back", "Abs"];
  for (let i = 0;i < type.length; i++) {
    myStats.set(type[i], {
      totalSets: 0,
      totalVolume: 0
    });
  }
  for (let i = 0;i < workout.length; i++) {
    if (myStats.has(workout[i].exercise.type)) {
      console.log("YES");
      const currentStats = myStats.get(workout[i].exercise.type) || { totalSets: 0, totalVolume: 0 };
      const newVolume = currentStats.totalVolume + Number(workout[i].workoutDetails.weight);
      const newSets = currentStats.totalSets + 1;
      myStats.set(String(workout[i].exercise.type), {
        totalVolume: newVolume,
        totalSets: newSets
      });
    }
  }
  let myArray = [];
  for (let i = 0;i < type.length; i++) {
    if (myStats.has(type[i])) {
      const volume = myStats.get(type[i]);
      myArray.push({
        equipmentName: type[i],
        stats: {
          totalSets: volume?.totalSets ?? 0,
          totalVolume: volume?.totalVolume ?? 0
        }
      });
    }
  }
  return c3.json(myArray);
});
var mainClientRoute = clientRoutes.get("/", async (c3) => {
  const auth = getAuth(c3);
  console.log(auth);
  if (!auth?.userId) {
    return c3.json("failed");
  }
  const searchString = c3.req.query("name") ?? "";
  const searchValue = searchString ?? "";
  const data = await db2.query.usersTable.findMany({
    where: and(isNotNull(usersTable2.parent_id), like(usersTable2.name, `%${searchValue}%`)),
    columns: {
      user_id: false,
      parent_id: false
    },
    with: {
      userProgramme: {
        columns: {
          user_id: false
        },
        with: {
          programme: {
            columns: {
              user_id: false,
              assigned_to: false
            }
          }
        }
      }
    }
  });
  if (!data) {
    return c3.json("not found");
  }
  return c3.json(data);
});
clientRoutes.get("/:id/programmes", async (c3) => {
  const auth = getAuth(c3);
  if (auth?.userId) {
    return c3.json({ Error: "Unable to verify user" });
  }
  const id2 = c3.req.param("id");
  const userProgramme = await db2.query.userProgrammeTable.findFirst({
    where: and(eq(userProgrammeTable2.user_id, id2), eq(userProgrammeTable2.status, "active")),
    with: {
      programme: {
        columns: {
          assigned_to: false
        },
        with: {
          programmeWorkout: {
            with: {
              programmeDetails: {
                columns: {
                  programme_workoutId: false
                },
                with: {
                  exercise: {
                    columns: {
                      instructions: false,
                      photo: false
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  });
  if (!userProgramme) {
    return c3.json({});
  }
  const verfication = userProgrammeSchema.safeParse(userProgramme);
  if (verfication.error) {
    return c3.json({ message: verfication.error.format() });
  }
  return c3.json(userProgramme);
  const programme = {
    status: userProgramme?.status ?? "",
    id: Number(userProgramme?.programme?.id),
    name: userProgramme.programme?.name ?? "",
    description: userProgramme.programme?.description ?? "",
    workout: userProgramme.programme?.programmeWorkout?.map((value) => ({
      id: value.id,
      name: value.name,
      details: value.programmeDetails?.map((detail) => ({
        id: detail.id,
        repRange: detail.repRange,
        set: detail.sets,
        exercise: {
          id: detail.exercise.id,
          name: detail.exercise.name,
          equipment: detail.exercise.equipment
        }
      }))
    }))
  };
  return c3.json(programme);
});
clientRoutes.post("/:id/updateProgramme", async (c3) => {
  const id2 = Number(c3.req.param("id"));
  const auth = getAuth(c3);
  if (auth?.userId) {
    return c3.json({ messsage: "Verification Failed" });
  }
  const data = await c3.req.json();
  const verfication = updateClientProgrammeSchema.safeParse(data);
  if (verfication.error) {
    return c3.json({ messsage: "Error" });
  }
  const programmeFind = await db2.query.userProgrammeTable.findFirst({
    where: and(eq(userProgrammeTable2.status, "active"), eq(userProgrammeTable2.user_id, id2))
  });
  if (programmeFind) {
    const dataUpdata = await db2.update(userProgrammeTable2).set({ status: "not active" }).where(eq(userProgrammeTable2.programme_id, programmeFind.id));
  }
  const newData = await db2.insert(userProgrammeTable2).values({ programme_id: data.id, user_id: id2, status: "active" }).returning();
  return c3.json(newData);
});
clientRoutes.get("/:id/measurements", async (c3) => {
  const auth = getAuth(c3);
  if (auth?.userId) {
    return c3.json({ Error: "Unable to verify User" });
  }
  const id2 = Number(c3.req.param("id"));
  const result = idSchema.safeParse({ id: id2 });
  const query = Number(c3.req.query("id"));
  const searchId = query ?? null;
  if (!result.success) {
    return c3.json({ error: "validation Failed" });
  }
  const data = await db2.select().from(measurementsDataTable2).innerJoin(measurementsTable2, eq(measurementsDataTable2.measurement_id, measurementsTable2.id)).where(and(eq(measurementsDataTable2.user_id, id2), eq(measurementsTable2.id, searchId)));
  const measurements = data.map((item) => ({
    id: item.measurementsData.id,
    name: item.measurements.name,
    created_at: item.measurementsData.created_at,
    value: item.measurementsData.value
  }));
  return c3.json(measurements);
});
clientRoutes.post("/:id/measurement/delete", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverfied" });
  }
  const response = await c3.req.json();
  const verification = deleteMeasurementSchema.safeParse(response);
  if (verification.error) {
    return c3.json({ message: verification.error.flatten() });
  }
  const data = await db2.delete(measurementsDataTable2).where(eq(measurementsDataTable2.id, verification.data.id)).returning();
  return c3.json(data);
});
clientRoutes.post("/:id/measurement/storeMultiple", async (c3) => {
  const id2 = c3.req.param("id");
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverified" });
  }
  const data = await c3.req.json();
  const verfication = insertMeasurementMultipleSchema.safeParse(data);
  if (verfication.error) {
    return c3.json({ message: verfication.error.message });
  }
  for (let i = 0;i < verfication.data.measurement.length; i++) {
    if (verfication.data.measurement[i].value != 0) {
      const data2 = await db2.insert(measurementsDataTable2).values({ measurement_id: verfication.data.measurement[i].id, user_id: id2, created_at: verfication.data.created_at });
    }
  }
  return c3.json(data);
});
clientRoutes.post("/:id/measurementUpdate", async (c3) => {
  const id2 = Number(c3.req.param("id"));
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("Unverfied");
  }
  const data = await c3.req.json();
  const verification = updateMeasurementSchema.safeParse(data);
  if (verification.error) {
    return c3.json("ERROR BODD");
  }
  const dataToUpdate = await db2.update(measurementsDataTable2).set({ created_at: data.created_at, value: data.value, user_id: id2 }).where(eq(measurementsDataTable2.id, data.id)).returning();
  return c3.json(dataToUpdate);
});
var clientWorkoutHistory = clientRoutes.get("/:id/workoutHistory", async (c3) => {
  const auth = getAuth(c3);
  if (auth?.userId) {
    return c3.json({ Error: "Unable to verify User" });
  }
  const id2 = Number(c3.req.param("id"));
  const dateQuery = c3.req.query("date");
  const date2 = dateQuery ?? "";
  const result = idSchema.safeParse({ id: id2 });
  if (!result.success) {
    return c3.json({ error: "Validation Failed" });
  }
  const workout = await db2.query.workoutTable.findMany({
    where: eq(workoutTable2.user_id, id2),
    with: {
      programme: true,
      workoutDetail: {
        with: {
          exercise: {
            columns: {
              photo: false,
              instructions: false
            }
          }
        }
      }
    }
  });
  for (let i = 0;i < workout.length; i++) {
    const verfication = workoutHistorySchema.safeParse(workout[i]);
    if (verfication.error) {
      return c3.json({ message: verfication.error.flatten() });
    }
  }
  const workoutToSend = workout;
  return c3.json(workoutToSend);
});
clientRoutes.get("/:id", async (c3) => {
  const id2 = c3.req.param("id");
  const data = await db2.query.usersTable.findFirst({
    where: eq(usersTable2.id, id2)
  });
  return c3.json(data);
});
clientRoutes.post("/:id/weights/store", async (c3) => {
  const id2 = c3.req.param("id");
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverified" });
  }
  const data = await c3.req.json();
  const verfication = insertWeightSchema.safeParse(data);
  if (verfication.error) {
    return c3.json({ message: verfication.error.flatten() });
  }
  const newRecord = await db2.insert(measurementsDataTable2).values({ value: verfication.data.scaleWeight, created_at: verfication.data.created_at, user_id: id2, measurement_id: 4 }).returning();
  return c3.json(newRecord);
});
clientRoutes.post("/:id/measurements/store", async (c3) => {
  const body = await c3.req.json();
  return c3.json(body);
  const id2 = Number(c3.req.param("id"));
  const verification = idSchema.safeParse({ id: id2 });
  if (!verification.success) {
    return c3.json("Error has occured");
  }
  return c3.json("no error has occured");
  let measurements = [
    { created_at: "2025-01-01", value: 85, measurement_id: 5, user_id }
  ];
  for (let i = 0;i < measurements.length; i++) {
    const verfication = measurementSchema.safeParse(measurements[i]);
    if (!verfication.success) {
      return c3.json("Error has been occured");
    }
  }
  return c3.json("No Error");
});
clientRoutes.post("/:id/weights/store", async (c3) => {
  const id2 = Number(c3.req.param("id"));
  const verification = idSchema.safeParse({ id: id2 });
  if (!verification.success) {
    return c3.json("Schema Valiation has been failed");
  }
  const body = {
    scaleWeight: 50,
    created_at: new Date,
    user_id: id2
  };
  const verificationOfWeight = weightSchema2.safeParse(body);
  if (!verification.success) {
    return c3.json("Validation has been failed");
  }
  const newWeight = await db2.insert(measurementsDataTable2).values({
    measurement_id: 3,
    value: 50,
    user_id: id2
  });
  console.log("Weight inserted");
  return c3.json("Weight Has been stored");
});
clientRoutes.get("/:id/weights", async (c3) => {
  const id2 = c3.req.param("id");
  const weight = await db2.query.weightTable.findFirst();
  return c3.json(weight);
});
clientRoutes.get("/:id/stats", async (c3) => {
  const exercise_id = c3.req.query("id");
  const query = c3.req.param("id");
  let stats = {
    maximumWeight: 0,
    exercise: {
      name: "",
      id: Number(query),
      target: "",
      equipment: ""
    }
  };
  const data = await db2.select().from(workoutDetailsTable2).innerJoin(exerciseTable2, eq(workoutDetailsTable2.exercise_id, exerciseTable2.id)).innerJoin(workoutTable2, eq(workoutDetailsTable2.workout_id, workoutTable2.id)).where(and(eq(workoutTable2.user_id, query), eq(exerciseTable2.id, exercise_id)));
  const statsWorkout = data.map((item) => ({
    created_at: item.workout.created_at,
    exercise: {
      name: item.exercise.name,
      weight: item.workoutDetails.weight,
      reps: item.workoutDetails.reps,
      set: item.workoutDetails.set,
      rir: item.workoutDetails.rir
    }
  }));
  return c3.json(statsWorkout);
});
clientRoutes.post("/:id/updateInformation", async (c3) => {
  const id2 = Number(c3.req.param("id"));
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Verification of User Failed" });
  }
  const data = await c3.req.json();
  const verifcationOfData = clientUpdateSchema.safeParse(data);
  if (verifcationOfData.error) {
    return c3.json({ message: "Verfication Failed" });
  }
  const updateInformation = await db2.update(usersTable2).set({ name: data.name, age: data.age, notes: data.notes }).where(eq(usersTable2.id, id2));
  return c3.json(updateInformation);
});
clientRoutes.post("/store", async (c3) => {
  const data = await c3.req.json();
  return c3.json("HELLO");
  try {
    const clerkClient = createClerkClient({ secretKey: process.env.CLERK_SECRET_KEY });
    const user = await clerkClient.users.createUser({
      emailAddress: [data.emailAddress],
      password: data.password
    });
    console.log(user);
    return c3.json(user);
  } catch (error) {
    console.log(error);
  }
});
clientRoutes.post("/:id/workout/store", async (c3) => {
  const auth = getAuth(c3);
  const id2 = Number(c3.req.param("id"));
  if (!auth?.userId) {
    return c3.json("Error");
  }
  const verification = idSchema.safeParse({ id: id2 });
  if (!verification.success) {
    return c3.json("Error has been occured");
  }
  const body = await c3.req.json();
  const workoutVerification = workoutSchema2.safeParse(body.workout);
  if (workoutVerification.error) {
    return c3.json({ message: "Failed To verify" });
  }
  const insertRecord = await db2.insert(workoutTable2).values({ name: body.workout.name, date: body.workout.date, user_id: id2 }).returning();
  for (let i = 0;i < body.workout.workout.length; i++) {
    const newRecord = await db2.insert(workoutDetailsTable2).values({ workout_id: insertRecord[0].id, set: body.workout.workout[i].exercise.set, reps: body.workout.workout[i].reps, weight: body.workout.workout[i].weight, exercise_id: body.workout.workout[i].id });
  }
  return c3.json({ message: "Workout Added" });
});
var clients_default = clientRoutes;

// src/routes/latestActivities/index.js
var latestActivitiesRoutes = new Hono2;
latestActivitiesRoutes.get("/", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("Not exist");
  }
  const userFind = await db2.query.usersTable.findFirst({
    where: eq(usersTable2.user_id, auth.userId)
  });
  if (!userFind) {
    return c3.json("not exist");
  }
  const latestActivities = await db2.query.latestActivitiesTable.findMany({
    where: or(eq(latestActivitiesTable2.sender_id, userFind.id), eq(latestActivitiesTable2.reciever_id, userFind.id)),
    with: {
      sender: true,
      reciever: true
    }
  });
  return c3.json(latestActivities);
});
var latestActivities_default = latestActivitiesRoutes;

// node_modules/hono/dist/utils/stream.js
var StreamingApi = class {
  writer;
  encoder;
  writable;
  abortSubscribers = [];
  responseReadable;
  aborted = false;
  closed = false;
  constructor(writable, _readable) {
    this.writable = writable;
    this.writer = writable.getWriter();
    this.encoder = new TextEncoder;
    const reader = _readable.getReader();
    this.abortSubscribers.push(async () => {
      await reader.cancel();
    });
    this.responseReadable = new ReadableStream({
      async pull(controller) {
        const { done, value } = await reader.read();
        done ? controller.close() : controller.enqueue(value);
      },
      cancel: () => {
        this.abort();
      }
    });
  }
  async write(input) {
    try {
      if (typeof input === "string") {
        input = this.encoder.encode(input);
      }
      await this.writer.write(input);
    } catch {}
    return this;
  }
  async writeln(input) {
    await this.write(input + `
`);
    return this;
  }
  sleep(ms2) {
    return new Promise((res) => setTimeout(res, ms2));
  }
  async close() {
    try {
      await this.writer.close();
    } catch {}
    this.closed = true;
  }
  async pipe(body) {
    this.writer.releaseLock();
    await body.pipeTo(this.writable, { preventClose: true });
    this.writer = this.writable.getWriter();
  }
  onAbort(listener) {
    this.abortSubscribers.push(listener);
  }
  abort() {
    if (!this.aborted) {
      this.aborted = true;
      this.abortSubscribers.forEach((subscriber) => subscriber());
    }
  }
};

// node_modules/hono/dist/helper/streaming/utils.js
var isOldBunVersion = () => {
  const version2 = typeof Bun !== "undefined" ? Bun.version : undefined;
  if (version2 === undefined) {
    return false;
  }
  const result = version2.startsWith("1.1") || version2.startsWith("1.0") || version2.startsWith("0.");
  isOldBunVersion = () => result;
  return result;
};

// node_modules/hono/dist/helper/streaming/stream.js
var contextStash = /* @__PURE__ */ new WeakMap;
var stream = (c3, cb, onError) => {
  const { readable, writable } = new TransformStream;
  const stream2 = new StreamingApi(writable, readable);
  if (isOldBunVersion()) {
    c3.req.raw.signal.addEventListener("abort", () => {
      if (!stream2.closed) {
        stream2.abort();
      }
    });
  }
  contextStash.set(stream2.responseReadable, c3);
  (async () => {
    try {
      await cb(stream2);
    } catch (e) {
      if (e === undefined) {} else if (e instanceof Error && onError) {
        await onError(e, stream2);
      } else {
        console.error(e);
      }
    } finally {
      stream2.close();
    }
  })();
  return c3.newResponse(stream2.responseReadable);
};

// node_modules/hono/dist/adapter/bun/serve-static.js
var {stat} = (() => ({}));

// node_modules/hono/dist/middleware/serve-static/index.js
var ENCODINGS = {
  br: ".br",
  zstd: ".zst",
  gzip: ".gz"
};
var ENCODINGS_ORDERED_KEYS = Object.keys(ENCODINGS);

// node_modules/hono/dist/helper/ssg/middleware.js
var X_HONO_DISABLE_SSG_HEADER_KEY = "x-hono-disable-ssg";
var SSG_DISABLED_RESPONSE = (() => {
  try {
    return new Response("SSG is disabled", {
      status: 404,
      headers: { [X_HONO_DISABLE_SSG_HEADER_KEY]: "true" }
    });
  } catch {
    return null;
  }
})();
// node_modules/hono/dist/adapter/bun/ssg.js
var { write } = Bun;

// node_modules/hono/dist/helper/websocket/index.js
var WSContext = class {
  #init;
  constructor(init) {
    this.#init = init;
    this.raw = init.raw;
    this.url = init.url ? new URL(init.url) : null;
    this.protocol = init.protocol ?? null;
  }
  send(source, options) {
    this.#init.send(source, options ?? {});
  }
  raw;
  binaryType = "arraybuffer";
  get readyState() {
    return this.#init.readyState;
  }
  url;
  protocol;
  close(code, reason) {
    this.#init.close(code, reason);
  }
};
var createWSMessageEvent = (source) => {
  return new MessageEvent("message", {
    data: source
  });
};
var defineWebSocketHelper = (handler) => {
  return (createEvents, options) => {
    return async function UpgradeWebSocket(c3, next) {
      const events = await createEvents(c3);
      const result = await handler(c3, events, options);
      if (result) {
        return result;
      }
      await next();
    };
  };
};

// node_modules/hono/dist/adapter/bun/server.js
var getBunServer = (c3) => ("server" in c3.env) ? c3.env.server : c3.env;

// node_modules/hono/dist/adapter/bun/websocket.js
var createWSContext = (ws) => {
  return new WSContext({
    send: (source, options) => {
      ws.send(source, options?.compress);
    },
    raw: ws,
    readyState: ws.readyState,
    url: ws.data.url,
    protocol: ws.data.protocol,
    close(code, reason) {
      ws.close(code, reason);
    }
  });
};
var createBunWebSocket = () => {
  const upgradeWebSocket = defineWebSocketHelper((c3, events) => {
    const server = getBunServer(c3);
    if (!server) {
      throw new TypeError("env has to include the 2nd argument of fetch.");
    }
    const upgradeResult = server.upgrade(c3.req.raw, {
      data: {
        events,
        url: new URL(c3.req.url),
        protocol: c3.req.url
      }
    });
    if (upgradeResult) {
      return new Response(null);
    }
    return;
  });
  const websocket = {
    open(ws) {
      const websocketListeners = ws.data.events;
      if (websocketListeners.onOpen) {
        websocketListeners.onOpen(new Event("open"), createWSContext(ws));
      }
    },
    close(ws, code, reason) {
      const websocketListeners = ws.data.events;
      if (websocketListeners.onClose) {
        websocketListeners.onClose(new CloseEvent("close", {
          code,
          reason
        }), createWSContext(ws));
      }
    },
    message(ws, message) {
      const websocketListeners = ws.data.events;
      if (websocketListeners.onMessage) {
        const normalizedReceiveData = typeof message === "string" ? message : message.buffer;
        websocketListeners.onMessage(createWSMessageEvent(normalizedReceiveData), createWSContext(ws));
      }
    }
  };
  return {
    upgradeWebSocket,
    websocket
  };
};

// src/routes/messages/index.js
var messageRoute = new Hono2;
messageRoute.get("/", async (c3) => {
  const query = Number(c3.req.query("id"));
  if (query == -1) {
    return c3.json("");
  }
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("not exist");
  }
  const user = await db2.query.usersTable.findFirst({
    where: eq(usersTable2.user_id, auth?.userId)
  });
  const data = await db2.query.messagesTable.findMany({
    where: or(eq(messagesTable2.user_id, user?.id), eq(messagesTable2.user_id, query))
  });
  if (!data) {
    return c3.json("not exist");
  }
  return c3.json(data);
});
var messages_default = messageRoute;

// src/routes/roomMember/index.js
var roomMembers = new Hono2;
roomMembers.get("/", async (c3) => {
  const auth = getAuth(c3);
  const user = await db2.query.usersTable.findFirst({
    where: eq(usersTable2.user_id, auth?.userId)
  });
  if (user?.parent_id == null) {
    const rooms = await db2.query.roomsTable.findMany({
      where: eq(roomsTable2.user_id, user.id)
    });
    let users = [];
    for (let i = 0;i < rooms.length; i++) {
      console.log(rooms[i].id);
      users = await db2.query.roomMembersTable.findMany({
        where: eq(roomMembersTable2.id, rooms[i].id),
        with: {
          user: true
        }
      });
    }
    return c3.json(users);
  }
  const roomMembers2 = await db2.query.roomMembersTable.findMany({
    where: eq(roomMembersTable2.user_id, user?.id),
    with: {
      user: true,
      room: {
        with: {
          user: true
        }
      }
    }
  });
  return c3.json(roomMembers2);
});
var roomMember_default = roomMembers;

// src/routes/measurements/index.js
var measurementRoute = new Hono2;
var MeasurementRoute = measurementRoute.get("/", async (c3) => {
  const data = await db2.query.measurementsTable.findMany();
  return c3.json(data);
});
var measurements_default = measurementRoute;

// drizzle/schema.ts
var measurements = pgTable("measurements", {
  id: integer().primaryKey().generatedAlwaysAsIdentity({ name: "measurements_id_seq", startWith: 1, increment: 1, minValue: 1, maxValue: 2147483647, cache: 1 })
});
var exercise3 = pgTable("exercise", {
  id: integer().primaryKey().generatedAlwaysAsIdentity({ name: "exercise_id_seq", startWith: 1, increment: 1, minValue: 1, maxValue: 2147483647, cache: 1 }),
  name: text().notNull(),
  type: text().notNull(),
  equipment: text().notNull()
});
var users = pgTable("users", {
  id: integer().primaryKey().generatedAlwaysAsIdentity({ name: "users_id_seq", startWith: 1, increment: 1, minValue: 1, maxValue: 2147483647, cache: 1 }),
  age: integer().notNull(),
  name: text().notNull(),
  email: text().notNull()
});
var customExercise = pgTable("customExercise", {
  id: serial().primaryKey().notNull(),
  name: text(),
  equipment: text(),
  targetMuscleGroup: text(),
  type: text(),
  instructions: text(),
  photo: text(),
  userId: integer("user_id")
});
var foodsTable = pgTable("foodsTable", {
  id: serial().primaryKey().notNull(),
  foodName: text(),
  defaultProtein: numeric(),
  defaultServing: numeric(),
  defaultCalories: numeric(),
  defaultCarbs: numeric(),
  defaultFat: numeric(),
  userId: integer("user_id")
});
var heightUnit = pgTable("heightUnit", {
  id: serial().primaryKey().notNull(),
  unit: text().notNull()
});
var latestActivities = pgTable("latestActivities", {
  id: serial().primaryKey().notNull(),
  senderId: integer("sender_id"),
  recieverId: integer("reciever_id"),
  message: text()
});
var measurementsData = pgTable("measurementsData", {
  id: serial().primaryKey().notNull(),
  userId: integer("user_id").notNull(),
  measurementId: integer("measurement_id"),
  value: numeric(),
  createdAt: timestamp("created_at", { mode: "string" })
});
var messages = pgTable("messages", {
  id: serial().primaryKey().notNull(),
  content: text(),
  createdAt: timestamp("created_at", { mode: "string" }),
  userId: integer("user_id"),
  roomId: integer("room_id")
});
var nutrition = pgTable("nutrition", {
  id: serial().primaryKey().notNull(),
  calories: numeric(),
  protein: numeric(),
  fat: numeric(),
  carbs: numeric(),
  createdAt: timestamp("created_at", { mode: "string" }),
  userId: integer("user_id").notNull()
});
var programmeDetails = pgTable("programmeDetails", {
  id: serial().primaryKey().notNull(),
  exerciseId: integer("exercise_id"),
  repRange: text(),
  programmeWorkoutId: integer("programme_workoutId"),
  sets: integer()
});
var programmeWorkout = pgTable("programmeWorkout", {
  id: serial().primaryKey().notNull(),
  name: text().notNull(),
  programmeId: integer("programme_id")
});
var programme = pgTable("programme", {
  id: serial().primaryKey().notNull(),
  name: text(),
  description: text(),
  userId: integer("user_id"),
  assignedTo: integer("assigned_to")
});
var roomMembers2 = pgTable("roomMembers", {
  id: serial().primaryKey().notNull(),
  userId: integer("user_id"),
  roomId: integer("room_id")
});
var rooms = pgTable("rooms", {
  id: serial().primaryKey().notNull(),
  name: text(),
  userId: integer("user_id")
});
var userProgramme = pgTable("userProgramme", {
  id: serial().primaryKey().notNull(),
  userId: integer("user_id"),
  programmeId: integer("programme_id"),
  status: text()
});
var weight = pgTable("weight", {
  id: serial().primaryKey().notNull(),
  scaleWeight: numeric(),
  createdAt: timestamp("created_at", { mode: "string" }),
  trendWeight: numeric(),
  userId: integer("user_id").notNull()
});
var weightUnits = pgTable("weightUnits", {
  id: serial().primaryKey().notNull(),
  unit: text().notNull()
});
var workoutDetails = pgTable("workoutDetails", {
  id: serial().primaryKey().notNull(),
  workoutId: integer("workout_id"),
  set: numeric(),
  reps: numeric(),
  weight: numeric(),
  rir: numeric(),
  exerciseId: integer("exercise_id")
});
var workout = pgTable("workout", {
  id: serial().primaryKey().notNull(),
  userId: integer("user_id"),
  name: text(),
  programmeId: integer("programme_id"),
  createdAt: timestamp("created_at", { mode: "string" })
});

// src/zod/templateSchema.ts
var TemplateSchema = exports_external.object({
  programme_id: exports_external.number(),
  name: exports_external.string()
});
var templateDeletionSchema = exports_external.object({
  id: exports_external.number()
});
var updateTemplateMainSchema = exports_external.object({
  name: exports_external.string(),
  id: exports_external.number()
});
var templateExerciseDeletionSchema = exports_external.object({
  id: exports_external.number()
});
var templateAdditionExercise = exports_external.object({
  template_id: exports_external.number(),
  exercise_id: exports_external.number(),
  sets: exports_external.number(),
  repRange: exports_external.string()
});
var templateRecordUpdate = exports_external.object({
  exercise_id: exports_external.number(),
  repRange: exports_external.string(),
  sets: exports_external.number(),
  template_id: exports_external.number()
});

// src/routes/template/index.js
var templateRoutes = new Hono2;
templateRoutes.post("/updateRecord", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverfied Autrh" });
  }
  const body = await c3.req.json();
  const verfication = templateRecordUpdate.safeParse(body);
  if (verfication.error) {
    return c3.json({ message: "Unverfied" });
  }
  const data = await db2.update(programmeDetailsTable2).set({
    sets: body.sets,
    repRange: body.repRange,
    programme_workoutId: body.template_id
  }).where(and(eq(programmeDetailsTable2.exercise_id, body.exercise_id), eq(programmeDetailsTable2.programme_workoutId, body.template_id))).returning();
  return c3.json(data);
});
templateRoutes.post("/addExercise", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Authentication Failed" });
  }
  const body = await c3.req.json();
  const verfication = templateAdditionExercise.safeParse(body);
  if (verfication.error) {
    return c3.json({ message: "Unverfied" });
  }
  const newRecord = await db2.insert(programmeDetailsTable2).values({ exercise_id: body.exercise_id, programme_workoutId: body.template_id, repRange: body.repRange, sets: body.sets }).returning();
  return c3.json(newRecord);
});
templateRoutes.post("/deleteExercise", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverified" });
  }
  const body = await c3.req.json();
  const verficiation = templateExerciseDeletionSchema.safeParse(body);
  if (verficiation.error) {
    return c3.json({ message: "Unverfied" });
  }
  const deletion = await db2.delete(programmeDetailsTable2).where(eq(programmeDetailsTable2.id, body.id)).returning();
  return c3.json("Item Deleeted");
});
templateRoutes.post("/updateTemplateExercises", async (c3) => {
  const auth = getAuth(c3);
  if (auth?.userId) {
    return c3.json({ message: "Unverfied" });
  }
  const body = await c3.req.json();
  return c3.json(body);
});
templateRoutes.post("/updateMain", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Unverified" });
  }
  const body = await c3.req.json();
  const verification = updateTemplateMainSchema.safeParse(body);
  if (verification.error) {
    return c3.json("Error");
  }
  const updating = await db2.update(programmeWorkout).set({ name: body.name }).where(eq(programmeWorkout.id, body.id)).returning();
  return c3.json(updating);
});
templateRoutes.post("/store", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json({ message: "Error" });
  }
  const body = await c3.req.json();
  const verifiedData = TemplateSchema.safeParse(body);
  if (verifiedData.error) {
    return c3.json({ message: "Failed to verify" });
    console.log(verifiedData.error?.flatten());
  }
  const newData = await db2.insert(programmeWorkoutTable2).values({ name: body.name, programme_id: body.programme_id }).returning();
  return c3.json(newData);
});
var myTemplate = templateRoutes.get("/", async (c3) => {
  const id2 = c3.req.query("id");
  const data = await db2.query.programmeWorkoutTable.findFirst({
    where: eq(programmeWorkout.id, id2),
    with: {
      programmeDetails: {
        with: {
          exercise: true
        }
      }
    }
  });
  return c3.json(data);
});
templateRoutes.post("/delete", async (c3) => {
  const auth = getAuth(c3);
  if (auth?.userId) {
    return c3.json({ message: "Unverfied" });
  }
  const body = await c3.req.json();
  const verfication = templateDeletionSchema.safeParse(body);
  if (verfication.error) {
    return c3.json({ message: "Schema Verification Failed" });
  }
  const data = await db2.delete(programmeWorkout).where(eq(programmeWorkout.id, body.id)).returning();
  return c3.json(data);
  return c3.json(body);
});
var template_default = templateRoutes;

// src/index.ts
var app = new Hono2;
var { upgradeWebSocket, websocket } = createBunWebSocket();
var cacheStore = new Map;
app.get("/", async (c3) => {
  return c3.json("Hello Ebrahim");
});
app.use("/api/trpc/*");
app.use("*", clerkMiddleware());
var myRoute = app.get("/api/funny", (c3) => {
  return c3.json({
    name: "Ebrahim",
    email: "ebrahimgreat@gmail.com",
    age: 23
  });
});
var users2 = new Map;
var messages2 = new Map;
app.get("/ws", upgradeWebSocket((_4) => {
  return {
    onClose: (_5, ws) => {},
    onOpen(_5, ws) {
      console.log("web socket opened");
    },
    onMessage(event, ws) {
      console.log("I am running");
      let timer = 0;
      const data = JSON.parse(event.data);
      if (data.type === "left") {
        console.log("The User has Been Deleted");
        users2.delete(data.sender);
      }
      if (users2.size >= 2) {
        const currentTime = new Date().toLocaleTimeString();
        users2.forEach((item) => {
          if (item.reciever === data.reciever) {
            item.socket.send(event.data);
          }
        });
        console.log(data);
      }
      users2.set(data.sender, {
        socket: ws,
        roomId: data.roomNumber,
        reciever: data.sender
      });
      console.log("The users size is", users2.size);
    },
    onError: (event, ws) => {
      console.log("error");
      ws.send("error e");
    }
  };
}));
app.use("/api/*", cors());
app.use("/api/*", clerkMiddleware());
app.use("/api2/*", cors({
  origin: ["http://localhost:3000", "http://localhost:8081"],
  allowMethods: ["POST", "GET", "PUT"],
  credentials: true
}));
app.get("/hello", async (c3) => {
  return c3.json({ message: "HLI" });
});
app.post("/api/email-check", async (c3) => {
  const body = await c3.req.json();
  const user = await db.query.usersTable.findFirst({
    where: eq(usersTable.email, body.email)
  });
  if (!user) {
    return c3.json("Not Exist");
  }
  return c3.json("User Exists");
});
app.get("/api/roles", async (c3) => {
  const auth = getAuth(c3);
  if (!auth) {
    return c3.json("not found");
  }
  return c3.json(auth.sessionClaims?.metadata);
});
app.post("/api/login", async (c3) => {
  const body = await c3.req.json();
  console.log(body.email);
  return c3.json(body);
});
app.get("/api/search", async (c3) => {
  const clientID = "34c4fd1f3b5248e1b16c31de3f119379";
  const clientSecret = "87b3be69a28a49f8abe9cedb60659d5a";
  var options = {
    method: "POST",
    url: "https://oauth.fatsecret.com/connect/token",
    auth: {
      user: clientID,
      password: clientSecret
    },
    headers: { "content-type": "application/x-www-form-urlencoded" },
    form: {
      grant_type: "client_credentials",
      scope: "basic"
    },
    json: true
  };
  return c3.json(options);
});
var route = app.route("/api/programme", programme_default);
app.route("/api/customFoods", food_default);
app.route("/api/weight", weight_default);
app.route("/api/workout", workout_default);
app.route("/api/userProgramme", userProgramme_default);
app.route("/api/activity", latestActivities_default);
app.route("/api/roomMembers", roomMember_default);
app.route("/api/measurements", measurements_default);
app.route("/api/exercise", exercise_default);
app.route("/api/nutrition", nutrition_default);
app.route("/api/dashboard", dashboard_default);
app.route("/api/clients", clients_default);
app.route("/api/template", template_default);
app.route("/api/messages", messages_default);
app.post("/api/client/store", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("Validation Has been Failed");
  }
  const userFind = await db.query.usersTable.findFirst({
    where: eq(usersTable.user_id, auth.userId)
  });
  const query = await c3.req.json();
  const data = await db.insert(usersTable).values({
    name: query.name,
    age: query.age,
    parent_id: userFind?.id
  }).returning();
  return c3.json({ message: data });
});
app.get("/api/", (c3) => {
  return c3.json("Hello Ebrahim, Welcome. You can Track Your Clients Here. 1.api/clients(To see Clients) ");
});
app.get("/api/stream", (c3) => {
  return stream(c3, async (stream2) => {
    c3.header("Content-Type", "text/event-stream");
    stream2.onAbort(() => {
      console.log("aborted");
    });
    let count2 = 0;
    const interval2 = setInterval(async () => {
      console.log(count2);
      await stream2.write(`data: ${JSON.stringify(count2++)} `);
    }, 1000);
    setTimeout(async () => {
      clearInterval(interval2);
      await stream2.close();
    }, 1e4);
  });
});
app.post("/api/login", async (c3) => {
  const body = await c3.req.json();
  return c3.json(body);
});
app.get("/api", async (c3) => {
  const data = await db.select().from(usersTable);
  return c3.json(data);
});
app.get("/api/me", async (c3) => {
  const auth = getAuth(c3);
  if (!auth?.userId) {
    return c3.json("User does not exisst");
  }
  const user = await db.query.usersTable.findFirst({
    where: eq(usersTable.user_id, auth.userId)
  });
  return c3.json(user);
});
var src_default = {
  port: 3001,
  fetch: app.fetch,
  websocket
};
console.log("Bun running");
export {
  src_default as default
};
